//
//     Generated by classdump-c 4.2.0 (64 bit) (iOS port by DreamDevLost, Updated by Kevin Bradley.)(Debug version compiled Dec 27 2024 14:18:54).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <UIFoundation/UIFont.h>

@interface UIFont (CustomFont)
+ (CDUnknownBlockType)_maps_fontProviderWeight:(double)arg1 minimumPointSize:(double)arg2 minimumSizeCategory:(id)arg3 maximumPointSize:(double)arg4 maximumSizeCategory:(id)arg5;	// IMP=0x002000000044110f
+ (id)_maps_fontWithTextStyle:(id)arg1 weight:(double)arg2 compatibleWithTraitCollection:(id)arg3;	// IMP=0x0010000000440f02
+ (double)_maps_bodyScaledValueForValue:(double)arg1 compatibleWithTraitCollection:(id)arg2;	// IMP=0x0010000000440ddf
+ (double)_maps_bodyScaledValueForValue:(double)arg1;	// IMP=0x0010000000440dcb
+ (id)_maps_cappedFont:(id)arg1 withMaxPoint:(double)arg2;	// IMP=0x0010000000440c4d
+ (id)_maps_textStyleForSize:(double)arg1 useAdaptiveIfNeeded:(_Bool)arg2 effectivePointSize:(out double *)arg3;	// IMP=0x00100000004408df
+ (double)_maps_discreteSizeForSize:(double)arg1;	// IMP=0x0010000000440872
+ (id)_maps_navHeadingFontWithPreferredSize:(double)arg1 diameter:(double)arg2 desiredPadding:(double)arg3;	// IMP=0x0010000000440108
+ (id)_maps_boldSystemFontWithFixedSize:(double)arg1 adaptiveFont:(_Bool)arg2;	// IMP=0x001000000044005d
+ (id)_maps_boldSystemFontWithFixedSize:(double)arg1;	// IMP=0x0010000000440049
+ (id)_maps_systemFontWithFixedSize:(double)arg1 adaptiveFont:(_Bool)arg2;	// IMP=0x001000000043ffa1
+ (id)_maps_systemFontWithFixedSize:(double)arg1;	// IMP=0x001000000043ff8d
+ (id)_maps_systemFontWithSize:(double)arg1 weight:(double)arg2 grade:(unsigned long long)arg3;	// IMP=0x001000000043fec9
+ (id)_maps_boldSystemFontWithSize:(double)arg1;	// IMP=0x001000000043fe0c
+ (id)_maps_systemFontWithSize:(double)arg1;	// IMP=0x001000000043fd52
+ (id)system11;	// IMP=0x001000000043fd2f
+ (id)system11Bold;	// IMP=0x001000000043fd01
+ (id)system12CompatibleWithTraitCollection:(id)arg1;	// IMP=0x001000000043fc89
+ (id)system12;	// IMP=0x001000000043fc75
+ (id)system12MediumCompatibleWithTraitCollection:(id)arg1;	// IMP=0x001000000043fbe3
+ (id)system12Medium;	// IMP=0x001000000043fbcf
+ (id)system12SemiboldCompatibleWithTraitCollection:(id)arg1;	// IMP=0x001000000043fb3d
+ (id)system12Semibold;	// IMP=0x001000000043fb29
+ (id)system12BoldCompatibleWithTraitCollection:(id)arg1;	// IMP=0x001000000043fa97
+ (id)system12Bold;	// IMP=0x001000000043fa83
+ (id)system13CompatibleWithTraitCollection:(id)arg1 withSymbolicTraits:(unsigned int)arg2;	// IMP=0x001000000043fa00
+ (id)system13CompatibleWithTraitCollection:(id)arg1;	// IMP=0x001000000043f9ec
+ (id)system13;	// IMP=0x001000000043f9d8
+ (id)system13Tall;	// IMP=0x001000000043f9bf
+ (id)system13MediumCompatibleWithTraitCollection:(id)arg1;	// IMP=0x001000000043f931
+ (id)system13AdaptiveCompatibleWithTraitCollection:(id)arg1;	// IMP=0x001000000043f889
+ (id)system13Adaptive;	// IMP=0x001000000043f875
+ (id)system13SemiboldCompatibleWithTraitCollection:(id)arg1;	// IMP=0x001000000043f7e3
+ (id)system15Light;	// IMP=0x001000000043f7b5
+ (id)system15CompatibleWithTraitCollection:(id)arg1 withSymbolicTraits:(unsigned int)arg2;	// IMP=0x001000000043f732
+ (id)system15CompatibleWithTraitCollection:(id)arg1;	// IMP=0x001000000043f71e
+ (id)system15;	// IMP=0x001000000043f70a
+ (id)system15Tall;	// IMP=0x001000000043f6f1
+ (id)system15MediumCompatibleWithTraitCollection:(id)arg1;	// IMP=0x001000000043f663
+ (id)system15Medium;	// IMP=0x001000000043f64f
+ (id)system15SemiboldCompatibleWithTraitCollection:(id)arg1;	// IMP=0x001000000043f5bd
+ (id)system15Semibold;	// IMP=0x001000000043f5a9
+ (id)system15Bold;	// IMP=0x001000000043f57b
+ (id)system16;	// IMP=0x001000000043f558
+ (id)system17CompatibleWithTraitCollection:(id)arg1 withSymbolicTraits:(unsigned int)arg2;	// IMP=0x001000000043f4d5
+ (id)system17CompatibleWithTraitCollection:(id)arg1;	// IMP=0x001000000043f4c1
+ (id)system17;	// IMP=0x001000000043f4ad
+ (id)system17Tall;	// IMP=0x001000000043f494
+ (id)system17Light;	// IMP=0x001000000043f466
+ (id)system17Medium;	// IMP=0x001000000043f438
+ (id)system17SemiboldTall;	// IMP=0x001000000043f402
+ (id)system17SemiboldCompatibleWithTraitCollection:(id)arg1;	// IMP=0x001000000043f370
+ (id)system17SemiBold;	// IMP=0x001000000043f35c
+ (id)system17Bold;	// IMP=0x001000000043f32e
+ (id)system18;	// IMP=0x001000000043f30b
+ (id)system20Adaptive;	// IMP=0x001000000043f2c6
+ (id)system20AdaptiveMedium;	// IMP=0x001000000043f276
+ (id)system20AdaptiveSemiboldCompatibleWithTraitCollection:(id)arg1;	// IMP=0x001000000043f1bc
+ (id)system20AdaptiveSemibold;	// IMP=0x001000000043f1a8
+ (id)system22AdaptiveSemibold;	// IMP=0x001000000043f158
+ (id)system20Semibold;	// IMP=0x001000000043f12a
+ (id)system20Medium;	// IMP=0x000000000043f0fc
+ (id)system20Light;	// IMP=0x001000000043f0ce
+ (id)system20CompatibleWithTraitCollection:(id)arg1 withSymbolicTraits:(unsigned int)arg2;	// IMP=0x001000000043f04b
+ (id)system20CompatibleWithTraitCollection:(id)arg1;	// IMP=0x001000000043f037
+ (id)system20;	// IMP=0x001000000043f023
+ (id)system20Bold;	// IMP=0x001000000043eff5
+ (id)system22;	// IMP=0x001000000043efd2
+ (id)system22SemiboldCompatibleWithTraitCollection:(id)arg1;	// IMP=0x001000000043ef40
+ (id)system22Semibold;	// IMP=0x001000000043ef2c
+ (id)system22AdaptiveCondensedBold;	// IMP=0x001000000043eed4
+ (id)system22Bold;	// IMP=0x001000000043eea6
+ (id)system28;	// IMP=0x001000000043ee83
+ (id)system28AdaptiveCondensedBold;	// IMP=0x001000000043ee2b
+ (id)system28AdaptiveBoldShort;	// IMP=0x001000000043edd3
+ (id)system28Medium;	// IMP=0x001000000043eda5
+ (id)system28BoldCompatibleWithTraitCollection:(id)arg1;	// IMP=0x001000000043ed13
+ (id)system28Bold;	// IMP=0x001000000043ecff
+ (_Bool)accessibilityTextEnabled;	// IMP=0x001000000043ebbd
+ (void)setPlacecardShouldUseSmallFont:(_Bool)arg1;	// IMP=0x001000000043eba4
+ (id)_mapsCar_fontForTextStyle:(id)arg1 weight:(double)arg2 grade:(int)arg3 traits:(unsigned int)arg4;	// IMP=0x00100000005a9e62
+ (id)_mapsCar_fontForTextStyle:(id)arg1 weight:(double)arg2 traits:(unsigned int)arg3;	// IMP=0x00100000005a9e48
+ (id)_mapsCar_fontForTextStyle:(id)arg1 traits:(unsigned int)arg2;	// IMP=0x00100000005a9e23
+ (id)_mapsCar_fontForTextStyle:(id)arg1 weight:(double)arg2 grade:(int)arg3;	// IMP=0x00100000005a9e0e
+ (id)_mapsCar_fontForTextStyle:(id)arg1 weight:(double)arg2;	// IMP=0x00100000005a9df7
- (id)_maps_scaledFontForScaleFactor:(double)arg1;	// IMP=0x002000000044107b
@property(readonly, nonatomic) UIFont *_maps_fontWithMonospacedNumbers;
@end

