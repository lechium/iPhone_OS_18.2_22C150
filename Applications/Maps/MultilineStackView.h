//
//     Generated by classdump-c 4.2.0 (64 bit) (iOS port by DreamDevLost, Updated by Kevin Bradley.)(Debug version compiled Dec 27 2024 14:18:54).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <UIKitCore/UIView.h>

@class NSArray, NSMutableArray, NSNumber;

@interface MultilineStackView : UIView
{
    NSNumber *_computedWidth;	// 8 = 0x8
    NSMutableArray *_arrangedSubviews;	// 16 = 0x10
    unsigned long long _horizontalArrangement;	// 24 = 0x18
    unsigned long long _verticalArrangement;	// 32 = 0x20
    double _interItemHorizontalPadding;	// 40 = 0x28
    double _interItemVerticalPadding;	// 48 = 0x30
    CDUnknownBlockType _customizationBlock;	// 56 = 0x38
    CDUnknownBlockType _rowHeightBlock;	// 64 = 0x40
    double _calculatedHeight;	// 72 = 0x48
    struct UIEdgeInsets _edgeInsets;	// 80 = 0x50
}

- (void).cxx_destruct;	// IMP=0x00200000002568c7
@property(nonatomic) double calculatedHeight; // @synthesize calculatedHeight=_calculatedHeight;
@property(copy, nonatomic) CDUnknownBlockType rowHeightBlock; // @synthesize rowHeightBlock=_rowHeightBlock;
@property(copy, nonatomic) CDUnknownBlockType customizationBlock; // @synthesize customizationBlock=_customizationBlock;
@property(nonatomic) struct UIEdgeInsets edgeInsets; // @synthesize edgeInsets=_edgeInsets;
@property(nonatomic) double interItemVerticalPadding; // @synthesize interItemVerticalPadding=_interItemVerticalPadding;
@property(nonatomic) double interItemHorizontalPadding; // @synthesize interItemHorizontalPadding=_interItemHorizontalPadding;
@property(readonly, nonatomic) unsigned long long verticalArrangement; // @synthesize verticalArrangement=_verticalArrangement;
@property(readonly, nonatomic) unsigned long long horizontalArrangement; // @synthesize horizontalArrangement=_horizontalArrangement;
- (void)invalidateLayout;	// IMP=0x00100000002567f9
- (void)_computeJustifiedRowWithViews:(id)arg1 itemWidth:(double)arg2 rowView:(id)arg3 constraints:(id)arg4;	// IMP=0x001000000025640a
- (void)_computeMaximumRowWithViews:(id)arg1 interItemSpace:(double)arg2 rowView:(id)arg3 constraints:(id)arg4;	// IMP=0x0010000000255e89
- (void)_computeTrailingRowWithViews:(id)arg1 rowView:(id)arg2 constraints:(id)arg3;	// IMP=0x001000000025592b
- (void)_computeLeadingRowWithViews:(id)arg1 rowView:(id)arg2 constraints:(id)arg3;	// IMP=0x00100000002555bc
- (id)_appendRowViewWithViews:(id)arg1 topAnchor:(id)arg2 topInset:(double)arg3 rowContentWidth:(double)arg4 availableRowWidth:(double)arg5 rowHeight:(double)arg6 constraints:(id)arg7;	// IMP=0x001000000025517f
- (void)_computeLayout;	// IMP=0x0010000000254512
- (void)_prepareSubviewsForReuse:(id)arg1;	// IMP=0x0010000000254222
- (_Bool)_justifiedLayoutWouldCrushWhenAddingView:(id)arg1 toRowViews:(id)arg2 availableRowWidth:(double)arg3;	// IMP=0x0010000000253fe9
- (void)_computeLayoutIfNeeded;	// IMP=0x0010000000253f66
- (struct CGSize)intrinsicContentSize;	// IMP=0x0010000000253f16
- (void)traitCollectionDidChange:(id)arg1;	// IMP=0x0010000000253ed5
- (void)setFrame:(struct CGRect)arg1;	// IMP=0x0010000000253e83
- (void)setBounds:(struct CGRect)arg1;	// IMP=0x0010000000253e31
- (void)removeArrangedSubview:(id)arg1;	// IMP=0x0010000000253dc1
- (void)insertArrangedSubview:(id)arg1 atIndex:(unsigned long long)arg2;	// IMP=0x0010000000253d36
- (void)addArrangedSubview:(id)arg1;	// IMP=0x0010000000253cb8
@property(copy, nonatomic) NSArray *arrangedSubviews;
- (id)initWithHorizontalArrangement:(unsigned long long)arg1 verticalArrangement:(unsigned long long)arg2;	// IMP=0x0010000000253974

@end

