//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

@class GTBulkDataService, MTLRenderPassDescriptor, MTLRenderPipelineDescriptor, MTLTextureDescriptor, NSMutableArray, NSMutableDictionary, NSOperationQueue;

#pragma mark Named Structures

struct CGPoint {
    double _field1;
    double _field2;
};

struct CGRect {
    struct CGPoint _field1;
    struct CGSize _field2;
};

struct CGSize {
    double _field1;
    double _field2;
};

struct GTMTLReplayClient {
    struct apr_pool_t *pool;
    struct GTMTLReplayController *replayController;
    unsigned long long sessionId;
    struct {
        unsigned long long hostInfoType;
        unsigned long long profilingSendPeriod;
        unsigned long long profilingFlags;
        double xcodeOverrideScaleTessFactor;
        unsigned int traceMode;
        unsigned int xcodeOverrideFlags;
    } config;
    struct {
        struct {
            unsigned int function;
            unsigned int subCommand;
        } targetIndex;
        unsigned int wireframeLineColor;
        unsigned int outlineColor;
        float wireframeLineWidth;
        unsigned int enableDrawCallPresent:1;
        unsigned int enableWireframePresent:1;
        unsigned int enableOutlinePresent:1;
        unsigned int disablePresent:1;
        unsigned int _padding:28;
    } state;
    NSMutableArray *generateThumbnails;
    struct GTMTLReplayWireframeRenderer wireframe;
    struct GTMTLReplayOperationQueues operationQueues;
    NSMutableArray *cancelableOperations;
    id displayDelegate;
    GTBulkDataService *bulkDataService;
};

struct GTMTLReplayController;

struct GTMTLReplayOperationQueues {
    NSOperationQueue *serialQueue;
    NSOperationQueue *parallelQueue;
};

struct GTMTLReplayWireframeRenderer {
    MTLTextureDescriptor *textureDescriptor;
    MTLRenderPassDescriptor *renderPassDescriptor;
    unsigned long long pixelFormat;
    id fragmentFunction;
    id texture;
    id solidTexture;
    unsigned long long textureSampleCount;
    id outlinePipelineState;
    id outlinePipelineStateMS;
    id postVertexDumpBuffer;
    MTLRenderPipelineDescriptor *resizeRenderPipelineDescriptor;
    id resizeColorFunction;
    id resizeColorUintFunction;
    id resizeColorSintFunction;
    id resizeDepthFunction;
    id resizeStencilFunction;
    id upscaleSamplerState;
    id downscaleSamplerState;
    id quadData;
    NSMutableDictionary *resizeRenderPipelineStates;
};

struct apr_pool_t;

