//
//     Generated by classdump-c 4.2.0 (64 bit) (iOS port by DreamDevLost, Updated by Kevin Bradley.)(Debug version compiled Dec 27 2024 14:18:54).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import "NSMapTable.h"

__attribute__((visibility("hidden")))
@interface NSConcreteMapTable : NSMapTable
{
    struct NSSlice keys;	// 8 = 0x8
    struct NSSlice values;	// 40 = 0x28
    unsigned long long count;	// 72 = 0x48
    unsigned long long capacity;	// 80 = 0x50
    unsigned long long keyOptions;	// 88 = 0x58
    unsigned long long valueOptions;	// 96 = 0x60
    unsigned long long mutations;	// 104 = 0x68
    struct os_unfair_lock_s growLock;	// 112 = 0x70
    _Bool shouldRehash;	// 116 = 0x74
    _Bool hasDynamicSlices;	// 117 = 0x75
}

+ (_Bool)supportsSecureCoding;	// IMP=0x00600000007d338a
- (id)allValues;	// IMP=0x00000000007d5b11
- (id)allKeys;	// IMP=0x00000000007d5a16
- (_Bool)isEqual:(id)arg1;	// IMP=0x00000000007d58d3
- (unsigned long long)hash;	// IMP=0x00000000007d589b
- (unsigned long long)getKeys:(const void **)arg1 values:(const void **)arg2;	// IMP=0x00000000007d5785
- (id)objectEnumerator;	// IMP=0x00000000007d5769
- (id)keyEnumerator;	// IMP=0x00000000007d5733
- (unsigned long long)countByEnumeratingWithState:(CDStruct_70511ce9 *)arg1 objects:(id *)arg2 count:(unsigned long long)arg3;	// IMP=0x00000000007d5646
- (id)description;	// IMP=0x00000000007d54f0
- (void)dealloc;	// IMP=0x00000000007d53f3
- (void)removeAllItems;	// IMP=0x00000000007d532a
- (void)removeObjectForKey:(id)arg1;	// IMP=0x00000000007d51ed
- (void)_reclaim;	// IMP=0x00000000007d51e3
- (void)rehash;	// IMP=0x00000000007d5157
- (unsigned long long)rehashAround:(unsigned long long)arg1;	// IMP=0x00000000007d4eac
- (void)replaceItem:(const void *)arg1 forExistingKey:(const void *)arg2;	// IMP=0x00000000007d4de7
- (_Bool)mapMember:(const void *)arg1 originalKey:(const void **)arg2 value:(const void **)arg3;	// IMP=0x00000000007d4cfe
- (void *)existingItemForSetItem:(const void *)arg1 forAbsentKey:(const void *)arg2;	// IMP=0x00000000007d4bfc
- (void)setItem:(const void *)arg1 forKnownAbsentKey:(const void *)arg2;	// IMP=0x00000000007d4aff
- (void)setItem:(const void *)arg1 forAbsentKey:(const void *)arg2;	// IMP=0x00000000007d4a2b
- (void)setObject:(id)arg1 forKey:(id)arg2;	// IMP=0x00000000007d4951
- (id)objectForKey:(id)arg1;	// IMP=0x00000000007d48bb
- (void)assign:(unsigned long long)arg1 key:(const void *)arg2 value:(const void *)arg3 isNew:(_Bool)arg4;	// IMP=0x00000000007d47ab
- (void)grow;	// IMP=0x00000000007d445d
- (id)dump;	// IMP=0x00000000007d41eb
- (_Bool)containsKeys:(const void **)arg1 values:(const void **)arg2 count:(unsigned long long)arg3;	// IMP=0x00000000007d3d58
- (unsigned long long)__capacity;	// IMP=0x00000000007d3d47
- (unsigned long long)count;	// IMP=0x00000000007d3cf2
- (id)valuePointerFunctions;	// IMP=0x00000000007d3cb4
- (id)keyPointerFunctions;	// IMP=0x00000000007d3c76
- (void)encodeWithCoder:(id)arg1;	// IMP=0x00000000007d3851
- (id)initWithCoder:(id)arg1;	// IMP=0x00000000007d3392
- (id)initWithKeyPointerFunctions:(id)arg1 valuePointerFunctions:(id)arg2 capacity:(unsigned long long)arg3;	// IMP=0x00000000007d31f0
- (id)initWithKeyOptions:(unsigned long long)arg1 valueOptions:(unsigned long long)arg2 capacity:(unsigned long long)arg3;	// IMP=0x00000000007d3057
- (id)copy;	// IMP=0x00000000007d2df0
- (void)_setBackingStore;	// IMP=0x00000000007d2d41
- (void)checkCount:(const char *)arg1;	// IMP=0x00000000007d2cb8
- (unsigned long long)realCount;	// IMP=0x00000000007d2be5
- (void)raiseCountUnderflowException;	// IMP=0x00000000007d2b94
- (id)init;	// IMP=0x00000000007d2b78

@end

