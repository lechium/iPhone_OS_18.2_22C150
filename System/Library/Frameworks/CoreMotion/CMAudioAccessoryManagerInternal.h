//
//     Generated by classdump-c 4.2.0 (64 bit) (iOS port by DreamDevLost, Updated by Kevin Bradley.)(Debug version compiled Dec 27 2024 14:18:54).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <objc/NSObject.h>

@class NSOperationQueue;

@interface CMAudioAccessoryManagerInternal : NSObject
{
    struct os_unfair_lock_s fSampleLock;	// 8 = 0x8
    struct Dispatcher *fAudioAccessoryAccelerometerDispatcher;	// 16 = 0x10
    double fAudioAccessoryAccelerometerUpdateInterval;	// 24 = 0x18
    CDUnknownBlockType fAudioAccessoryAccelerometerHandler;	// 32 = 0x20
    NSOperationQueue *fAudioAccessoryAccelerometerQueue;	// 40 = 0x28
    struct Sample {
        double timestamp;
        CDStruct_03942939 acceleration;
        unsigned long long sensorTime;
        unsigned short sequenceNumber;
    } fLatestAudioAccessoryAccelerometerSample;	// 48 = 0x30
    struct Dispatcher *fAudioAccessoryGyroDispatcher;	// 88 = 0x58
    double fAudioAccessoryGyroUpdateInterval;	// 96 = 0x60
    CDUnknownBlockType fAudioAccessoryGyroHandler;	// 104 = 0x68
    NSOperationQueue *fAudioAccessoryGyroQueue;	// 112 = 0x70
    struct Sample {
        double timestamp;
        CDStruct_03942939 gyro;
        unsigned long long sensorTime;
        unsigned short sequenceNumber;
        float temperature;
    } fLatestAudioAccessoryGyroSample;	// 120 = 0x78
    struct Dispatcher *fAudioAccessoryMagnetometerDispatcher;	// 160 = 0xa0
    double fAudioAccessoryMagnetometerUpdateInterval;	// 168 = 0xa8
    CDUnknownBlockType fAudioAccessoryMagnetometerHandler;	// 176 = 0xb0
    NSOperationQueue *fAudioAccessoryMagnetometerQueue;	// 184 = 0xb8
    struct Sample {
        double timestamp;
        CDStruct_03942939 magneticField;
        unsigned long long sensorTime;
        unsigned short sequenceNumber;
        float temperature;
    } fLatestAudioAccessoryMagnetometerSample;	// 192 = 0xc0
    struct Dispatcher *fAudioAccessoryDeviceMotionDispatcher;	// 232 = 0xe8
    struct Dispatcher *fAudioAccessoryDeviceMotionConfigDispatcher;	// 240 = 0xf0
    double fAudioAccessoryDeviceMotionUpdateInterval;	// 248 = 0xf8
    CDUnknownBlockType fAudioAccessoryDeviceMotionHandler;	// 256 = 0x100
    NSOperationQueue *fAudioAccessoryDeviceMotionQueue;	// 264 = 0x108
    struct CMOQuaternion fFrameRotation;	// 272 = 0x110
    struct Dispatcher *fAudioAccessoryDeviceMotionStatusDispatcher;	// 288 = 0x120
    CDUnknownBlockType fAudioAccessoryDeviceMotionStatusHandler;	// 296 = 0x128
    NSOperationQueue *fAudioAccessoryDeviceMotionStatusQueue;	// 304 = 0x130
    struct unique_ptr<CLMotionNotifier::Dispatcher, std::default_delete<CLMotionNotifier::Dispatcher>> fAudioAccessoryActivityDispatcher;	// 312 = 0x138
    double fAudioAccessoryActivityUpdateInterval;	// 320 = 0x140
    CDUnknownBlockType fAudioAccessoryActivityHandler;	// 328 = 0x148
    NSOperationQueue *fAudioAccessoryActivityQueue;	// 336 = 0x150
    struct Dispatcher *fAudioAccessoryHeartRateDispatcher;	// 344 = 0x158
    double fAudioAccessoryHeartRateUpdateInterval;	// 352 = 0x160
    CDUnknownBlockType fAudioAccessoryHeartRateHandler;	// 360 = 0x168
    NSOperationQueue *fAudioAccessoryHeartRateQueue;	// 368 = 0x170
    struct Sample {
        double timestamp;
        unsigned int heartRate;
        float confidence;
        unsigned long long sensorTime;
        unsigned int sequenceNumber;
    } fLatestAudioAccessoryHeartRateSample;	// 376 = 0x178
    struct Dispatcher *fAudioAccessoryPPGDispatcher;	// 408 = 0x198
    CDUnknownBlockType fAudioAccessoryPPGHandler;	// 416 = 0x1a0
    NSOperationQueue *fAudioAccessoryPPGQueue;	// 424 = 0x1a8
    struct Sample {
        double timestamp;
        unsigned long long sensorTime;
        unsigned char frameNum;
        unsigned char error;
        unsigned char dark0[3];
        unsigned char light0[3];
        unsigned char dark1[3];
        unsigned char dark2[3];
        unsigned char light1[3];
        unsigned char dark3[3];
        unsigned char rxGain[2];
        unsigned char ledCurrent[2];
    } fLatestAudioAccessoryPPGSample;	// 432 = 0x1b0
    _Bool fAudioAccessoryAccelerometerAvailable;	// 472 = 0x1d8
    _Bool fAudioAccessoryGyroAvailable;	// 473 = 0x1d9
    _Bool fAudioAccessoryMagnetometerAvailable;	// 474 = 0x1da
    _Bool fAudioAccessoryDeviceMotionAvailable;	// 475 = 0x1db
    _Bool fAudioAccessoryActivityAvailable;	// 476 = 0x1dc
    _Bool fAudioAccessoryHeartRateAvailable;	// 477 = 0x1dd
    _Bool fAudioAccessoryPPGAvailable;	// 478 = 0x1de
}

- (id).cxx_construct;	// IMP=0x00000000001f7db8
- (void).cxx_destruct;	// IMP=0x00000000001f7d91
- (id)init;	// IMP=0x00000000001f7c6c

@end

