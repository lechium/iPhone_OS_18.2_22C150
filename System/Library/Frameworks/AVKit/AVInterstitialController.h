//
//     Generated by classdump-c 4.2.0 (64 bit) (iOS port by DreamDevLost, Updated by Kevin Bradley.)(Debug version compiled Dec 27 2024 14:18:54).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <objc/NSObject.h>

@class AVObservationController, AVPlayer, AVPlayerInterstitialEventController, AVPlayerInterstitialEventMonitor, AVPlayerTimeController, AVTimeRange, AVTimeRangeCollection;
@protocol AVInterstitialControllerDelegateManager, AVTimeControlling, NSObject;

__attribute__((visibility("hidden")))
@interface AVInterstitialController : NSObject
{
    id <NSObject> _playerItemTimeJumpedObserver;	// 8 = 0x8
    id <NSObject> _playerInterstitialPlayerDidChangeObserver;	// 16 = 0x10
    id <NSObject> _playerInterstitialEventsChangedObserver;	// 24 = 0x18
    id <NSObject> _playerInterstitialCurrentEventChangedObserver;	// 32 = 0x20
    _Bool _shouldAlwaysSkipInterstitials;	// 40 = 0x28
    AVPlayer *_player;	// 48 = 0x30
    AVPlayer *_interstitialPlayer;	// 56 = 0x38
    id <AVInterstitialControllerDelegateManager> _delegateManager;	// 64 = 0x40
    AVTimeRangeCollection *_interstitialTimeRangeCollection;	// 72 = 0x48
    double _continuationTimeAfterInterstitial;	// 80 = 0x50
    CDUnknownBlockType _didEnterInterstitialTimeRangeBlock;	// 88 = 0x58
    CDUnknownBlockType _didLeaveInterstitialTimeRangeBlock;	// 96 = 0x60
    CDUnknownBlockType _didLeaveRequiredInterstitialTimeRangeBlock;	// 104 = 0x68
    CDUnknownBlockType _skipInterstitialTimeRangeBlock;	// 112 = 0x70
    AVPlayerTimeController<AVTimeControlling> *_interstitialTimingController;	// 120 = 0x78
    AVPlayerInterstitialEventMonitor *_eventMonitor;	// 128 = 0x80
    AVPlayerInterstitialEventController *_eventController;	// 136 = 0x88
    AVObservationController *_kvo;	// 144 = 0x90
    AVObservationController *_kvoPlayerItem;	// 152 = 0x98
    AVTimeRange *_interstitialTimeRangeInProgress;	// 160 = 0xa0
    id _interstitialBoundaryTimeObserver;	// 168 = 0xa8
}

+ (id)newTimeRangeCollectionForPlayerItem:(id)arg1;	// IMP=0x0060000000056974
+ (id)interstitialQueue;	// IMP=0x00600000000e97be
+ (id)newTimeRangeCollectionForPlayerItem:(id)arg1 reversePlaybackEndTime:(CDStruct_1b6d18a9)arg2 forwardPlaybackEndTime:(CDStruct_1b6d18a9)arg3;	// IMP=0x00600000000e92ea
- (void).cxx_destruct;	// IMP=0x00000000000e6e55
@property(retain, nonatomic) id interstitialBoundaryTimeObserver; // @synthesize interstitialBoundaryTimeObserver=_interstitialBoundaryTimeObserver;
@property(retain, nonatomic) AVTimeRange *interstitialTimeRangeInProgress; // @synthesize interstitialTimeRangeInProgress=_interstitialTimeRangeInProgress;
@property(retain, nonatomic) AVObservationController *kvoPlayerItem; // @synthesize kvoPlayerItem=_kvoPlayerItem;
@property(retain, nonatomic) AVObservationController *kvo; // @synthesize kvo=_kvo;
@property(retain, nonatomic) AVPlayerInterstitialEventController *eventController; // @synthesize eventController=_eventController;
@property(retain, nonatomic) AVPlayerInterstitialEventMonitor *eventMonitor; // @synthesize eventMonitor=_eventMonitor;
@property(readonly, nonatomic) AVPlayerTimeController<AVTimeControlling> *interstitialTimingController; // @synthesize interstitialTimingController=_interstitialTimingController;
@property(nonatomic) _Bool shouldAlwaysSkipInterstitials; // @synthesize shouldAlwaysSkipInterstitials=_shouldAlwaysSkipInterstitials;
@property(copy, nonatomic) CDUnknownBlockType skipInterstitialTimeRangeBlock; // @synthesize skipInterstitialTimeRangeBlock=_skipInterstitialTimeRangeBlock;
@property(copy, nonatomic) CDUnknownBlockType didLeaveRequiredInterstitialTimeRangeBlock; // @synthesize didLeaveRequiredInterstitialTimeRangeBlock=_didLeaveRequiredInterstitialTimeRangeBlock;
@property(copy, nonatomic) CDUnknownBlockType didLeaveInterstitialTimeRangeBlock; // @synthesize didLeaveInterstitialTimeRangeBlock=_didLeaveInterstitialTimeRangeBlock;
@property(copy, nonatomic) CDUnknownBlockType didEnterInterstitialTimeRangeBlock; // @synthesize didEnterInterstitialTimeRangeBlock=_didEnterInterstitialTimeRangeBlock;
@property(readonly, nonatomic) double continuationTimeAfterInterstitial; // @synthesize continuationTimeAfterInterstitial=_continuationTimeAfterInterstitial;
@property(retain, nonatomic) AVTimeRangeCollection *interstitialTimeRangeCollection; // @synthesize interstitialTimeRangeCollection=_interstitialTimeRangeCollection;
@property(nonatomic) __weak id <AVInterstitialControllerDelegateManager> delegateManager; // @synthesize delegateManager=_delegateManager;
@property(retain, nonatomic) AVPlayer *interstitialPlayer; // @synthesize interstitialPlayer=_interstitialPlayer;
@property(retain, nonatomic) AVPlayer *player; // @synthesize player=_player;
- (double)_pendingTimeBoundary;	// IMP=0x00000000000e6c11
- (void)_setPendingTimeBoundary:(double)arg1;	// IMP=0x00000000000e6b6d
- (void)didPresentInterstitialTimeRange:(id)arg1;	// IMP=0x00000000000e68c5
- (void)willPresentInterstitialTimeRange:(id)arg1;	// IMP=0x00000000000e6697
- (void)skipInterstitialTimeRange:(id)arg1;	// IMP=0x00000000000e6438
- (void)didBeginOrResumePlayback;	// IMP=0x00000000000e6345
- (_Bool)_shouldSkipInterstitialTimeRange:(id)arg1;	// IMP=0x00000000000e6287
- (id)nextInterstitialTimeRange;	// IMP=0x00000000000e621e
@property(readonly, nonatomic) AVTimeRange *previousInterstitialTimeRange;
@property(readonly, nonatomic) AVTimeRange *currentInterstitialTimeRange;
- (void)_stopObservingInterstitialTimeRanges;	// IMP=0x00000000000e6028
- (void)_startObservingInterstitialTimeRanges;	// IMP=0x00000000000e5fac
- (void)sendPendingInterstitialBoundaryNotificationIfNeeded;	// IMP=0x00000000000e5eb9
- (void)sendInterstitialBoundaryNotificationsForTimeJumpIfNeeded;	// IMP=0x00000000000e5df4
- (void)_sendInterstitialBoundaryNotificationsForTime:(double)arg1;	// IMP=0x00000000000e5d47
- (void)_sendInterstitialBoundaryNotificationsForEvent:(id)arg1;	// IMP=0x00000000000e5cfb
- (void)_sendInterstitialBoundaryNotificationForInterstitialTimeRange:(id)arg1;	// IMP=0x00000000000e5b81
- (double)timeToSeekAfterUserNavigatedFromTime:(double)arg1 toTime:(double)arg2;	// IMP=0x00000000000e57e0
@property(readonly, nonatomic) _Bool requiresLinearPlayback;
@property(readonly, nonatomic) _Bool shouldEnforceInterstitialPolicy;
- (void)_updateInterstitialTimeRangeCollection;	// IMP=0x00000000000e5474
- (void)cancelCurrentPlayerInterstitialEvent;	// IMP=0x00000000000e5361
@property(readonly, nonatomic) double timeRemainingInCurrentInterstitial;
- (double)elapsedTimeWithinCurrentInterstitial;	// IMP=0x00000000000e50e9
- (double)elapsedTimeForInterstitialPlayer;	// IMP=0x00000000000e4fe6
- (_Bool)isLive;	// IMP=0x00000000000e4f3c
- (id)currentOrEstimatedDate;	// IMP=0x00000000000e4e94
@property(readonly, nonatomic) double currentDisplayTime;
- (double)currentTime;	// IMP=0x00000000000e4d30
- (id)currentItem;	// IMP=0x00000000000e4ce0
- (double)displayTimeFromTime:(double)arg1;	// IMP=0x00000000000e4c89
- (double)timeFromDisplayTime:(double)arg1;	// IMP=0x00000000000e4c32
- (void)_performInterstitialPlayerDependentUpdates;	// IMP=0x00000000000e49d6
- (void)invalidate;	// IMP=0x00000000000e47ed
- (void)dealloc;	// IMP=0x00000000000e47af
- (void)setupInterstitialObservers;	// IMP=0x00000000000e4509
- (id)init;	// IMP=0x00000000000e42ff
- (_Bool)loadDurationOfCurrentOrNextInterstitialEvent:(CDUnknownBlockType)arg1;	// IMP=0x00000000000e87df
- (id)timeRangeForPlayerInterstitialEvent:(id)arg1;	// IMP=0x00000000000e8594
- (id)interstitialTimeRangeForPlayerInterstitialEvent:(id)arg1;	// IMP=0x00000000000e838b
- (void)updateSynthesizedInterstitialTimeRanges;	// IMP=0x00000000000e8230
- (id)_copySynthesizedInterstitialTimeRanges;	// IMP=0x00000000000e7e32

@end

