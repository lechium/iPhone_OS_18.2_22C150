//
//     Generated by classdump-c 4.2.0 (64 bit) (iOS port by DreamDevLost, Updated by Kevin Bradley.)(Debug version compiled Dec 27 2024 14:18:54).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import "CNContactStore.h"

@class NSArray;

__attribute__((visibility("hidden")))
@interface CNAggregateContactStore : CNContactStore
{
    CNContactStore *_mainStore;	// 8 = 0x8
    NSArray *_contactStores;	// 16 = 0x10
    CNContactStore *_contactStoreForMatchingDictionaryWork;	// 24 = 0x18
    NSArray *_postFetchDecoratorBlocks;	// 32 = 0x20
}

- (void).cxx_destruct;	// IMP=0x000000000001e644
@property(retain, nonatomic) NSArray *postFetchDecoratorBlocks; // @synthesize postFetchDecoratorBlocks=_postFetchDecoratorBlocks;
@property(retain, nonatomic) CNContactStore *contactStoreForMatchingDictionaryWork; // @synthesize contactStoreForMatchingDictionaryWork=_contactStoreForMatchingDictionaryWork;
@property(copy, nonatomic) NSArray *contactStores; // @synthesize contactStores=_contactStores;
- (id)getWatchLimitedAccessSyncDataStartingAtSequenceNumber:(long long)arg1;	// IMP=0x000000000001e58a
- (_Bool)analyzeDatabaseWithError:(id *)arg1;	// IMP=0x000000000001e539
- (_Bool)shouldAnalyzeDatabaseWithError:(id *)arg1;	// IMP=0x000000000001e4e8
- (void)setLimitedAccessTableCurrentSequenceNumber:(id)arg1;	// IMP=0x000000000001e47f
- (void)dropAllLimitedAccessRowsAndSyncNotify;	// IMP=0x000000000001e442
- (void)dropAllLimitedAccessRows;	// IMP=0x000000000001e405
- (void)applyLimitedAccessSyncEvents:(id)arg1;	// IMP=0x000000000001e39c
- (id)getLimitedAccessLastSyncSequenceNumber:(id *)arg1;	// IMP=0x000000000001e33d
- (void)updateLimitedAccessTable:(id)arg1;	// IMP=0x000000000001e2d4
- (void)purgeLimitedAccessRecordsForBundle:(id)arg1;	// IMP=0x000000000001e26b
- (id)populateSyncTableForLimitedAccessAboveSequenceNumber:(id)arg1;	// IMP=0x000000000001e1f1
- (id)getLimitedAccessContactsCountForBundle:(id)arg1;	// IMP=0x000000000001e177
- (void)removeLimitedAccessForBundle:(id)arg1 contactIdentifiers:(id)arg2;	// IMP=0x000000000001e0ec
- (void)removeLimitedAccessForBundle:(id)arg1 contactIdentifier:(id)arg2;	// IMP=0x000000000001e061
- (void)addLimitedAccessForBundle:(id)arg1 contactIdentifiers:(id)arg2;	// IMP=0x000000000001dfd6
- (void)addLimitedAccessForBundle:(id)arg1 contactIdentifier:(id)arg2;	// IMP=0x000000000001df4b
- (id)fetchLimitedAccessContactIdentifiersForBundle:(id)arg1;	// IMP=0x000000000001ded1
- (_Bool)verifyChangeHistoryForClientIdentifier:(id)arg1 error:(id *)arg2;	// IMP=0x000000000001de56
- (id)latestConsumedChangeHistoryAnchorForClientIdentifier:(id)arg1 error:(id *)arg2;	// IMP=0x000000000001ddcd
- (id)individualContactCountWithError:(id *)arg1;	// IMP=0x000000000001dd6e
- (void)setLegacyTetheredSyncComputerAnchor:(id)arg1;	// IMP=0x000000000001dd05
- (id)legacyTetheredSyncComputerAnchor;	// IMP=0x000000000001dcb5
- (void)setLegacyTetheredSyncDeviceAnchor:(id)arg1;	// IMP=0x000000000001dc4c
- (id)legacyTetheredSyncDeviceAnchor;	// IMP=0x000000000001dbfc
- (_Bool)setDefaultAccountIdentifier:(id)arg1 error:(id *)arg2;	// IMP=0x000000000001db81
- (_Bool)resetSortDataIfNeededWithError:(id *)arg1;	// IMP=0x000000000001db30
- (_Bool)moveContacts:(id)arg1 fromContainer:(id)arg2 toContainer:(id)arg3 error:(id *)arg4;	// IMP=0x000000000001da8f
- (int)saveSequenceCount;	// IMP=0x000000000001da4b
- (id)identifierWithError:(id *)arg1;	// IMP=0x000000000001d9ec
- (_Bool)setBestMeIfNeededForGivenName:(id)arg1 familyName:(id)arg2 email:(id)arg3 error:(id *)arg4;	// IMP=0x000000000001d94b
- (id)getBackgroundColorOnImageData:(id)arg1 bitmapFormat:(id)arg2 error:(id *)arg3;	// IMP=0x000000000001d71e
- (void)addPostFetchDecorator:(CDUnknownBlockType)arg1;	// IMP=0x000000000001d65a
- (id)applyPostFetchDecoratorsToContacts:(id)arg1 keysToFetch:(id)arg2 unifyContactsFromMainStore:(_Bool)arg3;	// IMP=0x000000000001d450
- (id)applyPostFetchDecoratorsToContact:(id)arg1 keysToFetch:(id)arg2 unifyContactsFromMainStore:(_Bool)arg3;	// IMP=0x000000000001d352
- (_Bool)executeChangeHistoryClearRequest:(id)arg1 error:(id *)arg2;	// IMP=0x000000000001d1e2
- (_Bool)clearChangeHistoryForClientIdentifier:(id)arg1 toChangeAnchor:(id)arg2 error:(id *)arg3;	// IMP=0x000000000001d055
- (id)changeHistoryWithFetchRequest:(id)arg1 error:(id *)arg2;	// IMP=0x000000000001cecb
- (_Bool)unregisterChangeHistoryClientIdentifier:(id)arg1 error:(id *)arg2;	// IMP=0x000000000001cd5b
- (_Bool)registerChangeHistoryClientIdentifier:(id)arg1 error:(id *)arg2;	// IMP=0x000000000001cbeb
- (id)matchingDictionaryForContact:(id)arg1;	// IMP=0x000000000001cb71
- (id)contactIdentifierWithMatchingDictionary:(id)arg1;	// IMP=0x000000000001caf7
- (id)descriptorForRequiredKeysForMatchingDictionary;	// IMP=0x000000000001caa7
- (id)findContactStoreForMatchingDictionaryWork;	// IMP=0x000000000001c91b
- (id)userActivityUserInfoForContact:(id)arg1;	// IMP=0x000000000001c6f8
- (id)contactWithUserActivityUserInfo:(id)arg1 keysToFetch:(id)arg2;	// IMP=0x000000000001c55d
- (id)currentHistoryAnchor;	// IMP=0x000000000001c50d
- (id)currentHistoryToken;	// IMP=0x000000000001c4bd
- (id)enumeratorForChangeHistoryFetchRequest:(id)arg1 error:(id *)arg2;	// IMP=0x000000000001c31e
- (id)enumeratorForContactFetchRequest:(id)arg1 error:(id *)arg2;	// IMP=0x000000000001bc67
- (id)executeFetchRequest:(id)arg1 progressiveResults:(CDUnknownBlockType)arg2 completion:(CDUnknownBlockType)arg3;	// IMP=0x000000000001b627
- (_Bool)executeSaveRequest:(id)arg1 response:(id *)arg2 authorizationContext:(id)arg3 error:(id *)arg4;	// IMP=0x000000000001b34c
- (_Bool)executeSaveRequest:(id)arg1 error:(id *)arg2;	// IMP=0x000000000001b332
- (_Bool)supportsSaveRequest:(id)arg1;	// IMP=0x000000000001b277
- (id)accountsMatchingPredicate:(id)arg1 error:(id *)arg2;	// IMP=0x000000000001b1ac
- (_Bool)setMeContact:(id)arg1 forContainer:(id)arg2 error:(id *)arg3;	// IMP=0x000000000001af4e
- (_Bool)setMeContact:(id)arg1 error:(id *)arg2;	// IMP=0x000000000001ad2e
- (id)usedLabelsForPropertyWithKey:(id)arg1 error:(id *)arg2;	// IMP=0x000000000001ac63
- (id)policyWithDescription:(id)arg1 error:(id *)arg2;	// IMP=0x000000000001aad9
- (id)defaultContainerIdentifier;	// IMP=0x000000000001a98b
- (id)serverSearchContainersMatchingPredicate:(id)arg1 error:(id *)arg2;	// IMP=0x000000000001a8c0
- (id)containersMatchingPredicate:(id)arg1 error:(id *)arg2;	// IMP=0x000000000001a7f5
- (id)subgroupsOfGroupWithIdentifier:(id)arg1 error:(id *)arg2;	// IMP=0x000000000001a72a
- (id)membersOfGroupWithIdentifier:(id)arg1 keysToFetch:(id)arg2 error:(id *)arg3;	// IMP=0x000000000001a63a
- (id)groupWithIdentifier:(id)arg1 error:(id *)arg2;	// IMP=0x000000000001a4b0
- (id)groupsMatchingPredicate:(id)arg1 error:(id *)arg2;	// IMP=0x000000000001a3e5
- (_Bool)enumerateNonUnifiedContactsWithFetchRequest:(id)arg1 error:(id *)arg2 usingBlock:(CDUnknownBlockType)arg3;	// IMP=0x0000000000019d47
- (_Bool)enumerateContactsAndMatchInfoWithFetchRequest:(id)arg1 error:(id *)arg2 usingBlock:(CDUnknownBlockType)arg3;	// IMP=0x000000000001901d
- (id)meContactIdentifiers:(id *)arg1;	// IMP=0x0000000000018d7c
- (id)_unifiedMeContactWithKeysToFetch:(id)arg1 error:(id *)arg2;	// IMP=0x0000000000018a74
- (id)unifiedContactsMatchingPredicate:(id)arg1 keysToFetch:(id)arg2 error:(id *)arg3;	// IMP=0x0000000000018648
- (id)contactCountForFetchRequest:(id)arg1 error:(id *)arg2;	// IMP=0x0000000000018459
- (id)unifiedContactCountWithError:(id *)arg1;	// IMP=0x000000000001829c
- (id)sectionListOffsetsForSortOrder:(long long)arg1 error:(id *)arg2;	// IMP=0x0000000000018238
- (id)_unifiedContactsFromContacts:(id)arg1 unifyContactsFromMainStore:(_Bool)arg2 keysToFetch:(id)arg3 error:(id *)arg4;	// IMP=0x0000000000017459
- (void)didFetchContacts:(id)arg1 forPredicate:(id)arg2 fromStore:(id)arg3 unifiedFetch:(_Bool)arg4;	// IMP=0x000000000001736b
- (void)_enumerateStoresUsingBlock:(CDUnknownBlockType)arg1;	// IMP=0x0000000000017220
- (id)_allStoreResultsWithError:(id *)arg1 withBlock:(CDUnknownBlockType)arg2;	// IMP=0x0000000000016fea
- (id)requestAccessForEntityType:(long long)arg1;	// IMP=0x0000000000016edf
- (id)mainContactStore;	// IMP=0x0000000000016ecd
@property(readonly, nonatomic) __weak CNContactStore *mainStore;
- (_Bool)hasGroups;	// IMP=0x0000000000016cc5
- (_Bool)hasMultipleGroupsOrAccounts;	// IMP=0x0000000000016c65
- (_Bool)store:(id)arg1 supportsSelector:(SEL)arg2;	// IMP=0x0000000000016c13
- (id)initWithContactStores:(id)arg1 configuration:(id)arg2;	// IMP=0x0000000000016a98
- (id)initWithContactStores:(id)arg1;	// IMP=0x0000000000016a84
- (_Bool)isSpotlightIndexingSupported;	// IMP=0x00000000000ccd5e
- (id)firstContactStoreSupportingSpotlightIndexing;	// IMP=0x00000000000cccdd
- (id)contactStoresSupportingSpotlightIndexing;	// IMP=0x00000000000ccc5c
- (id)verifyIndexWithError:(id *)arg1;	// IMP=0x00000000000ccbe5
- (void)reindexSearchableItemsWithIdentifiers:(id)arg1;	// IMP=0x00000000000cca09
- (id)iOSMapper;	// IMP=0x00000000000ea5b8
- (id)XPCDataMapperStore;	// IMP=0x0000000000159f42
- (id)originForSuggestion:(id)arg1 error:(id *)arg2;	// IMP=0x0000000000161976

@end

