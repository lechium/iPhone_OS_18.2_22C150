//
//     Generated by classdump-c 4.2.0 (64 bit) (iOS port by DreamDevLost, Updated by Kevin Bradley.)(Debug version compiled Dec 27 2024 14:18:54).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#pragma mark Blocks

typedef void (^CDUnknownBlockType)(void); // return type and parameters are unknown

#pragma mark Named Structures

struct AUProcessingBlock_DSPGraph;

struct AudioBuffer {
    unsigned int _field1;
    unsigned int _field2;
    void *_field3;
};

struct AudioBufferList {
    unsigned int _field1;
    struct AudioBuffer _field2[1];
};

struct AudioStreamBasicDescription {
    double _field1;
    unsigned int _field2;
    unsigned int _field3;
    unsigned int _field4;
    unsigned int _field5;
    unsigned int _field6;
    unsigned int _field7;
    unsigned int _field8;
    unsigned int _field9;
};

struct CABufferList;

struct Graph;

struct Interpreter;

struct ProcessingContext;

struct ProcessingTree;

struct RingBuffer;

struct SNFormatAndBlockSize {
    struct AudioStreamBasicDescription _field1;
    unsigned int _field2;
};

struct SNShazamMixingOptions {
    unsigned short _field1;
    float _field2;
    unsigned short _field3;
    float _field4;
    float _field5;
};

struct _NSRange {
    unsigned long long _field1;
    unsigned long long _field2;
};

struct __shared_weak_count;

struct shared_ptr<DSPGraph::Graph> {
    struct Graph *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<SoundAnalysis::ProcessingContext> {
    struct ProcessingContext *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<SoundAnalysis::ProcessingTree> {
    struct ProcessingTree *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct unique_ptr<AT::RingBuffer, std::default_delete<AT::RingBuffer>> {
    struct __compressed_pair<AT::RingBuffer *, std::default_delete<AT::RingBuffer>> {
        struct RingBuffer *__value_;
    } __ptr_;
};

struct unique_ptr<AUProcessingBlock_DSPGraph, std::default_delete<AUProcessingBlock_DSPGraph>> {
    struct __compressed_pair<AUProcessingBlock_DSPGraph *, std::default_delete<AUProcessingBlock_DSPGraph>> {
        struct AUProcessingBlock_DSPGraph *__value_;
    } __ptr_;
};

struct unique_ptr<CABufferList, std::default_delete<CABufferList>> {
    struct __compressed_pair<CABufferList *, std::default_delete<CABufferList>> {
        struct CABufferList *__value_;
    } __ptr_;
};

struct unique_ptr<DSPGraph::Interpreter, std::default_delete<DSPGraph::Interpreter>> {
    struct __compressed_pair<DSPGraph::Interpreter *, std::default_delete<DSPGraph::Interpreter>> {
        struct Interpreter *__value_;
    } __ptr_;
};

#pragma mark Typedef'd Structures

typedef struct {
    long long _field1;
    int _field2;
    unsigned int _field3;
    long long _field4;
} CDStruct_198678f7;

typedef struct {
    CDStruct_198678f7 _field1;
    CDStruct_198678f7 _field2;
} CDStruct_3c1748cc;

typedef struct {
    CDStruct_3c1748cc _field1;
    CDStruct_3c1748cc _field2;
} CDStruct_9abb004b;

// Template types
typedef struct shared_ptr<SoundAnalysis::ProcessingContext> {
    struct ProcessingContext *__ptr_;
    struct __shared_weak_count *__cntrl_;
} shared_ptr_0a6781a8;

typedef struct shared_ptr<SoundAnalysis::ProcessingTree> {
    struct ProcessingTree *__ptr_;
    struct __shared_weak_count *__cntrl_;
} shared_ptr_a9a21428;

