//
//     Generated by classdump-c 4.2.0 (64 bit) (iOS port by DreamDevLost, Updated by Kevin Bradley.)(Debug version compiled Dec 27 2024 14:18:54).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <objc/NSObject.h>

@class PFCloudKitArchivingUtilities, PFCloudKitStoreComparisonCache;

__attribute__((visibility("hidden")))
@interface PFCloudKitStoreComparer : NSObject
{
    _Bool _onlyCompareSharedZones;	// 8 = 0x8
    PFCloudKitStoreComparisonCache *_cache;	// 16 = 0x10
    PFCloudKitArchivingUtilities *_archivingUtilities;	// 24 = 0x18
}

+ (id)trimExcessiveValuesForLog:(id)arg1;	// IMP=0x00600000002eabb7
@property(nonatomic) _Bool onlyCompareSharedZones; // @synthesize onlyCompareSharedZones=_onlyCompareSharedZones;
@property(readonly, nonatomic) PFCloudKitArchivingUtilities *archivingUtilities; // @synthesize archivingUtilities=_archivingUtilities;
@property(readonly, nonatomic) PFCloudKitStoreComparisonCache *cache; // @synthesize cache=_cache;
- (_Bool)ensureContentsOfRecordStorageMatchForStorage:(id)arg1 andOtherStore:(id)arg2 error:(id *)arg3;	// IMP=0x00000000002ea7f5
- (_Bool)ensureRecordMetadataMatchesForRecordID:(id)arg1 inStore:(id)arg2 andOtherStore:(id)arg3 error:(id *)arg4;	// IMP=0x00000000002ea39b
- (_Bool)ensureMirroredRelationshipsMatchForStore:(id)arg1 otherStore:(id)arg2 error:(id *)arg3;	// IMP=0x00000000002e99cf
- (_Bool)ensureMoveReceiptsMatchForStore:(id)arg1 otherStore:(id)arg2 error:(id *)arg3;	// IMP=0x00000000002e878c
- (_Bool)compareCloudKitMetadataOfStore:(id)arg1 toStore:(id)arg2 error:(id *)arg3;	// IMP=0x00000000002e8629
- (_Bool)ensureStoresAgreeOnCloudKitTables:(id)arg1 error:(id *)arg2;	// IMP=0x00000000002e7e79
- (id)getRecordIDsForRelationship:(id)arg1 onObject:(id)arg2;	// IMP=0x00000000002e78fa
- (_Bool)compareRelationshipsOfRecordID:(id)arg1 withStoreObject:(id)arg2 andOtherObject:(id)arg3 error:(id *)arg4;	// IMP=0x00000000002e6d5b
- (_Bool)validateValue:(id)arg1 againstOtherValue:(id)arg2 forIgnoredAttribute:(id)arg3;	// IMP=0x00000000002e6d3a
- (_Bool)isValue:(id)arg1 equalToValue:(id)arg2 forAttribute:(id)arg3;	// IMP=0x00000000002e6665
- (_Bool)compareAttributesOnObject:(id)arg1 toObject:(id)arg2 error:(id *)arg3;	// IMP=0x00000000002e5dae
- (_Bool)compareObjectsInStore:(id)arg1 toStore:(id)arg2 error:(id *)arg3;	// IMP=0x00000000002e509c
- (_Bool)compareDatabaseScopeAndIdentityInStore:(id)arg1 toStore:(id)arg2 error:(id *)arg3;	// IMP=0x00000000002e4c5c
- (_Bool)compareContentOfStore:(id)arg1 toStore:(id)arg2 error:(id *)arg3;	// IMP=0x00000000002e452e
- (id)getObjectMatchingRecordID:(id)arg1 fromStore:(id)arg2 withManagedObjectContext:(id)arg3;	// IMP=0x00000000002e416c
- (_Bool)ensureContentsOfStore:(id)arg1 matchContentsOfStore:(id)arg2 error:(id *)arg3;	// IMP=0x00000000002e3d43
- (_Bool)ensureContentsMatch:(id *)arg1;	// IMP=0x00000000002e3cec
- (void)dealloc;	// IMP=0x00000000002e3ca2
- (id)initWithStore:(id)arg1 otherStore:(id)arg2;	// IMP=0x00000000002e3c1e

@end

