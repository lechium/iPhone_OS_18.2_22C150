//
//     Generated by classdump-c 4.2.0 (64 bit) (iOS port by DreamDevLost, Updated by Kevin Bradley.)(Debug version compiled Dec 27 2024 14:18:54).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

@class CPCharSequence, NSArray;

__attribute__((visibility("hidden")))
@interface CPTextLine
{
    CPCharSequence *charSequence;	// 128 = 0x80
    CDStruct_2e2afed4 *wordArray;	// 136 = 0x88
    unsigned int wordCount;	// 144 = 0x90
    struct CPInlineContainer *inlineList;	// 152 = 0x98
    int lineNumber;	// 160 = 0xa0
    int columnNumber;	// 164 = 0xa4
    double baseline;	// 168 = 0xa8
    _Bool baseLineIsNull;	// 176 = 0xb0
    struct CGRect normalizedBounds;	// 184 = 0xb8
    _Bool hasBeenSplit;	// 216 = 0xd8
    _Bool hasBeenProcessed;	// 217 = 0xd9
    _Bool maySplit;	// 218 = 0xda
    _Bool hasTabs;	// 219 = 0xdb
    NSArray *columnBreaks;	// 224 = 0xe0
    NSArray *xsegments;	// 232 = 0xe8
    int levels;	// 240 = 0xf0
    float maximumLetterGap;	// 244 = 0xf4
    float maximumWordGap;	// 248 = 0xf8
    int tabsBefore;	// 252 = 0xfc
    _Bool irregular;	// 256 = 0x100
    unsigned int leftSpacerIndex;	// 260 = 0x104
    unsigned int rightSpacerIndex;	// 264 = 0x108
    _Bool isListItem;	// 268 = 0x10c
    unsigned int listSpacerIndex;	// 272 = 0x110
    _Bool lineBreakAfter;	// 276 = 0x114
    struct CPPDFStyle *uniformStyle;	// 280 = 0x118
    unsigned short uniformStyleFlags;	// 288 = 0x120
    double monospaceWidth;	// 296 = 0x128
    unsigned int *spacesBefore;	// 304 = 0x130
    _Bool disposed;	// 312 = 0x138
}

@property(nonatomic) _Bool lineBreakAfter; // @synthesize lineBreakAfter;
@property(nonatomic) unsigned int listSpacerIndex; // @synthesize listSpacerIndex;
@property(nonatomic) _Bool isListItem; // @synthesize isListItem;
@property(nonatomic) unsigned int rightSpacerIndex; // @synthesize rightSpacerIndex;
@property(nonatomic) unsigned int leftSpacerIndex; // @synthesize leftSpacerIndex;
- (struct CGRect)normalizedBounds;	// IMP=0x00000000004b8c2b
- (double)rotationAngle;	// IMP=0x00000000004b8c0e
- (double)medianFontSize;	// IMP=0x00000000004b8a1f
- (_Bool)hasDropCap;	// IMP=0x00000000004b895a
- (long long)topIsAbove:(id)arg1;	// IMP=0x00000000004b87bf
- (id)attributes;	// IMP=0x00000000004b87b2
- (void)setIrregular:(_Bool)arg1;	// IMP=0x00000000004b87a2
- (_Bool)irregular;	// IMP=0x00000000004b8792
- (void)setMaximumWordGap:(float)arg1;	// IMP=0x00000000004b8780
- (float)maximumWordGap;	// IMP=0x00000000004b876e
- (void)setMaximumLetterGap:(float)arg1;	// IMP=0x00000000004b875c
- (float)maximumLetterGap;	// IMP=0x00000000004b874a
- (void)recomputeLevels;	// IMP=0x00000000004b86e2
- (void)setLevels:(int)arg1;	// IMP=0x00000000004b86d2
- (int)levels;	// IMP=0x00000000004b86c2
- (void)setSpaces:(unsigned int)arg1 beforeWordAtIndex:(unsigned int)arg2;	// IMP=0x00000000004b8614
- (unsigned int)spacesBeforeWordAtIndex:(unsigned int)arg1;	// IMP=0x00000000004b85e2
- (double)monospaceWidth;	// IMP=0x00000000004b8494
- (_Bool)isMonospaced;	// IMP=0x00000000004b8470
- (_Bool)styleIsUniform:(struct CPPDFStyle **)arg1 styleFlags:(unsigned short)arg2;	// IMP=0x00000000004b8364
- (void)recomputeBaseline;	// IMP=0x00000000004b8214
- (void)translateObjectYBy:(double)arg1;	// IMP=0x00000000004b81c8
- (_Bool)isIndivisible;	// IMP=0x00000000004b81c0
- (void)setBaselineToNull;	// IMP=0x00000000004b81af
- (void)setBaseline:(double)arg1;	// IMP=0x00000000004b8192
- (double)baseline;	// IMP=0x00000000004b80b2
- (_Bool)hyphenated;	// IMP=0x00000000004b80aa
- (struct CGPoint)anchor;	// IMP=0x00000000004b804f
- (_Bool)overlapsHorizontally:(struct CGRect)arg1;	// IMP=0x00000000004b7e9b
- (_Bool)overlapsWith:(id)arg1;	// IMP=0x00000000004b7e3f
- (long long)baseLineDescendingApprox:(id)arg1;	// IMP=0x00000000004b7c7d
- (long long)baseLineDescending:(id)arg1;	// IMP=0x00000000004b7c22
- (long long)baseLineAscending:(id)arg1;	// IMP=0x00000000004b7bc7
- (struct CGRect)bounds;	// IMP=0x00000000004b7a05
- (void)fitBoundsToChildren;	// IMP=0x00000000004b79ff
- (int)tabsBefore;	// IMP=0x00000000004b79ef
- (void)setTabsBefore:(int)arg1;	// IMP=0x00000000004b79df
- (_Bool)hasTabs;	// IMP=0x00000000004b79cf
- (void)setHasTabs:(_Bool)arg1;	// IMP=0x00000000004b79bf
- (void)accept:(id)arg1;	// IMP=0x00000000004b79a4
- (void)setColumnBreaks:(id)arg1;	// IMP=0x00000000004b7966
- (id)columnBreaks;	// IMP=0x00000000004b7955
- (_Bool)hasBeenProcessed;	// IMP=0x00000000004b7945
- (void)setHasBeenProcessed:(_Bool)arg1;	// IMP=0x00000000004b7935
- (_Bool)hasBeenSplit;	// IMP=0x00000000004b7925
- (void)setHasBeenSplit:(_Bool)arg1;	// IMP=0x00000000004b7915
- (id)properties;	// IMP=0x00000000004b7908
- (_Bool)mapToWordPairsWithIndex:(CDUnknownFunctionPointerType)arg1 passing:(void *)arg2;	// IMP=0x00000000004b787f
- (_Bool)mapToWordPairs:(CDUnknownFunctionPointerType)arg1 passing:(void *)arg2;	// IMP=0x00000000004b7803
- (_Bool)mapToWordsWithIndex:(CDUnknownFunctionPointerType)arg1 passing:(void *)arg2;	// IMP=0x00000000004b778f
- (_Bool)mapToWords:(CDUnknownFunctionPointerType)arg1 passing:(void *)arg2;	// IMP=0x00000000004b771f
- (_Bool)removeTextLines:(id)arg1 whereTrue:(CDUnknownFunctionPointerType)arg2 passing:(void *)arg3;	// IMP=0x00000000004b7516
- (id)newTextLineFromWordAt:(unsigned int)arg1 lengthInWords:(unsigned int)arg2;	// IMP=0x00000000004b7377
- (_Bool)changesFontAt:(id)arg1;	// IMP=0x00000000004b72a1
- (_Bool)hasJustifiedAlignment;	// IMP=0x00000000004b7282
- (int)align;	// IMP=0x00000000004b7225
- (long long)zOrder;	// IMP=0x00000000004b71e6
- (void)anchorChunk:(id)arg1 atWordIndex:(unsigned int)arg2;	// IMP=0x00000000004b7099
- (struct CPInlineContainer *)inlineList;	// IMP=0x00000000004b7088
- (unsigned int)inlineCount;	// IMP=0x00000000004b7068
- (CDStruct_2e2afed4 *)lastWord;	// IMP=0x00000000004b703b
- (CDStruct_2e2afed4 *)firstWord;	// IMP=0x00000000004b7019
- (CDStruct_2e2afed4 *)wordAtIndex:(unsigned int)arg1;	// IMP=0x00000000004b6fd3
- (struct CGRect)boundsOfWordAtIndex:(unsigned int)arg1;	// IMP=0x00000000004b6f79
- (unsigned int)wordCount;	// IMP=0x00000000004b6f69
- (CDStruct_2e2afed4 *)wordArrayOfSize:(unsigned int)arg1;	// IMP=0x00000000004b6ee4
- (CDStruct_2e2afed4 *)wordArray;	// IMP=0x00000000004b6ed3
- (id)charSequence;	// IMP=0x00000000004b6ec2
- (void)setCharSequence:(id)arg1;	// IMP=0x00000000004b6e84
- (id)copyWithZone:(struct _NSZone *)arg1;	// IMP=0x00000000004b6d94
- (void)dealloc;	// IMP=0x00000000004b6d2f
- (void)finalize;	// IMP=0x00000000004b6cf1
- (void)dispose;	// IMP=0x00000000004b6c6a
- (id)init;	// IMP=0x00000000004b6b9e

@end

