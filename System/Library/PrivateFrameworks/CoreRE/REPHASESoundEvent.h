//
//     Generated by classdump-c 4.2.0 (64 bit) (iOS port by DreamDevLost, Updated by Kevin Bradley.)(Debug version compiled Dec 27 2024 14:18:54).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <objc/NSObject.h>

@class AUAudioUnit, AVAudioSession, PHASEEngine, PHASEExternalOutputStream, PHASEExternalOutputStreamController, PHASEListener, PHASEMixerParameters, PHASESoundEvent, PHASESoundEventNodeAsset, PHASESource;
@protocol OS_dispatch_queue, REPHASESoundEventObserver;

__attribute__((visibility("hidden")))
@interface REPHASESoundEvent : NSObject
{
    struct queue<REPHASESoundEventCommandState, std::deque<REPHASESoundEventCommandState>> _commandQueue;	// 8 = 0x8
    struct atomic<REAudioPlaybackState> _state;	// 56 = 0x38
    struct atomic<bool> _isStopping;	// 64 = 0x40
    struct atomic<bool> _shouldExecuteCommand;	// 65 = 0x41
    PHASEEngine *_engine;	// 72 = 0x48
    PHASESource *_source;	// 80 = 0x50
    PHASEListener *_listener;	// 88 = 0x58
    PHASEMixerParameters *_mixerParameters;	// 96 = 0x60
    PHASESoundEventNodeAsset *_soundEventAsset;	// 104 = 0x68
    struct recursive_mutex _commandQueueMutex;	// 112 = 0x70
    struct optional<double> _stationaryTime;	// 176 = 0xb0
    struct atomic<double> _latestSeekTarget;	// 192 = 0xc0
    CDUnknownBlockType _soundEventFactory;	// 200 = 0xc8
    NSObject<OS_dispatch_queue> *_phaseQueue;	// 208 = 0xd0
    _Bool _soundEventPlayed;	// 216 = 0xd8
    float _cachedPlaybackSpeed;	// 220 = 0xdc
    float _cachedReverbSendLevel;	// 224 = 0xe0
    float _cachedDirectSendLevel;	// 228 = 0xe4
    NSObject<REPHASESoundEventObserver> *_observer;	// 232 = 0xe8
    PHASESoundEvent *_soundEvent;	// 240 = 0xf0
    PHASEExternalOutputStreamController *_externalStreamController;	// 248 = 0xf8
    AVAudioSession *_audioSession;	// 256 = 0x100
    PHASEExternalOutputStream *_externalStream;	// 264 = 0x108
    AUAudioUnit *_audioUnit;	// 272 = 0x110
    CDUnknownBlockType _renderBlock;	// 280 = 0x118
    CDUnknownBlockType _playbackStateChangeHandler;	// 288 = 0x120
    shared_ptr_a4f68b3a _prepareState;	// 296 = 0x128
}

+ (void)eventWithEngine:(id)arg1 streamUUID:(id)arg2 maximumFramesToRender:(unsigned int)arg3 audioFormat:(id)arg4 audioUnit:(id)arg5 renderBlock:(CDUnknownBlockType)arg6 mixerDefinition:(id)arg7 source:(id)arg8 listener:(id)arg9 group:(id)arg10 normalizationMode:(int)arg11 calibrationMode:(int)arg12 calibrationLevel:(double)arg13 audioSession:(id)arg14 phaseQueue:(id)arg15 callback:(CDUnknownBlockType)arg16;	// IMP=0x00100000004644f3
+ (void)eventWithEngine:(id)arg1 streamUUID:(id)arg2 mixerDefinition:(id)arg3 source:(id)arg4 listener:(id)arg5 normalizationMode:(int)arg6 targetLUFS:(double)arg7 calibrationMode:(int)arg8 calibrationLevel:(double)arg9 audioSession:(id)arg10 phaseQueue:(id)arg11 callback:(CDUnknownBlockType)arg12;	// IMP=0x00100000004641c2
+ (void)controllerWithEngine:(id)arg1 streamUUID:(id)arg2 mixerDefinition:(id)arg3 source:(id)arg4 listener:(id)arg5 normalizationMode:(int)arg6 targetLUFS:(double)arg7 calibrationMode:(int)arg8 calibrationLevel:(double)arg9 callback:(CDUnknownBlockType)arg10;	// IMP=0x0010000000463f33
- (id).cxx_construct;	// IMP=0x0000000000469b78
- (void).cxx_destruct;	// IMP=0x00000000004699e1
@property(copy, nonatomic) CDUnknownBlockType playbackStateChangeHandler; // @synthesize playbackStateChangeHandler=_playbackStateChangeHandler;
@property(copy, nonatomic) CDUnknownBlockType renderBlock; // @synthesize renderBlock=_renderBlock;
@property(retain, nonatomic) AUAudioUnit *audioUnit; // @synthesize audioUnit=_audioUnit;
@property(retain, nonatomic) PHASEExternalOutputStream *externalStream; // @synthesize externalStream=_externalStream;
@property _Bool soundEventPlayed; // @synthesize soundEventPlayed=_soundEventPlayed;
@property float cachedDirectSendLevel; // @synthesize cachedDirectSendLevel=_cachedDirectSendLevel;
@property float cachedReverbSendLevel; // @synthesize cachedReverbSendLevel=_cachedReverbSendLevel;
@property float cachedPlaybackSpeed; // @synthesize cachedPlaybackSpeed=_cachedPlaybackSpeed;
@property(readonly) AVAudioSession *audioSession; // @synthesize audioSession=_audioSession;
@property(readonly, nonatomic) PHASEExternalOutputStreamController *externalStreamController; // @synthesize externalStreamController=_externalStreamController;
@property(readonly, nonatomic) PHASESoundEvent *soundEvent; // @synthesize soundEvent=_soundEvent;
@property(nonatomic) shared_ptr_a4f68b3a prepareState; // @synthesize prepareState=_prepareState;
@property(nonatomic) __weak NSObject<REPHASESoundEventObserver> *observer; // @synthesize observer=_observer;
- (CDStruct_14d5dc5e)sourcePose;	// IMP=0x00000000004697d6
- (id)description;	// IMP=0x0000000000469464
- (id)paramForKey:(id)arg1;	// IMP=0x0000000000469315
@property(readonly) double latestSeekTarget;
@property(readonly) unsigned long long state;
- (_Bool)seekToTime:(double)arg1;	// IMP=0x00000000004691dc
- (void)stopAndDestroy;	// IMP=0x0000000000469197
- (void)resume;	// IMP=0x0000000000469135
- (void)pause;	// IMP=0x00000000004690d3
- (void)prepareWithCompletion:(CDUnknownBlockType)arg1;	// IMP=0x0000000000467985
- (void)_updateCommandQueue;	// IMP=0x0000000000467894
- (void)updateCommandQueue;	// IMP=0x000000000046784f
- (id)mixer;	// IMP=0x0000000000467795
- (_Bool)_seekToTime:(double)arg1;	// IMP=0x0000000000467213
- (_Bool)_stopAndDestroy;	// IMP=0x0000000000466f9b
- (_Bool)_pause;	// IMP=0x0000000000466e48
- (_Bool)_resume;	// IMP=0x000000000046696c
- (_Bool)_start;	// IMP=0x0000000000465a1f
- (_Bool)changeFromExpectedState:(unsigned long long)arg1 toState:(unsigned long long)arg2;	// IMP=0x0000000000465732
- (unsigned long long)changeToState:(unsigned long long)arg1;	// IMP=0x0000000000465456
- (void)stream:(id)arg1 didInvalidateWithError:(id)arg2;	// IMP=0x00000000004653b7
- (void)dealloc;	// IMP=0x0000000000465344
- (id)initWithEngine:(id)arg1 soundEventAsset:(id)arg2 source:(id)arg3 listener:(id)arg4 mixerParameters:(id)arg5 audioSession:(id)arg6 phaseQueue:(id)arg7 outError:(id *)arg8;	// IMP=0x0000000000463d2f
- (id)initWithEngine:(id)arg1 source:(id)arg2 listener:(id)arg3 audioSession:(id)arg4 phaseQueue:(id)arg5;	// IMP=0x0000000000463af1
- (id)initWithSoundEventFactory:(CDUnknownBlockType)arg1 phaseQueue:(id)arg2;	// IMP=0x0000000000463a0d

@end

