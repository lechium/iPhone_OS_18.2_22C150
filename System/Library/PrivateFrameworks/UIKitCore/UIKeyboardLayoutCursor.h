//
//     Generated by classdump-c 4.2.0 (64 bit) (iOS port by DreamDevLost, Updated by Kevin Bradley.)(Debug version compiled Dec 27 2024 14:18:54).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

@class NSArray, NSString, UIAlertController, UIKBTree, UILabel, UILexicon, UIView, UIWindow;

__attribute__((visibility("hidden")))
@interface UIKeyboardLayoutCursor
{
    UIKBTree *_indirectKeyboard;	// 744 = 0x2e8
    UIView *_selectionView;	// 752 = 0x2f0
    NSArray *_keyplaneKeys;	// 760 = 0x2f8
    long long _selectedKeyIndex;	// 768 = 0x300
    _Bool _ignoreEventsUntilPressEnds;	// 776 = 0x308
    UILexicon *_recentInputs;	// 784 = 0x310
    _Bool _disableTouchInput;	// 792 = 0x318
    UIKBTree *_cachedMultitapKeyplane;	// 800 = 0x320
    _Bool _cachedCanMultitap;	// 808 = 0x328
    UILabel *_dictationHelpLabel;	// 816 = 0x330
    _Bool _didVariantDelete;	// 824 = 0x338
    _Bool _isForwardingEvent;	// 825 = 0x339
    int _overridenSelectedKeyType;	// 828 = 0x33c
    struct CGPoint _keyplaneSwitchSelectedKeyFrameCenter;	// 832 = 0x340
    _Bool _selectInitialKey;	// 848 = 0x350
    _Bool _suppressOperations;	// 849 = 0x351
    _Bool _overrideInitialKey;	// 850 = 0x352
    _Bool _shouldConfigureFloatingContentView;	// 851 = 0x353
    _Bool _shouldToggleLetterCaseNext;	// 852 = 0x354
    UIAlertController *_recentInputsAlert;	// 856 = 0x358
    NSString *_keyplaneBeforeDictation;	// 864 = 0x360
    long long _selectedKeyBeforeDictation;	// 872 = 0x368
    unsigned long long _lastSelectedKeyIndex;	// 880 = 0x370
    UIWindow *_focusWindow;	// 888 = 0x378
}

+ (struct CGSize)keyboardSizeForInputMode:(id)arg1 screenTraits:(id)arg2 keyboardType:(long long)arg3;	// IMP=0x0010000000eed5bd
+ (id)carKeyboardNameForKeyboard:(id)arg1 screenTraits:(id)arg2;	// IMP=0x0010000000eed49a
- (void).cxx_destruct;	// IMP=0x0000000000ef7825
@property(nonatomic) __weak UIWindow *focusWindow; // @synthesize focusWindow=_focusWindow;
@property(nonatomic) _Bool shouldToggleLetterCaseNext; // @synthesize shouldToggleLetterCaseNext=_shouldToggleLetterCaseNext;
@property(nonatomic) _Bool shouldConfigureFloatingContentView; // @synthesize shouldConfigureFloatingContentView=_shouldConfigureFloatingContentView;
@property(nonatomic) unsigned long long lastSelectedKeyIndex; // @synthesize lastSelectedKeyIndex=_lastSelectedKeyIndex;
@property(nonatomic) _Bool overrideInitialKey; // @synthesize overrideInitialKey=_overrideInitialKey;
@property(nonatomic) _Bool suppressOperations; // @synthesize suppressOperations=_suppressOperations;
@property(nonatomic) long long selectedKeyBeforeDictation; // @synthesize selectedKeyBeforeDictation=_selectedKeyBeforeDictation;
@property(retain, nonatomic) NSString *keyplaneBeforeDictation; // @synthesize keyplaneBeforeDictation=_keyplaneBeforeDictation;
@property(retain, nonatomic) UIAlertController *recentInputsAlert; // @synthesize recentInputsAlert=_recentInputsAlert;
- (_Bool)isKeyboardRightToLeft;	// IMP=0x0000000000ef7675
- (_Bool)isAppRightToLeft;	// IMP=0x0000000000ef7651
@property(readonly, nonatomic, getter=isSlimLinearKeyboardTV) _Bool slimLinearKeyboardTV;
- (double)defaultCursorAdjustDistance;	// IMP=0x0000000000ef763b
- (id)getRomanAccentVariantsForString:(id)arg1 inputMode:(id)arg2 keyboardVariantIndludes:(int)arg3;	// IMP=0x0000000000ef7628
- (_Bool)_isKeyboardReverseOfAppLayoutDirection;	// IMP=0x0000000000ef7583
- (unsigned long long)_indexOfFirstKeyPassingTest:(CDUnknownBlockType)arg1;	// IMP=0x0000000000ef7428
- (_Bool)_handleMoveWithEvent:(id)arg1;	// IMP=0x0000000000ef72f8
- (_Bool)_isDirectionalHeading:(unsigned long long)arg1;	// IMP=0x0000000000ef72e4
- (void)_moveWithEvent:(id)arg1;	// IMP=0x0000000000ef729a
- (_Bool)_handleWheelChangedWithEvent:(id)arg1;	// IMP=0x0000000000ef7247
- (void)_wheelChangedWithEvent:(id)arg1;	// IMP=0x0000000000ef71fd
- (_Bool)_handleRemoteControlReceivedWithEvent:(id)arg1;	// IMP=0x0000000000ef71a3
- (void)remoteControlReceivedWithEvent:(id)arg1;	// IMP=0x0000000000ef7159
- (_Bool)_handlePresses:(id)arg1 withEvent:(id)arg2;	// IMP=0x0000000000ef6cb6
- (void)pressesCancelled:(id)arg1 withEvent:(id)arg2;	// IMP=0x0000000000ef69c2
- (void)pressesEnded:(id)arg1 withEvent:(id)arg2;	// IMP=0x0000000000ef65c7
- (_Bool)_menuTapShouldStopDictation;	// IMP=0x0000000000ef6535
- (_Bool)_menuTapShouldExitVariants;	// IMP=0x0000000000ef6488
- (void)pressesChanged:(id)arg1 withEvent:(id)arg2;	// IMP=0x0000000000ef6482
- (void)pressesBegan:(id)arg1 withEvent:(id)arg2;	// IMP=0x0000000000ef5fd0
- (void)handleDidFinishDictation:(id)arg1;	// IMP=0x0000000000ef5fbe
- (void)returnToKeyplaneAfterDictation;	// IMP=0x0000000000ef5dde
- (void)switchToDictationKeyplaneWithActivationIdentifier:(id)arg1;	// IMP=0x0000000000ef5a87
- (unsigned long long)getNextKeyplaneIndex:(unsigned long long)arg1;	// IMP=0x0000000000ef57ac
- (_Bool)handleVisualDirectionalInput:(int)arg1;	// IMP=0x0000000000ef4e49
- (_Bool)handleLinearDirectionalInput:(int)arg1;	// IMP=0x0000000000ef4a05
- (void)handleVariantDeleteIfNecessaryForKey:(id)arg1;	// IMP=0x0000000000ef46b6
- (void)clearVariantStateForKey:(id)arg1;	// IMP=0x0000000000ef460a
- (void)takeKeyAction:(id)arg1;	// IMP=0x0000000000ef374c
- (_Bool)canHandlePresses:(id)arg1 withEvent:(id)arg2;	// IMP=0x0000000000ef34d4
- (_Bool)canHandleEvent:(id)arg1;	// IMP=0x0000000000ef34bd
- (id)keyHitTestInSameRowAsCenter:(struct CGPoint)arg1 size:(struct CGSize)arg2;	// IMP=0x0000000000ef30f8
- (long long)targetKeyIndexAtOffset:(struct CGPoint)arg1 fromKey:(id)arg2;	// IMP=0x0000000000ef2d3d
- (long long)targetKeyIndexFromPoint:(struct CGPoint)arg1 inKeys:(id)arg2;	// IMP=0x0000000000ef2ce2
- (long long)targetKeyIndexFromPoint:(struct CGPoint)arg1;	// IMP=0x0000000000ef2cc5
- (void)setHighlightedVariantIndex:(long long)arg1 key:(id)arg2;	// IMP=0x0000000000ef2c29
- (_Bool)refreshSelectedCellIfNecessaryForKey:(id)arg1 animated:(_Bool)arg2;	// IMP=0x0000000000ef2a54
- (_Bool)refreshSelectedCellIfNecessaryForKey:(id)arg1;	// IMP=0x0000000000ef2a3d
- (void)setSelectedKeyIndex:(long long)arg1;	// IMP=0x0000000000ef25bf
- (void)deactivateKey:(id)arg1;	// IMP=0x0000000000ef24f9
- (struct CGRect)selectionFrameForKeyIndex:(long long)arg1;	// IMP=0x0000000000ef23c8
- (_Bool)shouldDeactivateWithoutWindow;	// IMP=0x0000000000ef23aa
- (void)restoreFocusFromEntryPoint:(struct CGPoint)arg1;	// IMP=0x0000000000ef2308
- (void)setCursorLocation:(unsigned long long)arg1;	// IMP=0x0000000000ef2169
- (unsigned long long)cursorLocation;	// IMP=0x0000000000ef1c62
- (unsigned long long)downActionFlagsForKey:(id)arg1;	// IMP=0x0000000000ef1b80
- (int)enabledStateForKey:(id)arg1;	// IMP=0x0000000000ef1ae4
- (int)activeStateForKey:(id)arg1;	// IMP=0x0000000000ef1a44
- (void)showPopupKeyplaneSwitcher;	// IMP=0x0000000000ef184d
- (void)longPressAction;	// IMP=0x0000000000ef1688
- (void)endMultitapForKey:(id)arg1;	// IMP=0x0000000000ef1591
- (_Bool)canMultitap;	// IMP=0x0000000000ef13f8
- (long long)defaultSelectedVariantIndexForKey:(id)arg1 withActions:(unsigned long long)arg2;	// IMP=0x0000000000ef13ce
- (int)stateForCandidateListKey:(id)arg1;	// IMP=0x0000000000ef13c3
- (int)stateForKeyplaneSwitchKey:(id)arg1;	// IMP=0x0000000000ef12b9
- (_Bool)shouldMergeKey:(id)arg1;	// IMP=0x0000000000ef11de
- (_Bool)isKeyplaneDisabledWithName:(id)arg1;	// IMP=0x0000000000ef1058
- (_Bool)shouldToggleKeyplaneWithName:(id)arg1;	// IMP=0x0000000000ef0fe3
- (unsigned long long)targetEdgesForScreenGestureRecognition;	// IMP=0x0000000000ef0fdb
- (void)setDisableTouchInput:(_Bool)arg1;	// IMP=0x0000000000ef0fcb
- (_Bool)diacriticForwardCompose;	// IMP=0x0000000000ef0f7d
- (_Bool)supportsContinuousPath;	// IMP=0x0000000000ef0f56
- (_Bool)isKanaPlane;	// IMP=0x0000000000ef0f12
- (_Bool)isAlphabeticPlane;	// IMP=0x0000000000ef0ec4
- (void)setShift:(_Bool)arg1;	// IMP=0x0000000000ef0e95
- (_Bool)ignoresShiftState;	// IMP=0x0000000000ef0e47
- (_Bool)usesAutoShift;	// IMP=0x0000000000ef0df9
- (id)_keyplaneForKeyplaneProperties;	// IMP=0x0000000000ef0d60
- (_Bool)isPossibleToTypeFast;	// IMP=0x0000000000ef0d58
- (_Bool)supportsEmoji;	// IMP=0x0000000000ef0d50
- (unsigned char)getHandRestRecognizerState;	// IMP=0x0000000000ef0d48
- (_Bool)shouldRetestKey:(id)arg1 slidOffKey:(id)arg2 withKeyplane:(id)arg3;	// IMP=0x0000000000ef0d40
- (_Bool)shouldPreventInputManagerHitTestingForKey:(id)arg1;	// IMP=0x0000000000ef0d38
- (void)setRecentInputs:(id)arg1;	// IMP=0x0000000000ef0cf0
- (void)acceptRecentInputIfNecessary;	// IMP=0x0000000000ef0bb8
- (void)updateRecentInputsKeyIfNecessary;	// IMP=0x0000000000ef0b0b
- (void)didSelectRecentInputString:(id)arg1;	// IMP=0x0000000000ef0992
- (void)alertDidDismiss;	// IMP=0x0000000000ef085b
- (void)showRecentInputsAlert;	// IMP=0x0000000000ef03d8
- (_Bool)shouldMatchCaseForDomainKeys;	// IMP=0x0000000000ef03be
- (void)updateDictationHelpString;	// IMP=0x0000000000eef66e
- (void)updateKeyplaneSwitchEdgeBiases;	// IMP=0x0000000000eef309
- (void)selectInitialKeyIfNecessary;	// IMP=0x0000000000eeedf3
- (_Bool)shouldAllowCurrentKeyplaneReload;	// IMP=0x0000000000eeeda9
- (void)setKeyplaneName:(id)arg1;	// IMP=0x0000000000eeda74
- (void)flushKeyCache:(id)arg1;	// IMP=0x0000000000eeda6e
- (id)cacheTokenForKeyplane:(id)arg1;	// IMP=0x0000000000eed9f4
- (void)setRenderConfig:(id)arg1;	// IMP=0x0000000000eed9b3
- (void)setKeyboardAppearance:(long long)arg1;	// IMP=0x0000000000eed965
- (void)setKeyboardName:(id)arg1 appearance:(long long)arg2;	// IMP=0x0000000000eed866
- (void)showKeyboardWithInputTraits:(id)arg1 screenTraits:(id)arg2 splitTraits:(id)arg3;	// IMP=0x0000000000eed364
- (id)keyViewAnimator;	// IMP=0x0000000000eed27a
- (void)configureFloatingContentViewsIfNeeded;	// IMP=0x0000000000eecdab
- (unsigned long long)variantCountForKey:(id)arg1;	// IMP=0x0000000000eeccfa
@property(readonly, nonatomic) UIKBTree *currentKey;
- (void)runWithSuppressedActions:(CDUnknownBlockType)arg1;	// IMP=0x0000000000eecc5e
- (void)willMoveToWindow:(id)arg1;	// IMP=0x0000000000eecc18
- (void)dealloc;	// IMP=0x0000000000eecbc8
- (id)initWithFrame:(struct CGRect)arg1;	// IMP=0x0000000000eecb08

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
// Preceding property had unknown attributes: ?
// Original attribute string: T@"NSString",?,R,C

@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

