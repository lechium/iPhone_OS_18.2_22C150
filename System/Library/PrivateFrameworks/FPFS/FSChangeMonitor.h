//
//     Generated by classdump-c 4.2.0 (64 bit) (iOS port by DreamDevLost, Updated by Kevin Bradley.)(Debug version compiled Dec 27 2024 14:18:54).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <objc/NSObject.h>

@class FPFSVolume, NSMutableArray, NSURL;
@protocol OS_dispatch_queue, OS_dispatch_source, OS_os_log;

__attribute__((visibility("hidden")))
@interface FSChangeMonitor : NSObject
{
    _Atomic int _resetCount;	// 8 = 0x8
    _Atomic int _suspendCount;	// 12 = 0xc
    struct fpfs_fsevent_stream *_stream;	// 16 = 0x10
    NSObject<OS_dispatch_queue> *_streamQueue;	// 24 = 0x18
    NSObject<OS_dispatch_queue> *_processQueue;	// 32 = 0x20
    NSObject<OS_dispatch_queue> *_delegationQueue;	// 40 = 0x28
    NSObject<OS_dispatch_source> *_fseventsProcessSource;	// 48 = 0x30
    NSMutableArray *_fseventsToProcess;	// 56 = 0x38
    unsigned long long _maxFSEventQueueSize;	// 64 = 0x40
    unsigned long long _fseventProcessBatchSize;	// 72 = 0x48
    _Bool _isCancelled;	// 80 = 0x50
    _Bool _drainEvents;	// 81 = 0x51
    _Bool _isActivated;	// 82 = 0x52
    _Bool _createNoDelay;	// 83 = 0x53
    _Bool _hasMarkSelf;	// 84 = 0x54
    _Bool _optimizeOutOwnEvents;	// 85 = 0x55
    _Bool _isProcessingHistory;	// 86 = 0x56
    FPFSVolume *_volume;	// 88 = 0x58
    NSMutableArray *_subscriptions;	// 96 = 0x60
    NSMutableArray *_pendingBarrierEvents;	// 104 = 0x68
    NSObject<OS_os_log> *_log;	// 112 = 0x70
    _Bool _plannedRescan;	// 120 = 0x78
    NSURL *_barrierFolderURL;	// 128 = 0x80
}

- (void).cxx_destruct;	// IMP=0x00000000000117a3
@property(nonatomic, getter=hasPlannedRescan) _Bool plannedRescan; // @synthesize plannedRescan=_plannedRescan;
@property(retain, nonatomic) NSURL *barrierFolderURL; // @synthesize barrierFolderURL=_barrierFolderURL;
@property(readonly, nonatomic) NSObject<OS_dispatch_queue> *delegationQueue; // @synthesize delegationQueue=_delegationQueue;
- (void)cancel;	// IMP=0x00000000000116bc
- (void)_cancel;	// IMP=0x0000000000011673
- (void)resume;	// IMP=0x000000000001156a
- (void)suspend;	// IMP=0x00000000000114b6
- (void)resetWithReason:(long long)arg1 newFSEventID:(unsigned long long)arg2;	// IMP=0x0000000000011074
- (void)close;	// IMP=0x0000000000010ebb
- (void)_close;	// IMP=0x0000000000010c9d
- (void)flushStream;	// IMP=0x0000000000010c8f
- (id)description;	// IMP=0x0000000000010b30
- (_Bool)handleFSEvent:(id)arg1 indexInBatch:(unsigned int)arg2 batchSize:(unsigned int)arg3;	// IMP=0x000000000000fccc
- (void)deliverBarrierEvents;	// IMP=0x000000000000f960
- (void)processFseventBatch;	// IMP=0x000000000000f199
- (void)queueEvents:(id)arg1 markSelfEncountered:(_Bool)arg2;	// IMP=0x000000000000ef9d
- (_Bool)_queueEvents:(id)arg1 markSelfEncountered:(_Bool)arg2;	// IMP=0x000000000000ec40
- (_Bool)setUpStreamForReason:(long long)arg1 error:(id *)arg2;	// IMP=0x000000000000eb77
- (id)liveFSEventsXPCActivityCriteria;	// IMP=0x000000000000eb6f
- (struct fpfs_fsevent_stream *)_createStreamNamed:(id)arg1 since:(unsigned long long)arg2 criteria:(id)arg3;	// IMP=0x000000000000e394
@property(readonly, nonatomic) _Bool hasBufferedEvents;
@property(readonly, nonatomic) double latency;
- (unsigned long long)oldestStartingPoint;	// IMP=0x000000000000e0fc
- (void)foreachSubscriptionInState:(unsigned long long)arg1 apply:(CDUnknownBlockType)arg2;	// IMP=0x000000000000dddc
- (void)disableSubscription:(id)arg1;	// IMP=0x000000000000dcf4
- (_Bool)activateSubscription:(id)arg1 error:(id *)arg2;	// IMP=0x000000000000dc35
- (_Bool)_activateSubscription:(id)arg1 error:(id *)arg2;	// IMP=0x000000000000da3d
- (id)subscribeToEventsAtPath:(id)arg1 fd:(int)arg2 sinceEventID:(unsigned long long)arg3 streamUUID:(id)arg4 ignoreOwnEvents:(_Bool)arg5 delegate:(id)arg6 purpose:(id)arg7;	// IMP=0x000000000000d8de
- (void)dealloc;	// IMP=0x000000000000d846
- (id)initWithLabel:(id)arg1 workloop:(id)arg2;	// IMP=0x000000000000d2ae
- (id)init;	// IMP=0x000000000000d2a5

@end

