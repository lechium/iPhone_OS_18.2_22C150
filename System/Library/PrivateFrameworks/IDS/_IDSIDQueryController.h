//
//     Generated by classdump-c 4.2.0 (64 bit) (iOS port by DreamDevLost, Updated by Kevin Bradley.)(Debug version compiled Dec 27 2024 14:18:54).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <objc/NSObject.h>

@class NSMapTable, NSMutableDictionary, NSString;
@protocol OS_dispatch_queue, OS_xpc_object;

@interface _IDSIDQueryController : NSObject
{
    NSString *_listenerGUID;	// 8 = 0x8
    NSMutableDictionary *_listeners;	// 16 = 0x10
    NSMutableDictionary *_idStatusCache;	// 24 = 0x18
    NSMutableDictionary *_transactionIDToBlockMap;	// 32 = 0x20
    NSObject<OS_xpc_object> *_connection;	// 40 = 0x28
    NSObject<OS_dispatch_queue> *_connectionQueue;	// 48 = 0x30
    NSObject<OS_dispatch_queue> *_queue;	// 56 = 0x38
    NSString *_serviceToken;	// 64 = 0x40
    NSMapTable *_delegateToInfo;	// 72 = 0x48
    NSMutableDictionary *_listenerIDToServicesMap;	// 80 = 0x50
    id _delegateContext;	// 88 = 0x58
}

+ (id)_createXPCConnectionOnQueue:(id)arg1;	// IMP=0x00100000000f5605
+ (void)initialize;	// IMP=0x00100000000f19d0
- (void).cxx_destruct;	// IMP=0x000000000010c2f0
- (void)ktPeerVerificationResultsUpdated:(id)arg1 forService:(id)arg2;	// IMP=0x000000000010c055
- (void)removeDelegate:(id)arg1 forService:(id)arg2 listenerID:(id)arg3;	// IMP=0x000000000010bd0e
- (void)addDelegate:(id)arg1 forService:(id)arg2 listenerID:(id)arg3 queue:(id)arg4;	// IMP=0x000000000010b7e0
- (_Bool)_flushQueryCacheForService:(id)arg1;	// IMP=0x000000000010b698
- (_Bool)_warmupQueryCacheForService:(id)arg1;	// IMP=0x000000000010b3f6
- (long long)_currentCachedIDStatusForDestination:(id)arg1 service:(id)arg2 listenerID:(id)arg3;	// IMP=0x000000000010b3b2
- (_Bool)_hasCacheForService:(id)arg1;	// IMP=0x000000000010b3a4
- (_Bool)idInfoForDestinations:(id)arg1 service:(id)arg2 preferredFromID:(id)arg3 infoTypes:(unsigned long long)arg4 options:(id)arg5 listenerID:(id)arg6 queue:(id)arg7 completionBlock:(CDUnknownBlockType)arg8;	// IMP=0x000000000010ab4c
- (_Bool)currentRemoteDevicesForDestinations:(id)arg1 service:(id)arg2 preferredFromID:(id)arg3 listenerID:(id)arg4 queue:(id)arg5 completionBlockWithError:(CDUnknownBlockType)arg6;	// IMP=0x000000000010ab2b
- (_Bool)currentRemoteDevicesForDestinations:(id)arg1 service:(id)arg2 preferredFromID:(id)arg3 listenerID:(id)arg4 queue:(id)arg5 completionBlock:(CDUnknownBlockType)arg6;	// IMP=0x000000000010ab0a
- (_Bool)_currentRemoteDevicesForDestinations:(id)arg1 service:(id)arg2 preferredFromID:(id)arg3 listenerID:(id)arg4 queue:(id)arg5 waitForReply:(_Bool)arg6 completionBlock:(CDUnknownBlockType)arg7 completionBlockWithError:(CDUnknownBlockType)arg8;	// IMP=0x0000000000109ee3
- (_Bool)currentIDStatusForDestination:(id)arg1 service:(id)arg2 preferredFromID:(id)arg3 respectExpiry:(_Bool)arg4 listenerID:(id)arg5 queue:(id)arg6 completionBlock:(CDUnknownBlockType)arg7;	// IMP=0x0000000000109d2c
- (_Bool)currentIDStatusForDestinations:(id)arg1 service:(id)arg2 preferredFromID:(id)arg3 respectExpiry:(_Bool)arg4 listenerID:(id)arg5 queue:(id)arg6 completionBlock:(CDUnknownBlockType)arg7;	// IMP=0x0000000000109bdf
- (_Bool)requiredIDStatusForDestination:(id)arg1 service:(id)arg2 preferredFromID:(id)arg3 listenerID:(id)arg4 queue:(id)arg5 completionBlock:(CDUnknownBlockType)arg6;	// IMP=0x00000000001098e5
- (_Bool)requiredIDStatusForDestinations:(id)arg1 service:(id)arg2 preferredFromID:(id)arg3 listenerID:(id)arg4 queue:(id)arg5 completionBlock:(CDUnknownBlockType)arg6;	// IMP=0x00000000001098a4
- (_Bool)refreshIDStatusForDestination:(id)arg1 service:(id)arg2 preferredFromID:(id)arg3 listenerID:(id)arg4 queue:(id)arg5 completionBlock:(CDUnknownBlockType)arg6;	// IMP=0x0000000000109570
- (_Bool)refreshIDStatusForDestinations:(id)arg1 service:(id)arg2 preferredFromID:(id)arg3 listenerID:(id)arg4 forceRefresh:(_Bool)arg5 queue:(id)arg6 completionBlock:(CDUnknownBlockType)arg7;	// IMP=0x0000000000109529
- (_Bool)_sync_currentRemoteDevicesForDestinations:(id)arg1 service:(id)arg2 preferredFromID:(id)arg3 listenerID:(id)arg4 completionBlock:(CDUnknownBlockType)arg5;	// IMP=0x0000000000109509
- (_Bool)_sync_currentIDStatusForDestinations:(id)arg1 service:(id)arg2 preferredFromID:(id)arg3 respectExpiry:(_Bool)arg4 listenerID:(id)arg5 completionBlock:(CDUnknownBlockType)arg6;	// IMP=0x00000000001093bc
- (_Bool)_sync_refreshIDStatusForDestinations:(id)arg1 service:(id)arg2 preferredFromID:(id)arg3 listenerID:(id)arg4 completionBlock:(CDUnknownBlockType)arg5;	// IMP=0x000000000010938c
- (_Bool)_refreshIDStatusForDestinations:(id)arg1 service:(id)arg2 preferredFromID:(id)arg3 listenerID:(id)arg4 allowRefresh:(_Bool)arg5 respectExpiry:(_Bool)arg6 waitForReply:(_Bool)arg7 forceRefresh:(_Bool)arg8 bypassLimit:(_Bool)arg9 queue:(id)arg10 completionBlock:(CDUnknownBlockType)arg11;	// IMP=0x0000000000108fcc
- (void)_idStatusForDestinations:(id)arg1 service:(id)arg2 preferredFromID:(id)arg3 listenerID:(id)arg4 allowRenew:(_Bool)arg5 respectExpiry:(_Bool)arg6 waitForReply:(_Bool)arg7 forceRefresh:(_Bool)arg8 bypassLimit:(_Bool)arg9 completionBlock:(CDUnknownBlockType)arg10;	// IMP=0x00000000001081ae
- (void)flushQueryCache;	// IMP=0x00000000001080d7
- (void)_setCurrentIDStatus:(long long)arg1 forDestination:(id)arg2 service:(id)arg3;	// IMP=0x0000000000107f10
- (void)_callDelegatesForService:(id)arg1 destinationToVerifierResult:(id)arg2;	// IMP=0x0000000000107b82
- (id)_delegateMapForListenerID:(id)arg1 service:(id)arg2;	// IMP=0x0000000000107ac7
- (void)_callDelegatesWithBlock:(CDUnknownBlockType)arg1 delegateMap:(id)arg2;	// IMP=0x0000000000107864
- (void)_purgeIDStatusCache;	// IMP=0x000000000010778c
- (void)_purgeIDStatusCacheAfter:(double)arg1;	// IMP=0x000000000010761c
- (void)_updateCacheWithDictionary:(id)arg1 service:(id)arg2;	// IMP=0x00000000001073df
- (id)_cachedStatusForDestination:(id)arg1 service:(id)arg2;	// IMP=0x000000000010730e
- (id)_cacheForService:(id)arg1;	// IMP=0x00000000001072f8
- (_Bool)_isListenerWithID:(id)arg1 listeningToService:(id)arg2;	// IMP=0x00000000001071d1
- (void)setFromID:(id)arg1;	// IMP=0x0000000000107166
- (void)dealloc;	// IMP=0x000000000010707e
- (id)initWithDelegateContext:(id)arg1 queueController:(id)arg2;	// IMP=0x0000000000106ef1
- (id)init;	// IMP=0x0000000000106e35
- (_Bool)removeListenerID:(id)arg1 forService:(id)arg2;	// IMP=0x000000000004a015
- (void)addListenerID:(id)arg1 forService:(id)arg2;	// IMP=0x0000000000049cc4
- (void)daemonDisconnected;	// IMP=0x0000000000049cb2
- (void)IDQueryCompletedWithFromURI:(id)arg1 idStatusUpdates:(id)arg2 service:(id)arg3 success:(_Bool)arg4 error:(id)arg5;	// IMP=0x00000000000493f7
- (void)_connect;	// IMP=0x00000000000493a9
- (void)_callDelegatesWithBlock:(CDUnknownBlockType)arg1;	// IMP=0x0000000000049134
- (void)removeDelegate:(id)arg1;	// IMP=0x00000000000490bd
- (void)addDelegate:(id)arg1 queue:(id)arg2;	// IMP=0x0000000000048fb1
- (void)___oldDealloc;	// IMP=0x0000000000048f4f
- (id)__sendMessage:(id)arg1 queue:(id)arg2 reply:(CDUnknownBlockType)arg3 failBlock:(CDUnknownBlockType)arg4 waitForReply:(_Bool)arg5;	// IMP=0x00000000000f4fb5
- (void)_requestIDInfoForDestinations:(id)arg1 fromID:(id)arg2 service:(id)arg3 infoTypes:(unsigned long long)arg4 options:(id)arg5 listenerID:(id)arg6 queue:(id)arg7 completionBlock:(CDUnknownBlockType)arg8;	// IMP=0x00000000000f43ea
- (void)_requestRemoteDevicesForDestination:(id)arg1 fromID:(id)arg2 service:(id)arg3 listenerID:(id)arg4 waitForReply:(_Bool)arg5 completionBlock:(CDUnknownBlockType)arg6;	// IMP=0x00000000000f38ba
- (void)_requestStatusForDestinations:(id)arg1 fromID:(id)arg2 service:(id)arg3 waitForReply:(_Bool)arg4 forceRefresh:(_Bool)arg5 bypassLimit:(_Bool)arg6 listenerID:(id)arg7 completionBlock:(CDUnknownBlockType)arg8;	// IMP=0x00000000000f2cd0
- (void)_requestCachedStatusForDestinations:(id)arg1 fromID:(id)arg2 service:(id)arg3 waitForReply:(_Bool)arg4 respectExpiry:(_Bool)arg5 listenerID:(id)arg6 completionBlock:(CDUnknownBlockType)arg7;	// IMP=0x00000000000f231d
- (void)_requestCacheForService:(id)arg1 completionBlock:(CDUnknownBlockType)arg2;	// IMP=0x00000000000f1b62
- (void)_disconnectFromQueryService;	// IMP=0x00000000000f1a5b

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
// Preceding property had unknown attributes: ?
// Original attribute string: T@"NSString",?,R,C

@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

