//
//     Generated by classdump-c 4.2.0 (64 bit) (iOS port by DreamDevLost, Updated by Kevin Bradley.)(Debug version compiled Dec 27 2024 14:18:54).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#pragma mark Named Structures

struct Address {
    struct DynamicString _field1;
};

struct Allocator;

struct ArcRefCount {
    union isa_t _field1;
};

struct DynamicArray<re::SharedPtr<(anonymous namespace)::MCProtocolHandle>> {
    struct Allocator *m_allocator;
    unsigned long long m_capacity;
    unsigned long long m_size;
    unsigned int m_version;
    void *m_data;
};

struct DynamicString {
    struct Allocator *_field1;
    union {
        struct {
            union {
                struct {
                    unsigned int :1;
                    unsigned int :63;
                } _field1;
                unsigned long long _field2;
            } _field1;
            char *_field2;
            unsigned long long _field3;
        } _field1;
        struct {
            unsigned int :1;
            unsigned int :7;
            char _field1[23];
        } _field2;
    } _field2;
};

struct MultipeerProtocolLayer {
    CDUnknownFunctionPointerType *_field1;
    struct ArcRefCount _field2;
    struct Allocator *_field3;
    struct ProtocolLayerListener *_field4;
    struct ObjCObject _field5;
    struct ObjCObject _field6;
    struct Address _field7;
};

struct ObjCObject {
    id _field1;
};

struct ProtocolLayerListener {
    CDUnknownFunctionPointerType *_field1;
};

#pragma mark Typedef'd Structures

// Template types
typedef struct DynamicArray<re::SharedPtr<(anonymous namespace)::MCProtocolHandle>> {
    struct Allocator *m_allocator;
    unsigned long long m_capacity;
    unsigned long long m_size;
    unsigned int m_version;
    void *m_data;
} DynamicArray_2debbf54;

#pragma mark Named Unions

union isa_t {
    void *_field1;
};

