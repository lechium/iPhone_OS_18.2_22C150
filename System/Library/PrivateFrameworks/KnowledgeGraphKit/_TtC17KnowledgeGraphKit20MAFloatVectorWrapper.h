//
//     Generated by classdump-c 4.2.0 (64 bit) (iOS port by DreamDevLost, Updated by Kevin Bradley.)(Debug version compiled Dec 27 2024 14:18:54).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <objc/NSObject.h>

@class MISSING_TYPE, NSString;

@interface _TtC17KnowledgeGraphKit20MAFloatVectorWrapper : NSObject
{
    MISSING_TYPE *_floatVector;	// 8 = 0x8
}

+ (id)repeatingFloat:(float)arg1 count:(long long)arg2;	// IMP=0x001000000000b580
+ (id)onesOfCount:(long long)arg1;	// IMP=0x001000000000b530
+ (id)zerosOfCount:(long long)arg1;	// IMP=0x001000000000b4d0
- (void).cxx_destruct;	// IMP=0x000000000000b100
- (id)init;	// IMP=0x000000000000b080
- (id)initWithArray:(id)arg1;	// IMP=0x000000000000afd0
- (id)initWithFloats:(const float *)arg1 count:(long long)arg2;	// IMP=0x000000000000b440
- (id)mutableCopyWithZone:(void *)arg1;	// IMP=0x000000000000b680
- (id)copyWithZone:(void *)arg1;	// IMP=0x000000000000b5f0
- (id)naturalLogarithmIfPositive;	// IMP=0x000000000000ccc0
- (id)naturalLogarithm;	// IMP=0x000000000000caf0
@property(nonatomic, readonly) NSString *debugDescription;
@property(nonatomic, readonly) NSString *description;
- (id)data;	// IMP=0x000000000000c870
- (id)array;	// IMP=0x000000000000c6d0
- (float)standardDeviation;	// IMP=0x000000000000c670
- (float)mean;	// IMP=0x000000000000c4d0
- (float)sumOfSquares;	// IMP=0x000000000000c3b0
- (float)sum;	// IMP=0x000000000000c330
@property(nonatomic, readonly) long long count;
- (id)sliceFromStart:(long long)arg1 toEnd:(long long)arg2;	// IMP=0x000000000000c220
- (float)dotProductWithWrapper:(id)arg1;	// IMP=0x000000000000c070
- (id)vectorByElementwiseRaisingToExponent:(float)arg1;	// IMP=0x000000000000bf50
- (id)vectorByElementwiseMultiplyingByWrapper:(id)arg1;	// IMP=0x000000000000be00
- (id)vectorByDividingByScalar:(float)arg1;	// IMP=0x000000000000bcb0
- (id)vectorByMultiplyingByScalar:(float)arg1;	// IMP=0x000000000000bbb0
- (id)vectorByAddingScalar:(float)arg1;	// IMP=0x000000000000ba90
- (id)vectorBySubtractingScalar:(float)arg1;	// IMP=0x000000000000ba30
- (id)vectorByAddingVector:(id)arg1;	// IMP=0x000000000000b910
- (id)vectorBySubtractingVector:(id)arg1;	// IMP=0x000000000000b890
- (float)floatAtIndex:(long long)arg1;	// IMP=0x000000000000b810
- (_Bool)isApproximatelyEqualTo:(id)arg1 epsilon:(float)arg2;	// IMP=0x000000000000f0a0
- (_Bool)isApproximatelyEqualTo:(id)arg1;	// IMP=0x000000000000efb0
@property(nonatomic, readonly) long long hash;
- (_Bool)isEqual:(id)arg1;	// IMP=0x000000000000f200

@end

