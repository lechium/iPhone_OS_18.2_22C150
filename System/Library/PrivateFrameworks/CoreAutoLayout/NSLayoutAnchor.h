//
//     Generated by classdump-c 4.2.0 (64 bit) (iOS port by DreamDevLost, Updated by Kevin Bradley.)(Debug version compiled Dec 27 2024 14:18:54).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <objc/NSObject.h>

@class NSISVariable, NSString;

@interface NSLayoutAnchor : NSObject
{
    id _referenceItem;	// 8 = 0x8
    long long _attr;	// 16 = 0x10
    NSISVariable *_variable;	// 24 = 0x18
    NSString *_name;	// 32 = 0x20
    id _cachedReferenceItems;	// 40 = 0x28
    id _reserved;	// 48 = 0x30
    unsigned int _type:2;	// 56 = 0x38
    unsigned int _reserved3:30;	// 56 = 0x38
}

+ (id)anchorNamed:(id)arg1 inItem:(id)arg2 symbolicAttribute:(long long)arg3;	// IMP=0x001000000002f62c
+ (id)anchorNamed:(id)arg1 inItem:(id)arg2;	// IMP=0x001000000002f617
+ (id)anchorWithName:(id)arg1 forReferenceView:(id)arg2 symbolicAttribute:(long long)arg3;	// IMP=0x001000000002f605
+ (id)anchorWithName:(id)arg1 forReferenceView:(id)arg2;	// IMP=0x001000000002f5f3
+ (id)layoutAnchorWithName:(id)arg1 forReferenceView:(id)arg2;	// IMP=0x001000000002f5e1
+ (id)anchorWithItem:(id)arg1 attribute:(long long)arg2;	// IMP=0x001000000002f316
+ (id)layoutAnchorWithItem:(id)arg1 attribute:(long long)arg2;	// IMP=0x001000000002f304
+ (id)_anchorForItem:(id)arg1 attribute:(long long)arg2;	// IMP=0x001000000002ef28
- (id)constraintLessThanOrEqualToAnchor:(id)arg1;	// IMP=0x0000000000031845
- (id)constraintGreaterThanOrEqualToAnchor:(id)arg1;	// IMP=0x00000000000317fd
- (id)constraintEqualToAnchor:(id)arg1;	// IMP=0x00000000000317b8
- (id)constraintLessThanOrEqualToAnchor:(id)arg1 constant:(double)arg2;	// IMP=0x000000000003175c
- (id)constraintGreaterThanOrEqualToAnchor:(id)arg1 constant:(double)arg2;	// IMP=0x0000000000031702
- (id)constraintEqualToAnchor:(id)arg1 constant:(double)arg2;	// IMP=0x00000000000316ab
- (long long)_constraintAttribute;	// IMP=0x00000000000316a1
- (id)_constraintItem;	// IMP=0x0000000000031697
- (_Bool)nsli_lowerIntoExpression:(id)arg1 withCoefficient:(double)arg2 forConstraint:(id)arg3;	// IMP=0x000000000003107f
- (id)description;	// IMP=0x0000000000030e7e
- (id)_referencingConstraints;	// IMP=0x0000000000030cb0
- (id)constraintsAffectingLayout;	// IMP=0x00000000000309fc
- (_Bool)hasAmbiguousLayout;	// IMP=0x000000000003087c
- (double)_valueInEngine:(id)arg1;	// IMP=0x00000000000306ee
- (id)_equationDescriptionLegendEntries;	// IMP=0x000000000003037c
- (id)_equationDescriptionInParent;	// IMP=0x0000000000030246
- (id)equationDescription;	// IMP=0x000000000003023e
- (_Bool)isCompatibleWithAnchor:(id)arg1;	// IMP=0x00000000000301af
- (_Bool)validateOtherAttribute:(long long)arg1;	// IMP=0x0000000000030120
- (id)_referencedLayoutItems;	// IMP=0x00000000000300be
- (void)_accumulateReferenceLayoutItemsIntoTable:(id)arg1;	// IMP=0x000000000002fe53
- (id)_expressionInContext:(CDStruct_1b4a36b4)arg1;	// IMP=0x000000000002f9e4
- (id)_variableName;	// IMP=0x000000000002f920
- (id)_referenceItem;	// IMP=0x000000000002f869
- (id)_referenceView;	// IMP=0x000000000002f857
- (id)initWithIndependentVariableName:(id)arg1 item:(id)arg2 symbolicAttribute:(long long)arg3;	// IMP=0x000000000002f728
- (long long)_proxiedAttribute;	// IMP=0x000000000002f52a
- (id)_proxiedItem;	// IMP=0x000000000002f473
- (id)initWithItem:(id)arg1 attribute:(long long)arg2;	// IMP=0x000000000002f34a
- (id)item;	// IMP=0x000000000002f2fa
- (id)anchorWithName:(id)arg1;	// IMP=0x000000000002f2a8
- (id)anchorWithName:(id)arg1 referenceItem:(id)arg2 symbolicAttribute:(long long)arg3;	// IMP=0x000000000002f22b
- (id)name;	// IMP=0x000000000002f1b4
- (id)_expressionInDefaultContextWithEngine:(id)arg1;	// IMP=0x000000000002eef1
- (id)_constituentAnchors;	// IMP=0x000000000002ece1
- (id)_nearestAncestorLayoutItem;	// IMP=0x000000000002eb16
- (long long)_anchorType;	// IMP=0x000000000002eb09
- (id)initWithAnchor:(id)arg1;	// IMP=0x000000000002e902
- (id)copyWithZone:(struct _NSZone *)arg1;	// IMP=0x000000000002e8b5
- (unsigned long long)hash;	// IMP=0x000000000002e7f4
- (_Bool)isEqual:(id)arg1;	// IMP=0x000000000002e620
- (void)encodeWithCoder:(id)arg1;	// IMP=0x000000000002e4eb
- (id)initWithCoder:(id)arg1;	// IMP=0x000000000002e228
- (void)dealloc;	// IMP=0x000000000002e1c4
- (id)initWithName:(id)arg1 referenceItem:(id)arg2 symbolicAttribute:(long long)arg3;	// IMP=0x000000000002e154
- (id)init;	// IMP=0x000000000002e13b
- (id)ruleLessThanOrEqualToAnchor:(id)arg1 constant:(double)arg2 priority:(float)arg3 identifier:(id)arg4;	// IMP=0x00000000000059b2
- (id)ruleGreaterThanOrEqualToAnchor:(id)arg1 constant:(double)arg2 priority:(float)arg3 identifier:(id)arg4;	// IMP=0x0000000000005998
- (id)ruleEqualToAnchor:(id)arg1 constant:(double)arg2 priority:(float)arg3 identifier:(id)arg4;	// IMP=0x000000000000597e
- (id)ruleLessThanOrEqualToAnchor:(id)arg1 constant:(double)arg2;	// IMP=0x0000000000005964
- (id)ruleGreaterThanOrEqualToAnchor:(id)arg1 constant:(double)arg2;	// IMP=0x000000000000594a
- (id)ruleEqualToAnchor:(id)arg1 constant:(double)arg2;	// IMP=0x0000000000005930
- (id)ruleLessThanOrEqualToAnchor:(id)arg1;	// IMP=0x00000000000058a4
- (id)ruleGreaterThanOrEqualToAnchor:(id)arg1;	// IMP=0x000000000000581a
- (id)ruleEqualToAnchor:(id)arg1;	// IMP=0x0000000000005793
- (id)observableValueInItem:(id)arg1;	// IMP=0x0000000000032422
- (double)valueInItem:(id)arg1;	// IMP=0x000000000003232e

@end

