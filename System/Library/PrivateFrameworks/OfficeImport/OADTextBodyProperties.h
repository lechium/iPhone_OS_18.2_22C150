//
//     Generated by classdump-c 4.2.0 (64 bit) (iOS port by DreamDevLost, Updated by Kevin Bradley.)(Debug version compiled Dec 27 2024 14:18:54).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

@class OADTextBodyAutoFit, OADTextWarp;

__attribute__((visibility("hidden")))
@interface OADTextBodyProperties
{
    OADTextBodyAutoFit *mAutoFit;	// 24 = 0x18
    OADTextWarp *mTextWarp;	// 32 = 0x20
    float mTopInset;	// 40 = 0x28
    float mLeftInset;	// 44 = 0x2c
    float mBottomInset;	// 48 = 0x30
    float mRightInset;	// 52 = 0x34
    float mRotation;	// 56 = 0x38
    float mColumnSpacing;	// 60 = 0x3c
    unsigned short mColumnCount;	// 64 = 0x40
    unsigned short mTextBodyId;	// 66 = 0x42
    unsigned char mTextAnchorType;	// 68 = 0x44
    unsigned char mFlowType;	// 69 = 0x45
    unsigned char mWrapType;	// 70 = 0x46
    unsigned char mVerticalOverflowType;	// 71 = 0x47
    unsigned char mHorizontalOverflowType;	// 72 = 0x48
    unsigned int mRepectFirstLastParagraphSpacing:1;	// 73 = 0x49
    unsigned int mIsUpright:1;	// 73 = 0x49
    unsigned int mIsAnchorCenter:1;	// 73 = 0x49
    unsigned int mIsLeftToRightColumns:1;	// 73 = 0x49
    unsigned int mHasVerticalOverflowType:1;	// 73 = 0x49
    unsigned int mHasHorizontalOverflowType:1;	// 73 = 0x49
    unsigned int mHasTextBodyId:1;	// 73 = 0x49
    unsigned int mHasFlowType:1;	// 73 = 0x49
    unsigned int mHasWrapType:1;	// 74 = 0x4a
    unsigned int mHasTextAnchorType:1;	// 74 = 0x4a
    unsigned int mHasIsAnchorCenter:1;	// 74 = 0x4a
    unsigned int mHasIsUpright:1;	// 74 = 0x4a
    unsigned int mHasRotation:1;	// 74 = 0x4a
    unsigned int mHasColumnCount:1;	// 74 = 0x4a
    unsigned int mHasColumnSpacing:1;	// 74 = 0x4a
    unsigned int mHasIsLeftToRightColumns:1;	// 74 = 0x4a
    unsigned int mHasRepectFirstLastParagraphSpacing:1;	// 75 = 0x4b
    unsigned int mHasTopInset:1;	// 75 = 0x4b
    unsigned int mHasLeftInset:1;	// 75 = 0x4b
    unsigned int mHasRightInset:1;	// 75 = 0x4b
    unsigned int mHasBottomInset:1;	// 75 = 0x4b
}

+ (id)defaultEscherWordArtProperties;	// IMP=0x0060000000152a3c
+ (id)defaultProperties;	// IMP=0x006000000001f73b
- (void).cxx_destruct;	// IMP=0x0000000000329a3a
- (id)description;	// IMP=0x00000000003299fc
- (_Bool)isEqual:(id)arg1;	// IMP=0x0000000000329099
- (unsigned long long)hash;	// IMP=0x0000000000328e6c
- (void)removeUnnecessaryOverrides;	// IMP=0x000000000002e6e6
- (void)fixPropertiesForChangingParentPreservingEffectiveValues:(id)arg1;	// IMP=0x00000000003281cd
- (void)setRotation:(float)arg1;	// IMP=0x000000000001fbf7
- (float)rotation;	// IMP=0x000000000002f980
- (_Bool)hasRotation;	// IMP=0x000000000002f95a
- (void)setIsUpright:(_Bool)arg1;	// IMP=0x000000000001fbd2
- (_Bool)isUpright;	// IMP=0x000000000002f917
- (_Bool)hasIsUpright;	// IMP=0x000000000002f8f1
- (void)setTextAnchorType:(unsigned char)arg1;	// IMP=0x000000000001fbb7
- (unsigned char)textAnchorType;	// IMP=0x000000000002f8b2
- (_Bool)hasTextAnchorType;	// IMP=0x000000000002f88c
- (void)setIsAnchorCenter:(_Bool)arg1;	// IMP=0x000000000001fb91
- (_Bool)isAnchorCenter;	// IMP=0x000000000002f848
- (_Bool)hasIsAnchorCenter;	// IMP=0x000000000002f822
- (_Bool)isWarped;	// IMP=0x0000000000327edc
- (void)setTextWarp:(id)arg1;	// IMP=0x000000000001fb7d
- (id)textWarp;	// IMP=0x000000000015319c
- (_Bool)hasTextWarp;	// IMP=0x000000000002f7fb
- (void)setTextBodyId:(int)arg1;	// IMP=0x0000000000327ec0
- (int)textBodyId;	// IMP=0x0000000000327eaf
- (_Bool)hasTextBodyId;	// IMP=0x000000000002f7e6
- (void)setHorizontalOverflowType:(unsigned char)arg1;	// IMP=0x000000000001fb62
- (unsigned char)horizontalOverflowType;	// IMP=0x0000000000327e70
- (_Bool)hasHorizontalOverflowType;	// IMP=0x0000000000327e4a
- (void)setVerticalOverflowType:(unsigned char)arg1;	// IMP=0x000000000001fb47
- (unsigned char)verticalOverflowType;	// IMP=0x000000000002f7a7
- (_Bool)hasVerticalOverflowType;	// IMP=0x000000000002f781
- (void)setWrapType:(unsigned char)arg1;	// IMP=0x000000000001fb2c
- (unsigned char)wrapType;	// IMP=0x000000000002f742
- (_Bool)hasWrapType;	// IMP=0x000000000002f71c
- (void)setFlowType:(unsigned char)arg1;	// IMP=0x000000000001fb11
- (unsigned char)flowType;	// IMP=0x000000000002f6dd
- (_Bool)hasFlowType;	// IMP=0x000000000002f6b7
- (void)setAutoFit:(id)arg1;	// IMP=0x000000000001fafd
- (id)autoFit;	// IMP=0x000000000002f5ed
- (_Bool)hasAutoFit;	// IMP=0x000000000002f5c6
- (void)setIsLeftToRightColumns:(_Bool)arg1;	// IMP=0x000000000001fa9c
- (_Bool)isLeftToRightColumns;	// IMP=0x000000000002f582
- (_Bool)hasIsLeftToRightColumns;	// IMP=0x000000000002f55c
- (void)setColumnSpacing:(float)arg1;	// IMP=0x000000000001fa7f
- (float)columnSpacing;	// IMP=0x000000000002f513
- (_Bool)hasColumnSpacing;	// IMP=0x000000000002f4ed
- (void)setColumnCount:(int)arg1;	// IMP=0x000000000001fa63
- (int)columnCount;	// IMP=0x000000000002f4ae
- (_Bool)hasColumnCount;	// IMP=0x000000000002f488
- (void)setRightInset:(float)arg1;	// IMP=0x000000000001fa46
- (float)rightInset;	// IMP=0x000000000002f3d0
- (void)setBottomInset:(float)arg1;	// IMP=0x000000000001fa29
- (float)bottomInset;	// IMP=0x000000000002f43f
- (void)setLeftInset:(float)arg1;	// IMP=0x000000000001fa0c
- (float)leftInset;	// IMP=0x000000000002f361
- (void)setTopInset:(float)arg1;	// IMP=0x000000000001f9ef
- (float)topInset;	// IMP=0x000000000002f2f2
- (_Bool)hasBottomInset;	// IMP=0x000000000002f419
- (_Bool)hasRightInset;	// IMP=0x000000000002f3aa
- (_Bool)hasLeftInset;	// IMP=0x000000000002f33b
- (_Bool)hasTopInset;	// IMP=0x000000000002f2cc
- (void)setRespectLastFirstLineSpacing:(_Bool)arg1;	// IMP=0x000000000001f9cc
- (_Bool)respectLastFirstLineSpacing;	// IMP=0x0000000000327e09
- (_Bool)hasRespectLastFirstLineSpacing;	// IMP=0x000000000002f2a6
- (id)initWithDefaults;	// IMP=0x000000000001f76b
- (id)init;	// IMP=0x000000000001f70c

@end

