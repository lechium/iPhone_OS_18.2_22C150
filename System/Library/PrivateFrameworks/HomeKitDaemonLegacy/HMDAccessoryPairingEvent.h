//
//     Generated by classdump-c 4.2.0 (64 bit) (iOS port by DreamDevLost, Updated by Kevin Bradley.)(Debug version compiled Dec 27 2024 14:18:54).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <HomeKitMetrics/HMMHomeLogEvent.h>

@class HMDAccessory, HMDAccessoryMetricVendorDetails, HMDAccessoryPairingLogEventStateManager, NSDate, NSDictionary, NSError, NSString, NSUUID;

__attribute__((visibility("hidden")))
@interface HMDAccessoryPairingEvent : HMMHomeLogEvent
{
    struct os_unfair_lock_s _lock;	// 8 = 0x8
    _Bool _addOperation;	// 12 = 0xc
    _Bool _addViaWAC;	// 13 = 0xd
    _Bool _wacLegacy;	// 14 = 0xe
    _Bool _usedWiFiPPSK;	// 15 = 0xf
    _Bool _usedOwnershipProof;	// 16 = 0x10
    _Bool _networkRouterAdd;	// 17 = 0x11
    _Bool _networkRouterReplace;	// 18 = 0x12
    _Bool _firstHAPAccessoryInHome;	// 19 = 0x13
    _Bool _firstHAPAccessoryInAnyHome;	// 20 = 0x14
    _Bool _threadAccessory;	// 21 = 0x15
    _Bool _btCommissioned;	// 22 = 0x16
    _Bool _requiresMatterCustomCommissioningFlow;	// 23 = 0x17
    _Bool _isPrimaryResidentOnline;	// 24 = 0x18
    _Bool _hasResidentInHome;	// 25 = 0x19
    _Bool _accessorySupportsWoL;	// 26 = 0x1a
    _Bool _submitting;	// 27 = 0x1b
    _Bool _retry;	// 28 = 0x1c
    unsigned int _threadCapabilities;	// 32 = 0x20
    unsigned int _threadStatus;	// 36 = 0x24
    int _btAudioTask;	// 40 = 0x28
    int _btLoad;	// 44 = 0x2c
    int _btNonAudioTask;	// 48 = 0x30
    NSDate *_endDate;	// 56 = 0x38
    NSUUID *_accessoryUUID;	// 64 = 0x40
    NSString *_accessoryServerIdentifier;	// 72 = 0x48
    NSString *_accessoryAddRequestIdentifier;	// 80 = 0x50
    HMDAccessory *_pairedAccessory;	// 88 = 0x58
    NSString *_accessoryModel;	// 96 = 0x60
    NSString *_accessoryManufacturer;	// 104 = 0x68
    NSString *_accessoryCategory;	// 112 = 0x70
    NSString *_primaryServiceType;	// 120 = 0x78
    HMDAccessoryMetricVendorDetails *_vendorDetailsForReporting;	// 128 = 0x80
    long long _linkType;	// 136 = 0x88
    long long _communicationProtocol;	// 144 = 0x90
    long long _certificationStatus;	// 152 = 0x98
    unsigned long long _authMethod;	// 160 = 0xa0
    long long _retryCount;	// 168 = 0xa8
    NSError *_threadCommissioningError;	// 176 = 0xb0
    double _threadCommissioningDuration;	// 184 = 0xb8
    long long _hmdAccessoryPairingEventResidentConfirmation;	// 192 = 0xc0
    NSDate *_residentConfirmationTimeStarted;	// 200 = 0xc8
    double _residentConfirmationDurationInSeconds;	// 208 = 0xd0
    NSString *_lastAccessoryPairingState;	// 216 = 0xd8
    NSString *_longestPairingState;	// 224 = 0xe0
    double _longestPairingProgressStateDurationInMilliseconds;	// 232 = 0xe8
    NSString *_categoryType;	// 240 = 0xf0
    NSString *_productNumber;	// 248 = 0xf8
    NSDictionary *_matterMetrics;	// 256 = 0x100
    NSString *_matterSoftwareVersionString;	// 264 = 0x108
    unsigned long long _pairingUIState;	// 272 = 0x110
    unsigned long long _recoveryType;	// 280 = 0x118
    unsigned long long _previousRecoveryType;	// 288 = 0x120
    HMDAccessoryPairingLogEventStateManager *_logEventStateManager;	// 296 = 0x128
    unsigned long long _matterAccessoryPairingStep;	// 304 = 0x130
    NSString *_matterAccessorySourceErrorDomain;	// 312 = 0x138
    NSDictionary *_mtrMetrics;	// 320 = 0x140
    unsigned long long _userPrivilege;	// 328 = 0x148
    NSDictionary *_vendorDetailsForCoreAnalytics;	// 336 = 0x150
    NSString *_appIdentifier;	// 344 = 0x158
}

+ (id)logCategory;	// IMP=0x00100000005824da
+ (id)removingAccessory:(id)arg1 hapAccessory:(id)arg2;	// IMP=0x0010000000582400
+ (id)pairingAccessory:(id)arg1 home:(id)arg2 appIdentifier:(id)arg3 retry:(_Bool)arg4;	// IMP=0x001000000058232a
+ (id)pairingAccessoryWithDescription:(id)arg1 home:(id)arg2;	// IMP=0x00100000005822b8
- (void).cxx_destruct;	// IMP=0x0000000000582099
@property(nonatomic) _Bool retry; // @synthesize retry=_retry;
@property(copy, nonatomic) NSString *appIdentifier; // @synthesize appIdentifier=_appIdentifier;
@property(retain, nonatomic) NSDictionary *vendorDetailsForCoreAnalytics; // @synthesize vendorDetailsForCoreAnalytics=_vendorDetailsForCoreAnalytics;
@property(readonly, nonatomic) unsigned long long userPrivilege; // @synthesize userPrivilege=_userPrivilege;
@property(nonatomic, getter=isSubmitting) _Bool submitting; // @synthesize submitting=_submitting;
@property(retain, nonatomic) NSDictionary *mtrMetrics; // @synthesize mtrMetrics=_mtrMetrics;
@property(retain, nonatomic) NSString *matterAccessorySourceErrorDomain; // @synthesize matterAccessorySourceErrorDomain=_matterAccessorySourceErrorDomain;
@property(nonatomic) unsigned long long matterAccessoryPairingStep; // @synthesize matterAccessoryPairingStep=_matterAccessoryPairingStep;
@property(readonly, nonatomic) HMDAccessoryPairingLogEventStateManager *logEventStateManager; // @synthesize logEventStateManager=_logEventStateManager;
@property(nonatomic) unsigned long long previousRecoveryType; // @synthesize previousRecoveryType=_previousRecoveryType;
@property(nonatomic) unsigned long long recoveryType; // @synthesize recoveryType=_recoveryType;
@property(nonatomic) unsigned long long pairingUIState; // @synthesize pairingUIState=_pairingUIState;
@property(readonly) int btNonAudioTask; // @synthesize btNonAudioTask=_btNonAudioTask;
@property(readonly) int btLoad; // @synthesize btLoad=_btLoad;
@property(readonly) int btAudioTask; // @synthesize btAudioTask=_btAudioTask;
@property(readonly, nonatomic) _Bool accessorySupportsWoL; // @synthesize accessorySupportsWoL=_accessorySupportsWoL;
@property(readonly, nonatomic) _Bool hasResidentInHome; // @synthesize hasResidentInHome=_hasResidentInHome;
@property(readonly, nonatomic) _Bool isPrimaryResidentOnline; // @synthesize isPrimaryResidentOnline=_isPrimaryResidentOnline;
@property(copy, nonatomic) NSString *matterSoftwareVersionString; // @synthesize matterSoftwareVersionString=_matterSoftwareVersionString;
@property(copy, nonatomic) NSDictionary *matterMetrics; // @synthesize matterMetrics=_matterMetrics;
@property(readonly, nonatomic) _Bool requiresMatterCustomCommissioningFlow; // @synthesize requiresMatterCustomCommissioningFlow=_requiresMatterCustomCommissioningFlow;
@property(readonly, nonatomic) NSString *productNumber; // @synthesize productNumber=_productNumber;
@property(readonly, nonatomic) NSString *categoryType; // @synthesize categoryType=_categoryType;
@property double longestPairingProgressStateDurationInMilliseconds; // @synthesize longestPairingProgressStateDurationInMilliseconds=_longestPairingProgressStateDurationInMilliseconds;
@property(retain, nonatomic) NSString *longestPairingState; // @synthesize longestPairingState=_longestPairingState;
@property(retain, nonatomic) NSString *lastAccessoryPairingState; // @synthesize lastAccessoryPairingState=_lastAccessoryPairingState;
@property(readonly, nonatomic) double residentConfirmationDurationInSeconds; // @synthesize residentConfirmationDurationInSeconds=_residentConfirmationDurationInSeconds;
@property(readonly, nonatomic) NSDate *residentConfirmationTimeStarted; // @synthesize residentConfirmationTimeStarted=_residentConfirmationTimeStarted;
@property(nonatomic) long long hmdAccessoryPairingEventResidentConfirmation; // @synthesize hmdAccessoryPairingEventResidentConfirmation=_hmdAccessoryPairingEventResidentConfirmation;
@property unsigned int threadStatus; // @synthesize threadStatus=_threadStatus;
@property unsigned int threadCapabilities; // @synthesize threadCapabilities=_threadCapabilities;
@property(nonatomic) double threadCommissioningDuration; // @synthesize threadCommissioningDuration=_threadCommissioningDuration;
@property(copy, nonatomic) NSError *threadCommissioningError; // @synthesize threadCommissioningError=_threadCommissioningError;
@property(getter=isBTCommissioned) _Bool btCommissioned; // @synthesize btCommissioned=_btCommissioned;
@property(getter=isThreadAccessory) _Bool threadAccessory; // @synthesize threadAccessory=_threadAccessory;
@property long long retryCount; // @synthesize retryCount=_retryCount;
@property(getter=isFirstHAPAccessoryInAnyHome) _Bool firstHAPAccessoryInAnyHome; // @synthesize firstHAPAccessoryInAnyHome=_firstHAPAccessoryInAnyHome;
@property(getter=isFirstHAPAccessoryInHome) _Bool firstHAPAccessoryInHome; // @synthesize firstHAPAccessoryInHome=_firstHAPAccessoryInHome;
@property(getter=isNetworkRouterReplace) _Bool networkRouterReplace; // @synthesize networkRouterReplace=_networkRouterReplace;
@property(getter=isNetworkRouterAdd) _Bool networkRouterAdd; // @synthesize networkRouterAdd=_networkRouterAdd;
@property(getter=didUseOwnershipProof) _Bool usedOwnershipProof; // @synthesize usedOwnershipProof=_usedOwnershipProof;
@property(getter=didUseWiFiPPSK) _Bool usedWiFiPPSK; // @synthesize usedWiFiPPSK=_usedWiFiPPSK;
@property unsigned long long authMethod; // @synthesize authMethod=_authMethod;
@property(getter=isWacLegacy) _Bool wacLegacy; // @synthesize wacLegacy=_wacLegacy;
@property(getter=isAddViaWAC) _Bool addViaWAC; // @synthesize addViaWAC=_addViaWAC;
@property(readonly, nonatomic, getter=isAddOperation) _Bool addOperation; // @synthesize addOperation=_addOperation;
@property long long certificationStatus; // @synthesize certificationStatus=_certificationStatus;
@property long long communicationProtocol; // @synthesize communicationProtocol=_communicationProtocol;
@property long long linkType; // @synthesize linkType=_linkType;
@property(retain, nonatomic) HMDAccessoryMetricVendorDetails *vendorDetailsForReporting; // @synthesize vendorDetailsForReporting=_vendorDetailsForReporting;
@property(retain, nonatomic) NSString *primaryServiceType; // @synthesize primaryServiceType=_primaryServiceType;
@property(retain, nonatomic) NSString *accessoryCategory; // @synthesize accessoryCategory=_accessoryCategory;
@property(retain, nonatomic) NSString *accessoryManufacturer; // @synthesize accessoryManufacturer=_accessoryManufacturer;
@property(retain, nonatomic) NSString *accessoryModel; // @synthesize accessoryModel=_accessoryModel;
@property(retain) HMDAccessory *pairedAccessory; // @synthesize pairedAccessory=_pairedAccessory;
@property(retain, nonatomic) NSString *accessoryAddRequestIdentifier; // @synthesize accessoryAddRequestIdentifier=_accessoryAddRequestIdentifier;
@property(retain, nonatomic) NSString *accessoryServerIdentifier; // @synthesize accessoryServerIdentifier=_accessoryServerIdentifier;
@property(retain, nonatomic) NSUUID *accessoryUUID; // @synthesize accessoryUUID=_accessoryUUID;
- (id)residentConfirmationToString:(long long)arg1;	// IMP=0x00000000005818e7
- (void)updateResidentConfirmationDurationWithConfirmation:(long long)arg1;	// IMP=0x000000000058185d
@property(readonly, nonatomic) unsigned long long coreAnalyticsEventOptions;
@property(readonly, copy, nonatomic) NSDictionary *coreAnalyticsEventDictionary;
@property(readonly, copy, nonatomic) NSString *coreAnalyticsEventName;
- (void)prepareForObservation;	// IMP=0x000000000057f815
@property(readonly) NSDate *endDate; // @synthesize endDate=_endDate;
- (void)markEndTime;	// IMP=0x000000000057f72f
- (_Bool)_isMatterAccessory;	// IMP=0x000000000057f71a
@property(readonly, nonatomic, getter=isMatterAccessory) _Bool matterAccessory;
- (void)_updateThreadPropertiesWithPairedAccessory:(id)arg1;	// IMP=0x000000000057f65a
- (void)updateEventPropertiesWithHAPAccessory:(id)arg1;	// IMP=0x000000000057f20a
- (void)updateEventPropertiesWithPairedAccessory:(id)arg1;	// IMP=0x000000000057f076
- (void)pairedToServer:(id)arg1 certificationStatus:(long long)arg2 addedViaWAC:(_Bool)arg3 legacyWAC:(_Bool)arg4;	// IMP=0x000000000057ee03
- (void)setAuthenticationMethod:(unsigned long long)arg1;	// IMP=0x000000000057edf1
- (void)setAddedViaWAC:(_Bool)arg1;	// IMP=0x000000000057eddf
- (id)initWithAccessoryDescription:(id)arg1 home:(id)arg2;	// IMP=0x000000000057e43c
- (id)initWithUnpairedAccessory:(id)arg1 pairedAccessory:(id)arg2 hapAccessory:(id)arg3 appIdentifier:(id)arg4 retry:(_Bool)arg5 home:(id)arg6 isAddOperation:(_Bool)arg7 logEventStateManager:(id)arg8;	// IMP=0x000000000057d410

// Remaining properties
@property(readonly, copy, nonatomic) NSString *accessoryIdentifier;
// Preceding property had unknown attributes: ?
// Original attribute string: T@"NSString",?,R,C,N

@property(readonly, copy) NSString *debugDescription;
// Preceding property had unknown attributes: ?
// Original attribute string: T@"NSString",?,R,C

@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly, nonatomic) NSUUID *homeUUID;
// Preceding property had unknown attributes: ?
// Original attribute string: T@"NSUUID",?,R,N

@property(readonly) Class superclass;

@end

