//
//     Generated by classdump-c 4.2.0 (64 bit) (iOS port by DreamDevLost, Updated by Kevin Bradley.)(Debug version compiled Dec 27 2024 14:18:54).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <HMFoundation/HMFObject.h>

@class AVOutputDeviceAuthorizedPeer, HAPPairingIdentity, HMBShareUserID, HMDAccountHandle, HMDAccountIdentifier, HMDAssistantAccessControl, HMDCloudShareMessenger, HMDCloudShareTrustManager, HMDHome, HMDPersonSettingsManager, HMDPhotosPersonManager, HMDSettingsControllerDependency, HMDSiriMultiUserNewLanguageNotificationManager, HMDUserDataController, HMDUserPhotosPersonDataManager, HMDUserSettingsBackingStoreController, HMFMessageDispatcher, HMPhotosPersonManagerSettings, HMUserPresenceAuthorization, NAFuture, NSData, NSNumber, NSObject, NSString, NSUUID;
@protocol HAPKeyStore, HMDUserDataSource, OS_dispatch_queue;

__attribute__((visibility("hidden")))
@interface HMDUser : HMFObject
{
    struct os_unfair_lock_s _lock;	// 8 = 0x8
    NSUUID *_uuid;	// 16 = 0x10
    _Bool _remoteAccessAllowed;	// 24 = 0x18
    HMDAccountHandle *_accountHandle;	// 32 = 0x20
    HMDAccountIdentifier *_accountIdentifier;	// 40 = 0x28
    _Bool _needsiTunesMultiUserRepair;	// 48 = 0x30
    unsigned long long _privilege;	// 56 = 0x38
    HMDHome *_home;	// 64 = 0x40
    NSString *_userID;	// 72 = 0x48
    HMUserPresenceAuthorization *_presenceAuthStatus;	// 80 = 0x50
    unsigned long long _camerasAccessLevel;	// 88 = 0x58
    HAPPairingIdentity *_pairingIdentity;	// 96 = 0x60
    NSString *_displayName;	// 104 = 0x68
    HMDAssistantAccessControl *_assistantAccessControl;	// 112 = 0x70
    unsigned long long _announceAccessLevel;	// 120 = 0x78
    unsigned long long _audioAnalysisUserDropInAccessLevel;	// 128 = 0x80
    long long _userCloudShareWithOwnerMessagingState;	// 136 = 0x88
    NSNumber *_matterCASEAuthenticatedTagID;	// 144 = 0x90
    HMBShareUserID *_cloudShareID;	// 152 = 0x98
    NAFuture *_cloudShareIDFuture;	// 160 = 0xa0
    HMDUserPhotosPersonDataManager *_photosPersonDataManager;	// 168 = 0xa8
    HMDPersonSettingsManager *_personSettingsManager;	// 176 = 0xb0
    NSString *_accessCode;	// 184 = 0xb8
    NSUUID *_accessCodeChangedByUserUUID;	// 192 = 0xc0
    HMDUserDataController *_userDataController;	// 200 = 0xc8
    unsigned long long _userAccessPolicy;	// 208 = 0xd0
    HMDSettingsControllerDependency *_sharedSettingsControllerDependency;	// 216 = 0xd8
    HMDSettingsControllerDependency *_privateSettingsControllerDependency;	// 224 = 0xe0
    HMDCloudShareMessenger *_shareMessenger;	// 232 = 0xe8
    HMDUserSettingsBackingStoreController *_privateBackingStoreController;	// 240 = 0xf0
    id <HMDUserDataSource> _dataSource;	// 248 = 0xf8
    HMDSiriMultiUserNewLanguageNotificationManager *_siriMultiUserNewLanguageNotificationManager;	// 256 = 0x100
    NSObject<OS_dispatch_queue> *_queue;	// 264 = 0x108
    HMFMessageDispatcher *_messageDispatcher;	// 272 = 0x110
    unsigned long long _announceNotificationModeForCurrentDevice;	// 280 = 0x118
    HMDCloudShareTrustManager *_cloudShareTrustManager;	// 288 = 0x120
    HMDUserSettingsBackingStoreController *_sharedBackingStoreController;	// 296 = 0x128
    id <HAPKeyStore> _keyStore;	// 304 = 0x130
}

+ (id)userDictionaryWithUserID:(id)arg1 privilege:(unsigned long long)arg2 remoteAccessAllowed:(_Bool)arg3 cameraAccessLevel:(unsigned long long)arg4 announceAccessAllowed:(id)arg5 announceAccessLevel:(unsigned long long)arg6 audioAnalysisUserDropInAccessLevel:(unsigned long long)arg7;	// IMP=0x0010000000a33d97
+ (id)userWithDictionary:(id)arg1 home:(id)arg2;	// IMP=0x0010000000a33a3e
+ (id)userWithDictionary:(id)arg1;	// IMP=0x0010000000a33a2a
+ (unsigned long long)privilegeFromDictionary:(id)arg1;	// IMP=0x0010000000a339d3
+ (_Bool)supportsSecureCoding;	// IMP=0x0010000000a339cb
+ (id)logCategory;	// IMP=0x0010000000a3399b
+ (id)sharedZoneNameForUserUUID:(id)arg1;	// IMP=0x0010000000a33941
+ (id)privateZoneNameForUserUUID:(id)arg1;	// IMP=0x0010000000a338e7
+ (id)UUIDWithUserID:(id)arg1 forHomeIdentifier:(id)arg2 uuid:(id)arg3 pairingIdentity:(id)arg4;	// IMP=0x0010000000a33507
+ (id)userIDForAccountHandle:(id)arg1;	// IMP=0x0010000000a334b4
+ (id)ownerWithUserID:(id)arg1 home:(id)arg2 pairingIdentity:(id)arg3 homeManager:(id)arg4;	// IMP=0x0010000000a33161
+ (id)currentUserWithPrivilege:(unsigned long long)arg1 forHome:(id)arg2;	// IMP=0x0010000000a3314c
+ (id)currentUserWithPrivilege:(unsigned long long)arg1 forHome:(id)arg2 forceHH1Key:(_Bool)arg3;	// IMP=0x0010000000a32f32
+ (unsigned long long)hmdUserPrivilegeFromHMMTRUserPrivilege:(unsigned long long)arg1;	// IMP=0x00100000000a6891
+ (unsigned long long)hmmtrUserPrivilegeFromHMDUserPrivilege:(unsigned long long)arg1;	// IMP=0x00100000000a6877
+ (id)av_authorizedPeerForPairingIdentity:(id)arg1 isOwner:(_Bool)arg2;	// IMP=0x0010000000408276
- (void).cxx_destruct;	// IMP=0x0000000000a2b175
@property(readonly) id <HAPKeyStore> keyStore;
@property(retain) HMDUserSettingsBackingStoreController *sharedBackingStoreController;
@property(retain) HMDCloudShareTrustManager *cloudShareTrustManager;
@property unsigned long long announceNotificationModeForCurrentDevice;
@property(retain) HMFMessageDispatcher *messageDispatcher;
@property(readonly) NSObject<OS_dispatch_queue> *queue;
@property(retain) HMDSiriMultiUserNewLanguageNotificationManager *siriMultiUserNewLanguageNotificationManager; // @synthesize siriMultiUserNewLanguageNotificationManager=_siriMultiUserNewLanguageNotificationManager;
@property(readonly) id <HMDUserDataSource> dataSource; // @synthesize dataSource=_dataSource;
@property _Bool needsiTunesMultiUserRepair; // @synthesize needsiTunesMultiUserRepair=_needsiTunesMultiUserRepair;
@property(retain) HMDUserSettingsBackingStoreController *privateBackingStoreController; // @synthesize privateBackingStoreController=_privateBackingStoreController;
@property(retain) HMDCloudShareMessenger *shareMessenger; // @synthesize shareMessenger=_shareMessenger;
@property(retain) HMDSettingsControllerDependency *privateSettingsControllerDependency; // @synthesize privateSettingsControllerDependency=_privateSettingsControllerDependency;
@property(retain) HMDSettingsControllerDependency *sharedSettingsControllerDependency; // @synthesize sharedSettingsControllerDependency=_sharedSettingsControllerDependency;
@property(readonly) unsigned long long userAccessPolicy; // @synthesize userAccessPolicy=_userAccessPolicy;
@property(retain) HMDUserDataController *userDataController; // @synthesize userDataController=_userDataController;
@property(retain) NSUUID *accessCodeChangedByUserUUID; // @synthesize accessCodeChangedByUserUUID=_accessCodeChangedByUserUUID;
@property(copy) NSString *accessCode; // @synthesize accessCode=_accessCode;
@property(retain) HMDPersonSettingsManager *personSettingsManager; // @synthesize personSettingsManager=_personSettingsManager;
@property(retain) HMDUserPhotosPersonDataManager *photosPersonDataManager;
@property(readonly) NAFuture *cloudShareIDFuture; // @synthesize cloudShareIDFuture=_cloudShareIDFuture;
@property(retain) HMBShareUserID *cloudShareID;
@property(retain, nonatomic) NSNumber *matterCASEAuthenticatedTagID; // @synthesize matterCASEAuthenticatedTagID=_matterCASEAuthenticatedTagID;
@property(copy, setter=setUUID:) NSUUID *uuid;
- (id)allAccessoryUUID;	// IMP=0x0000000000a2add9
- (_Bool)_isExplicitContentValueEnabledForAppleMediaAccessory:(id)arg1;	// IMP=0x0000000000a2ad0a
- (void)applyConditionalValueUpdateToModels:(id)arg1;	// IMP=0x0000000000a2ab35
- (id)pushTokensForDevicesObservingSubjectDevice:(id)arg1 subActivity:(id)arg2;	// IMP=0x0000000000a2aa7a
- (void)deregisterIDSActivityObserver:(id)arg1;	// IMP=0x0000000000a2aa11
- (void)deregisterIDSActivityObserver:(id)arg1 subActivity:(id)arg2 subjectDevice:(id)arg3;	// IMP=0x0000000000a2a8f1
- (void)updateIDSActivityObserver:(id)arg1;	// IMP=0x0000000000a2a83d
- (void)registerIDSActivityObserver:(id)arg1 subActivity:(id)arg2 subjectDevice:(id)arg3;	// IMP=0x0000000000a2a71d
- (void)cloudShareTrustManager:(id)arg1 didRemoveUserWithUUID:(id)arg2;	// IMP=0x0000000000a2a56e
- (void)didRemoveTrustZoneInCloudShareTrustManager:(id)arg1;	// IMP=0x0000000000a2a464
- (void)didFinishConfiguringForCloudShareTrustManager:(id)arg1;	// IMP=0x0000000000a2a36c
- (void)cloudShareTrustManager:(id)arg1 didFetchOwnerCloudShareID:(id)arg2;	// IMP=0x0000000000a2a233
- (_Bool)isOwnerCapableForTrustManager:(id)arg1;	// IMP=0x0000000000a2a1ef
- (id)homeForCloudShareTrustManager:(id)arg1;	// IMP=0x0000000000a2a1dd
- (id)ownerForCloudShareTrustManager:(id)arg1;	// IMP=0x0000000000a2a1d4
- (id)zoneNameForCloudShareTrustManager:(id)arg1;	// IMP=0x0000000000a2a153
- (_Bool)cloudShareTrustManager:(id)arg1 shouldShareTrustWithUser:(id)arg2;	// IMP=0x0000000000a29fe5
- (void)configureCloudShareTrustManager;	// IMP=0x0000000000a29d0f
- (id)trustTargetUUID;	// IMP=0x0000000000a29c24
- (void)updateCloudShareID:(id)arg1;	// IMP=0x0000000000a2991f
- (void)removeCloudShareID;	// IMP=0x0000000000a297cc
- (void)userDataControllerDidUpdateSupportsAutomaticHH2Migration:(id)arg1;	// IMP=0x0000000000a297b3
- (void)updateSupportsHH2MigrationByOwnerManual:(_Bool)arg1 supportsHH2MigrationByOwnerAuto:(_Bool)arg2;	// IMP=0x0000000000a2971b
- (void)userDataControllerDidUpdateUserListeningHistoryUpdateControl:(id)arg1;	// IMP=0x0000000000a29702
- (_Bool)userDataController:(id)arg1 isHAPAccessory:(id)arg2;	// IMP=0x0000000000a294c8
- (_Bool)userDataController:(id)arg1 isAppleMediaAccessory:(id)arg2;	// IMP=0x0000000000a2928e
- (id)privateZoneControllerForUserDataController:(id)arg1;	// IMP=0x0000000000a2927c
- (id)sharedZoneControllerForUserDataController:(id)arg1;	// IMP=0x0000000000a2926a
- (void)postUserSettingsUpdatedNotificationWithReason:(id)arg1;	// IMP=0x0000000000a291b9
- (void)userDataControllerDidUpdateMediaContentProfile:(id)arg1;	// IMP=0x0000000000a291a0
- (void)userDataControllerDidUpdateAssistantAccessControl:(id)arg1;	// IMP=0x0000000000a29187
- (_Bool)userDataController:(id)arg1 isAccessoryUserListeningHistoryUpdateCapable:(id)arg2;	// IMP=0x0000000000a28ed4
- (_Bool)userDataController:(id)arg1 isMediaContentProfileCapableAccessoryID:(id)arg2;	// IMP=0x0000000000a28b8d
- (_Bool)userDataController:(id)arg1 isPersonalRequestCapableAccessoryID:(id)arg2;	// IMP=0x0000000000a28846
- (void)backingStoreController:(id)arg1 didUpdatePhotosPersonManagerSettingsModel:(id)arg2 previousPhotosPersonManagerSettingsModel:(id)arg3;	// IMP=0x0000000000a287cc
- (id)ownerForUserSettingsBackingStoreController:(id)arg1;	// IMP=0x0000000000a287c3
- (id)backingStoreController:(id)arg1 createParticipantManagerForCloudZone:(id)arg2;	// IMP=0x0000000000a286c7
- (void)didStopBackingStoreController:(id)arg1;	// IMP=0x0000000000a284cd
- (void)didStartLocalZoneForBackingStoreController:(id)arg1;	// IMP=0x0000000000a2834c
- (void)didStartBackingStoreController:(id)arg1;	// IMP=0x0000000000a282e3
@property(readonly) NSUUID *userUUID;
@property(readonly) _Bool isRunningOnHomeOwnersDevice;
- (id)settingsControllerFollowerKeyPaths:(id)arg1;	// IMP=0x0000000000a281c3
- (id)settingsController:(id)arg1 willUpdateSettingAtKeyPath:(id)arg2 withValue:(id)arg3;	// IMP=0x0000000000a27cdf
- (void)settingsController:(id)arg1 didUpdateWithCompletion:(CDUnknownBlockType)arg2;	// IMP=0x0000000000a27c90
- (id)dictionaryEncoding;	// IMP=0x0000000000a27b76
- (void)removeCloudData;	// IMP=0x0000000000a27a54
- (id)modelObjectWithChangeType:(unsigned long long)arg1 version:(long long)arg2;	// IMP=0x0000000000a2759e
- (id)newModelWithChangeType:(unsigned long long)arg1;	// IMP=0x0000000000a274ea
- (id)modelObjectWithChangeType:(unsigned long long)arg1;	// IMP=0x0000000000a274d3
- (id)backingStoreObjects:(long long)arg1;	// IMP=0x0000000000a27266
- (id)announceUserSettingsModelWithChangeType:(unsigned long long)arg1;	// IMP=0x0000000000a27194
- (void)migrateCloudZone:(id)arg1 migrationQueue:(id)arg2 completion:(CDUnknownBlockType)arg3;	// IMP=0x0000000000a26d24
- (void)transactionObjectRemoved:(id)arg1 message:(id)arg2;	// IMP=0x0000000000a2689a
- (void)handleUpdatedCATForUser;	// IMP=0x0000000000a2685d
- (void)_transactionUserUpdated:(id)arg1 newValues:(id)arg2 message:(id)arg3;	// IMP=0x0000000000a2516b
- (void)transactionObjectUpdated:(id)arg1 newValues:(id)arg2 message:(id)arg3;	// IMP=0x0000000000a249f0
- (void)_encodeWithCoder:(id)arg1;	// IMP=0x0000000000a2352b
- (void)encodeWithCoder:(id)arg1;	// IMP=0x0000000000a234dc
@property(readonly, copy, nonatomic) NSString *encodingRemoteDisplayName;
- (id)_initWithCoder:(id)arg1;	// IMP=0x0000000000a228ff
- (id)initWithCoder:(id)arg1;	// IMP=0x0000000000a22896
@property(readonly, nonatomic) NSObject<OS_dispatch_queue> *messageReceiveQueue;
// Preceding property had unknown attributes: ?
// Original attribute string: T@"NSObject<OS_dispatch_queue>",?,R,N

- (id)messageDestination;	// IMP=0x0000000000a22818
@property(readonly, nonatomic) NSUUID *messageTargetUUID;
- (id)logIdentifier;	// IMP=0x0000000000a227b6
@property(readonly, copy) NSData *publicKey;
@property(readonly, copy) NSString *pairingUsername;
@property(copy, nonatomic) NSString *userID;
@property(readonly) NSNumber *uniqueIDForAccessories;
@property(readonly) NSNumber *notificationContextNFCIdentifier;
@property(readonly) NSNumber *notificationContextHAPIdentifier;
- (void)configurePersonSettingsManager;	// IMP=0x0000000000a22183
- (void)configurePhotosPersonDataManager;	// IMP=0x0000000000a22010
@property(readonly) HMDPhotosPersonManager *photosPersonManager;
@property(readonly, copy) HMPhotosPersonManagerSettings *photosPersonManagerSettings;
- (void)saveSyncDataToLocalDisk:(id)arg1;	// IMP=0x0000000000a21a5a
- (id)syncDataFileNameWithHomeUUID:(id)arg1;	// IMP=0x0000000000a219af
- (id)announceNotificationFileName;	// IMP=0x0000000000a21950
- (id)announceNotificationFileNameForUserUUID:(id)arg1;	// IMP=0x0000000000a218d4
- (void)savePersonClassificationSettingsForCurrentUserToLocalDisk;	// IMP=0x0000000000a216f8
- (void)saveAnnounceNotificationModeForCurrentUserToLocalDisk;	// IMP=0x0000000000a21289
- (void)_updateAnnounceNotificationMode:(unsigned long long)arg1;	// IMP=0x0000000000a20f81
- (void)updateAnnounceNotificationMode:(unsigned long long)arg1;	// IMP=0x0000000000a20f05
- (void)_handleAnnounceSettingsUpdate:(id)arg1;	// IMP=0x0000000000a20b63
- (void)handleRemovedAccessory:(id)arg1;	// IMP=0x0000000000a20a71
- (void)removeAccessoriesFromAssistantAccessControlList:(id)arg1;	// IMP=0x0000000000a209f9
- (void)enableUserListeningHistoryForAccessory:(id)arg1;	// IMP=0x0000000000a20965
- (void)_handleUserListeningHistoryUpdateControlUpdatedAccessoryUUIDs:(id)arg1;	// IMP=0x0000000000a20111
- (void)handleUserListeningHistoryUpdateControlUpdatedAccessoryUUIDs:(id)arg1;	// IMP=0x0000000000a2007d
- (void)_handleMediaContentProfileAccessControlUpdate:(id)arg1;	// IMP=0x0000000000a1f872
- (void)handleMediaContentProfileAccessControlUpdate:(id)arg1;	// IMP=0x0000000000a1f7de
- (void)_handleAssistantAccessControlUpdate:(id)arg1;	// IMP=0x0000000000a1e6bb
- (void)handleAssistantAccessControlUpdate:(id)arg1;	// IMP=0x0000000000a1e627
- (_Bool)isCurrentUserAndOwner;	// IMP=0x0000000000a1e4a5
@property(retain) HMDAssistantAccessControl *assistantAccessControl; // @synthesize assistantAccessControl=_assistantAccessControl;
@property(readonly) NSUUID *assistantAccessControlModelUUID;
@property(readonly, getter=isValid) _Bool valid;
@property(readonly, getter=isRemoteGateway) _Bool remoteGateway;
@property unsigned long long audioAnalysisUserDropInAccessLevel;
@property unsigned long long announceAccessLevel;
- (unsigned long long)defaultAnnounceUserAccessLevel;	// IMP=0x0000000000a1e252
@property(readonly, getter=isAnnounceAccessAllowed) _Bool announceAccessAllowed;
@property unsigned long long camerasAccessLevel;
- (_Bool)_setRemoteAccessAllowed:(_Bool)arg1;	// IMP=0x0000000000a1e121
@property(getter=isRemoteAccessAllowed) _Bool remoteAccessAllowed;
- (_Bool)refreshDisplayName;	// IMP=0x0000000000a1e00e
- (void)setDisplayName:(id)arg1;	// IMP=0x0000000000a1df83
@property(readonly, copy) NSString *displayName; // @synthesize displayName=_displayName;
@property(copy) HMUserPresenceAuthorization *presenceAuthStatus;
- (void)__handleRemovedAccount:(id)arg1;	// IMP=0x0000000000a1dc62
- (void)__handleAddedAccount:(id)arg1;	// IMP=0x0000000000a1d9a3
- (_Bool)requiresMakoSupport;	// IMP=0x0000000000a1d95a
- (id)account;	// IMP=0x0000000000a1d8c6
- (void)_handleNeedsiTunesMultiUserRepair:(id)arg1;	// IMP=0x0000000000a1d445
- (void)_handleShareClientRepairRequest:(id)arg1;	// IMP=0x0000000000a1c8c8
- (void)_sendAccountMessage:(id)arg1 payload:(id)arg2 deviceCapabilities:(id)arg3 multicast:(_Bool)arg4 preferPrimary:(_Bool)arg5 completion:(CDUnknownBlockType)arg6;	// IMP=0x0000000000a1c55a
- (void)_sendSecureShareClientPayloadToMostEligibleDevice:(id)arg1 completion:(CDUnknownBlockType)arg2;	// IMP=0x0000000000a1c12d
- (void)_handleMultiUserSharePayloadRequest:(id)arg1;	// IMP=0x0000000000a1b3a9
- (void)_handleShareLookupInfoRequest:(id)arg1;	// IMP=0x0000000000a1adff
- (void)_handleLegacyPairingIdentityRequest:(id)arg1;	// IMP=0x0000000000a1a85a
- (void)fetchPairingIdentityForClientWithMessage:(id)arg1;	// IMP=0x0000000000a1a128
- (void)_handlePairingIdentityRequest:(id)arg1;	// IMP=0x0000000000a19f59
- (_Bool)matchingPairingIdentityIdentifier:(id)arg1;	// IMP=0x0000000000a19ec4
- (void)deregisterIdentity;	// IMP=0x0000000000a19e49
- (void)registerIdentity;	// IMP=0x0000000000a19d9c
@property(copy) HAPPairingIdentity *pairingIdentity;
- (id)spiClientIdentifier;	// IMP=0x0000000000a19cb3
@property(copy) HMDAccountIdentifier *accountIdentifier;
- (void)setAccountHandle:(id)arg1;	// IMP=0x0000000000a19a7b
- (id)accountHandle;	// IMP=0x0000000000a19a35
@property(readonly) _Bool isCurrentUser;
- (_Bool)updateAdministrator:(_Bool)arg1;	// IMP=0x0000000000a19984
@property unsigned long long privilege;
- (_Bool)isPending;	// IMP=0x0000000000a19806
@property(readonly, getter=isOwner) _Bool owner;
@property(readonly, getter=isAdministrator) _Bool administrator;
- (unsigned long long)_compatiblePrivilege;	// IMP=0x0000000000a19736
@property __weak HMDHome *home; // @synthesize home=_home;
- (unsigned long long)allowedRemoteEventAccessUserTypes;	// IMP=0x0000000000a19670
- (void)deregisterForMessages;	// IMP=0x0000000000a19560
- (void)registerForMessages;	// IMP=0x0000000000a19124
- (void)unconfigure;	// IMP=0x0000000000a19097
- (void)_recoverTrustManagerDueToUUIDChange;	// IMP=0x0000000000a18f57
- (void)updateSharedBackingStoreControllerParticipants;	// IMP=0x0000000000a18f05
- (void)_recoverUserSettingsDueToUUIDChange;	// IMP=0x0000000000a18b76
- (void)recoverUserCloudDataDueToUUIDChangeFromOldUUID:(id)arg1;	// IMP=0x0000000000a18ae2
- (void)_handleCloudShareWithOwnerMessageError;	// IMP=0x0000000000a18aa2
@property long long userCloudShareWithOwnerMessagingState;
- (long long)sharedUserSettingsLogEventBackingStoreControllerRunState;	// IMP=0x0000000000a189e4
- (void)initializeUserSettingsWithHome:(id)arg1;	// IMP=0x0000000000a1820e
- (id)sharedZoneName;	// IMP=0x0000000000a181a4
- (id)privateZoneName;	// IMP=0x0000000000a1813a
- (void)handleUserDataControllerInitialized:(id)arg1;	// IMP=0x0000000000a180e8
- (void)configureWithHome:(id)arg1;	// IMP=0x0000000000a17c27
- (_Bool)hasDeviceWithHomeKitVersionGreaterThanVersion:(id)arg1;	// IMP=0x0000000000a179fc
- (id)dumpState;	// IMP=0x0000000000a1732b
- (id)attributeDescriptions;	// IMP=0x0000000000a16ca7
- (id)shortDescription;	// IMP=0x0000000000a16be5
- (_Bool)isAccountEqualWithUser:(id)arg1;	// IMP=0x0000000000a16a5e
- (_Bool)isEqual:(id)arg1;	// IMP=0x0000000000a16982
@property(readonly) unsigned long long hash;
- (void)dealloc;	// IMP=0x0000000000a168b3
- (id)initWithAccountHandle:(id)arg1 homeUUID:(id)arg2 pairingIdentity:(id)arg3 privilege:(unsigned long long)arg4 keyStore:(id)arg5 dataSource:(id)arg6;	// IMP=0x0000000000a16606
- (id)initWithAccountHandle:(id)arg1 homeUUID:(id)arg2 pairingIdentity:(id)arg3 privilege:(unsigned long long)arg4;	// IMP=0x0000000000a16526
- (id)initWithAccountHandle:(id)arg1 home:(id)arg2 pairingIdentity:(id)arg3 privilege:(unsigned long long)arg4 dataSource:(id)arg5;	// IMP=0x0000000000a1640a
- (id)initWithAccountHandle:(id)arg1 home:(id)arg2 pairingIdentity:(id)arg3 privilege:(unsigned long long)arg4;	// IMP=0x0000000000a1635f
- (id)initWithModelObject:(id)arg1;	// IMP=0x0000000000a15ee8
- (id)privateSettingValuesByKeyPath;	// IMP=0x0000000000a15e98
- (id)sharedSettingValuesByKeyPath;	// IMP=0x0000000000a15e48
- (void)_setUuidUnsafely:(id)arg1;	// IMP=0x0000000000a15e34
@property(readonly, copy) AVOutputDeviceAuthorizedPeer *av_authorizedPeer;
@property(readonly) _Bool hasCameraClipsAccess;
@property(readonly, copy) NSData *nfcIssuerKeyIdentifier;

// Remaining properties
@property(readonly, getter=isCurrentUser) _Bool currentUser;
@property(readonly, copy) NSString *debugDescription;
// Preceding property had unknown attributes: ?
// Original attribute string: T@"NSString",?,R,C

@property(readonly, copy) NSString *description;
@property(readonly) Class superclass;

@end

