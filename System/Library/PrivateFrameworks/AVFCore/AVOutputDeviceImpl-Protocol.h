//
//     Generated by classdump-c 4.2.0 (64 bit) (iOS port by DreamDevLost, Updated by Kevin Bradley.)(Debug version compiled Dec 27 2024 14:18:54).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <AVFCore/NSObject-Protocol.h>

@class NSArray, NSData, NSDictionary, NSNumber, NSString, NSURL;
@protocol AVOutputDeviceDelegate, AVOutputDeviceImplSupport;

@protocol AVOutputDeviceImpl <NSObject>
@property(readonly, nonatomic) NSDictionary *outputDeviceInfo;
@property(readonly, nonatomic) NSArray *screens;
@property(readonly, nonatomic, getter=isActivated) _Bool activated;
@property(readonly, nonatomic) long long authenticationType;
@property(readonly, nonatomic) long long voiceTriggerMode;
@property(retain, nonatomic) NSDictionary *displayCornerMasks;
@property(readonly, nonatomic) _Bool carOwnsMainAudio;
@property _Bool siriForwardingEnabled;
@property(readonly, nonatomic) NSData *MFiCertificateSerialNumber;
@property(readonly, nonatomic) long long transportType;
@property(readonly, nonatomic) long long navigationAidedDriving;
@property(readonly, nonatomic) long long electronicTollCollection;
@property(readonly, nonatomic) NSArray *supportedFeatures;
@property(readonly, nonatomic) _Bool recognizingSpeech;
@property(readonly, nonatomic) _Bool ownsTurnByTurnNavigation;
@property(readonly, nonatomic) _Bool carOwnsScreen;
@property(readonly, nonatomic) _Bool limitedUI;
@property(readonly, nonatomic) NSArray *limitedUIElements;
@property(readonly, nonatomic) _Bool rightHandDrive;
@property(readonly, nonatomic, getter=isNightModeSupported) _Bool nightModeSupported;
@property(readonly, nonatomic) _Bool nightMode;
@property(readonly, nonatomic) NSArray *outputDeviceHIDs;
@property(readonly, nonatomic) _Bool OEMIconVisible;
@property(readonly, nonatomic) NSString *OEMIconLabel;
@property(readonly, nonatomic) NSArray *OEMIcons;
@property(readonly, nonatomic, getter=isConversationDetectionEnabled) _Bool conversationDetectionEnabled;
@property(readonly, nonatomic) _Bool supportsConversationDetection;
@property(readonly, nonatomic) NSString *currentBluetoothListeningMode;
@property(readonly, nonatomic) NSArray *availableBluetoothListeningModes;
@property(readonly, nonatomic, getter=isHeadTrackedSpatialAudioActive) _Bool headTrackedSpatialAudioActive;
@property(readonly, nonatomic) NSString *headTrackedSpatialAudioMode;
@property(readonly, nonatomic) _Bool allowsHeadTrackedSpatialAudio;
@property(readonly, nonatomic) _Bool supportsHeadTrackedSpatialAudio;
@property(readonly, nonatomic) long long HAPConformance;
@property(readonly, nonatomic) _Bool supportsBluetoothSharing;
@property(readonly, nonatomic) _Bool presentsOptimizedUserInterfaceWhenPlayingFetchedAudioOnlyAssets;
@property(readonly, nonatomic) _Bool canFetchMediaDataFromSender;
@property(readonly, nonatomic) _Bool canPlayEncryptedProgressiveDownloadAssets;
@property(readonly, nonatomic) _Bool canRelayCommunicationChannel;
@property(readonly, nonatomic) _Bool canCommunicateWithAllLogicalDeviceMembers;
@property(readonly, nonatomic) _Bool isLogicalDeviceLeader;
@property(readonly, nonatomic) NSString *logicalDeviceID;
@property(readonly, nonatomic) _Bool groupContainsGroupLeader;
@property(readonly, nonatomic) _Bool participatesInGroupPlayback;
@property(readonly, nonatomic) _Bool isGroupLeader;
@property(readonly, nonatomic) _Bool canBeGroupLeader;
@property(readonly, copy, nonatomic) NSString *proposedGroupID;
@property(readonly, copy, nonatomic) NSString *groupID;
@property(readonly, nonatomic) _Bool canBeGrouped;
@property(readonly) long long volumeControlType;
@property(getter=isMuted) _Bool muted;
@property(readonly) _Bool canMute;
@property(readonly) _Bool canSetVolume;
@property(readonly) float volume;
@property(readonly, nonatomic) _Bool supportsBufferedAirPlay;
@property(readonly, nonatomic) _Bool canAccessiCloudMusicLibrary;
@property(readonly, nonatomic) _Bool canAccessAppleMusic;
@property(readonly, nonatomic) _Bool canAccessRemoteAssets;
@property(readonly, nonatomic) _Bool onlyAllowsConnectionsFromPeersInHomeGroup;
@property(readonly, nonatomic) _Bool automaticallyAllowsConnectionsFromPeersInHomeGroup;
@property(readonly, nonatomic) _Bool requiresAuthorization;
@property(readonly, nonatomic) unsigned long long deviceFeatures;
@property(readonly, copy, nonatomic) NSArray *connectedPairedDevices;
@property(readonly, nonatomic, getter=isInUseByPairedDevice) _Bool inUseByPairedDevice;
@property(readonly, nonatomic) NSDictionary *airPlayProperties;
@property(readonly, nonatomic) NSNumber *isInEar;
@property(readonly, nonatomic) NSNumber *supportsDataOverACLProtocol;
@property(readonly, nonatomic) NSNumber *rightBatteryLevel;
@property(readonly, nonatomic) NSNumber *leftBatteryLevel;
@property(readonly, nonatomic) NSNumber *caseBatteryLevel;
@property(readonly, nonatomic) NSNumber *batteryLevel;
@property(readonly, nonatomic, getter=isActivatedForContinuityScreen) _Bool activatedForContinuityScreen;
@property(readonly, nonatomic, getter=isEligibleToBePredictedOutputDevice) _Bool eligibleToBePredictedOutputDevice;
@property(readonly, nonatomic, getter=isAppleAccessory) _Bool appleAccessory;
@property(readonly, nonatomic) _Bool producesLowFidelityAudio;
@property(readonly, nonatomic) NSString *clusterID;
@property(readonly, nonatomic) _Bool isClusterLeader;
@property(readonly, nonatomic) NSArray *clusteredDeviceDescriptions;
@property(readonly, copy, nonatomic) NSData *identifyingMACAddress;
@property(readonly, nonatomic) NSString *firmwareVersion;
@property(readonly, nonatomic) NSString *serialNumber;
@property(readonly, copy, nonatomic) NSString *modelID;
@property(readonly, nonatomic) NSString *manufacturer;
@property(readonly, nonatomic) long long configuredClusterSize;
@property(readonly, nonatomic) long long clusterType;
@property(readonly, nonatomic) long long deviceSubType;
@property(readonly, nonatomic) long long deviceType;
@property(readonly, copy, nonatomic) NSString *ID;
@property(readonly, copy, nonatomic) NSString *name;
@property __weak id <AVOutputDeviceDelegate> delegate;
@property __weak id <AVOutputDeviceImplSupport> implEventListener;
- (void)performHapticFeedbackForUUID:(NSString *)arg1 withHapticType:(NSNumber *)arg2 completionHandler:(void (^)(NSError *))arg3;
- (void)suggestUIWithURLs:(NSArray *)arg1 completionHandler:(void (^)(NSError *))arg2;
- (NSDictionary *)currentScreenViewAreaForScreenID:(NSString *)arg1;
- (void)takeScreenForClient:(NSString *)arg1 reason:(NSString *)arg2;
- (id)borrowScreenForClient:(NSString *)arg1 reason:(NSString *)arg2;
- (id)requestTurnByTurnNavigationOwnership;
- (void)requestCarUIForURL:(NSURL *)arg1 withUUID:(NSString *)arg2;
- (void)requestViewArea:(long long)arg1 forScreenID:(NSString *)arg2;
- (_Bool)supportsScreenMirroringControls;
- (_Bool)supportsFitnessDataDestination;
- (void)configureUsingBlock:(void (^)(id <AVOutputDeviceConfigurationModification>))arg1 options:(NSDictionary *)arg2 completionHandler:(void (^)(long long, id <AVOutputDeviceConfigurationRetrieval>, NSString *, NSError *))arg3;
- (_Bool)setCurrentBluetoothListeningMode:(NSString *)arg1 error:(id *)arg2;
- (_Bool)setConversationDetectionEnabled:(_Bool)arg1 error:(id *)arg2;
- (_Bool)setHeadTrackedSpatialAudioMode:(NSString *)arg1 error:(id *)arg2;
- (_Bool)setAllowsHeadTrackedSpatialAudio:(_Bool)arg1 error:(id *)arg2;
- (float)volumeForActivatedDeviceClusterMembersWithRoomID:(NSString *)arg1;
- (void)setActivatedDeviceClusterMembersVolume:(float)arg1 withRoomID:(NSString *)arg2;
- (void)decreaseVolumeByCount:(long long)arg1;
- (void)increaseVolumeByCount:(long long)arg1;
- (void)setVolume:(float)arg1;
- (void)setMediaRemoteData:(NSData *)arg1 completionHandler:(void (^)(NSError *))arg2;
- (void)setSecondDisplayMode:(NSString *)arg1 completionHandler:(void (^)(id, NSError *))arg2;
- (void)setSecondDisplayEnabled:(_Bool)arg1;
@end

