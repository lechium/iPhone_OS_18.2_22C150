//
//     Generated by classdump-c 4.2.0 (64 bit) (iOS port by DreamDevLost, Updated by Kevin Bradley.)(Debug version compiled Dec 27 2024 14:18:54).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <objc/NSObject.h>

@class NSArray, NSData, NSDictionary, NSNumber, NSString;
@protocol AVOutputDeviceDelegate, AVOutputDeviceImplSupport;

__attribute__((visibility("hidden")))
@interface AVLocalOutputDeviceImpl : NSObject
{
    id <AVOutputDeviceImplSupport> _implSupportEventListener;	// 8 = 0x8
}

- (void).cxx_destruct;	// IMP=0x00000000000f7bcf
@property __weak id <AVOutputDeviceImplSupport> implEventListener; // @synthesize implEventListener=_implSupportEventListener;
@property __weak id <AVOutputDeviceDelegate> delegate;
- (void)performHapticFeedbackForUUID:(id)arg1 withHapticType:(id)arg2 completionHandler:(CDUnknownBlockType)arg3;	// IMP=0x00000000000f7b9c
- (void)suggestUIWithURLs:(id)arg1 completionHandler:(CDUnknownBlockType)arg2;	// IMP=0x00000000000f7b96
@property(readonly, nonatomic) NSDictionary *outputDeviceInfo;
@property(readonly, nonatomic) NSArray *screens;
@property(readonly, nonatomic, getter=isActivated) _Bool activated;
- (id)currentScreenViewAreaForScreenID:(id)arg1;	// IMP=0x00000000000f7b71
@property(readonly, nonatomic) long long authenticationType;
@property(readonly, nonatomic) long long voiceTriggerMode;
@property(retain, nonatomic) NSDictionary *displayCornerMasks;
@property(readonly, nonatomic) _Bool carOwnsMainAudio;
@property _Bool siriForwardingEnabled;
- (void)takeScreenForClient:(id)arg1 reason:(id)arg2;	// IMP=0x00000000000f7b37
- (id)borrowScreenForClient:(id)arg1 reason:(id)arg2;	// IMP=0x00000000000f7b2f
- (id)requestTurnByTurnNavigationOwnership;	// IMP=0x00000000000f7b27
- (void)requestCarUIForURL:(id)arg1 withUUID:(id)arg2;	// IMP=0x00000000000f7b21
- (void)requestViewArea:(long long)arg1 forScreenID:(id)arg2;	// IMP=0x00000000000f7b1b
@property(readonly, nonatomic) NSData *MFiCertificateSerialNumber;
@property(readonly, nonatomic) long long transportType;
@property(readonly, nonatomic) long long navigationAidedDriving;
@property(readonly, nonatomic) long long electronicTollCollection;
@property(readonly, nonatomic) NSArray *supportedFeatures;
@property(readonly, nonatomic) _Bool recognizingSpeech;
@property(readonly, nonatomic) _Bool ownsTurnByTurnNavigation;
@property(readonly, nonatomic) _Bool carOwnsScreen;
@property(readonly, nonatomic) _Bool limitedUI;
@property(readonly, nonatomic) NSArray *limitedUIElements;
@property(readonly, nonatomic) _Bool rightHandDrive;
@property(readonly, nonatomic, getter=isNightModeSupported) _Bool nightModeSupported;
@property(readonly, nonatomic) _Bool nightMode;
@property(readonly, nonatomic) NSArray *outputDeviceHIDs;
@property(readonly, nonatomic) _Bool OEMIconVisible;
@property(readonly, nonatomic) NSString *OEMIconLabel;
@property(readonly, nonatomic) NSArray *OEMIcons;
- (void)setMediaRemoteData:(id)arg1 completionHandler:(CDUnknownBlockType)arg2;	// IMP=0x00000000000f7a79
- (_Bool)supportsScreenMirroringControls;	// IMP=0x00000000000f7a71
- (_Bool)supportsFitnessDataDestination;	// IMP=0x00000000000f7a69
- (void)configureUsingBlock:(CDUnknownBlockType)arg1 options:(id)arg2 completionHandler:(CDUnknownBlockType)arg3;	// IMP=0x00000000000f7a2c
- (_Bool)setCurrentBluetoothListeningMode:(id)arg1 error:(id *)arg2;	// IMP=0x00000000000f7a06
@property(readonly, nonatomic) NSString *currentBluetoothListeningMode;
- (_Bool)setConversationDetectionEnabled:(_Bool)arg1 error:(id *)arg2;	// IMP=0x00000000000f79d8
@property(readonly, nonatomic, getter=isConversationDetectionEnabled) _Bool conversationDetectionEnabled;
@property(readonly, nonatomic) _Bool supportsConversationDetection;
@property(readonly, nonatomic) NSArray *availableBluetoothListeningModes;
@property(readonly, nonatomic, getter=isHeadTrackedSpatialAudioActive) _Bool headTrackedSpatialAudioActive;
- (_Bool)setHeadTrackedSpatialAudioMode:(id)arg1 error:(id *)arg2;	// IMP=0x00000000000f798d
@property(readonly, nonatomic) NSString *headTrackedSpatialAudioMode;
- (_Bool)setAllowsHeadTrackedSpatialAudio:(_Bool)arg1 error:(id *)arg2;	// IMP=0x00000000000f795a
@property(readonly, nonatomic) _Bool allowsHeadTrackedSpatialAudio;
@property(readonly, nonatomic) _Bool supportsHeadTrackedSpatialAudio;
@property(readonly, nonatomic) long long HAPConformance;
@property(readonly, nonatomic) _Bool supportsBluetoothSharing;
@property(readonly, nonatomic) _Bool presentsOptimizedUserInterfaceWhenPlayingFetchedAudioOnlyAssets;
@property(readonly, nonatomic) _Bool canFetchMediaDataFromSender;
@property(readonly, nonatomic) _Bool canPlayEncryptedProgressiveDownloadAssets;
@property(readonly, nonatomic) _Bool canRelayCommunicationChannel;
@property(readonly, nonatomic) _Bool canCommunicateWithAllLogicalDeviceMembers;
@property(readonly, nonatomic) _Bool isLogicalDeviceLeader;
@property(readonly, nonatomic) NSString *logicalDeviceID;
@property(readonly, nonatomic) _Bool groupContainsGroupLeader;
@property(readonly, nonatomic) _Bool participatesInGroupPlayback;
@property(readonly, nonatomic) _Bool isGroupLeader;
@property(readonly, nonatomic) _Bool canBeGroupLeader;
@property(readonly, copy, nonatomic) NSString *proposedGroupID;
@property(readonly, copy, nonatomic) NSString *groupID;
@property(readonly, nonatomic) _Bool canBeGrouped;
@property(getter=isMuted) _Bool muted;
@property(readonly) _Bool canMute;
- (float)volumeForActivatedDeviceClusterMembersWithRoomID:(id)arg1;	// IMP=0x00000000000f78ab
- (void)setActivatedDeviceClusterMembersVolume:(float)arg1 withRoomID:(id)arg2;	// IMP=0x00000000000f78a5
- (void)decreaseVolumeByCount:(long long)arg1;	// IMP=0x00000000000f789f
- (void)increaseVolumeByCount:(long long)arg1;	// IMP=0x00000000000f7899
- (void)setVolume:(float)arg1;	// IMP=0x00000000000f7893
@property(readonly) long long volumeControlType;
@property(readonly) _Bool canSetVolume;
@property(readonly) float volume;
- (void)setSecondDisplayMode:(id)arg1 completionHandler:(CDUnknownBlockType)arg2;	// IMP=0x00000000000f7845
- (void)setSecondDisplayEnabled:(_Bool)arg1;	// IMP=0x00000000000f783f
@property(readonly, nonatomic) _Bool supportsBufferedAirPlay;
@property(readonly, nonatomic) _Bool canAccessiCloudMusicLibrary;
@property(readonly, nonatomic) _Bool canAccessAppleMusic;
@property(readonly, nonatomic) _Bool canAccessRemoteAssets;
@property(readonly, nonatomic) _Bool onlyAllowsConnectionsFromPeersInHomeGroup;
@property(readonly, nonatomic) _Bool automaticallyAllowsConnectionsFromPeersInHomeGroup;
@property(readonly, nonatomic) _Bool requiresAuthorization;
@property(readonly, nonatomic) unsigned long long deviceFeatures;
@property(readonly, copy, nonatomic) NSArray *connectedPairedDevices;
@property(readonly, nonatomic, getter=isEligibleToBePredictedOutputDevice) _Bool eligibleToBePredictedOutputDevice;
@property(readonly, nonatomic, getter=isAppleAccessory) _Bool appleAccessory;
@property(readonly, nonatomic) _Bool producesLowFidelityAudio;
@property(readonly, nonatomic, getter=isInUseByPairedDevice) _Bool inUseByPairedDevice;
@property(readonly, nonatomic) NSDictionary *airPlayProperties;
@property(readonly, nonatomic) NSNumber *isInEar;
@property(readonly, nonatomic) NSNumber *supportsDataOverACLProtocol;
@property(readonly, nonatomic) NSNumber *rightBatteryLevel;
@property(readonly, nonatomic) NSNumber *leftBatteryLevel;
@property(readonly, nonatomic) NSNumber *caseBatteryLevel;
@property(readonly, nonatomic) NSNumber *batteryLevel;
@property(readonly, nonatomic) NSString *clusterID;
@property(readonly, nonatomic) _Bool isClusterLeader;
@property(readonly, nonatomic) NSArray *clusteredDeviceDescriptions;
@property(readonly, copy, nonatomic) NSData *identifyingMACAddress;
@property(readonly, nonatomic) NSString *firmwareVersion;
@property(readonly, nonatomic) NSString *serialNumber;
@property(readonly, copy, nonatomic) NSString *modelID;
@property(readonly, nonatomic) NSString *manufacturer;
@property(readonly, nonatomic, getter=isActivatedForContinuityScreen) _Bool activatedForContinuityScreen;
@property(readonly, nonatomic) long long configuredClusterSize;
@property(readonly, nonatomic) long long clusterType;
@property(readonly, nonatomic) long long deviceSubType;
@property(readonly, nonatomic) long long deviceType;
@property(readonly, copy, nonatomic) NSString *ID;
@property(readonly, copy, nonatomic) NSString *name;
@property(readonly) unsigned long long hash;
- (_Bool)isEqual:(id)arg1;	// IMP=0x00000000000f76e6

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
// Preceding property had unknown attributes: ?
// Original attribute string: T@"NSString",?,R,C

@property(readonly, copy) NSString *description;
@property(readonly) Class superclass;

@end

