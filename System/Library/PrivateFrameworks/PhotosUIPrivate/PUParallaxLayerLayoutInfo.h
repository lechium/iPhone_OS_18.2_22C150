//
//     Generated by classdump-c 4.2.0 (64 bit) (iOS port by DreamDevLost, Updated by Kevin Bradley.)(Debug version compiled Dec 27 2024 14:18:54).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <objc/NSObject.h>

@class UIColor;

__attribute__((visibility("hidden")))
@interface PUParallaxLayerLayoutInfo : NSObject
{
    _Bool _styleIsHighKey;	// 8 = 0x8
    _Bool _canApplyParallax;	// 9 = 0x9
    _Bool _animateChanges;	// 10 = 0xa
    long long _deviceOrientation;	// 16 = 0x10
    UIColor *_primaryStyleColor;	// 24 = 0x18
    double _headroomVisibilityAmount;	// 32 = 0x20
    double _parallaxAmount;	// 40 = 0x28
    double _visibilityAmount;	// 48 = 0x30
    unsigned long long _visibilityEdge;	// 56 = 0x38
    struct CGPoint _parallaxVector;	// 64 = 0x40
    struct CGRect _containerFrame;	// 80 = 0x50
    struct CGRect _visibleFrame;	// 112 = 0x70
    struct CGRect _settlingEffectFrame;	// 144 = 0x90
    struct CGRect _headroomFrame;	// 176 = 0xb0
}

- (void).cxx_destruct;	// IMP=0x0000000000624e2c
@property(readonly, nonatomic) _Bool animateChanges; // @synthesize animateChanges=_animateChanges;
@property(readonly, nonatomic) unsigned long long visibilityEdge; // @synthesize visibilityEdge=_visibilityEdge;
@property(readonly, nonatomic) double visibilityAmount; // @synthesize visibilityAmount=_visibilityAmount;
@property(readonly, nonatomic) double parallaxAmount; // @synthesize parallaxAmount=_parallaxAmount;
@property(readonly, nonatomic) struct CGPoint parallaxVector; // @synthesize parallaxVector=_parallaxVector;
@property(readonly, nonatomic) _Bool canApplyParallax; // @synthesize canApplyParallax=_canApplyParallax;
@property(readonly, nonatomic) double headroomVisibilityAmount; // @synthesize headroomVisibilityAmount=_headroomVisibilityAmount;
@property(readonly, nonatomic) UIColor *primaryStyleColor; // @synthesize primaryStyleColor=_primaryStyleColor;
@property(readonly, nonatomic) _Bool styleIsHighKey; // @synthesize styleIsHighKey=_styleIsHighKey;
@property(readonly, nonatomic) struct CGRect headroomFrame; // @synthesize headroomFrame=_headroomFrame;
@property(readonly, nonatomic) struct CGRect settlingEffectFrame; // @synthesize settlingEffectFrame=_settlingEffectFrame;
@property(readonly, nonatomic) struct CGRect visibleFrame; // @synthesize visibleFrame=_visibleFrame;
@property(readonly, nonatomic) struct CGRect containerFrame; // @synthesize containerFrame=_containerFrame;
@property(readonly, nonatomic) long long deviceOrientation; // @synthesize deviceOrientation=_deviceOrientation;
- (id)description;	// IMP=0x0000000000624b6f
@property(readonly, nonatomic) struct CGAffineTransform additionalContentTransform;
@property(readonly, nonatomic) struct CGAffineTransform additionalTransform;
- (struct CGRect)viewFrameForLayerFrame:(struct CGRect)arg1;	// IMP=0x0000000000624958
- (_Bool)isEqual:(id)arg1;	// IMP=0x000000000062444c
- (id)initWithDeviceOrientation:(long long)arg1 containerFrame:(struct CGRect)arg2 visibleFrame:(struct CGRect)arg3 settlingEffectFrame:(struct CGRect)arg4 headroomFrame:(struct CGRect)arg5 headroomVisibilityAmount:(double)arg6 styleIsHighKey:(_Bool)arg7 primaryStyleColor:(id)arg8 canApplyParallax:(_Bool)arg9 parallaxVector:(struct CGPoint)arg10 parallaxAmount:(double)arg11 visibilityAmount:(double)arg12 visibilityEdge:(unsigned long long)arg13 animateChanges:(_Bool)arg14;	// IMP=0x0000000000624270

@end

