//
//     Generated by classdump-c 4.2.0 (64 bit) (iOS port by DreamDevLost, Updated by Kevin Bradley.)(Debug version compiled Dec 27 2024 14:18:54).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#pragma mark Named Structures

struct CGSize {
    double width;
    double height;
};

struct EspressoNet;

struct EspressoTensor {
    CDUnknownFunctionPointerType *_vptr$Tensor;
    int type_;
    struct TensorShape shape_;
    struct shared_ptr<ik::TensorStorage> storage_;
};

struct MTLResourceID {
    unsigned long long _field1;
};

struct PixelBufferTensor {
    CDUnknownFunctionPointerType *_vptr$Tensor;
    int type_;
    struct TensorShape shape_;
    struct shared_ptr<ik::TensorStorage> storage_;
};

struct PixelBufferTransfer;

struct TensorShape {
    struct vector<unsigned long, std::allocator<unsigned long>> sizes_;
};

struct TensorStorage;

struct _NSRange {
    unsigned long long _field1;
    unsigned long long _field2;
};

struct __shared_weak_count;

struct shared_ptr<ik::EspressoNet> {
    struct EspressoNet *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<ik::PixelBufferTransfer> {
    struct PixelBufferTransfer *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<ik::TensorStorage> {
    struct TensorStorage *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct unique_ptr<ik::EspressoNet, std::default_delete<ik::EspressoNet>> {
    struct __compressed_pair<ik::EspressoNet *, std::default_delete<ik::EspressoNet>> {
        struct EspressoNet *__value_;
    } __ptr_;
};

struct vImage_Buffer {
    void *_field1;
    unsigned long long _field2;
    unsigned long long _field3;
    unsigned long long _field4;
};

struct vector<unsigned long, std::allocator<unsigned long>> {
    unsigned long long *__begin_;
    unsigned long long *__end_;
    struct __compressed_pair<unsigned long *, std::allocator<unsigned long>> {
        unsigned long long *__value_;
    } __end_cap_;
};

#pragma mark Typedef'd Structures

typedef struct {
    unsigned char _field1;
    unsigned char _field2;
    unsigned char _field3;
    unsigned char _field4;
} CDStruct_a06f635e;

typedef struct {
    unsigned long long _field1;
    unsigned long long _field2;
    unsigned long long _field3;
} CDStruct_14f26992;

typedef struct {
    unsigned long long _field1;
    unsigned long long _field2;
} CDStruct_4bcfbbae;

typedef struct {
    float _field1;
    float _field2;
} CDStruct_b2fbf00d;

typedef struct {
    CDStruct_14f26992 _field1;
    CDStruct_14f26992 _field2;
} CDStruct_4c83c94d;

// Template types
typedef struct shared_ptr<ik::PixelBufferTransfer> {
    struct PixelBufferTransfer *__ptr_;
    struct __shared_weak_count *__cntrl_;
} shared_ptr_b97beb03;

