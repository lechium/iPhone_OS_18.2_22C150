//
//     Generated by classdump-c 4.2.0 (64 bit) (iOS port by DreamDevLost, Updated by Kevin Bradley.)(Debug version compiled Dec 27 2024 14:18:54).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <UIKit/UIView.h>

@class CAFilter, MISSING_TYPE, UIButton, UIColor;

@interface CKEntryViewPlusButton : UIView
{
    MISSING_TYPE *blurContainerView;	// 8 = 0x8
    MISSING_TYPE *clippingView;	// 16 = 0x10
    MISSING_TYPE *backgroundView;	// 24 = 0x18
    MISSING_TYPE *backgroundViewContentView;	// 32 = 0x20
    MISSING_TYPE *buttonView;	// 40 = 0x28
    MISSING_TYPE *iconImageView;	// 48 = 0x30
    MISSING_TYPE *plusButtonDelegate;	// 56 = 0x38
    MISSING_TYPE *enabled;	// 72 = 0x48
    MISSING_TYPE *backgroundBlurRadiusLightMode;	// 80 = 0x50
    MISSING_TYPE *backgroundBlurRadiusDarkMode;	// 88 = 0x58
    MISSING_TYPE *backgroundCompositingFilterForLightMode;	// 96 = 0x60
    MISSING_TYPE *backgroundCompositingFilterForDarkMode;	// 104 = 0x68
}

- (void).cxx_destruct;	// IMP=0x000000000075baf0
- (void)layoutSubviews;	// IMP=0x000000000075baa0
@property(nonatomic, readonly) UIButton *button;
- (void)traitCollectionDidChange:(id)arg1;	// IMP=0x000000000075b640
@property(nonatomic) double plusSymbolOpacity;
@property(nonatomic, retain) CAFilter *backgroundCompositingFilterForDarkMode; // @synthesize backgroundCompositingFilterForDarkMode;
@property(nonatomic, retain) CAFilter *backgroundCompositingFilterForLightMode; // @synthesize backgroundCompositingFilterForLightMode;
@property(nonatomic) double backgroundBlurRadiusDarkMode; // @synthesize backgroundBlurRadiusDarkMode;
@property(nonatomic) double backgroundBlurRadiusLightMode; // @synthesize backgroundBlurRadiusLightMode;
@property(nonatomic) double backgroundBlurRasterizationPercentage;
@property(nonatomic, retain) UIColor *plusButtonBackgroundColor;
@property(nonatomic) double backgroundCornerRadius;
@property(nonatomic) _Bool automaticallyAdjustsBackgroundCornerRadius;
@property(nonatomic) _Bool enabled; // @synthesize enabled;
- (id)initWithCoder:(id)arg1;	// IMP=0x000000000075a3e0
- (id)initWithFrame:(struct CGRect)arg1;	// IMP=0x000000000075a3b0
- (id)pointerInteraction:(id)arg1 styleForRegion:(id)arg2;	// IMP=0x000000000075bbd0
- (id)pointerInteraction:(id)arg1 regionForRequest:(id)arg2 defaultRegion:(id)arg3;	// IMP=0x000000000075bbb0

@end

