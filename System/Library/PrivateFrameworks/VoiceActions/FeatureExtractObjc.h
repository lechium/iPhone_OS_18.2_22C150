//
//     Generated by classdump-c 4.2.0 (64 bit) (iOS port by DreamDevLost, Updated by Kevin Bradley.)(Debug version compiled Dec 27 2024 14:18:54).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <objc/NSObject.h>

@class MISSING_TYPE;

@interface FeatureExtractObjc : NSObject
{
    MISSING_TYPE *audioSampleIngestionBuffer;	// 8 = 0x8
    MISSING_TYPE *audioSampleWorkBuffer;	// 16 = 0x10
    MISSING_TYPE *slidingCmvnBuffer;	// 24 = 0x18
    MISSING_TYPE *spliceBuffer;	// 32 = 0x20
    MISSING_TYPE *nnetIntakeBuffer;	// 40 = 0x28
    MISSING_TYPE *spliceBufferCounter;	// 48 = 0x30
    MISSING_TYPE *spliceBufferCounterAll;	// 56 = 0x38
    MISSING_TYPE *frameCounter;	// 64 = 0x40
    MISSING_TYPE *nn;	// 72 = 0x48
    MISSING_TYPE *fftCalculator;	// 80 = 0x50
    MISSING_TYPE *cmvnSlidingWindowSum;	// 88 = 0x58
    MISSING_TYPE *cmvnBufferCount;	// 96 = 0x60
    MISSING_TYPE *serialWorkQueue;	// 104 = 0x68
    MISSING_TYPE *stateAccessQueue;	// 112 = 0x70
    MISSING_TYPE *dataAvailableSem;	// 120 = 0x78
    MISSING_TYPE *allProcessedAfterStopSem;	// 128 = 0x80
    MISSING_TYPE *stopSignaled;	// 136 = 0x88
    MISSING_TYPE *acousticModelOutputAvailable;	// 144 = 0x90
    MISSING_TYPE *isRunning;	// 160 = 0xa0
    MISSING_TYPE *config;	// 168 = 0xa8
    MISSING_TYPE *spliceBufferLength;	// 176 = 0xb0
    MISSING_TYPE *splicedVectorDim;	// 184 = 0xb8
    MISSING_TYPE *numSamplesRemovedFromAudioSampleInjestionBuffer;	// 192 = 0xc0
    MISSING_TYPE *audioSampleIngestionBufferStartIndex;	// 200 = 0xc8
    MISSING_TYPE *frameDuration;	// 208 = 0xd0
    MISSING_TYPE *streamingMode;	// 212 = 0xd4
}

- (void).cxx_destruct;	// IMP=0x0000000000093030
- (id)init;	// IMP=0x0000000000092fd0
- (id)saveStandaloneDebugSamplesToFileWithDebugAudioSamples:(id)arg1 keyword:(id)arg2 score:(id)arg3 duration:(int)arg4;	// IMP=0x00000000000902f0
- (id)saveAudioDataToFileWithData:(id)arg1 keyword:(id)arg2 score:(id)arg3 duration:(int)arg4;	// IMP=0x000000000008f880
- (id)saveAudioBufferToFileWithPcmBuffer:(id)arg1 keyword:(id)arg2 score:(id)arg3 duration:(int)arg4;	// IMP=0x000000000008f440
- (void)stopWithCompletionHandlerWithCompletionHandler:(CDUnknownBlockType)arg1;	// IMP=0x000000000008ec60
- (void)addSamples:(const short *)arg1 count:(long long)arg2;	// IMP=0x000000000008e9c0
- (void)addFloatSamples:(const float *)arg1 count:(long long)arg2;	// IMP=0x000000000008e630
- (id)audioForKeywordWithStartFrame:(long long)arg1 endFrame:(long long)arg2 actualEndFrame:(long long *)arg3;	// IMP=0x000000000008e290
- (void)reset;	// IMP=0x000000000008d440
- (void)startWithCompletionHandlerWithCompletionHandler:(CDUnknownBlockType)arg1;	// IMP=0x000000000008d2e0
- (void)setStreamingModeWithStreaming:(_Bool)arg1;	// IMP=0x000000000008cb90
- (id)configuration;	// IMP=0x000000000008cb50
- (void)setCmvnMinWindowLengthWithCmvnMinWindowLength:(long long)arg1;	// IMP=0x000000000008caa0
- (void)addCallbackForAcousticModelOutputAvailableWithCallback:(CDUnknownBlockType)arg1;	// IMP=0x000000000008c9c0
- (id)initWithConfig:(id)arg1;	// IMP=0x000000000008c950

@end

