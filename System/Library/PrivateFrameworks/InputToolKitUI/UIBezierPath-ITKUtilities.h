//
//     Generated by classdump-c 4.2.0 (64 bit) (iOS port by DreamDevLost, Updated by Kevin Bradley.)(Debug version compiled Dec 27 2024 14:18:54).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <UIKitCore/UIBezierPath.h>

@class NSMutableArray;

@interface UIBezierPath (ITKUtilities)
+ (id)mapPaths:(id)arg1 toQuads:(id)arg2;	// IMP=0x002000000000b13f
+ (double)radiusForQuads:(id)arg1 radiusRatio:(double)arg2;	// IMP=0x002000000000af35
+ (id)itk_roundAndGroupNormalizedQuadsForHighlight:(id)arg1 aspectRatio:(double)arg2 expansionScale:(double)arg3 radiusToAvgHeightRatio:(double)arg4;	// IMP=0x002000000000a2d8
+ (struct CGPoint)itk_projectPoint:(struct CGPoint)arg1 lineStart:(struct CGPoint)arg2 lineEnd:(struct CGPoint)arg3;	// IMP=0x002000000000a16d
+ (struct CGPoint)itk_calculateCenterForPoints:(struct CGPoint)arg1 p2:(struct CGPoint)arg2 p3:(struct CGPoint)arg3 radius:(double)arg4;	// IMP=0x0020000000009f38
+ (double)itk_signForRadiusWithVectorStart:(struct CGPoint)arg1 end:(struct CGPoint)arg2 otherPoint:(struct CGPoint)arg3;	// IMP=0x0020000000009eba
+ (double)itk_clampedRadius:(double)arg1 p1:(struct CGPoint)arg2 p2:(struct CGPoint)arg3 p3:(struct CGPoint)arg4;	// IMP=0x0020000000009d93
+ (id)itk_shiftLinePerpendicularlyFromPoint:(struct CGPoint)arg1 to:(struct CGPoint)arg2 radius:(double)arg3;	// IMP=0x0020000000009c7c
+ (void)_processPointsForRounding:(id)arg1 withRadius:(double)arg2;	// IMP=0x0020000000009887
+ (void)_processPointsForNarrowAngles:(id)arg1;	// IMP=0x0020000000009609
+ (struct CGPath *)itk_newRoundedPathWithRadius:(double)arg1 points:(id)arg2;	// IMP=0x002000000000904d
+ (struct CGPath *)_cgPathFromClipperPath:(void *)arg1;	// IMP=0x0020000000008fa2
+ (_Bool)itk_cgPathcontainsAnyCurveToPoints:(struct CGPath *)arg1;	// IMP=0x0020000000008ed5
+ (id)itk_groupAndRoundPaths:(id)arg1 radius:(double)arg2 offset:(double)arg3;	// IMP=0x0020000000008687
+ (id)itk_subpathArrayFromCGPath:(struct CGPath *)arg1;	// IMP=0x00200000000079a2
+ (id)itk_pathFromCGPath:(struct CGPath *)arg1;	// IMP=0x002000000000752e
+ (id)itk_allPointsFromCGPath:(struct CGPath *)arg1;	// IMP=0x00200000000072e2
- (id)itk_expandWithOffset:(double)arg1;	// IMP=0x00100000000084d0
- (id)_itk_flattenWithPath:(id)arg1 clipType:(int)arg2;	// IMP=0x00100000000080f4
- (id)itk_intersectAndFlattenWithPath:(id)arg1;	// IMP=0x0010000000008077
- (id)itk_unionAndFlattenWithPath:(id)arg1;	// IMP=0x0010000000007ff7
- (id)itk_pathByFittingToRect:(struct CGRect)arg1;	// IMP=0x0010000000007d0f
- (id)itk_subpathArray;	// IMP=0x001000000000795d
- (id)debugQuickLookObject;	// IMP=0x0010000000007844
- (id)itk_pathFromFlippingInRect:(struct CGRect)arg1;	// IMP=0x0010000000007552
- (void)itk_applyTransform:(struct CGAffineTransform)arg1;	// IMP=0x0010000000007540
@property(readonly, nonatomic) NSMutableArray *itk_allPoints;
@property(readonly, nonatomic) double itk_lengthIgnoringCurves;
@property(readonly, nonatomic) struct CGPoint itk_centroid;
- (void)itk_appendBezierPath:(id)arg1;	// IMP=0x0010000000006d0e
- (void)itk_addArcWithCenter:(struct CGPoint)arg1 radius:(double)arg2 startAngle:(double)arg3 endAngle:(double)arg4 clockwise:(_Bool)arg5;	// IMP=0x0010000000006cf9
- (void)itk_addCurveToPoint:(struct CGPoint)arg1 controlPoint1:(struct CGPoint)arg2 controlPoint2:(struct CGPoint)arg3;	// IMP=0x0010000000006ce4
- (void)itk_appendRect:(struct CGRect)arg1;	// IMP=0x0010000000006c34
- (void)itk_addLineToPoint:(struct CGPoint)arg1;	// IMP=0x0010000000006c22
@property(readonly, nonatomic) struct CGPath *itk_CGPath;
@end

