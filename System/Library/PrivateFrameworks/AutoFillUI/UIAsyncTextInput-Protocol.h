//
//     Generated by classdump-c 4.2.0 (64 bit) (iOS port by DreamDevLost, Updated by Kevin Bradley.)(Debug version compiled Dec 27 2024 14:18:54).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <AutoFillUI/UIKeyInput-Protocol.h>
#import <AutoFillUI/UITextSelectionDirectionNavigation-Protocol.h>

@class NSArray, NSAttributedString, NSDictionary, NSString, NSTextAlternatives, UIKeyEvent, UITextPlaceholder, UITextPosition, UITextRange, UITextSuggestion, UIView, UIWKDocumentRequest;
@protocol UIAsyncTextInputDelegate, UIEditMenuInteractionAnimating, UIExtendedTextInputTraits, UITextInputTraits;

@protocol UIAsyncTextInput <UIKeyInput, UITextSelectionDirectionNavigation>

@optional
@property(readonly, nonatomic) id <UIExtendedTextInputTraits> extendedTraitsDelegate;
// Preceding property had unknown attributes: ?
// Original attribute string: T@"<UIExtendedTextInputTraits>",?,R,N

@property(readonly, nonatomic) id <UITextInputTraits> textInputTraits;
// Preceding property had unknown attributes: ?
// Original attribute string: T@"<UITextInputTraits>",?,R,N

@property(readonly, nonatomic) UITextRange *markedTextRange;
// Preceding property had unknown attributes: ?
// Original attribute string: T@"UITextRange",?,R,N

@property(copy) UITextRange *selectedTextRange;
// Preceding property had unknown attributes: ?
// Original attribute string: T@"UITextRange",?,C

@property(readonly, nonatomic) struct CGRect selectionClipRect;
// Preceding property had unknown attributes: ?
// Original attribute string: T{CGRect={CGPoint=dd}{CGSize=dd}},?,R,N

@property(readonly, nonatomic) UIView *textInputView;
// Preceding property had unknown attributes: ?
// Original attribute string: T@"UIView",?,R,N

@property(readonly, nonatomic) UIView *unscaledView;
// Preceding property had unknown attributes: ?
// Original attribute string: T@"UIView",?,R,N

@property(readonly, nonatomic) struct CGRect unobscuredContentRect;
// Preceding property had unknown attributes: ?
// Original attribute string: T{CGRect={CGPoint=dd}{CGSize=dd}},?,R,N

@property(readonly, nonatomic) struct CGRect textLastRect;
// Preceding property had unknown attributes: ?
// Original attribute string: T{CGRect={CGPoint=dd}{CGSize=dd}},?,R,N

@property(readonly, nonatomic) struct CGRect textFirstRect;
// Preceding property had unknown attributes: ?
// Original attribute string: T{CGRect={CGPoint=dd}{CGSize=dd}},?,R,N

@property(readonly, nonatomic) _Bool selectionAtDocumentStart;
// Preceding property had unknown attributes: ?
// Original attribute string: TB,?,R,N

@property(readonly, nonatomic) NSArray *alternativesForSelectedText;
// Preceding property had unknown attributes: ?
// Original attribute string: T@"NSArray",?,R,N

@property(readonly, nonatomic) NSString *selectedText;
// Preceding property had unknown attributes: ?
// Original attribute string: T@"NSString",?,R,N

@property(readonly, nonatomic) _Bool hasMarkedText;
// Preceding property had unknown attributes: ?
// Original attribute string: TB,?,R,N

@property(readonly, nonatomic) NSAttributedString *attributedMarkedText;
// Preceding property had unknown attributes: ?
// Original attribute string: T@"NSAttributedString",?,R,N

@property(readonly, nonatomic) NSString *markedText;
// Preceding property had unknown attributes: ?
// Original attribute string: T@"NSString",?,R,N

@property(readonly, nonatomic, getter=isReplaceAllowed) _Bool replacedAllowed;
// Preceding property had unknown attributes: ?
// Original attribute string: TB,?,R,N,GisReplaceAllowed

@property(nonatomic) __weak id <UIAsyncTextInputDelegate> asyncSystemInputDelegate;
// Preceding property had unknown attributes: ?
// Original attribute string: T@"<UIAsyncTextInputDelegate>",?,W,N

- (void)addTextAlternatives:(NSTextAlternatives *)arg1;
- (void)willDismissEditMenuWithAnimator:(id <UIEditMenuInteractionAnimating>)arg1;
- (void)willPresentEditMenuWithAnimator:(id <UIEditMenuInteractionAnimating>)arg1;
- (void)setAttributedMarkedText:(NSAttributedString *)arg1 selectedRange:(struct _NSRange)arg2;
- (void)insertDictationResult:(NSArray *)arg1;
- (NSDictionary *)textStylingAtPosition:(UITextPosition *)arg1 inDirection:(long long)arg2;
- (NSArray *)selectionRectsForRange:(UITextRange *)arg1;
- (struct CGRect)caretRectForPosition:(UITextPosition *)arg1;
- (void)setBaseWritingDirection:(long long)arg1 forRange:(UITextRange *)arg2;
- (long long)offsetFromPosition:(UITextPosition *)arg1 toPosition:(UITextPosition *)arg2;
- (void)unmarkText;
- (void)setMarkedText:(NSString *)arg1 selectedRange:(struct _NSRange)arg2;
- (NSString *)textInRange:(UITextRange *)arg1;
- (void)deleteInDirection:(long long)arg1 toGranularity:(long long)arg2;
- (void)insertTextSuggestion:(UITextSuggestion *)arg1;
- (void)removeTextPlaceholder:(UITextPlaceholder *)arg1 willInsertText:(_Bool)arg2 completionHandler:(void (^)(void))arg3;
- (void)insertTextPlaceholderWithSize:(struct CGSize)arg1 completionHandler:(void (^)(UITextPlaceholder *))arg2;
- (_Bool)pointIsNearMarkedText:(struct CGPoint)arg1;
- (_Bool)hasSelectablePositionAtPoint:(struct CGPoint)arg1;
- (void)requestDocumentContext:(UIWKDocumentRequest *)arg1 completionHandler:(void (^)(UIWKDocumentContext *))arg2;
- (void)didInsertFinalDictationResult;
- (void)willInsertFinalDictationResult;
- (void)requestDictationContext:(void (^)(NSString *, NSString *, NSString *))arg1;
- (void)replaceDictatedText:(NSString *)arg1 withText:(NSString *)arg2;
- (void)replaceSelectionOffset:(long long)arg1 length:(unsigned long long)arg2 withAnnotatedString:(NSAttributedString *)arg3 relativeReplacementRange:(struct _NSRange)arg4;
- (void)replaceText:(NSString *)arg1 withText:(NSString *)arg2;
- (void)requestTextRectsForString:(NSString *)arg1 withCompletionHandler:(void (^)(NSArray *))arg2;
- (void)requestTextContextForAutocorrectionWithCompletionHandler:(void (^)(UIWKDocumentContext *))arg1;
- (void)replaceText:(NSString *)arg1 withText:(NSString *)arg2 options:(unsigned long long)arg3 withCompletionHandler:(void (^)(NSArray *))arg4;
- (void)transposeCharacters;
- (void)shiftKeyStateChangedFrom:(long long)arg1 to:(long long)arg2;
- (void)handleAsyncKeyEvent:(UIKeyEvent *)arg1 withCompletionHandler:(void (^)(UIKeyEvent *, _Bool))arg2;
- (_Bool)canPerformAction:(SEL)arg1 withSender:(id)arg2;
@end

