//
//     Generated by classdump-c 4.2.0 (64 bit) (iOS port by DreamDevLost, Updated by Kevin Bradley.)(Debug version compiled Dec 27 2024 14:18:54).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

@class VCCannedVideoPacketSource, VCDisplayLink, VCVideoHardwareDumpCollector, VCVideoStreamRateAdaptationFeedbackOnly, VideoAttributes;

__attribute__((visibility("hidden")))
@interface VCVideoReceiverDefault
{
    struct tagVCVideoReceiverConfig _videoReceiverConfig;	// 104 = 0x68
    struct tagHANDLE *_videoReceiverHandle;	// 1504 = 0x5e0
    struct tagHANDLE *_videoTransmitterHandle;	// 1512 = 0x5e8
    long long _streamToken;	// 1520 = 0x5f0
    void *_controlInfoGenerator;	// 1528 = 0x5f8
    VideoAttributes *_remoteVideoAttributes;	// 1536 = 0x600
    _Bool _receivedFirstRemoteFrame;	// 1544 = 0x608
    _Bool _shouldEnableFaceZoom;	// 1545 = 0x609
    _Bool _shouldUpdateRemoteScreenAttributes;	// 1546 = 0x60a
    double _lastKeyFrameRequestTime;	// 1552 = 0x610
    unsigned short _lastKeyFrameRequestStreamID;	// 1560 = 0x618
    VCVideoStreamRateAdaptationFeedbackOnly *_rateAdaptation;	// 1568 = 0x620
    VCDisplayLink *_displayLink;	// 1576 = 0x628
    _Bool _notifyDelegateVideoAttributeChanges;	// 1584 = 0x630
    _Bool _lastLocalPortrait;	// 1585 = 0x631
    _Bool _lastRemotePortrait;	// 1586 = 0x632
    struct CGSize _remoteScreenPortraitAspectRatio;	// 1592 = 0x638
    struct CGSize _remoteScreenLandscapeAspectRatio;	// 1608 = 0x648
    struct CGSize _remoteExpectedPortraitAspectRatio;	// 1624 = 0x658
    struct CGSize _remoteExpectedLandscapeAspectRatio;	// 1640 = 0x668
    _Bool _remoteSupportsExpectedAspectRatio;	// 1656 = 0x678
    _Bool _canLocalResizePIP;	// 1657 = 0x679
    _Bool _canRemoteResizePIP;	// 1658 = 0x67a
    unsigned long long _cvoExtensionID;	// 1664 = 0x680
    _Bool _forceZeroRegionOfInterestOrigin;	// 1672 = 0x688
    _Bool _pendingVideoAttributesUpdateOnModeChange;	// 1673 = 0x689
    VCVideoHardwareDumpCollector *_validationContext;	// 1680 = 0x690
    VCCannedVideoPacketSource *_cannedPacketSource;	// 1688 = 0x698
    double _videoReceiverRxFrameRate;	// 1696 = 0x6a0
}

@property _Bool receivedFirstRemoteFrame; // @synthesize receivedFirstRemoteFrame=_receivedFirstRemoteFrame;
@property struct tagVCVideoReceiverConfig videoReceiverConfig; // @synthesize videoReceiverConfig=_videoReceiverConfig;
@property(nonatomic) _Bool shouldUpdateRemoteScreenAttributes; // @synthesize shouldUpdateRemoteScreenAttributes=_shouldUpdateRemoteScreenAttributes;
@property(nonatomic) _Bool shouldEnableFaceZoom; // @synthesize shouldEnableFaceZoom=_shouldEnableFaceZoom;
@property(retain) VideoAttributes *remoteVideoAttributes; // @synthesize remoteVideoAttributes=_remoteVideoAttributes;
- (void)setLooseAVSyncEnabled:(_Bool)arg1;	// IMP=0x00000000001be8de
- (void)setDeferredAssemblyEnabled:(_Bool)arg1;	// IMP=0x00000000001be8d8
- (void)setJitterBufferMode:(int)arg1;	// IMP=0x00000000001be8d2
@property(readonly, nonatomic) double videoReceiverRxFrameRate; // @synthesize videoReceiverRxFrameRate=_videoReceiverRxFrameRate;
@property(readonly, nonatomic) double activeVideoStallDuration;
- (void)setShouldEnableMLEnhance:(_Bool)arg1 streamID:(unsigned short)arg2;	// IMP=0x00000000001be8ab
- (void)handleActiveConnectionChange:(id)arg1;	// IMP=0x00000000001be895
- (void)updateSourcePlayoutTime:(const struct tagVCMediaTime *)arg1;	// IMP=0x00000000001be88f
- (void)setSynchronizer:(id)arg1;	// IMP=0x00000000001be889
- (void)collectChannelMetrics:(CDStruct_b671a7c4 *)arg1 interval:(float)arg2;	// IMP=0x00000000001be86d
- (void)didSwitchFromStreamID:(unsigned short)arg1 toStreamID:(unsigned short)arg2;	// IMP=0x00000000001be7fe
- (void)handleKeyFrameRequestWithSizeAndFistMBs:(unsigned short *)arg1 count:(int)arg2 didReceiveRTCPFB:(_Bool)arg3 didReceiveFIR:(_Bool)arg4;	// IMP=0x00000000001be7bb
- (void)handleRequestingKeyFrameGenerationWithStreamID:(unsigned short)arg1 firType:(int)arg2;	// IMP=0x00000000001be377
- (void)setEnableRateAdaptation:(_Bool)arg1 maxBitrate:(unsigned int)arg2 minBitrate:(unsigned int)arg3 adaptationInterval:(double)arg4;	// IMP=0x00000000001be35a
- (double)roundTripTime;	// IMP=0x00000000001be345
- (void)rtcpSendIntervalElapsed;	// IMP=0x00000000001be33f
- (void)pauseVideo;	// IMP=0x00000000001be339
- (unsigned int)lastDisplayedFrameRTPTimestamp;	// IMP=0x00000000001be331
- (void)setTargetStreamID:(unsigned short)arg1;	// IMP=0x00000000001be32b
- (float)lastLastVideoStallDuration;	// IMP=0x00000000001be31d
- (double)lastReceivedVideoRTCPPacketTime;	// IMP=0x00000000001be30f
- (double)lastReceivedVideoRTPPacketTime;	// IMP=0x00000000001be301
- (void)stopVideo;	// IMP=0x00000000001be2c1
- (void)startVideo;	// IMP=0x00000000001be29c
- (void)cleanUpDisplayLink;	// IMP=0x00000000001be263
- (_Bool)initializeDisplayLink;	// IMP=0x00000000001be123
- (void)setVideoExpected:(_Bool)arg1;	// IMP=0x00000000001be11d
- (void)setEnableCVO:(_Bool)arg1 cvoExtensionID:(unsigned long long)arg2;	// IMP=0x00000000001be117
- (void)dealloc;	// IMP=0x00000000001bde60
- (void)setUpRemoteAspectRatiosFromFreatureListString:(const char *)arg1;	// IMP=0x00000000001bd892
- (void)setUpRemoteAspectRatiosForPayload:(int)arg1;	// IMP=0x00000000001bd7a0
- (void)setUpRemoteAspectRatios;	// IMP=0x00000000001bd74a
- (int)oneToOneStreamIndex;	// IMP=0x00000000001bd4f2
- (void)setFeedbackDelegate:(id)arg1;	// IMP=0x00000000001bd4ec
@property(nonatomic) int mode;
- (void)setUpCannedInjector:(struct tagVCVideoReceiverConfig *)arg1;	// IMP=0x00000000001bd21e
- (id)initWithConfig:(struct tagVCVideoReceiverConfig *)arg1 delegate:(id)arg2 delegateFunctions:(const struct tagVCVideoReceiverDelegateRealtimeInstanceVTable *)arg3 reportingAgent:(struct opaqueRTCReporting *)arg4 statisticsCollector:(id)arg5 transmitterHandle:(struct tagHANDLE *)arg6;	// IMP=0x00000000001bcce4

@end

