//
//     Generated by classdump-c 4.2.0 (64 bit) (iOS port by DreamDevLost, Updated by Kevin Bradley.)(Debug version compiled Dec 27 2024 14:18:54).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <objc/NSObject.h>

__attribute__((visibility("hidden")))
@interface VCPayloadUtils : NSObject
{
}

+ (int)audioCodecBandwidthForVCAudioCodecBandwidth:(int)arg1;	// IMP=0x00800000000a854b
+ (int)vcAudioCodecBandwidthForAudioCodecBandwidth:(int)arg1;	// IMP=0x00800000000a853a
+ (unsigned int)bitrateForEVSCodecMode:(int)arg1;	// IMP=0x00800000000a850b
+ (unsigned int)bitrateForAMRWBCodecMode:(int)arg1;	// IMP=0x00800000000a8413
+ (unsigned int)bitrateForAMRCodecMode:(int)arg1;	// IMP=0x00800000000a831b
+ (_Bool)supportsCodecBandwidthUpdateForCodecType:(long long)arg1;	// IMP=0x00800000000a830a
+ (_Bool)supportsCodecRateModesForCodecType:(long long)arg1;	// IMP=0x00800000000a82f0
+ (unsigned int)bitrateForCodecType:(long long)arg1 mode:(int)arg2;	// IMP=0x00800000000a8218
+ (int)payloadForCodecType:(long long)arg1;	// IMP=0x00800000000a7f70
+ (long long)codecTypeForPayload:(int)arg1;	// IMP=0x00800000000a7cdc
+ (float)qualityForPayload:(int)arg1 forBitrate:(unsigned int)arg2;	// IMP=0x00800000000a7af9
+ (_Bool)shouldEnablePacketSizeLimitForAudioFormat:(struct AudioStreamBasicDescription *)arg1;	// IMP=0x00800000000a7a7b
+ (unsigned int)internalBundleFactorForPayload:(int)arg1;	// IMP=0x00800000000a7a63
+ (_Bool)canBundleExternallyForPayload:(int)arg1 forBundlingScheme:(int)arg2 operatingMode:(int)arg3;	// IMP=0x00800000000a7a1b
+ (_Bool)shouldUseCookieForPayload:(int)arg1;	// IMP=0x00800000000a79ff
+ (_Bool)skipBandWidthCheckForCodecRateModes:(int)arg1 supportedBitrates:(id)arg2;	// IMP=0x00800000000a7843
+ (_Bool)isFormatAACELDNonSBR48KHzStereo:(const struct AudioStreamBasicDescription *)arg1;	// IMP=0x00800000000a77cd
+ (_Bool)isOpus4Channel48KhzPayload:(int)arg1 outFormat:(const struct AudioStreamBasicDescription *)arg2;	// IMP=0x00800000000a77a4
+ (_Bool)isEVSPayload:(int)arg1;	// IMP=0x00800000000a7788
+ (_Bool)isCodecModeSupported:(int)arg1 forBandwidth:(int)arg2 withPayload:(int)arg3;	// IMP=0x00800000000a7746
+ (_Bool)isAMRCodecModeSupported:(int)arg1 forBandwidth:(int)arg2;	// IMP=0x00800000000a7728
+ (_Bool)isEVSCodecModeSupported:(int)arg1 forBandwidth:(int)arg2;	// IMP=0x00800000000a76d0
+ (int)codecRateModeForDesiredANBR:(unsigned int)arg1 payload:(int)arg2 supportedBitrates:(id)arg3 supportedBandwidths:(id)arg4;	// IMP=0x00800000000a716e
+ (id)allowedBitratesForPayload:(int)arg1 supportedBitrates:(id)arg2 supportedBandwidths:(id)arg3;	// IMP=0x00800000000a6ea1
+ (id)supportedCodecModesForBandwidth:(int)arg1 payload:(int)arg2;	// IMP=0x00800000000a6e4e
+ (id)codecModesForEVS32kHz;	// IMP=0x00800000000a6e41
+ (id)codecModesForEVS16kHz;	// IMP=0x00800000000a6e34
+ (id)codecModesForEVS8kHz;	// IMP=0x00800000000a6e27
+ (id)codecModesForAMR16kHz;	// IMP=0x00800000000a6e1a
+ (id)codecModesForAMR8kHz;	// IMP=0x00800000000a6e0d
+ (int)codecBandwidthForPayload:(int)arg1;	// IMP=0x00800000000a6de0
+ (_Bool)canSetBitrateForPayload:(int)arg1;	// IMP=0x00800000000a6dc4
+ (unsigned int)codecSamplesPerFrameForPayload:(int)arg1 blockSize:(double)arg2 sampleRate:(unsigned int)arg3;	// IMP=0x00800000000a6c6a
+ (double)blockSizeForPayload:(int)arg1 sampleRate:(unsigned int)arg2;	// IMP=0x00800000000a6c48
+ (double)opusSamplesPerFrameForSampleRate:(unsigned int)arg1 blockSize:(double)arg2;	// IMP=0x00800000000a6c2b
+ (unsigned int)codecSamplesPerFrameForPayload:(int)arg1 blockSize:(double)arg2;	// IMP=0x00800000000a6c10
+ (unsigned int)audioCodecTypeForPayload:(int)arg1;	// IMP=0x00800000000a6ae4
+ (unsigned int)sampleRateForCodecBandwidth:(int)arg1;	// IMP=0x00800000000a6ac4
+ (unsigned int)sampleRateForPayload:(int)arg1;	// IMP=0x00800000000a69ff
+ (_Bool)isPayloadSupportedInFaceTime:(int)arg1;	// IMP=0x00800000000a69cc
+ (_Bool)isUseCaseWatchContinuity:(int)arg1 primaryPayload:(int)arg2;	// IMP=0x00800000000a69b0

@end

