//
//     Generated by classdump-c 4.2.0 (64 bit) (iOS port by DreamDevLost, Updated by Kevin Bradley.)(Debug version compiled Dec 27 2024 14:18:54).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <objc/NSObject.h>

@class NSMutableArray, NSMutableDictionary, VCMediaKeyIndex;
@protocol OS_dispatch_queue, OS_dispatch_source;

__attribute__((visibility("hidden")))
@interface VCSecurityKeyManager : NSObject
{
    id _delegate;	// 8 = 0x8
    id _reportingAgentWeak;	// 16 = 0x10
    NSMutableArray *_unknownKeyIndexList;	// 24 = 0x18
    _Bool _shortMKIForOneToOneEnabled;	// 32 = 0x20
    _Bool _shortMKIForGFTEnabled;	// 33 = 0x21
    NSMutableDictionary *_sendKeys;	// 40 = 0x28
    NSMutableDictionary *_receiveKeys;	// 48 = 0x30
    NSMutableDictionary *_prunePendingReceiveKeys;	// 56 = 0x38
    VCMediaKeyIndex *_latestSendKeyIndex;	// 64 = 0x40
    VCMediaKeyIndex *_latestReceiveKeyIndex;	// 72 = 0x48
    VCMediaKeyIndex *_keyIndexNotReceived;	// 80 = 0x50
    _Bool _isSendKeysCleanUpPending;	// 88 = 0x58
    _Bool _isReceiveKeysCleanUpPending;	// 89 = 0x59
    _Bool _forceRemoteMKMMissing;	// 90 = 0x5a
    double _keyMaterialNotUsedTimeout;	// 96 = 0x60
    NSObject<OS_dispatch_queue> *_keyManagerQueue;	// 104 = 0x68
    double _lastKeyIndexNotReceived;	// 112 = 0x70
    NSObject<OS_dispatch_source> *_pruneTimer;	// 120 = 0x78
    NSObject<OS_dispatch_source> *_encryptionKeyRollTimer;	// 128 = 0x80
    _Bool _isRunning;	// 136 = 0x88
}

@property(nonatomic) struct opaqueRTCReporting *reportingAgent;
- (id)copyMKMWithPrefix:(id)arg1;	// IMP=0x0000000000343bd5
- (id)copyMKMWithPrefix:(id)arg1 forParticipantID:(unsigned long long)arg2;	// IMP=0x00000000003430d5
- (void)detectInabilityToDecryptSymptom:(id)arg1 prefix:(id)arg2;	// IMP=0x0000000000342c37
- (_Bool)associateMKI:(id)arg1 withParticipantID:(unsigned long long)arg2;	// IMP=0x00000000003424b0
- (void)scheduleEncryptionRollTimerWithDelay:(double)arg1;	// IMP=0x00000000003422f9
- (void)handlePruneTimerEventAndReschedule;	// IMP=0x0000000000342126
- (void)schedulePruneTimer:(double)arg1;	// IMP=0x0000000000341e1a
- (double)firstExpirationTime;	// IMP=0x0000000000341b5b
- (double)pruneAllExpiredKeys;	// IMP=0x000000000034160e
- (void)pruneRecvKeyMaterialWithDelay:(double)arg1;	// IMP=0x0000000000340e26
- (void)pruneSendKeyMaterialWithDelay:(double)arg1;	// IMP=0x0000000000340643
- (id)getLatestRecvKeyMaterial;	// IMP=0x0000000000340184
- (id)latestSendKeyMaterialWithSecurityKeyMode:(BOOL)arg1;	// IMP=0x000000000033fc60
- (void)adjustMKILength:(id)arg1 securityKeyMode:(BOOL)arg2;	// IMP=0x000000000033fae7
- (void)replaceMKIWithShortMKI:(id)arg1;	// IMP=0x000000000033f965
- (void)notifyEncryptionInfoChange:(id)arg1 securityKeyMode:(BOOL)arg2;	// IMP=0x000000000033f831
- (id)getRecvKeyMaterialWithIndex:(id)arg1;	// IMP=0x000000000033f4dc
- (id)getSendKeyMaterialWithIndex:(id)arg1;	// IMP=0x000000000033efc7
- (_Bool)addSecurityKeyMaterial:(id)arg1 securityKeyMode:(BOOL)arg2;	// IMP=0x000000000033e655
- (_Bool)addSecurityKeyMaterial:(id)arg1;	// IMP=0x000000000033e63e
- (void)stopTimers;	// IMP=0x000000000033e4ca
- (_Bool)startTimers;	// IMP=0x000000000033de11
- (void)releaseTimers;	// IMP=0x000000000033ddb0
- (void)stop;	// IMP=0x000000000033dbe0
- (void)start;	// IMP=0x000000000033d9ce
- (id)logPrefix;	// IMP=0x000000000033d9a9
- (long long)getNotUsedTimeout;	// IMP=0x000000000033d99d
- (id)delegate;	// IMP=0x000000000033d982
- (void)dealloc;	// IMP=0x000000000033d74b
- (id)initWithDelegate:(id)arg1 options:(const struct tagVCSecurityKeyManagerOptions *)arg2;	// IMP=0x000000000033d474

@end

