//
//     Generated by classdump-c 4.2.0 (64 bit) (iOS port by DreamDevLost, Updated by Kevin Bradley.)(Debug version compiled Dec 27 2024 14:18:54).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <objc/NSObject.h>

@class BitrateLimits, NSMutableDictionary, NSMutableSet, VCAudioTier;

__attribute__((visibility("hidden")))
@interface VCAudioTierPicker : NSObject
{
    NSMutableDictionary *_tierTablesForRedNumPayloads;	// 8 = 0x8
    VCAudioTier *_defaultTier;	// 16 = 0x10
    VCAudioTier *_fallbackTier;	// 24 = 0x18
    BitrateLimits *_bitrateLimits;	// 32 = 0x20
    CDStruct_22a33d58 _config;	// 40 = 0x28
    NSMutableDictionary *_tierTablePlist;	// 88 = 0x58
    NSMutableSet *_audioPayloads;	// 96 = 0x60
}

+ (id)valueForNetworkBitrate:(id)arg1 networkBitrate:(unsigned int)arg2;	// IMP=0x00600000003714b6
+ (_Bool)shouldFilterTierForPayloadConfig:(id)arg1 bitRate:(unsigned int)arg2 packetsPerBundle:(unsigned int)arg3 mode:(unsigned char)arg4 redNumPayloads:(unsigned int)arg5 cellular:(_Bool)arg6;	// IMP=0x0060000000371399
+ (id)selectHighestQualityAudioTiers:(id)arg1 forBitrateLimits:(id)arg2 isHardLimit:(_Bool)arg3;	// IMP=0x00600000003707ab
+ (_Bool)loadVCAudioTierFromTierTable:(id)arg1 bitrate:(unsigned int)arg2 redNumPayloads:(unsigned int)arg3 outEntryArray:(id)arg4;	// IMP=0x00600000003702b0
+ (_Bool)loadVCAudioTierFromTierTable:(id)arg1 config:(const CDStruct_22a33d58 *)arg2 allowRedAtLowBitrate:(_Bool)arg3 alwaysOnAudioRedundancyDisabled:(_Bool)arg4 redNumPayloads:(unsigned int)arg5 tierBitrate:(unsigned int)arg6 outEntryArray:(id)arg7;	// IMP=0x006000000036fa5f
+ (_Bool)isAlwaysOnRedAudioTier:(unsigned int)arg1 redNumPayloads:(unsigned int)arg2 usingCellular:(_Bool)arg3;	// IMP=0x006000000036f9fe
+ (_Bool)isLowBitrateAudioTier:(unsigned int)arg1;	// IMP=0x006000000036f9ef
+ (_Bool)isU1ModeWithPlistSupport:(unsigned char)arg1;	// IMP=0x006000000036ecac
+ (_Bool)isModePlistSupported:(unsigned char)arg1;	// IMP=0x006000000036ec88
+ (_Bool)isModeLowLatency:(unsigned char)arg1;	// IMP=0x006000000036ec79
+ (_Bool)isModeV2:(unsigned char)arg1;	// IMP=0x006000000036ec6a
+ (_Bool)isModeAudioVideo:(unsigned char)arg1;	// IMP=0x006000000036ec53
+ (_Bool)isModeAudioOnly:(unsigned char)arg1;	// IMP=0x006000000036ec3c
+ (_Bool)usePlistForAudioTierTableFromMode:(unsigned char)arg1;	// IMP=0x006000000036ebe2
+ (id)allPossibleCombinations:(id)arg1 supportedPacketsPerBundle:(id)arg2 redNumPayloads:(unsigned int)arg3 headerSize:(unsigned int)arg4 tierPickerMode:(unsigned char)arg5 usingCellular:(_Bool)arg6 useCaseWatchContinuity:(_Bool)arg7;	// IMP=0x006000000036e4bd
+ (_Bool)arrayHasObject:(id)arg1 withPayloadType:(int)arg2;	// IMP=0x006000000036e3b6
+ (unsigned char)operatingModeToTierPickerMode:(int)arg1 isLowLatency:(_Bool)arg2 preferPlistForTierTable:(_Bool)arg3;	// IMP=0x006000000036dd27
+ (int)tierPickerModeToAVConferenceOperatingMode:(unsigned char)arg1;	// IMP=0x006000000036dd09
@property(retain, nonatomic) BitrateLimits *bitrateLimits; // @synthesize bitrateLimits=_bitrateLimits;
@property CDStruct_22a33d58 config; // @synthesize config=_config;
@property(readonly) VCAudioTier *defaultTier; // @synthesize defaultTier=_defaultTier;
- (void)addPayloadsFromGFTRedNumPayloadsDict:(id)arg1 isDeviceClassWolf:(_Bool)arg2;	// IMP=0x0000000000373f9f
- (void)addPayloadsFromGFTPayloadsArray:(id)arg1;	// IMP=0x0000000000373e06
- (void)addPayloadsFromU1RedNumPayloadsDict:(id)arg1 config:(const CDStruct_22a33d58 *)arg2 mode:(id)arg3 isIPv4:(_Bool)arg4 isCellular:(_Bool)arg5;	// IMP=0x00000000003738d4
- (void)addPayloadsFromU1IPVerDict:(id)arg1 config:(const CDStruct_22a33d58 *)arg2 mode:(id)arg3;	// IMP=0x00000000003735ad
- (void)addPayloadFromTier:(id)arg1;	// IMP=0x000000000037354f
- (void)generateAudioPayloadsFromConfig:(const CDStruct_22a33d58 *)arg1;	// IMP=0x0000000000372faf
- (id)allPayloadsFromAllTierTables;	// IMP=0x0000000000372f99
- (id)allActiveAudioTiers;	// IMP=0x0000000000372e4e
- (unsigned long long)adjustedRedNumPayloadsForLowBitrateAudioTier:(id)arg1 redNumPayloads:(unsigned long long)arg2;	// IMP=0x0000000000372d9f
- (id)tierForAudioBitrate:(unsigned long long)arg1 withRedNumPayloads:(unsigned long long)arg2;	// IMP=0x00000000003725d2
- (id)tierForNetworkBitrate:(unsigned long long)arg1 withRedNumPayloads:(unsigned long long)arg2;	// IMP=0x000000000037234b
- (id)chooseMultiwayAudioTierForRedPayload:(unsigned long long)arg1;	// IMP=0x0000000000371e91
- (id)tierForNetworkBitrate:(unsigned long long)arg1 withLegacyDuplication:(int)arg2;	// IMP=0x000000000037156b
- (void)printCreatedAudioTiers:(id)arg1;	// IMP=0x0000000000370fcd
- (id)loadAudioTiersFromPlist:(id)arg1;	// IMP=0x000000000036f93f
- (_Bool)addEntryMatchingPayloadToAudioTierMap:(id)arg1 config:(const CDStruct_22a33d58 *)arg2 entry:(id)arg3 bitrateTier:(id)arg4 forcedPayload:(int)arg5;	// IMP=0x000000000036f6d0
- (id)generateAudioTiersDictFromPlistForBitrateLimits:(id)arg1 tierPickerConfig:(const CDStruct_22a33d58 *)arg2 redNumPayloads:(unsigned int)arg3;	// IMP=0x000000000036ecf2
- (void)dealloc;	// IMP=0x000000000036e33b
- (void)setupAlwaysOnRedTiersForSupportedRed:(id)arg1 usingCellular:(_Bool)arg2;	// IMP=0x000000000036ddb0
- (_Bool)setupTierPickerForConfig:(CDStruct_22a33d58)arg1;	// IMP=0x000000000036d213
- (void)logTierPickerConfig:(CDStruct_22a33d58)arg1;	// IMP=0x000000000036cf2f
- (id)configToString:(CDStruct_22a33d58)arg1;	// IMP=0x000000000036ceb4
- (_Bool)reconfigureTierPicker:(CDStruct_22a33d58)arg1;	// IMP=0x000000000036cd7a
- (id)initWithConfig:(CDStruct_22a33d58)arg1;	// IMP=0x000000000036ccb8

@end

