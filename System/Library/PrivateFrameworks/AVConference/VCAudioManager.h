//
//     Generated by classdump-c 4.2.0 (64 bit) (iOS port by DreamDevLost, Updated by Kevin Bradley.)(Debug version compiled Dec 27 2024 14:18:54).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

@class ATSpatialStreamDescriptions, AVAudioDevice, NSArray, NSDictionary, NSMutableArray, NSMutableDictionary, NSObject, NSString, VCAudioRelay, VCAudioRelayIO, VCAudioSessionMediaProperties, VCAudioUnitProperties, VCAudioUnitSpatialContext;
@protocol OS_dispatch_queue;

__attribute__((visibility("hidden")))
@interface VCAudioManager
{
    struct tagHANDLE *_hAUIO;	// 88 = 0x58
    NSObject<OS_dispatch_queue> *_dispatchQueue;	// 96 = 0x60
    unsigned int _state;	// 104 = 0x68
    VCAudioSessionMediaProperties *_currentAudioSessionMediaProperties;	// 112 = 0x70
    VCAudioUnitProperties *_currentAudioUnitProperties;	// 120 = 0x78
    NSDictionary *_vpOperatingModeToAudioSessionMediaFormatMapping;	// 128 = 0x80
    NSMutableArray *_allClients;	// 136 = 0x88
    NSMutableArray *_startingIOClients;	// 144 = 0x90
    AVAudioDevice *_inputDevice;	// 152 = 0x98
    AVAudioDevice *_outputDevice;	// 160 = 0xa0
    _Bool _isGKVoiceChat;	// 168 = 0xa8
    _Bool _isMicrophoneMuted;	// 169 = 0xa9
    _Bool _isMixingVoiceWithMediaEnabled;	// 170 = 0xaa
    _Bool _isInDaemon;	// 171 = 0xab
    _Bool _isInputMeteringEnabled;	// 172 = 0xac
    _Bool _isOutputMeteringEnabled;	// 173 = 0xad
    _Bool _isSpeakerPhoneEnabled;	// 174 = 0xae
    _Bool _isSuspended;	// 175 = 0xaf
    _Bool _followSystemInput;	// 176 = 0xb0
    _Bool _followSystemOutput;	// 177 = 0xb1
    struct _VCAudioIOControllerIOState _sinkData;	// 184 = 0xb8
    struct _VCAudioIOControllerIOState _sourceData;	// 384 = 0x180
    int _interruptThreadState;	// 584 = 0x248
    VCAudioRelay *_interruptThread;	// 592 = 0x250
    VCAudioRelayIO *_interruptThreadClient;	// 600 = 0x258
    _Bool _isInterrupting;	// 608 = 0x260
    struct _opaque_pthread_mutex_t _interruptingMutex;	// 616 = 0x268
    struct _opaque_pthread_mutex_t _inputDeviceMutex;	// 680 = 0x2a8
    struct _opaque_pthread_mutex_t _outputDeviceMutex;	// 744 = 0x2e8
    _Bool _spatialAudioDisabled;	// 808 = 0x328
    void **_audioSession;	// 816 = 0x330
    int _playbackMode;	// 824 = 0x338
    _Bool _useOptimizedHandoversForTelephony;	// 828 = 0x33c
    NSMutableDictionary *_spatialContexts;	// 832 = 0x340
    NSMutableDictionary *_audioSessionSinkMuted;	// 840 = 0x348
    VCAudioUnitSpatialContext *_currentSpatialContext;	// 848 = 0x350
    CDUnknownBlockType _mutedTalkerNotificationHandler;	// 856 = 0x358
    NSArray *_stateStrings;	// 864 = 0x360
    ATSpatialStreamDescriptions *_spatialStreamDescriptions;	// 872 = 0x368
    _Bool _isMediaPlaybackOnExternalDevice;	// 880 = 0x370
}

+ (unsigned char)audioIOTypeWithAudioUnitProperties:(id)arg1 shouldEnableAudioInput:(_Bool)arg2;	// IMP=0x0010000000014858
+ (void)terminateProcess:(id)arg1 terminateSource:(id)arg2 agent:(struct opaqueRTCReporting *)arg3;	// IMP=0x001000000000c0a9
+ (id)sharedSystemAudioInputInstance;	// IMP=0x001000000000c04f
+ (id)sharedSystemAudioOutputInstance;	// IMP=0x001000000000bff5
+ (id)sharedVoiceChatInstance;	// IMP=0x001000000000bf9e
@property(retain, nonatomic) NSDictionary *vpOperatingModeToAudioSessionMediaFormatMapping; // @synthesize vpOperatingModeToAudioSessionMediaFormatMapping=_vpOperatingModeToAudioSessionMediaFormatMapping;
@property(nonatomic) _Bool isInDaemon; // @synthesize isInDaemon=_isInDaemon;
@property(retain, nonatomic) VCAudioUnitProperties *currentAudioUnitProperties; // @synthesize currentAudioUnitProperties=_currentAudioUnitProperties;
@property(retain, nonatomic) VCAudioSessionMediaProperties *currentAudioSessionMediaProperties; // @synthesize currentAudioSessionMediaProperties=_currentAudioSessionMediaProperties;
@property(nonatomic, getter=isSpeakerPhoneEnabled) _Bool speakerPhoneEnabled; // @synthesize speakerPhoneEnabled=_isSpeakerPhoneEnabled;
@property(nonatomic, getter=isMixingVoiceWithMediaEnabled) _Bool mixingVoiceWithMediaEnabled; // @synthesize mixingVoiceWithMediaEnabled=_isMixingVoiceWithMediaEnabled;
@property(nonatomic, getter=isMicrophoneMuted) _Bool microphoneMuted; // @synthesize microphoneMuted=_isMicrophoneMuted;
@property(nonatomic) _Bool isGKVoiceChat; // @synthesize isGKVoiceChat=_isGKVoiceChat;
- (int)setVolume:(float)arg1 withRampTime:(float)arg2;	// IMP=0x0000000000020bc9
- (void)setupDynamicDuckingVolumeHandlerForAUIO:(struct tagHANDLE *)arg1;	// IMP=0x0000000000020bc3
- (void)didUpdateBasebandCodec:(const struct _VCRemoteCodecInfo *)arg1;	// IMP=0x0000000000020a57
- (void)serverDidDie;	// IMP=0x00000000000208bb
- (void)didSessionResume;	// IMP=0x00000000000208a9
- (void)didSessionPause;	// IMP=0x0000000000020897
- (void)didSessionEnd;	// IMP=0x00000000000204a3
- (void)didSessionStop;	// IMP=0x000000000002008d
- (void)stopInterruptThread;	// IMP=0x000000000001fea5
- (void)startInterruptThread;	// IMP=0x000000000001f935
- (void)cleanupInterruptThread;	// IMP=0x000000000001f8f0
- (_Bool)setupInterruptThread;	// IMP=0x000000000001f55b
- (void)stopAudioSession;	// IMP=0x000000000001f547
- (_Bool)resetAudioSessionWithProperties:(id)arg1 interruptSuccessful:(_Bool *)arg2;	// IMP=0x000000000001f2d1
- (_Bool)startAudioSessionWithProperties:(id)arg1;	// IMP=0x000000000001f2bc
- (void)refreshRemoteCodecType:(unsigned int)arg1 sampleRate:(double)arg2;	// IMP=0x000000000001f18c
- (void)refreshOutputMetering;	// IMP=0x000000000001f101
- (void)refreshInputMetering;	// IMP=0x000000000001f076
- (void)updateClient:(id)arg1 settings:(const struct tagVCAudioIOControllerClientSettings *)arg2;	// IMP=0x000000000001ead0
- (void)updateVoiceProcessingWithClient:(id)arg1 settings:(const struct tagVCAudioIOControllerClientSettings *)arg2 isClientRegistered:(_Bool)arg3;	// IMP=0x000000000001e84a
- (void)updateSpatialAudioWithClient:(id)arg1 settings:(const struct tagVCAudioIOControllerClientSettings *)arg2 isClientRegistered:(_Bool)arg3;	// IMP=0x000000000001e496
@property(readonly, nonatomic) _Bool supportsVoiceActivityDetection;
- (void)updateDirectionWithClient:(id)arg1 settings:(const struct tagVCAudioIOControllerClientSettings *)arg2 isClientRegistered:(_Bool)arg3;	// IMP=0x000000000001e378
- (void)stopClient:(id)arg1;	// IMP=0x000000000001dacd
- (void)startClient:(id)arg1;	// IMP=0x000000000001d0ac
- (_Bool)updateStateWithAudioIOClient:(id)arg1;	// IMP=0x000000000001c2ad
- (id)preferredClientWithNewClient:(id)arg1;	// IMP=0x000000000001c121
- (_Bool)stateInterruptedWithAudioUnitProperties:(id)arg1 sessionProperties:(id)arg2 client:(id)arg3 newState:(unsigned int *)arg4;	// IMP=0x000000000001bad2
- (void)stateTransitionInterruptedToStarted;	// IMP=0x000000000001baa4
- (void)stateTransitionInterruptedToRunning;	// IMP=0x000000000001ba5e
- (_Bool)stateInterruptedShouldGoToRunning:(id)arg1;	// IMP=0x000000000001ba2b
- (_Bool)stateInterruptedShouldGoToStarted:(id)arg1;	// IMP=0x000000000001b9bf
- (_Bool)stateRunningWithAudioUnitProperties:(id)arg1 sessionProperties:(id)arg2 client:(id)arg3 newState:(unsigned int *)arg4;	// IMP=0x000000000001b068
- (void)stateTransitionRunningToInterrupted;	// IMP=0x000000000001b03a
- (void)stateRunningToSessionStarted;	// IMP=0x000000000001b00c
- (_Bool)stateRunningShouldTransitionToInterrupted:(id)arg1;	// IMP=0x000000000001afd9
- (_Bool)stateRunningShouldTransitionToStarted:(id)arg1;	// IMP=0x000000000001af6d
- (_Bool)stateSessionStartedWithAudioUnitProperties:(id)arg1 sessionProperties:(id)arg2 client:(id)arg3 newState:(unsigned int *)arg4;	// IMP=0x000000000001a972
- (void)enterStateStarted;	// IMP=0x000000000001a4da
- (_Bool)stateIdleWithAudioUnitProperties:(id)arg1 sessionProperties:(id)arg2 client:(id)arg3 newState:(unsigned int *)arg4;	// IMP=0x000000000001a43e
- (void)resetChannelMask;	// IMP=0x000000000001a414
- (void)startVADWithAudioUnitProperties:(id)arg1;	// IMP=0x000000000001a37c
- (_Bool)setupVAD;	// IMP=0x000000000001a029
- (void)setupSpatialContextWithAudioUnitProperties:(id)arg1 forceUpdate:(_Bool)arg2;	// IMP=0x0000000000019f93
- (void)applySpatialMetadata:(struct OpaqueCMBlockBuffer *)arg1;	// IMP=0x0000000000019b8d
- (void)applySessionContextToAudioUnitProperties:(id)arg1 preferredClient:(id)arg2;	// IMP=0x00000000000198c3
- (void)setSpatialMetadata:(struct OpaqueCMBlockBuffer *)arg1 audioSessionId:(unsigned int)arg2 completionHandler:(CDUnknownBlockType)arg3;	// IMP=0x0000000000019579
- (void)unregisterAudioSessionId:(unsigned int)arg1;	// IMP=0x000000000001913a
- (int)registerAudioSessionId:(unsigned int)arg1 maxChannelCountMic:(unsigned int)arg2 maxChannelCountSpeaker:(unsigned int)arg3 spatialMetadata:(struct OpaqueCMBlockBuffer *)arg4;	// IMP=0x0000000000018afe
- (int)unregisterFromMutedTalkerNotification;	// IMP=0x0000000000018866
- (int)registerForMutedTalkerNotification:(CDUnknownBlockType)arg1;	// IMP=0x00000000000183d4
- (int)unregisterForMutedTalkerNotificationWithAUIO:(struct tagHANDLE *)arg1;	// IMP=0x00000000000181b1
- (int)registerForMutedTalkerNotificationWithAUIO:(struct tagHANDLE *)arg1;	// IMP=0x0000000000017d67
- (void)applyControllerFormatToClients:(id)arg1;	// IMP=0x0000000000017ad1
- (void)activateStartingClient:(id)arg1 applyControllerFormat:(_Bool)arg2;	// IMP=0x0000000000017980
- (void)completeStartForAllStartingClients;	// IMP=0x0000000000017624
- (void)unregisterClientIO:(struct _VCAudioIOControllerClientIO *)arg1 controllerIO:(struct _VCAudioIOControllerIOState *)arg2;	// IMP=0x000000000001712c
- (void)registerClientIO:(struct _VCAudioIOControllerClientIO *)arg1 controllerIO:(struct _VCAudioIOControllerIOState *)arg2;	// IMP=0x0000000000016a39
- (_Bool)audioCallbacksRunning;	// IMP=0x0000000000016a0d
- (void)stopAUIO;	// IMP=0x0000000000016822
- (_Bool)resetAudioLimiterWithProperties:(id)arg1;	// IMP=0x000000000001657a
- (_Bool)resetAUIOWithProperties:(id)arg1;	// IMP=0x00000000000162d8
- (_Bool)shouldResetAudioSessionWithProperties:(id)arg1;	// IMP=0x0000000000015d2a
- (_Bool)shouldResetAudioUnitWithProperties:(id)arg1;	// IMP=0x00000000000148eb
- (_Bool)startAUIOWithProperties:(id)arg1;	// IMP=0x0000000000013530
- (void)setMediaPlaybackOnExternalDevice:(_Bool)arg1;	// IMP=0x000000000001348a
- (void)updateCurrentOutputDevice:(id)arg1;	// IMP=0x0000000000013031
@property(retain) AVAudioDevice *currentOutputDevice; // @synthesize currentOutputDevice=_outputDevice;
- (void)setCurrentOutputDeviceInternal:(id)arg1;	// IMP=0x00000000000124d1
@property(retain) AVAudioDevice *currentInputDevice; // @synthesize currentInputDevice=_inputDevice;
- (void)updateCurrentInputDevice:(id)arg1;	// IMP=0x000000000001153f
- (void)setCurrentInputDeviceInternal:(id)arg1;	// IMP=0x00000000000114ee
- (void)setupIODevicesForAUIO:(struct tagHANDLE *)arg1;	// IMP=0x00000000000114a0
- (id)newAudioSessionMediaPropertiesWithPreferredClient:(id)arg1 audioUnitProperties:(id)arg2;	// IMP=0x000000000001148f
- (id)newAudioSessionMediaPropertiesForSystemAudioWithPreferredClient:(id)arg1 audioUnitProperties:(id)arg2 isInput:(_Bool)arg3;	// IMP=0x0000000000011476
- (id)newAudioUnitPropertiesForSystemAudioWithPreferredClient:(id)arg1 isInput:(_Bool)arg2;	// IMP=0x0000000000010db7
- (id)newAudioUnitPropertiesWithPreferredClient:(id)arg1;	// IMP=0x0000000000010533
- (_Bool)computeAllowAudioRecordingWithPreferredClient:(id)arg1;	// IMP=0x0000000000010384
- (unsigned int)computeSamplePerFrameWithPreferredClient:(id)arg1 sampleRate:(unsigned int)arg2;	// IMP=0x00000000000101a8
- (void)computeFormatDescription:(struct AudioStreamBasicDescription *)arg1 withPreferredClient:(id)arg2;	// IMP=0x000000000000ffdc
- (unsigned int)vpOperationModeForConferenceOperatingMode:(int)arg1 deviceRole:(int)arg2;	// IMP=0x000000000000fe50
- (void)_cleanupDeadClients;	// IMP=0x000000000000fa6e
- (_Bool)removeClient:(id)arg1;	// IMP=0x000000000000f938
- (void)waitIdleForClient:(id)arg1;	// IMP=0x000000000000f280
- (_Bool)addClient:(id)arg1;	// IMP=0x000000000000eeec
- (void)disableSpatialStreamParametersForClient:(id)arg1;	// IMP=0x000000000000eee6
- (void)enableSpatialStreamParametersForClient:(id)arg1;	// IMP=0x000000000000eee0
- (void)removeAllClientsForIO:(struct _VCAudioIOControllerIOState *)arg1;	// IMP=0x000000000000ee6f
- (void)flushEventQueue:(struct opaqueCMSimpleQueue *)arg1;	// IMP=0x000000000000eaaf
- (int)prewarmingClientOperatingMode;	// IMP=0x000000000000e992
- (void)resetAudioTimestamps;	// IMP=0x000000000000e965
- (void)computeHardwarePreferences;	// IMP=0x000000000000e95f
- (void)setOutputMetering;	// IMP=0x000000000000e807
- (void)setInputMetering;	// IMP=0x000000000000e6af
- (void)applyAudioSessionMute;	// IMP=0x000000000000e265
- (void)setMute:(_Bool)arg1 forClient:(id)arg2;	// IMP=0x000000000000df34
- (void)dealloc;	// IMP=0x000000000000d54b
@property(readonly, copy) NSString *description;
- (id)initWithAudioSessionMode:(int)arg1;	// IMP=0x000000000000c3c8
- (void)getPreferredFormat:(struct AudioStreamBasicDescription *)arg1 blockSize:(double *)arg2 vpOperatingMode:(unsigned int *)arg3 forOperatingMode:(int)arg4 deviceRole:(int)arg5 suggestedFormat:(struct AudioStreamBasicDescription *)arg6;	// IMP=0x000000000000c110
@property(readonly, nonatomic) struct _VCAudioIOControllerIOState *sourceIO;
@property(readonly, nonatomic) struct _VCAudioIOControllerIOState *sinkIO;
- (id)autorelease;	// IMP=0x000000000000c0e7
- (oneway void)release;	// IMP=0x000000000000c0e1
- (unsigned long long)retainCount;	// IMP=0x000000000000c0d4
- (id)retain;	// IMP=0x000000000000c0cb
- (id)copyWithZone:(struct _NSZone *)arg1;	// IMP=0x000000000000c0c2

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
// Preceding property had unknown attributes: ?
// Original attribute string: T@"NSString",?,R,C

@property(readonly) unsigned long long hash;
@property(readonly, nonatomic) NSDictionary *reportingStats;
// Preceding property had unknown attributes: ?
// Original attribute string: T@"NSDictionary",?,R,N

@property(readonly) Class superclass;

@end

