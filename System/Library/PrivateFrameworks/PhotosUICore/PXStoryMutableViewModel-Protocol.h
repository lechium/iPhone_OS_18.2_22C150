//
//     Generated by classdump-c 4.2.0 (64 bit) (iOS port by DreamDevLost, Updated by Kevin Bradley.)(Debug version compiled Dec 27 2024 14:18:54).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

@class NSArray, NSString, PXGItemPlacement, PXPhotosViewModel, PXStoryViewChromeTitleConfiguration;
@protocol PXStoryDiagnosticHUDContentProvider, PXStoryViewActionPerformer, PXStoryViewEnvironmentModel;

@protocol PXStoryMutableViewModel
@property(nonatomic) _Bool isUserPerformingRemoteGesture;
@property(nonatomic) long long highlightedRelatedIndex;
@property(retain, nonatomic) PXPhotosViewModel *photosGridViewModel;
@property(nonatomic) _Bool isPerformingCrossfadeTransitionToRelated;
@property(nonatomic) double volume;
@property(nonatomic) _Bool isInSelectMode;
@property(nonatomic) long long diagnosticHUDType;
@property(nonatomic) _Bool isHUDVisible;
@property(nonatomic) _Bool shouldShowErrorIndicator;
@property(nonatomic) __weak id <PXStoryViewEnvironmentModel> viewEnvironmentModel;
@property(copy, nonatomic) NSArray *relatedConfigurations;
@property(nonatomic) __weak id <PXStoryViewActionPerformer> actionPerformer;
@property(nonatomic) _Bool showSongInTitleWhenPaused;
@property(nonatomic) _Bool isActionMenuOpen;
@property(nonatomic) double styleSwitcherVisibilityFraction;
@property(nonatomic) double swipeDownDismissalPreviewFraction;
@property(nonatomic) _Bool swipeDownDismissalPreviewEnabled;
@property(nonatomic) _Bool swipeDownTriggeringDismissal;
@property(retain, nonatomic) PXGItemPlacement *viewControllerDismissalTargetPlacement;
@property(nonatomic) _Bool isPerformingViewControllerTransition;
@property(nonatomic) CDStruct_67c61e0b swipeDownInteractionState;
@property(nonatomic) unsigned long long edgeToHighlight;
@property(nonatomic) _Bool isScrubbing;
@property(nonatomic) CDStruct_48d5200d scrubberPosition;
@property(nonatomic) _Bool shouldCountDownToUpNext;
@property(copy, nonatomic) PXStoryViewChromeTitleConfiguration *customGeneralChromeTitleConfiguration;
@property(nonatomic) _Bool wantsRelatedOverlayNavigationButtonsVisible;
@property(nonatomic) _Bool isRelatedOverlayScrolledIntoView;
@property(nonatomic) double fadeOutOverlayVisibilityFraction;
@property(nonatomic) double relatedOverlayVisibilityFraction;
@property(nonatomic) _Bool wantsRelatedOverlayVisible;
@property(nonatomic) double playbackEndDarkening;
@property(nonatomic) double scrubberVisibilityFraction;
@property(nonatomic) _Bool wantsScrubberVisible;
@property(nonatomic) double maximumIndividualTopChromeItemVisibilityFraction;
@property(nonatomic) double muteToggleButtonVisibilityFraction;
@property(nonatomic) double bufferingIndicatorVisibilityFraction;
@property(nonatomic) unsigned long long chromeItemsToBeDisplayedExternally;
@property(nonatomic) unsigned long long allowedChromeItems;
@property(nonatomic) unsigned long long chromeItems;
@property(nonatomic) double chromeVisibilityFraction;
@property(nonatomic) _Bool needsStatusBarVisible;
@property(nonatomic) _Bool wantsChromeVisible;
@property(nonatomic) long long desiredPlayState;
@property(nonatomic) long long viewMode;
@property(nonatomic) _Bool isActive;
- (void)hideMuteToggleButtonWhenChromeIsHidden;
- (void)temporarilyShowMuteToggleButtonWhenChromeIsHidden;
- (void)setMuted:(_Bool)arg1 reason:(long long)arg2;
- (void)setDiagnosticHUDContentProvider:(id <PXStoryDiagnosticHUDContentProvider>)arg1 forType:(long long)arg2;
- (void)toggleAutoReplayPreference;
- (void)deselectAllGridItems;
- (void)selectAllGridItems;
- (void)rewindToBeginning:(_Bool)arg1 rewindMusic:(_Bool)arg2;
- (void)rewindToBeginning:(_Bool)arg1;
- (void)autoPlayUpNext;
- (void)selectRelatedAtIndex:(long long)arg1;
- (void)liveResizeDidEnd;
- (void)liveResizeWillStart;
- (void)cycleHUDType;
- (void)toggleHUD;
- (void)toggleChrome;
- (_Bool)skipToBeginningOfSegmentWithIdentifier:(long long)arg1;
- (_Bool)skipToSegmentWithOffset:(long long)arg1 byTappingEdge:(_Bool)arg2;
- (_Bool)skipToSegmentWithOffset:(long long)arg1;
- (void)togglePlayback;
- (void)setPerformingExportOperation:(_Bool)arg1 withIdentifier:(NSString *)arg2;
- (void)setMenuIsOpen:(_Bool)arg1 withIdentifier:(NSString *)arg2;
@end

