//
//     Generated by classdump-c 4.2.0 (64 bit) (iOS port by DreamDevLost, Updated by Kevin Bradley.)(Debug version compiled Dec 27 2024 14:18:54).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <objc/NSObject.h>

@class NSArray, NSDictionary, NSMutableDictionary, NSString, NSURL;

__attribute__((visibility("hidden")))
@interface AVControlCenterModuleState : NSObject
{
    NSString *_bundleID;	// 8 = 0x8
    NSString *_eligibleEffectsKey;	// 16 = 0x10
    _Bool _isOptedInForBackgroundBlur;	// 24 = 0x18
    _Bool _isOptedInForStudioLight;	// 25 = 0x19
    _Bool _isOptedInForReactionEffects;	// 26 = 0x1a
    _Bool _isOptedInForBackgroundReplacement;	// 27 = 0x1b
    struct os_unfair_lock_s _stateLock;	// 28 = 0x1c
    _Bool _holdingStateLock;	// 32 = 0x20
    _Bool _centerStageSupported;	// 33 = 0x21
    long long _centerStageControlMode;	// 40 = 0x28
    _Bool _centerStageEnabled;	// 48 = 0x30
    NSString *_centerStageControlModeKey;	// 56 = 0x38
    NSString *_centerStageEnabledKey;	// 64 = 0x40
    NSString *_centerStageUnavailableReasonsKey;	// 72 = 0x48
    _Bool _backgroundBlurSupported;	// 80 = 0x50
    long long _backgroundBlurControlMode;	// 88 = 0x58
    _Bool _backgroundBlurEnabled;	// 96 = 0x60
    NSString *_backgroundBlurControlModeKey;	// 104 = 0x68
    NSString *_backgroundBlurEnabledKey;	// 112 = 0x70
    NSString *_backgroundBlurUnavailableReasonsKey;	// 120 = 0x78
    float _backgroundBlurAperture;	// 128 = 0x80
    NSString *_backgroundBlurApertureKey;	// 136 = 0x88
    _Bool _studioLightingSupported;	// 144 = 0x90
    long long _studioLightingControlMode;	// 152 = 0x98
    _Bool _studioLightingEnabled;	// 160 = 0xa0
    NSString *_studioLightingControlModeKey;	// 168 = 0xa8
    NSString *_studioLightingEnabledKey;	// 176 = 0xb0
    NSString *_studioLightingUnavailableReasonsKey;	// 184 = 0xb8
    float _studioLightingIntensity;	// 192 = 0xc0
    NSString *_studioLightingIntensityKey;	// 200 = 0xc8
    _Bool _reactionEffectsSupported;	// 208 = 0xd0
    _Bool _reactionsEnabled;	// 209 = 0xd1
    NSString *_reactionsEnabledKey;	// 216 = 0xd8
    _Bool _gesturesEnabled;	// 224 = 0xe0
    NSString *_gesturesEnabledKey;	// 232 = 0xe8
    NSString *_gesturesEnabledDefaultKey;	// 240 = 0xf0
    NSString *_reactionsUnavailableReasonsKey;	// 248 = 0xf8
    NSString *_reactionTriggeredKey;	// 256 = 0x100
    NSMutableDictionary *_previousReactionStateByDeviceIdentifier;	// 264 = 0x108
    NSString *_reactionsInProgressKey;	// 272 = 0x110
    _Bool _backgroundReplacementSupported;	// 280 = 0x118
    _Bool _backgroundReplacementEnabled;	// 281 = 0x119
    NSString *_backgroundReplacementEnabledKey;	// 288 = 0x120
    NSString *_backgroundReplacementUnavailableReasonsKey;	// 296 = 0x128
    NSURL *_backgroundReplacementURL;	// 304 = 0x130
    NSString *_backgroundReplacementURLBookmarkKey;	// 312 = 0x138
    struct __CVBuffer *_backgroundReplacementPixelBuffer;	// 320 = 0x140
    int _backgroundReplacementPixelBufferFillWidth;	// 328 = 0x148
    int _backgroundReplacementPixelBufferFillHeight;	// 332 = 0x14c
    _Bool _auVoiceIOBypassVoiceProcessing;	// 336 = 0x150
    NSString *_auVoiceIOBypassVoiceProcessingKey;	// 344 = 0x158
    long long _microphoneMode;	// 352 = 0x160
    long long _activeMicrophoneMode;	// 360 = 0x168
    NSString *_microphoneModeKey;	// 368 = 0x170
    NSString *_activeMicrophoneModeKey;	// 376 = 0x178
    NSArray *_supportedMicrophoneModes;	// 384 = 0x180
    NSString *_supportedMicrophoneModesKey;	// 392 = 0x188
    NSArray *_hiddenMicrophoneModes;	// 400 = 0x190
    NSString *_hiddenMicrophoneModesKey;	// 408 = 0x198
    _Bool _autoMicModeEnabled;	// 416 = 0x1a0
    NSString *_autoMicModeEnabledKey;	// 424 = 0x1a8
    NSString *_startPanningAtPointKey;	// 432 = 0x1b0
    NSString *_panWithTranslationKey;	// 440 = 0x1b8
    NSString *_manualFramingVideoZoomFactorKey;	// 448 = 0x1c0
    NSString *_performOneShotFramingKey;	// 456 = 0x1c8
    NSString *_resetFramingKey;	// 464 = 0x1d0
    NSString *_oneShotFramingCompletedKey;	// 472 = 0x1d8
    NSString *_resetFramingCompletedKey;	// 480 = 0x1e0
    NSString *_panningAnglesKey;	// 488 = 0x1e8
    NSString *_centerStageFieldOfViewRestrictedToWideKey;	// 496 = 0x1f0
    NSString *_manualFramingDeviceTypeKey;	// 504 = 0x1f8
    NSString *_dockedTrackingActiveKey;	// 512 = 0x200
    double _currentPanningAngleX;	// 520 = 0x208
    double _currentPanningAngleY;	// 528 = 0x210
    double _currentOriginalZoomFactor;	// 536 = 0x218
    long long _manualFramingDeviceType;	// 544 = 0x220
    NSDictionary *_zoomFactorConstantsByManualFramingDeviceType;	// 552 = 0x228
    _Bool _deviceBasedModuleState;	// 560 = 0x230
    _Bool _deviceSupportsManualFraming;	// 561 = 0x231
    _Bool _observingManualFramingProprietaryDefaultKeys;	// 562 = 0x232
    _Bool _observingDockedTrackingProprietaryDefaultKey;	// 563 = 0x233
}

+ (id)moduleStateForBundleID:(id)arg1;	// IMP=0x006000000003381b
- (void)_checkManualFramingDefaultStateWithNewOriginalZoomFactor:(double)arg1;	// IMP=0x000000000003a342
- (void)_handleBackPropagatedVideoZoomFactorUpdate:(id)arg1;	// IMP=0x0000000000039f31
- (void)_handlePanningAnglesUpdate:(id)arg1;	// IMP=0x000000000003999f
- (void)_proprietaryDefaultChanged:(id)arg1 keyPath:(id)arg2 context:(void *)arg3;	// IMP=0x0000000000037d91
- (double)_defaultOriginalVideoZoomFactor;	// IMP=0x0000000000037cf5
- (void)setupDeviceBasedModuleStatesIfNeeded;	// IMP=0x0000000000037cef
- (void)invalidateDeviceBasedModuleStatesIfNeeded;	// IMP=0x0000000000037afe
@property(readonly) NSDictionary *zoomFactorConstantsByManualFramingDeviceType;
@property long long manualFramingDeviceType;
@property _Bool centerStageFieldOfViewRestrictedToWide;
@property(readonly) _Bool manualFramingIsAtDefault;
- (_Bool)manualFramingEnabledForDevice:(id)arg1;	// IMP=0x0000000000037789
- (void)resetFraming;	// IMP=0x000000000003775f
- (void)performOneShotFraming;	// IMP=0x0000000000037735
- (double)manualFramingOriginalVideoZoomFactor;	// IMP=0x0000000000037391
- (void)setManualFramingOriginalZoomFactor:(double)arg1 convertedZoomFactor:(double)arg2;	// IMP=0x0000000000037150
- (void)panWithTranslation:(struct CGPoint)arg1;	// IMP=0x0000000000037114
- (void)startPanningAtPoint:(struct CGPoint)arg1;	// IMP=0x00000000000370d8
- (_Bool)setAutoMicrophoneModeEnabled:(_Bool)arg1;	// IMP=0x0000000000037039
- (_Bool)isAutoMicrophoneModeEnabled;	// IMP=0x0000000000036fd7
- (_Bool)voiceProcessingBypassed;	// IMP=0x0000000000036f75
- (long long)activeMicrophoneMode;	// IMP=0x0000000000036f19
- (_Bool)setMicrophoneMode:(long long)arg1;	// IMP=0x0000000000036dae
- (long long)microphoneMode;	// IMP=0x0000000000036d50
- (id)hiddenMicrophoneModes;	// IMP=0x0000000000036ce6
- (id)supportedMicrophoneModes;	// IMP=0x0000000000036c6d
- (void)enableBlackenFrames:(_Bool)arg1 forDeviceUID:(id)arg2;	// IMP=0x0000000000036c2d
- (float)getEffectIntensityDefaultForVideoEffect:(id)arg1;	// IMP=0x0000000000036b1b
- (struct AudioValueRange)getEffectIntensityRangeForVideoEffect:(id)arg1;	// IMP=0x0000000000036a07
- (_Bool)setEffectIntensityForVideoEffect:(float)arg1 forVideoEffect:(id)arg2;	// IMP=0x000000000003678f
- (float)getEffectIntensityForVideoEffect:(id)arg1;	// IMP=0x0000000000036660
@property(readonly, nonatomic) _Bool hasBackgroundReplacementBeenToggled;
- (struct __CVBuffer *)backgroundReplacementPixelBufferFillingWidth:(int)arg1 height:(int)arg2;	// IMP=0x000000000003649d
@property(retain, nonatomic) NSURL *backgroundReplacementURL;
- (void)updateActiveReactions:(id)arg1 currentRenderPTS:(CDStruct_1b6d18a9)arg2 requestedTriggers:(int)arg3 forCaptureDeviceWithID:(id)arg4;	// IMP=0x0000000000035e1f
- (void)performReactionEffect:(id)arg1 forCaptureDeviceWithID:(id)arg2;	// IMP=0x0000000000035d29
- (unsigned long long)unavailableReasonsForVideoEffect:(id)arg1;	// IMP=0x0000000000035b5c
- (_Bool)setEnabled:(_Bool)arg1 forVideoEffect:(id)arg2;	// IMP=0x00000000000358ed
- (_Bool)isEnabledForVideoEffect:(id)arg1;	// IMP=0x00000000000357d2
- (long long)controlModeForVideoEffect:(id)arg1;	// IMP=0x00000000000356cd
- (_Bool)supportsVideoEffect:(id)arg1;	// IMP=0x00000000000355b2
@property(readonly, getter=isAutoMicrophoneModeSupported) _Bool autoMicrophoneModeSupported;
@property(readonly) _Bool micModesSupported;
@property _Bool backgroundReplacementSupported;
@property _Bool reactionEffectsSupported;
@property _Bool studioLightingSupported;
@property _Bool backgroundBlurSupported;
@property _Bool centerStageSupported;
@property(readonly, getter=isActive) _Bool active;
- (void)_updateEligibleEffects:(id)arg1;	// IMP=0x0000000000034d8e
- (void)dealloc;	// IMP=0x00000000000349d5
- (void)installProprietaryDefaultsHandlers;	// IMP=0x0000000000033f07
@property(readonly, getter=isDeviceBasedModuleStateUpdateToDate) _Bool deviceBasedModuleStateUpdateToDate;
@property(readonly, getter=isDeviceBasedModuleState) _Bool deviceBasedModuleState;
- (void)updateCenterStageSupported:(_Bool)arg1 backgroundBlurSupported:(_Bool)arg2 studioLightingSupported:(_Bool)arg3 reactionEffectsSupported:(_Bool)arg4 backgroundReplacementSupported:(_Bool)arg5;	// IMP=0x0000000000033e2f
- (void)cleanUpOrphanedSupportedMicModes;	// IMP=0x0000000000033c35
- (id)initForBundleID:(id)arg1;	// IMP=0x0000000000033852

@end

