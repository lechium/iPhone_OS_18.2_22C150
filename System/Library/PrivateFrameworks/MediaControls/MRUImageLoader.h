//
//     Generated by classdump-c 4.2.0 (64 bit) (iOS port by DreamDevLost, Updated by Kevin Bradley.)(Debug version compiled Dec 27 2024 14:18:54).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <objc/NSObject.h>

@class MPArtworkCatalog, UIView;
@protocol MPArtworkDataSourceVisualIdenticality;

__attribute__((visibility("hidden")))
@interface MRUImageLoader : NSObject
{
    _Bool _cacheImages;	// 8 = 0x8
    _Bool _formatImages;	// 9 = 0x9
    _Bool _fittingSizeUpdateScheduled;	// 10 = 0xa
    _Bool _runningSynchronously;	// 11 = 0xb
    UIView *_destination;	// 16 = 0x10
    CDUnknownBlockType _imageHandler;	// 24 = 0x18
    MPArtworkCatalog *_catalog;	// 32 = 0x20
    id <MPArtworkDataSourceVisualIdenticality> _lastVendedArtworkIdentifier;	// 40 = 0x28
    id <MPArtworkDataSourceVisualIdenticality> _lastFailedArtworkIdentifier;	// 48 = 0x30
    long long _failedLoadingCount;	// 56 = 0x38
    double _scale;	// 64 = 0x40
    double _deferredScale;	// 72 = 0x48
    long long _state;	// 80 = 0x50
    struct CGSize _targetFittingSizeForCurrentCatalogConfiguration;	// 88 = 0x58
    struct CGSize _lastVendedScaledFittingSize;	// 104 = 0x68
    struct CGSize _fittingSize;	// 120 = 0x78
    struct CGSize _deferredFittingSize;	// 136 = 0x88
}

- (void).cxx_destruct;	// IMP=0x00000000000eee8b
@property(nonatomic) _Bool runningSynchronously; // @synthesize runningSynchronously=_runningSynchronously;
@property(nonatomic) long long state; // @synthesize state=_state;
@property(nonatomic) _Bool fittingSizeUpdateScheduled; // @synthesize fittingSizeUpdateScheduled=_fittingSizeUpdateScheduled;
@property(nonatomic) double deferredScale; // @synthesize deferredScale=_deferredScale;
@property(nonatomic) struct CGSize deferredFittingSize; // @synthesize deferredFittingSize=_deferredFittingSize;
@property(nonatomic) double scale; // @synthesize scale=_scale;
@property(nonatomic) struct CGSize fittingSize; // @synthesize fittingSize=_fittingSize;
@property(nonatomic) long long failedLoadingCount; // @synthesize failedLoadingCount=_failedLoadingCount;
@property(retain, nonatomic) id <MPArtworkDataSourceVisualIdenticality> lastFailedArtworkIdentifier; // @synthesize lastFailedArtworkIdentifier=_lastFailedArtworkIdentifier;
@property(nonatomic) struct CGSize lastVendedScaledFittingSize; // @synthesize lastVendedScaledFittingSize=_lastVendedScaledFittingSize;
@property(nonatomic) struct CGSize targetFittingSizeForCurrentCatalogConfiguration; // @synthesize targetFittingSizeForCurrentCatalogConfiguration=_targetFittingSizeForCurrentCatalogConfiguration;
@property(retain, nonatomic) id <MPArtworkDataSourceVisualIdenticality> lastVendedArtworkIdentifier; // @synthesize lastVendedArtworkIdentifier=_lastVendedArtworkIdentifier;
@property(retain, nonatomic) MPArtworkCatalog *catalog; // @synthesize catalog=_catalog;
@property(nonatomic) _Bool formatImages; // @synthesize formatImages=_formatImages;
@property(nonatomic) _Bool cacheImages; // @synthesize cacheImages=_cacheImages;
@property(readonly, nonatomic) CDUnknownBlockType imageHandler; // @synthesize imageHandler=_imageHandler;
@property(readonly, nonatomic) __weak UIView *destination; // @synthesize destination=_destination;
- (void)withNoEscapeCheck:(CDUnknownBlockType)arg1;	// IMP=0x00000000000eecac
- (void)configureCatalog;	// IMP=0x00000000000edbf4
- (struct CGSize)scaledFittingSize;	// IMP=0x00000000000ed9b4
- (_Bool)vendCachedImageIfPossible;	// IMP=0x00000000000ed65f
- (void)deferredUpdateFittingSize;	// IMP=0x00000000000ed150
- (void)updateFittingSize:(struct CGSize)arg1 scale:(double)arg2;	// IMP=0x00000000000ecf0c
- (void)updateCatalog:(id)arg1;	// IMP=0x00000000000ecc8b
- (_Bool)wouldLoadNewImageForCatalog:(id)arg1;	// IMP=0x00000000000ec918
- (void)dealloc;	// IMP=0x00000000000ec7db
- (id)initWithDestination:(id)arg1 imageHandler:(CDUnknownBlockType)arg2;	// IMP=0x00000000000ec696

@end

