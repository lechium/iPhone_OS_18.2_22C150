//
//     Generated by classdump-c 4.2.0 (64 bit) (iOS port by DreamDevLost, Updated by Kevin Bradley.)(Debug version compiled Dec 27 2024 14:18:54).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <UIKitCore/UIView.h>

@class MRUCAPackageView, MRUSlider, MRUVisualStylingProvider, MRUVolumeController, MSVTimer, NSString, UIWindowScene;
@protocol MPVolumeControllerDataSource;

__attribute__((visibility("hidden")))
@interface MRUAmbientNowPlayingVolumeControlsView : UIView
{
    _Bool _onScreen;	// 8 = 0x8
    _Bool _sliderExpanded;	// 9 = 0x9
    _Bool _ignoreAnimationForVolumeEvents;	// 10 = 0xa
    MRUSlider *_slider;	// 16 = 0x10
    MRUVolumeController *_volumeController;	// 24 = 0x18
    MRUVisualStylingProvider *_stylingProvider;	// 32 = 0x20
    double _sliderExpansionFactor;	// 40 = 0x28
    MRUCAPackageView *_packageView;	// 48 = 0x30
    double _sliderValueOnPanBegin;	// 56 = 0x38
    MSVTimer *_idleTimer;	// 64 = 0x40
}

- (void).cxx_destruct;	// IMP=0x00000000000fb3ab
@property(retain, nonatomic) MSVTimer *idleTimer; // @synthesize idleTimer=_idleTimer;
@property(nonatomic) _Bool ignoreAnimationForVolumeEvents; // @synthesize ignoreAnimationForVolumeEvents=_ignoreAnimationForVolumeEvents;
@property(nonatomic) _Bool sliderExpanded; // @synthesize sliderExpanded=_sliderExpanded;
@property(nonatomic) double sliderValueOnPanBegin; // @synthesize sliderValueOnPanBegin=_sliderValueOnPanBegin;
@property(retain, nonatomic) MRUCAPackageView *packageView; // @synthesize packageView=_packageView;
@property(nonatomic) double sliderExpansionFactor; // @synthesize sliderExpansionFactor=_sliderExpansionFactor;
@property(nonatomic, getter=isOnScreen) _Bool onScreen; // @synthesize onScreen=_onScreen;
@property(retain, nonatomic) MRUVisualStylingProvider *stylingProvider; // @synthesize stylingProvider=_stylingProvider;
@property(retain, nonatomic) MRUVolumeController *volumeController; // @synthesize volumeController=_volumeController;
@property(readonly, nonatomic) MRUSlider *slider; // @synthesize slider=_slider;
- (id)_packageStateForVolume:(float)arg1;	// IMP=0x00000000000fb246
- (void)sliderTouchUp:(id)arg1;	// IMP=0x00000000000fb1ec
- (void)sliderValueChanged:(id)arg1;	// IMP=0x00000000000fb15f
- (void)sliderTouchDown:(id)arg1;	// IMP=0x00000000000fb12c
- (void)resetIdleTimer;	// IMP=0x00000000000fb05b
- (void)invalidateIdleTimer;	// IMP=0x00000000000fb023
- (void)updateVisibility;	// IMP=0x00000000000fafe8
- (void)updatePackageWithValue:(float)arg1;	// IMP=0x00000000000faf4f
- (void)updateVolumeAnimated:(_Bool)arg1;	// IMP=0x00000000000fae1f
@property(readonly, nonatomic) NSString *volumeAudioCategory;
// Preceding property had unknown attributes: ?
// Original attribute string: T@"NSString",?,R,N

@property(readonly, nonatomic) UIWindowScene *windowSceneForVolumeDisplay;
// Preceding property had unknown attributes: ?
// Original attribute string: T@"UIWindowScene",?,R,N

@property(readonly, nonatomic, getter=isOnScreenForVolumeDisplay) _Bool onScreenForVolumeDisplay;
// Preceding property had unknown attributes: ?
// Original attribute string: TB,?,R,N,GisOnScreenForVolumeDisplay

- (void)volumeController:(id)arg1 volumeControlCapabilitiesDidChange:(unsigned int)arg2;	// IMP=0x00000000000fad5c
- (void)volumeController:(id)arg1 volumeControlAvailableDidChange:(_Bool)arg2;	// IMP=0x00000000000fad2b
- (void)volumeController:(id)arg1 volumeValueDidChange:(float)arg2;	// IMP=0x00000000000fac6b
@property(retain, nonatomic) id <MPVolumeControllerDataSource> dataSource;
- (_Bool)pointInside:(struct CGPoint)arg1 withEvent:(id)arg2;	// IMP=0x00000000000fa9e5
- (struct CGRect)hitRect;	// IMP=0x00000000000fa96d
- (void)createConstraints;	// IMP=0x00000000000fa722
- (struct CGSize)intrinsicContentSize;	// IMP=0x00000000000fa711
- (void)dealloc;	// IMP=0x00000000000fa69c
- (id)initWithFrame:(struct CGRect)arg1;	// IMP=0x00000000000fa319

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
// Preceding property had unknown attributes: ?
// Original attribute string: T@"NSString",?,R,C

@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

