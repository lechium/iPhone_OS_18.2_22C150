//
//     Generated by classdump-c 4.2.0 (64 bit) (iOS port by DreamDevLost, Updated by Kevin Bradley.)(Debug version compiled Dec 27 2024 14:18:54).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

@class CKRecordID, CKShare;

@interface CKDModifyShareHandler
{
    struct _OpaquePCSShareProtection *_selfParticipantPCS;	// 8 = 0x8
    struct _PCSPublicIdentityData *_selfPPPCSOwnerIdentity;	// 16 = 0x10
    _Bool _haveAddedOwnerToShare;	// 24 = 0x18
    _Bool _isALegacyPublicShareThatNeedsOwnerPPPCSUpgrade;	// 25 = 0x19
}

+ (id)modifyHandlerForDeleteWithShareID:(id)arg1 operation:(id)arg2;	// IMP=0x00600000001e0f77
+ (id)modifyHandlerWithShare:(id)arg1 operation:(id)arg2;	// IMP=0x00600000001e0ee5
@property(nonatomic) _Bool isALegacyPublicShareThatNeedsOwnerPPPCSUpgrade; // @synthesize isALegacyPublicShareThatNeedsOwnerPPPCSUpgrade=_isALegacyPublicShareThatNeedsOwnerPPPCSUpgrade;
@property(nonatomic) _Bool haveAddedOwnerToShare; // @synthesize haveAddedOwnerToShare=_haveAddedOwnerToShare;
- (void)dealloc;	// IMP=0x00000000001f1de9
- (void)updateParticipantsForFetchedShare:(id)arg1 error:(id)arg2;	// IMP=0x00000000001f1aab
- (void)savePCSDataToCache;	// IMP=0x00000000001f1888
- (void)setServerRecord:(id)arg1;	// IMP=0x00000000001f0bf3
- (void)clearProtectionDataForRecord;	// IMP=0x00000000001f07a0
- (id)_removePublicKey:(id)arg1 fromInvitedPCS:(struct _OpaquePCSShareProtection *)arg2;	// IMP=0x00000000001f0517
- (id)_ensurePrivateParticipant:(id)arg1 isInInvitedSharePCS:(struct _OpaquePCSShareProtection *)arg2;	// IMP=0x00000000001ee23f
- (unsigned long long)invitedPCSPermissionForParticipant:(id)arg1;	// IMP=0x00000000001ee1e7
- (struct _PCSPublicIdentityData *)createPublicIdentityFromPublicKeyForParticipant:(id)arg1 error:(id *)arg2;	// IMP=0x00000000001ede5b
- (_Bool)_addedPrivateParticipantNeedsAManateeInvitation:(id)arg1;	// IMP=0x00000000001eddd5
- (id)_publicKeyForParticipant:(id)arg1 error:(id *)arg2;	// IMP=0x00000000001ed82e
- (id)_removePrivateParticipant:(id)arg1 fromInvitedSharePCS:(struct _OpaquePCSShareProtection *)arg2;	// IMP=0x00000000001ecf7d
- (_Bool)_removePrivateParticipantsFromInvitedPCS:(struct _OpaquePCSShareProtection *)arg1 error:(id *)arg2;	// IMP=0x00000000001ecc6c
- (_Bool)_modifyRoleForParticipant:(id)arg1 invitedPCS:(struct _OpaquePCSShareProtection *)arg2 shareeIdentities:(id)arg3 error:(id *)arg4;	// IMP=0x00000000001ec3c0
- (_Bool)_setupParticipantsProtectionInfos:(id *)arg1;	// IMP=0x00000000001ea399
- (void)_addPublicKeyToSelfParticipantWithCompletionHandler:(CDUnknownBlockType)arg1;	// IMP=0x00000000001e9336
- (_Bool)_cleanPublicPCSforShareWithError:(id *)arg1;	// IMP=0x00000000001e900c
- (_Bool)_updateSharePublicPCSWithError:(id *)arg1;	// IMP=0x00000000001e86f2
- (_Bool)_serializePCSDataForShareWithError:(id *)arg1;	// IMP=0x00000000001e716f
- (void)_alignParticipantPermissions;	// IMP=0x00000000001e6cfc
- (id)_rollShareAndZonePCSIfNeededForSharePCS:(id)arg1 zonePCSData:(id)arg2;	// IMP=0x00000000001e67e1
- (void)decryptSelfParticipantPCSWithCompletionHandler:(CDUnknownBlockType)arg1;	// IMP=0x00000000001e6127
- (void)prepareForSaveWithCompletionHandler:(CDUnknownBlockType)arg1;	// IMP=0x00000000001e55b4
- (void)_prepareDependentPCSUpdateIfNeededForShareWithSharePCS:(id)arg1 error:(id)arg2;	// IMP=0x00000000001e4974
- (id)_handleSharePCSData:(id)arg1 zonePCSData:(id)arg2;	// IMP=0x00000000001e3fb1
- (id)_createNewSharePCSDataWithError:(id *)arg1;	// IMP=0x00000000001e379a
- (void)_fetchRootRecordPublicSharingIdentityWithCompletionHandler:(CDUnknownBlockType)arg1;	// IMP=0x00000000001e3405
- (void)_fetchSharePCSData;	// IMP=0x00000000001e1edc
- (void)fetchSharePCSData;	// IMP=0x00000000001e15af
- (void)noteSideEffectRecordPendingDelete:(id)arg1;	// IMP=0x00000000001e14ac
- (void)noteSideEffectRecordAbsent:(id)arg1;	// IMP=0x00000000001e14a6
- (void)noteSideEffectRecordPendingModify:(id)arg1;	// IMP=0x00000000001e1389
- (id)sideEffectRecordIDs;	// IMP=0x00000000001e11e3
- (unsigned long long)serviceType;	// IMP=0x00000000001e114e
- (_Bool)isCloudDocsContainer;	// IMP=0x00000000001e10b4
- (_Bool)isShare;	// IMP=0x00000000001e10ac
@property(readonly, nonatomic) CKRecordID *shareID;
@property(readonly, nonatomic) CKShare *share;

@end

