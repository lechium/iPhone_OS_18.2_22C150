//
//     Generated by classdump-c 4.2.0 (64 bit) (iOS port by DreamDevLost, Updated by Kevin Bradley.)(Debug version compiled Dec 27 2024 14:18:54).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <objc/NSObject.h>

@class C2MetricOptions, CKContainerID, CKOperationMMCSRequestOptions, NSArray, NSData, NSDictionary, NSNumber, NSString;
@protocol C2NetworkingDelegate;

@interface CKDMMCSRequestOptions : NSObject
{
    _Bool _allowsCellularAccess;	// 8 = 0x8
    _Bool _allowsExpensiveNetworkAccess;	// 9 = 0x9
    _Bool _allowsPowerNapScheduling;	// 10 = 0xa
    _Bool _resolvedAutomaticallyRetryNetworkFailures;	// 11 = 0xb
    _Bool _isCrossOwner;	// 12 = 0xc
    _Bool _shouldCloneFileInAssetCache;	// 13 = 0xd
    _Bool _useFORD;	// 14 = 0xe
    long long _databaseScope;	// 16 = 0x10
    CKContainerID *_containerID;	// 24 = 0x18
    NSString *_topmostParentOperationID;	// 32 = 0x20
    NSString *_topmostParentOperationGroupID;	// 40 = 0x28
    NSString *_topmostParentOperationGroupName;	// 48 = 0x30
    NSString *_applicationBundleIdentifierForContainerAccess;	// 56 = 0x38
    NSString *_applicationBundleIdentifierForNetworkAttribution;	// 64 = 0x40
    NSString *_applicationSecondaryID;	// 72 = 0x48
    NSArray *_zoneNames;	// 80 = 0x50
    NSString *_deviceHardwareID;	// 88 = 0x58
    NSData *_authPutResponse;	// 96 = 0x60
    NSDictionary *_authPutResponseHeaders;	// 104 = 0x68
    long long _qualityOfService;	// 112 = 0x70
    long long _clientQueuePriority;	// 120 = 0x78
    unsigned long long _resolvedDiscretionaryNetworkBehavior;	// 128 = 0x80
    unsigned long long _duetPreClearedMode;	// 136 = 0x88
    C2MetricOptions *_metricOptions;	// 144 = 0x90
    NSNumber *_cacheDeleteAvailableSpaceClass;	// 152 = 0x98
    id <C2NetworkingDelegate> _networkingDelegate;	// 160 = 0xa0
    unsigned long long _networkServiceType;	// 168 = 0xa8
    CKOperationMMCSRequestOptions *_MMCSRequestOptions;	// 176 = 0xb0
}

- (void).cxx_destruct;	// IMP=0x000000000032e267
@property(retain, nonatomic) CKOperationMMCSRequestOptions *MMCSRequestOptions; // @synthesize MMCSRequestOptions=_MMCSRequestOptions;
@property(nonatomic) unsigned long long networkServiceType; // @synthesize networkServiceType=_networkServiceType;
@property(retain, nonatomic) id <C2NetworkingDelegate> networkingDelegate; // @synthesize networkingDelegate=_networkingDelegate;
@property(nonatomic) _Bool useFORD; // @synthesize useFORD=_useFORD;
@property(nonatomic) _Bool shouldCloneFileInAssetCache; // @synthesize shouldCloneFileInAssetCache=_shouldCloneFileInAssetCache;
@property(retain, nonatomic) NSNumber *cacheDeleteAvailableSpaceClass; // @synthesize cacheDeleteAvailableSpaceClass=_cacheDeleteAvailableSpaceClass;
@property(nonatomic) _Bool isCrossOwner; // @synthesize isCrossOwner=_isCrossOwner;
@property(retain, nonatomic) C2MetricOptions *metricOptions; // @synthesize metricOptions=_metricOptions;
@property(nonatomic) unsigned long long duetPreClearedMode; // @synthesize duetPreClearedMode=_duetPreClearedMode;
@property(nonatomic) unsigned long long resolvedDiscretionaryNetworkBehavior; // @synthesize resolvedDiscretionaryNetworkBehavior=_resolvedDiscretionaryNetworkBehavior;
@property(nonatomic) _Bool resolvedAutomaticallyRetryNetworkFailures; // @synthesize resolvedAutomaticallyRetryNetworkFailures=_resolvedAutomaticallyRetryNetworkFailures;
@property(nonatomic) long long clientQueuePriority; // @synthesize clientQueuePriority=_clientQueuePriority;
@property(nonatomic) long long qualityOfService; // @synthesize qualityOfService=_qualityOfService;
@property(nonatomic) _Bool allowsPowerNapScheduling; // @synthesize allowsPowerNapScheduling=_allowsPowerNapScheduling;
@property(nonatomic) _Bool allowsExpensiveNetworkAccess; // @synthesize allowsExpensiveNetworkAccess=_allowsExpensiveNetworkAccess;
@property(nonatomic) _Bool allowsCellularAccess; // @synthesize allowsCellularAccess=_allowsCellularAccess;
@property(retain, nonatomic) NSDictionary *authPutResponseHeaders; // @synthesize authPutResponseHeaders=_authPutResponseHeaders;
@property(retain, nonatomic) NSData *authPutResponse; // @synthesize authPutResponse=_authPutResponse;
@property(retain, nonatomic) NSString *deviceHardwareID; // @synthesize deviceHardwareID=_deviceHardwareID;
@property(retain, nonatomic) NSArray *zoneNames; // @synthesize zoneNames=_zoneNames;
@property(retain, nonatomic) NSString *applicationSecondaryID; // @synthesize applicationSecondaryID=_applicationSecondaryID;
@property(retain, nonatomic) NSString *applicationBundleIdentifierForNetworkAttribution; // @synthesize applicationBundleIdentifierForNetworkAttribution=_applicationBundleIdentifierForNetworkAttribution;
@property(retain, nonatomic) NSString *applicationBundleIdentifierForContainerAccess; // @synthesize applicationBundleIdentifierForContainerAccess=_applicationBundleIdentifierForContainerAccess;
@property(retain, nonatomic) NSString *topmostParentOperationGroupName; // @synthesize topmostParentOperationGroupName=_topmostParentOperationGroupName;
@property(retain, nonatomic) NSString *topmostParentOperationGroupID; // @synthesize topmostParentOperationGroupID=_topmostParentOperationGroupID;
@property(retain, nonatomic) NSString *topmostParentOperationID; // @synthesize topmostParentOperationID=_topmostParentOperationID;
@property(retain, nonatomic) CKContainerID *containerID; // @synthesize containerID=_containerID;
@property(nonatomic) long long databaseScope; // @synthesize databaseScope=_databaseScope;
- (id)MMCSOptions;	// IMP=0x000000000032d13f
- (_Bool)usesBackgroundSession;	// IMP=0x000000000032d0ee
- (id)description;	// IMP=0x000000000032d0dc
- (id)CKPropertiesDescription;	// IMP=0x000000000032cc19
- (id)initWithOperation:(id)arg1;	// IMP=0x000000000032c7dd

@end

