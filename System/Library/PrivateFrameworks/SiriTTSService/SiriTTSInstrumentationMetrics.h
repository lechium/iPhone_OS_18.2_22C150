//
//     Generated by classdump-c 4.2.0 (64 bit) (iOS port by DreamDevLost, Updated by Kevin Bradley.)(Debug version compiled Dec 27 2024 14:18:54).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <objc/NSObject.h>

@class MISSING_TYPE, NSArray, NSString, SiriTTSSynthesisResource, SiriTTSSynthesisVoice;

@interface SiriTTSInstrumentationMetrics : NSObject
{
    MISSING_TYPE *utterance;	// 8 = 0x8
    MISSING_TYPE *voice;	// 24 = 0x18
    MISSING_TYPE *resource;	// 32 = 0x20
    MISSING_TYPE *audioOutputRoute;	// 40 = 0x28
    MISSING_TYPE *clientBundleIdentifier;	// 56 = 0x38
    MISSING_TYPE *experimentIdentifier;	// 72 = 0x48
    MISSING_TYPE *requestCreatedTime;	// 88 = 0x58
    MISSING_TYPE *eagerRequestGapInterval;	// 96 = 0x60
    MISSING_TYPE *synthesisBeginTime;	// 104 = 0x68
    MISSING_TYPE *synthesisFirstAudioTime;	// 112 = 0x70
    MISSING_TYPE *synthesisEndTime;	// 120 = 0x78
    MISSING_TYPE *speechBeginTime;	// 128 = 0x80
    MISSING_TYPE *speechEndTime;	// 136 = 0x88
    MISSING_TYPE *speechEstimatedOutputBeginTime;	// 144 = 0x90
    MISSING_TYPE *audioStartLatency;	// 152 = 0x98
    MISSING_TYPE *serverFirstPacketTime;	// 160 = 0xa0
    MISSING_TYPE *serverLastPacketTime;	// 168 = 0xa8
    MISSING_TYPE *serverStreamedAudioDuration;	// 176 = 0xb0
    MISSING_TYPE *audioDuration;	// 184 = 0xb8
    MISSING_TYPE *isWarmStart;	// 192 = 0xc0
    MISSING_TYPE *sourceOfTTS;	// 200 = 0xc8
    MISSING_TYPE *privacySensitive;	// 208 = 0xd0
    MISSING_TYPE *minimizeDeviceUsage;	// 209 = 0xd1
    MISSING_TYPE *errorCode;	// 216 = 0xd8
    MISSING_TYPE *encounteredIssues;	// 224 = 0xe0
    MISSING_TYPE *isServerTTSRacing;	// 232 = 0xe8
    MISSING_TYPE *promptCount;	// 240 = 0xf0
    MISSING_TYPE *neuralAlignmentStall;	// 248 = 0xf8
    MISSING_TYPE *neuralAudioClick;	// 249 = 0xf9
    MISSING_TYPE *synthesisQualityIssue;	// 250 = 0xfa
    MISSING_TYPE *useHydraFrontend;	// 251 = 0xfb
    MISSING_TYPE *neuralFallback;	// 252 = 0xfc
    MISSING_TYPE *isAudibleRequest;	// 253 = 0xfd
    MISSING_TYPE *deviceThermalState;	// 256 = 0x100
}

+ (void)setSupportsSecureCoding:(_Bool)arg1;	// IMP=0x00100000000d70c0
+ (_Bool)supportsSecureCoding;	// IMP=0x00100000000d7083
- (void).cxx_destruct;	// IMP=0x00000000000d9ae1
@property(nonatomic, readonly) NSString *description;
- (id)initWithCoder:(id)arg1;	// IMP=0x00000000000d904c
- (void)encodeWithCoder:(id)arg1;	// IMP=0x00000000000d7e60
- (id)init;	// IMP=0x00000000000d7044
@property(nonatomic) long long deviceThermalState; // @synthesize deviceThermalState;
@property(nonatomic) _Bool isAudibleRequest; // @synthesize isAudibleRequest;
@property(nonatomic) _Bool neuralFallback; // @synthesize neuralFallback;
@property(nonatomic) _Bool useHydraFrontend; // @synthesize useHydraFrontend;
@property(nonatomic) _Bool synthesisQualityIssue; // @synthesize synthesisQualityIssue;
@property(nonatomic) _Bool neuralAudioClick; // @synthesize neuralAudioClick;
@property(nonatomic) _Bool neuralAlignmentStall; // @synthesize neuralAlignmentStall;
@property(nonatomic) long long promptCount; // @synthesize promptCount;
@property(nonatomic) _Bool isServerTTSRacing; // @synthesize isServerTTSRacing;
@property(nonatomic, copy) NSArray *encounteredIssues;
@property(nonatomic) long long errorCode; // @synthesize errorCode;
@property(nonatomic) _Bool minimizeDeviceUsage; // @synthesize minimizeDeviceUsage;
@property(nonatomic) _Bool privacySensitive; // @synthesize privacySensitive;
@property(nonatomic) long long sourceOfTTS; // @synthesize sourceOfTTS;
@property(nonatomic) _Bool isWarmStart; // @synthesize isWarmStart;
@property(nonatomic) double audioDuration; // @synthesize audioDuration;
@property(nonatomic) double serverStreamedAudioDuration; // @synthesize serverStreamedAudioDuration;
@property(nonatomic) unsigned long long serverLastPacketTime; // @synthesize serverLastPacketTime;
@property(nonatomic) unsigned long long serverFirstPacketTime; // @synthesize serverFirstPacketTime;
@property(nonatomic) double audioStartLatency; // @synthesize audioStartLatency;
@property(nonatomic) unsigned long long speechEstimatedOutputBeginTime; // @synthesize speechEstimatedOutputBeginTime;
@property(nonatomic) unsigned long long speechEndTime; // @synthesize speechEndTime;
@property(nonatomic) unsigned long long speechBeginTime; // @synthesize speechBeginTime;
@property(nonatomic) unsigned long long synthesisEndTime; // @synthesize synthesisEndTime;
@property(nonatomic) unsigned long long synthesisBeginTime; // @synthesize synthesisBeginTime;
@property(nonatomic) double eagerRequestGapInterval; // @synthesize eagerRequestGapInterval;
@property(nonatomic) unsigned long long requestCreatedTime; // @synthesize requestCreatedTime;
@property(nonatomic, copy) NSString *experimentIdentifier;
@property(nonatomic, copy) NSString *clientBundleIdentifier;
@property(nonatomic, copy) NSString *audioOutputRoute;
@property(nonatomic, retain) SiriTTSSynthesisResource *resource; // @synthesize resource;
@property(nonatomic, retain) SiriTTSSynthesisVoice *voice; // @synthesize voice;
@property(nonatomic, copy) NSString *utterance;
@property(nonatomic, readonly) NSString *voiceResourceAssetKey;
@property(nonatomic, readonly) NSString *voiceAssetKey;

@end

