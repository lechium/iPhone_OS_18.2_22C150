//
//     Generated by classdump-c 4.2.0 (64 bit) (iOS port by DreamDevLost, Updated by Kevin Bradley.)(Debug version compiled Dec 27 2024 14:18:54).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <ShimGameServices/GKChallengeService-Protocol.h>

@class GKChallengeInternal, NSArray, NSNumber, NSString;

@protocol GKChallengeServicePrivate <GKChallengeService>
- (oneway void)getActiveLeaderboardChallengeDetailsForPlayerID:(NSString *)arg1 bundleID:(NSString *)arg2 allowStaleChallengeDetailsData:(_Bool)arg3 completionHandler:(void (^)(NSArray *, NSError *))arg4;
- (oneway void)leaveLeaderboardChallengeWithChallengeID:(NSString *)arg1 playerID:(NSString *)arg2 completionHandler:(void (^)(NSString *, NSError *))arg3;
- (oneway void)getLeaderboardCompletedChallengeSummaryForPlayerID:(NSString *)arg1 type:(NSString *)arg2 bundleID:(NSString *)arg3 completionHandler:(void (^)(GKLeaderboardChallengeCompletedSummaryInternal *, NSError *))arg4;
- (oneway void)getLeaderboardChallengesCompletedWithPlayerID:(NSString *)arg1 type:(NSString *)arg2 bundleID:(NSString *)arg3 completionHandler:(void (^)(GKLeaderboardChallengeDetailsPageInternal *, NSError *))arg4;
- (oneway void)compareLeaderboardChallengeWithPlayerID:(NSString *)arg1 otherPlayerID:(NSString *)arg2 bundleID:(NSString *)arg3 completionHandler:(void (^)(GKLeaderboardChallengeComparisonInternal *, NSError *))arg4;
- (oneway void)getLeaderboardChallengeInviteStatusWithChallengeID:(NSString *)arg1 inviteCode:(NSString *)arg2 playerID:(NSString *)arg3 completionHandler:(void (^)(NSString *, NSError *))arg4;
- (oneway void)createLeaderboardChallengeInviteCodeWithChallengeID:(NSString *)arg1 playerID:(NSString *)arg2 completionHandler:(void (^)(NSString *, NSError *))arg3;
- (oneway void)inviteToLeaderboardChallengeWithID:(NSString *)arg1 invitedPlayerIDs:(NSArray *)arg2 completionHandler:(void (^)(GKLeaderboardChallengeInviteStatusInternal *, NSError *))arg3;
- (oneway void)acceptInviteForLeaderboardChallengeCode:(NSString *)arg1 completionHandler:(void (^)(NSError *))arg2;
- (oneway void)acceptInviteForLeaderboardChallengeID:(NSString *)arg1 completionHandler:(void (^)(NSError *))arg2;
- (oneway void)getLeaderboardChallengeSummaryForPlayerID:(NSString *)arg1 bundleID:(NSString *)arg2 completionHandler:(void (^)(GKLeaderboardChallengeSummaryInternal *, NSError *))arg3;
- (oneway void)getLeaderboardChallengeDetailsForChallengeID:(NSString *)arg1 allowStaleData:(_Bool)arg2 completionHandler:(void (^)(GKLeaderboardChallengeInternal *, NSError *))arg3;
- (oneway void)createLeaderboardChallengeWithBundleID:(NSString *)arg1 leaderboardID:(NSString *)arg2 attemptLimit:(NSNumber *)arg3 duration:(NSNumber *)arg4 invitedPlayerIDs:(NSArray *)arg5 previousChallengeID:(NSString *)arg6 completionHandler:(void (^)(GKLeaderboardChallengeInternal *, NSError *))arg7;
- (oneway void)getApprovedGamesForLeaderboardChallengesWithHandler:(void (^)(NSArray *))arg1;
- (oneway void)startGame:(NSString *)arg1 withChallenge:(GKChallengeInternal *)arg2;
- (oneway void)getCountOfChallengesWithHandler:(void (^)(unsigned long long, NSError *))arg1;
@end

