//
//     Generated by classdump-c 4.2.0 (64 bit) (iOS port by DreamDevLost, Updated by Kevin Bradley.)(Debug version compiled Dec 27 2024 14:18:54).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <objc/NSObject.h>

@class CUIVectorGlyphPath, NSArray, NSString;
@protocol CUIVectorGlyhLayerDelegate;

@interface CUIVectorGlyphLayer : NSObject
{
    NSArray *_sublayers;	// 8 = 0x8
    struct CGPath *_clipPathFromSublayers;	// 16 = 0x10
    _Bool _alwaysPulses;	// 24 = 0x18
    _Bool _alwaysRotates;	// 25 = 0x19
    _Bool _alwaysBreathes;	// 26 = 0x1a
    _Bool _isEraserLayer;	// 27 = 0x1b
    _Bool _isPassthrough;	// 28 = 0x1c
    int _lineCap;	// 32 = 0x20
    int _lineJoin;	// 36 = 0x24
    NSString *_name;	// 40 = 0x28
    unsigned long long _index;	// 48 = 0x30
    NSArray *_tags;	// 56 = 0x38
    unsigned long long _motionGroup;	// 64 = 0x40
    double _opacity;	// 72 = 0x48
    double _valueThreshold;	// 80 = 0x50
    double _strokeWidth;	// 88 = 0x58
    CUIVectorGlyphPath *_referencePath;	// 96 = 0x60
    id <CUIVectorGlyhLayerDelegate> _delegate;	// 104 = 0x68
}

+ (id)_layerHierarchyStyleNames;	// IMP=0x006000000008d835
+ (id)_colorNameForRenderingStyle:(id)arg1;	// IMP=0x006000000008d7cd
+ (int)_lineJoinFromStyle:(struct CGSVGAttributeMap *)arg1;	// IMP=0x006000000008d767
+ (int)_lineCapFromStyle:(struct CGSVGAttributeMap *)arg1;	// IMP=0x006000000008d6fe
+ (double)_strokeWidthFromStyle:(struct CGSVGAttributeMap *)arg1;	// IMP=0x006000000008d69e
+ (struct CGColor *)_strokeColorFromStyle:(struct CGSVGAttributeMap *)arg1;	// IMP=0x006000000008d609
+ (struct CGColor *)_fillColorFromStyle:(struct CGSVGAttributeMap *)arg1;	// IMP=0x006000000008d574
+ (id)createLayerGroupWithLayerNames:(id)arg1 delegate:(id)arg2;	// IMP=0x006000000008b4cb
+ (id)createLayerGroupWithLayerTree:(struct CGSVGNode *)arg1 modePrefix:(id)arg2 shapes:(id)arg3 delegate:(id)arg4;	// IMP=0x006000000008b4a1
+ (id)createLayerGroupWithLayerTree:(struct CGSVGNode *)arg1 layerNames:(id)arg2 shapes:(id)arg3 delegate:(id)arg4;	// IMP=0x006000000008b19d
+ (id)_createShapeLayerWithLayerTreeNode:(struct CGSVGNode *)arg1 layerName:(id)arg2 index:(unsigned long long)arg3 shapes:(id)arg4 delegate:(id)arg5;	// IMP=0x006000000008aee2
+ (id)_createSimpleLayerWithLayerTreeNode:(struct CGSVGNode *)arg1 layerName:(id)arg2 index:(unsigned long long)arg3 subpaths:(id)arg4 delegate:(id)arg5;	// IMP=0x006000000008ae0a
+ (id)_createLayerWithLayerTreeNode:(struct CGSVGNode *)arg1 layerName:(id)arg2 index:(unsigned long long)arg3 subpaths:(id)arg4 delegate:(id)arg5;	// IMP=0x006000000008adaa
+ (id)_createTreeWithLayerTreeNode:(struct CGSVGNode *)arg1 modePrefix:(id)arg2 layerName:(id)arg3 index:(unsigned long long)arg4 subpaths:(id)arg5 delegate:(id)arg6;	// IMP=0x006000000008aa1b
+ (id)_createPathFromStyle:(struct CGSVGAttributeMap *)arg1 subpaths:(id)arg2;	// IMP=0x006000000008a975
+ (_Bool)_indexFromStyleSuffix:(id)arg1 integer:(unsigned long long *)arg2;	// IMP=0x006000000008a8a2
+ (id)_suffixForNamedStyleWithPrefix:(id)arg1 styles:(id)arg2;	// IMP=0x006000000008a733
+ (_Bool)_classesContainRenderModeClass:(id)arg1;	// IMP=0x006000000008a6d6
+ (unsigned int)_layerTagsAtom;	// IMP=0x006000000008a693
+ (unsigned int)_subpathIndicesAtom;	// IMP=0x006000000008a650
+ (unsigned int)_alwaysBreathesAtom;	// IMP=0x006000000008a60d
+ (unsigned int)_alwaysRotatesAtom;	// IMP=0x006000000008a5ca
+ (unsigned int)_alwaysPulsesAtom;	// IMP=0x006000000008a587
+ (unsigned int)_motionGroupAtom;	// IMP=0x006000000008a544
+ (unsigned int)_fillActionAtom;	// IMP=0x006000000008a501
+ (unsigned int)_variableThresholdAtom;	// IMP=0x006000000008a4be
+ (unsigned int)_clearBehindAtom;	// IMP=0x006000000008a47b
+ (double)_strokeWidthForNode:(struct CGSVGNode *)arg1;	// IMP=0x006000000008a412
- (void).cxx_destruct;	// IMP=0x000000000008d92c
@property(nonatomic) __weak id <CUIVectorGlyhLayerDelegate> delegate; // @synthesize delegate=_delegate;
@property(readonly, nonatomic) _Bool isPassthrough; // @synthesize isPassthrough=_isPassthrough;
@property(readonly, retain, nonatomic) CUIVectorGlyphPath *referencePath; // @synthesize referencePath=_referencePath;
@property(readonly, nonatomic) int lineJoin; // @synthesize lineJoin=_lineJoin;
@property(readonly, nonatomic) int lineCap; // @synthesize lineCap=_lineCap;
@property(readonly, nonatomic) double strokeWidth; // @synthesize strokeWidth=_strokeWidth;
@property(readonly, nonatomic) _Bool isEraserLayer; // @synthesize isEraserLayer=_isEraserLayer;
@property(readonly, nonatomic) double valueThreshold; // @synthesize valueThreshold=_valueThreshold;
@property(readonly, nonatomic) double opacity; // @synthesize opacity=_opacity;
@property(readonly, nonatomic) _Bool alwaysBreathes; // @synthesize alwaysBreathes=_alwaysBreathes;
@property(readonly, nonatomic) _Bool alwaysRotates; // @synthesize alwaysRotates=_alwaysRotates;
@property(readonly, nonatomic) _Bool alwaysPulses; // @synthesize alwaysPulses=_alwaysPulses;
@property(readonly, nonatomic) unsigned long long motionGroup; // @synthesize motionGroup=_motionGroup;
@property(readonly, retain, nonatomic) NSArray *tags; // @synthesize tags=_tags;
@property(readonly, nonatomic) unsigned long long index; // @synthesize index=_index;
@property(readonly, retain, nonatomic) NSString *name; // @synthesize name=_name;
- (struct CGPath *)copyClipShape;	// IMP=0x000000000008d24c
- (struct CGImage *)createSublayerMaskUsingScaleFactor:(double)arg1 targetSize:(struct CGSize)arg2 maskColor:(struct CGColor *)arg3;	// IMP=0x000000000008cfff
- (struct CGImage *)createImageUsingScaleFactor:(double)arg1 targetSize:(struct CGSize)arg2 variableMinValue:(double)arg3 variableMaxValue:(double)arg4 onFillColor:(struct CGColor *)arg5 offFillColor:(struct CGColor *)arg6;	// IMP=0x000000000008cda6
- (void)drawInContext:(struct CGContext *)arg1 scaleFactor:(double)arg2 targetSize:(struct CGSize)arg3 variableMinValue:(double)arg4 variableMaxValue:(double)arg5 onFillColor:(struct CGColor *)arg6 offFillColor:(struct CGColor *)arg7;	// IMP=0x000000000008ca8a
- (struct CGColor *)_colorForVariableThreshold:(double)arg1 variableMinValue:(double)arg2 variableMaxValue:(double)arg3 onFillColor:(struct CGColor *)arg4 offFillColor:(struct CGColor *)arg5;	// IMP=0x000000000008c9f6
- (_Bool)anyLayerNeedsWideGamutColor;	// IMP=0x000000000008c884
@property(readonly, nonatomic) _Bool needsWideGamut;
@property(readonly, retain, nonatomic) NSArray *sublayers;
- (void)_setAllLayersAlwaysRotate:(_Bool)arg1;	// IMP=0x000000000008c756
- (_Bool)_anyLayerAlwaysRotates;	// IMP=0x000000000008c60f
- (void)_setAlwaysRotates:(_Bool)arg1;	// IMP=0x000000000008c606
- (void)_setAllLayersAlwaysPulse:(_Bool)arg1;	// IMP=0x000000000008c4d0
- (_Bool)_anyLayerAlwaysPulses;	// IMP=0x000000000008c389
- (void)_setAlwaysPulses:(_Bool)arg1;	// IMP=0x000000000008c380
- (id)pathAtScale:(double)arg1;	// IMP=0x000000000008c297
- (id)path;	// IMP=0x000000000008c246
- (struct CGPath *)shapeAtScale:(double)arg1;	// IMP=0x000000000008c1fd
- (struct CGPath *)shape;	// IMP=0x000000000008c1ac
@property(readonly, retain, nonatomic) id referenceShape;
- (id)debugDescription;	// IMP=0x000000000008c17f
- (id)debugDescriptionWithIndentLevel:(unsigned long long)arg1;	// IMP=0x000000000008be68
- (void)dealloc;	// IMP=0x000000000008bddc
- (id)__initGroupWithName:(id)arg1 index:(unsigned long long)arg2 sublayers:(id)arg3 attributes:(struct CGSVGAttributeMap *)arg4 style:(struct CGSVGAttributeMap *)arg5 passthrough:(_Bool)arg6 delegate:(id)arg7;	// IMP=0x000000000008bd25
- (id)__initTreeWithName:(id)arg1 index:(unsigned long long)arg2 sublayers:(id)arg3 attributes:(struct CGSVGAttributeMap *)arg4 style:(struct CGSVGAttributeMap *)arg5 delegate:(id)arg6;	// IMP=0x000000000008bd02
- (id)_initWithName:(id)arg1 index:(unsigned long long)arg2 sublayers:(id)arg3 attributes:(struct CGSVGAttributeMap *)arg4 style:(struct CGSVGAttributeMap *)arg5 delegate:(id)arg6;	// IMP=0x000000000008bcdf
- (id)_initWithName:(id)arg1 index:(unsigned long long)arg2 shape:(id)arg3 strokeWidth:(double)arg4 attributes:(struct CGSVGAttributeMap *)arg5 style:(struct CGSVGAttributeMap *)arg6 delegate:(id)arg7;	// IMP=0x000000000008bc18
- (void)_readCSSAttributes:(struct CGSVGAttributeMap *)arg1 styleAttributes:(struct CGSVGAttributeMap *)arg2;	// IMP=0x000000000008b69e

@end

