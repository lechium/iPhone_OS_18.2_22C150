//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <objc/NSObject.h>

@class MTKTextureLoader, NSMutableArray, VFXMTLBufferAllocator, VFXMTLLibraryManager, VFXMTLShadableKey, VFXMTLShaderBindingsGenerator;
@protocol MTLCommandQueue, MTLDepthStencilState, MTLDevice, MTLTexture;

@interface VFXMTLResourceManager : NSObject
{
    id <MTLDevice> _device;	// 8 = 0x8
    id <MTLCommandQueue> _commandQueue;	// 16 = 0x10
    struct __CFXEngineStats *__engineStats;	// 24 = 0x18
    VFXMTLLibraryManager *_libraryManager;	// 32 = 0x20
    VFXMTLShaderBindingsGenerator *_bindingsGenerator;	// 40 = 0x28
    struct __CFDictionary *_availablePipelineStates;	// 48 = 0x30
    struct os_unfair_lock_s _availablePipelineStatesLock;	// 56 = 0x38
    VFXMTLBufferAllocator *_commonProfileBuffersAllocator;	// 64 = 0x40
    CDStruct_670bd187 _availableLightingSystemReflectionProbeTextures;	// 72 = 0x48
    CDStruct_670bd187 _availableIrradianceTextures;	// 88 = 0x58
    CDStruct_670bd187 _availableRadianceTextures;	// 104 = 0x68
    CDStruct_670bd187 _availableImages;	// 120 = 0x78
    CDStruct_670bd187 _availableImageProxy;	// 136 = 0x88
    CDStruct_670bd187 _availableSamplers;	// 152 = 0x98
    CDStruct_670bd187 _availableIESTextures;	// 168 = 0xa8
    CDStruct_670bd187 _availableBuffers;	// 184 = 0xb8
    CDStruct_670bd187 _availableMeshes;	// 200 = 0xc8
    CDStruct_670bd187 _availableMeshSources;	// 216 = 0xd8
    CDStruct_670bd187 _availableMeshElements;	// 232 = 0xe8
    CDStruct_670bd187 _availableRasterizerStates;	// 248 = 0xf8
    CDStruct_670bd187 _availableDeformerStacks;	// 264 = 0x108
    CDStruct_670bd187 _availableSkinDeformerReadOnlyBuffers;	// 280 = 0x118
    CDStruct_670bd187 _availableMorphDeformerReadOnlyBuffers;	// 296 = 0x128
    CDStruct_670bd187 _availableComputePipelines;	// 312 = 0x138
    CDStruct_670bd187 _availableComputePipelinesWithStageDescriptor;	// 328 = 0x148
    CDStruct_670bd187 _availableColorMatchingComputePipelines;	// 344 = 0x158
    CDStruct_670bd187 _availableTessellators;	// 360 = 0x168
    CDStruct_670bd187 _availableWireframeMaterials;	// 376 = 0x178
    CDStruct_670bd187 _availableOpenSubdivComputeEvaluators;	// 392 = 0x188
    CDStruct_670bd187 _availableShadables;	// 408 = 0x198
    VFXMTLShadableKey *_availableShadablesSearchKey;	// 424 = 0x1a8
    NSMutableArray *_availableStageDescriptors;	// 432 = 0x1b0
    struct os_unfair_lock_s _stageDescriptorsLock;	// 440 = 0x1b8
    id <MTLTexture> _areaLightPrecomputedDataTexture;	// 448 = 0x1c0
    id <MTLTexture> _specularDFGDiffuseHammonTexture;	// 456 = 0x1c8
    struct __CFXFXProgram *_defaultProgram;	// 464 = 0x1d0
    struct __CFXFXProgram *_defaultProgramForTessellation;	// 472 = 0x1d8
    struct __CFXFXProgram *_isolateProgram;	// 480 = 0x1e0
    id <MTLDepthStencilState> _depthAndStencilStateWithReadWriteDepthDisabled;	// 488 = 0x1e8
    id <MTLTexture> _defaultTexture;	// 496 = 0x1f0
    id <MTLTexture> _defaultTexture1D;	// 504 = 0x1f8
    id <MTLTexture> _defaultTexture3D;	// 512 = 0x200
    id <MTLTexture> _defaultCubeTexture;	// 520 = 0x208
    id <MTLTexture> _defaultLightingEnvironmentIrradianceTexture;	// 528 = 0x210
    id <MTLTexture> _defaultLightingEnvironmentRadianceTexture;	// 536 = 0x218
    MTKTextureLoader *_mtkTextureLoader;	// 544 = 0x220
}

+ (void)_fillVertexDescriptor:(id)arg1 withSemantic:(BOOL)arg2 inputSet:(long long)arg3 bufferIndex:(long long)arg4 vertexFormat:(unsigned long long)arg5 offset:(unsigned long long)arg6 stride:(unsigned long long)arg7;	// IMP=0x00600000001a9280
+ (void)_fillVertexDescriptor:(id)arg1 withMeshSource:(struct __CFXMeshSource *)arg2 semantic:(BOOL)arg3 inputSet:(long long)arg4 bufferIndex:(long long)arg5;	// IMP=0x00600000001a8f96
+ (void)unregisterManagerForDevice:(id)arg1;	// IMP=0x00600000001a6a2a
- (void)commandBufferDidCompleteWithError:(id)arg1;	// IMP=0x00000000001ac880
- (id)renderResourceForMorpher:(struct __CFXMorpher *)arg1 baseMesh:(struct __CFXMesh *)arg2 dataKind:(unsigned char)arg3 provider:(CDUnknownBlockType)arg4;	// IMP=0x00000000001aa020
- (id)renderResourceForSkinner:(struct __CFXSkinner *)arg1 baseMesh:(struct __CFXMesh *)arg2 dataKind:(unsigned char)arg3 provider:(CDUnknownBlockType)arg4;	// IMP=0x00000000001a9d5d
- (id)renderResourceForDeformerStack:(struct __CFXDeformerStack *)arg1 node:(struct __CFXNode *)arg2 dataKind:(unsigned char)arg3;	// IMP=0x00000000001a9c69
- (void)__updateMutableMesh:(struct __CFXMesh *)arg1 withMetalMesh:(id)arg2;	// IMP=0x00000000001a9420
- (id)_bufferForData:(struct __CFData *)arg1 bytesPerIndex:(unsigned long long)arg2;	// IMP=0x00000000001a8a00
- (id)_bufferForMTLBuffer:(void *)arg1;	// IMP=0x00000000001a88f7
- (void)_modelWillDie:(id)arg1;	// IMP=0x00000000001a8317
- (void)_materialWillDie:(id)arg1;	// IMP=0x00000000001a809d
- (void)_programWillDie:(id)arg1;	// IMP=0x00000000001a7df9
- (void)_removeMatchingProgram:(struct __CFXFXProgram *)arg1 owner:(struct __CFXWorld *)arg2;	// IMP=0x00000000001a7cbd
- (void)_rasterizerStateDidDie:(const void *)arg1;	// IMP=0x00000000001a7ca4
- (void)_precomputedLightingEnvironmentWillDie:(id)arg1;	// IMP=0x00000000001a7c0c
- (void)_imageProxyWillDie:(id)arg1;	// IMP=0x00000000001a7b93
- (void)_imageWillDie:(id)arg1;	// IMP=0x00000000001a7a37
- (void)_deformerStackDidChange:(id)arg1;	// IMP=0x00000000001a7968
- (void)_deformerStackWillDie:(id)arg1;	// IMP=0x00000000001a78ed
- (void)_skinWillDie:(id)arg1;	// IMP=0x00000000001a7895
- (void)_programHashCodeWillDie:(id)arg1;	// IMP=0x00000000001a783d
- (void)_morphWillDie:(id)arg1;	// IMP=0x00000000001a77e5
- (void)_meshWillDie:(id)arg1;	// IMP=0x00000000001a760a
- (void)_worldWillDie:(id)arg1;	// IMP=0x00000000001a737e
- (void)_meshElementWillDie:(id)arg1;	// IMP=0x00000000001a727c
- (void)_meshSourceWillDie:(id)arg1;	// IMP=0x00000000001a7203
- (void)dealloc;	// IMP=0x00000000001a6f52
- (id)initWithDevice:(id)arg1;	// IMP=0x00000000001a6aad
- (id)areaLightPrecomputedDataTexture;	// IMP=0x00000000001c6742
- (id)specularDFGDiffuseHammonTextureWithRenderContext:(id)arg1;	// IMP=0x00000000001c65fb
- (id)radianceTextureForEnvironmentTexture:(id)arg1 engineContext:(struct __CFXEngineContext *)arg2 commandBuffer:(id)arg3;	// IMP=0x00000000001c6526
- (id)newRadianceTextureForEnvironmentTexture:(id)arg1 engineContext:(struct __CFXEngineContext *)arg2 cpuAccessible:(_Bool)arg3 commandBuffer:(id)arg4;	// IMP=0x00000000001c5f99
- (void)_bakeSphericalHamonicsBasedIrradianceTexture:(id)arg1 forEnvironmentTexture:(id)arg2 renderContext:(id)arg3 applySH:(CDUnknownBlockType)arg4;	// IMP=0x00000000001c5bb1
- (void)_bakeStochasticIrradianceTexture:(id)arg1 forEnvironmentTexture:(id)arg2 mipmapLevelForSampling:(unsigned long long)arg3 renderContext:(id)arg4;	// IMP=0x00000000001c5819
- (id)irradianceTextureForEnvironmentTexture:(id)arg1 renderContext:(id)arg2 applySH:(CDUnknownBlockType)arg3;	// IMP=0x00000000001c56cc
- (id)radianceTextureForPrecomputedLightingEnvironment:(id)arg1;	// IMP=0x00000000001c553a
- (id)irradianceTextureForPrecomputedLightingEnvironment:(id)arg1;	// IMP=0x00000000001c53a8
- (id)defaultLightingEnvironmentRadianceTexture;	// IMP=0x00000000001c5237
- (id)defaultLightingEnvironmentIrradianceTexture;	// IMP=0x00000000001c50c6
- (_Bool)hasCommonProfilePrecompiledFunctions;	// IMP=0x000000000020a2af
- (void)reloadPipelinesIfNeeded;	// IMP=0x000000000020a2a9
- (id)colorMatchingComputePipelineStateForBiPlanarPixelBufferWithFormatType:(unsigned int)arg1 pixelBufferYCbCrMatrix:(id)arg2 pixelBufferColorPrimaries:(id)arg3 pixelBufferTransferFunction:(id)arg4 sourceColorSpace:(struct CGColorSpace *)arg5 destinationColorSpace:(struct CGColorSpace *)arg6 renderContext:(id)arg7;	// IMP=0x0000000000209895
- (id)colorMatchingComputePipelineStateForSourceColorSpace:(struct CGColorSpace *)arg1 destinationColorSpace:(struct CGColorSpace *)arg2 renderContext:(id)arg3;	// IMP=0x000000000020985f
- (id)newComputePipelineStateWithFunctionName:(id)arg1 library:(id)arg2 constantValues:(id)arg3 linkedFunctions:(id)arg4;	// IMP=0x000000000020980d
- (id)newComputePipelineStateWithFunctionName:(id)arg1 constantValues:(id)arg2 linkedFunctions:(id)arg3;	// IMP=0x00000000002097ab
- (id)newComputePipelineStateWithFunctionName:(id)arg1 constantValues:(id)arg2;	// IMP=0x0000000000209755
- (id)newComputePipelineStateWithFunctionName:(id)arg1 library:(id)arg2;	// IMP=0x000000000020973d
- (id)newComputePipelineStateWithFunctionName:(id)arg1;	// IMP=0x00000000002096e9
- (id)newFunctionWithName:(id)arg1 constants:(id)arg2 library:(id)arg3;	// IMP=0x00000000002095f7
- (id)getUniqueStageDescriptor:(id)arg1;	// IMP=0x00000000002090c8
- (id)computePipelineStateForKernel:(id)arg1 withStageDescriptor:(id)arg2 stageDescriptorUpdateBlock:(CDUnknownBlockType)arg3 constants:(id)arg4 constantsHash:(id)arg5;	// IMP=0x0000000000208cfd
- (id)_computePipelineStateForKernel:(id)arg1 constants:(id)arg2 constantsHash:(id)arg3 threadGroupSizeIsMultipleOfThreadExecutionWidth:(_Bool)arg4;	// IMP=0x0000000000208b79
- (id)computePipelineStateForKernel:(id)arg1 constants:(id)arg2 constantsHash:(id)arg3;	// IMP=0x0000000000208b64
- (id)computePipelineStateForKernel:(id)arg1 threadGroupSizeIsMultipleOfThreadExecutionWidth:(_Bool)arg2;	// IMP=0x0000000000208b4a
- (id)computePipelineStateForKernel:(id)arg1;	// IMP=0x0000000000208b30
- (id)newComputePipelineStateForDesc:(CDStruct_845c4289)arg1 library:(id)arg2;	// IMP=0x0000000000208ab0
- (void)_configureComputePipeline:(id)arg1 withDescriptor:(id)arg2;	// IMP=0x00000000002089ac
- (id)_newComputeDescriptorForPipelineDesc:(CDStruct_845c4289)arg1 library:(id)arg2;	// IMP=0x00000000002088b4
- (id)newRenderPipelineStateWithDesc:(CDStruct_9eb95157)arg1;	// IMP=0x0000000000208593
- (void)_createPipelineStateWithDescriptor:(id)arg1 desc:(CDStruct_9eb95157)arg2 pipeline:(id)arg3;	// IMP=0x0000000000207e94
- (struct __CFXFXProgram *)defaultProgramUsingTessellation:(_Bool)arg1;	// IMP=0x0000000000207e73
- (id)renderResourceForProgramDesc:(CDStruct_5df648aa)arg1 renderPassDescriptor:(id)arg2;	// IMP=0x0000000000207646
- (id)computeEvaluatorWithContext:(struct MTLContext *)arg1 srcDesc:(const struct BufferDescriptor *)arg2 dstDesc:(const struct BufferDescriptor *)arg3 duDesc:(const struct BufferDescriptor *)arg4 dvDesc:(const struct BufferDescriptor *)arg5;	// IMP=0x0000000000238feb
- (void)colorMatchBiPlanarPixelBufferWithFormatType:(unsigned int)arg1 pixelBufferYCbCrMatrix:(id)arg2 pixelBufferColorPrimaries:(id)arg3 pixelBufferTransferFunction:(id)arg4 sourceTextureY:(id)arg5 sourceTextureCbCr:(id)arg6 sourceColorSpace:(struct CGColorSpace *)arg7 destinationColorSpace:(struct CGColorSpace *)arg8 destinationTexture:(id)arg9 renderContext:(id)arg10;	// IMP=0x000000000027934b
- (void)colorMatchSourceTexture:(id)arg1 sourceColorSpace:(struct CGColorSpace *)arg2 destinationColorSpace:(struct CGColorSpace *)arg3 destinationTexture:(id)arg4 renderContext:(id)arg5;	// IMP=0x00000000002792a8
- (id)iesTextureForProfile:(void *)arg1 renderContext:(id)arg2;	// IMP=0x000000000027909f
- (id)defaultTextureForTextureType:(unsigned long long)arg1;	// IMP=0x000000000027906d
- (id)defaultTexture3D;	// IMP=0x0000000000278c79
- (id)defaultCubeTexture;	// IMP=0x0000000000278a57
- (id)defaultTexture1D;	// IMP=0x00000000002788ce
- (id)defaultTexture;	// IMP=0x00000000002786aa
- (id)renderResourceForImage:(struct __CFXImage *)arg1 sampler:(struct __CFXTextureSampler *)arg2 options:(int)arg3 engineContext:(struct __CFXEngineContext *)arg4 didFallbackToDefaultTexture:(_Bool *)arg5;	// IMP=0x000000000027827a
- (id)renderResourceForImageProxy:(struct __CFXImageProxy *)arg1 sampler:(struct __CFXTextureSampler *)arg2 engineContext:(struct __CFXEngineContext *)arg3 didFallbackToDefaultTexture:(_Bool *)arg4;	// IMP=0x0000000000278101
- (id)renderResourceForMaterialProperty:(struct __CFXMaterialProperty *)arg1 withEngineContext:(struct __CFXEngineContext *)arg2 didFallbackToDefaultTexture:(_Bool *)arg3 isDynamic:(_Bool *)arg4;	// IMP=0x0000000000277f51
- (id)renderResourceForAsset:(void *)arg1 withEngineContext:(struct __CFXEngineContext *)arg2 entityCache:(long long *)arg3 isFallback:(_Bool *)arg4 isDynamic:(_Bool *)arg5;	// IMP=0x0000000000277eaa
- (id)unstageTexture:(id)arg1 commandBuffer:(id)arg2;	// IMP=0x00000000002779c9
- (id)latlongTextureForCubemap:(id)arg1 pixelFormat:(unsigned long long)arg2 renderContext:(id)arg3 needsMipmap:(_Bool)arg4;	// IMP=0x00000000002777ea
- (id)newCubemapTextureForLatlongTexture:(id)arg1 pixelFormat:(unsigned long long)arg2 engineContext:(struct __CFXEngineContext *)arg3 needsMipmap:(_Bool)arg4;	// IMP=0x000000000027760a
- (_Bool)_copyImage:(struct __CFXImage *)arg1 toTexture:(id)arg2 desc:(id)arg3 textureOptions:(int)arg4 needsMipMapGeneration:(_Bool)arg5;	// IMP=0x0000000000276c7f
- (id)_textureDescriptorFromImage:(struct __CFXImage *)arg1 needsMipMap:(_Bool)arg2 textureOptions:(int)arg3;	// IMP=0x000000000027695b
- (void)_enqueueCopyFromTexture:(id)arg1 toTexture:(id)arg2 blitEncoder:(struct VFXMTLBlitCommandEncoder *)arg3 generateMipMaps:(_Bool)arg4;	// IMP=0x00000000002766a5
- (id)newTextureUsingMTKTextureLoaderWithData:(id)arg1 options:(id)arg2;	// IMP=0x00000000002765d2
- (id)newTextureUsingMTKTextureLoaderWithURL:(id)arg1 options:(id)arg2;	// IMP=0x00000000002764ff
- (id)newTextureWithDescriptor:(id)arg1;	// IMP=0x00000000002763ef
- (id)copyTextureByConvertingToCubeMapIfApplicable:(id)arg1 engineContext:(struct __CFXEngineContext *)arg2 needsMipmap:(_Bool)arg3;	// IMP=0x000000000027633e
- (id)sphericalHarmonicsForEnvironmentTexture:(id)arg1 order:(unsigned long long)arg2 commandBuffer:(id)arg3;	// IMP=0x00000000002b2e39
- (id)shFromCPU:(id)arg1 commandBuffer:(id)arg2;	// IMP=0x00000000002b28b0

@end

