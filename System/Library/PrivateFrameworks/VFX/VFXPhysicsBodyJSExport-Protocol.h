//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <VFX/JSExport-Protocol.h>

@class NSArray, VFXPhysicsShape;

@protocol VFXPhysicsBodyJSExport <JSExport>
+ (id)bodyWithType:(long long)arg1 shape:(VFXPhysicsShape *)arg2;
+ (id)kinematicBody;
+ (id)dynamicBody;
+ (id)staticBody;
@property(nonatomic, getter=isAffectedByGravity) _Bool affectedByGravity;
@property(nonatomic) unsigned long long contactTestBitMask;
@property(nonatomic) unsigned long long collisionBitMask;
@property(nonatomic) unsigned long long categoryBitMask;
@property(retain, nonatomic) NSArray *angularVelocityFactor;
@property(retain, nonatomic) NSArray *velocityFactor;
@property(nonatomic) float angularDamping;
@property(nonatomic) float damping;
@property(retain, nonatomic) NSArray *angularVelocity;
@property(retain, nonatomic) NSArray *velocity;
@property(nonatomic) _Bool allowsResting;
@property(readonly, nonatomic) _Bool isResting;
@property(retain, nonatomic) VFXPhysicsShape *physicsShape;
@property(nonatomic) float rollingFriction;
@property(nonatomic) float restitution;
@property(nonatomic) float friction;
@property(nonatomic) float charge;
@property(nonatomic) _Bool usesDefaultMomentOfInertia;
@property(retain, nonatomic) NSArray *momentOfInertia;
@property(nonatomic) float mass;
@property(nonatomic) long long type;
- (id)copy;
- (void)resetTransform;
- (void)clearAllForces;
- (void)applyTorqueValue:(NSArray *)arg1 impulse:(_Bool)arg2;
- (void)applyForceValue:(NSArray *)arg1 atPosition:(NSArray *)arg2 impulse:(_Bool)arg3;
- (void)applyForceValue:(NSArray *)arg1 impulse:(_Bool)arg2;
@end

