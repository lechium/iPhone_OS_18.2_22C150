//
//     Generated by classdump-c 4.2.0 (64 bit) (iOS port by DreamDevLost, Updated by Kevin Bradley.)(Debug version compiled Dec 27 2024 14:18:54).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <HMFoundation/HMFObject.h>

@class HAPAccessoryServerBrowser, HAPAccessoryServerBrowserBTLE, HAPAccessoryServerBrowserIP, HMDAccessoryServerBrowserDemo, HMDAuthServer, HMDHAP2Storage, HMDHomeManager, HMDMediaBrowser, HMDUnassociatedMediaAccessory, HMDUnassociatedWACAccessory, HMDWACBrowser, HMFMessageDispatcher, HMFTimer, HMMTRAccessoryServerBrowser, NSArray, NSData, NSHashTable, NSMutableArray, NSMutableSet, NSObject, NSString, NSUUID;
@protocol HMDAccessoryBrowserManagerDelegate, HMDAccessoryBrowserUnpairedAccessoryManagerDelegate, OS_dispatch_queue, OS_dispatch_source;

__attribute__((visibility("hidden")))
@interface HMDAccessoryBrowser : HMFObject
{
    struct os_unfair_lock_s _lock;	// 8 = 0x8
    NSMutableSet *_unpairedHAPAccessories;	// 16 = 0x10
    NSMutableSet *_unassociatedMediaAccessories;	// 24 = 0x18
    NSMutableSet *_deviceSetupMediaAccessories;	// 32 = 0x20
    NSMutableSet *_unassociatedWACAccessories;	// 40 = 0x28
    HMDUnassociatedMediaAccessory *_unassociatedCurrentAccessory;	// 48 = 0x30
    NSMutableSet *_browsingConnections;	// 56 = 0x38
    NSHashTable *_activeAssertions;	// 64 = 0x40
    NSMutableSet *_discoveredAccessoryServerIdentifiers;	// 72 = 0x48
    _Bool _btlePowerState;	// 80 = 0x50
    _Bool _internalDiscoveryRequest;	// 81 = 0x51
    _Bool _unitTestEnableWHB;	// 82 = 0x52
    _Bool _active;	// 83 = 0x53
    _Bool _hasActiveWACPairing;	// 84 = 0x54
    HMMTRAccessoryServerBrowser *_chipAccessoryServerBrowser;	// 88 = 0x58
    HMDUnassociatedWACAccessory *_accessoryPerformingWAC;	// 96 = 0x60
    id <HMDAccessoryBrowserManagerDelegate> _managerDelegate;	// 104 = 0x68
    id <HMDAccessoryBrowserUnpairedAccessoryManagerDelegate> _unpairedAccessoryManagerDelegate;	// 112 = 0x70
    NSArray *_browseableLinkTypes;	// 120 = 0x78
    unsigned long long _unitTestBTLEReachabilityInterval;	// 128 = 0x80
    NSObject<OS_dispatch_queue> *_workQueue;	// 136 = 0x88
    NSUUID *_uuid;	// 144 = 0x90
    HMFMessageDispatcher *_messageDispatcher;	// 152 = 0x98
    unsigned long long _generationCounter;	// 160 = 0xa0
    HMDHomeManager *_homeManager;	// 168 = 0xa8
    NSMutableArray *_accessoryServerBrowsers;	// 176 = 0xb0
    NSHashTable *_discoveringAccessoryServerBrowsers;	// 184 = 0xb8
    HAPAccessoryServerBrowserIP *_ipAccessoryServerBrowser;	// 192 = 0xc0
    HAPAccessoryServerBrowserBTLE *_btleAccessoryServerBrowser;	// 200 = 0xc8
    HAPAccessoryServerBrowser *_hap2AccessoryServerBrowser;	// 208 = 0xd0
    HMDHAP2Storage *_hap2Storage;	// 216 = 0xd8
    HMDMediaBrowser *_mediaBrowser;	// 224 = 0xe0
    HMDWACBrowser *_wacBrowser;	// 232 = 0xe8
    HMDAuthServer *_authServer;	// 240 = 0xf0
    HMDAccessoryServerBrowserDemo *_demoAccessoryServerBrowser;	// 248 = 0xf8
    HMFTimer *_stopReprovisioningTimer;	// 256 = 0x100
    HMFTimer *_stopBrowsingAccessoriesNeedingReprovisioningTimer;	// 264 = 0x108
    NSString *_identifierOfAccessoryBeingReprovisioned;	// 272 = 0x110
    NSData *_wiFiPSKForAccessoryReprovisioning;	// 280 = 0x118
    NSString *_countrycodeForAccessoryReprovisioning;	// 288 = 0x120
    NSMutableArray *_pairedAccessories;	// 296 = 0x128
    NSObject<OS_dispatch_source> *_reachabilityTimerForBTLE;	// 304 = 0x130
    NSMutableArray *_currentlyPairingAccessories;	// 312 = 0x138
    NSMutableArray *_currentlyPairingProgressHandlers;	// 320 = 0x140
    NSHashTable *_tombstonedHAPAccessoryServers;	// 328 = 0x148
    NSHashTable *_discoveringBLEAccessoryServerIdentifiers;	// 336 = 0x150
}

+ (id)logCategory;	// IMP=0x0010000000c3c4c9
- (void).cxx_destruct;	// IMP=0x0000000000c33054
@property(nonatomic) _Bool hasActiveWACPairing; // @synthesize hasActiveWACPairing=_hasActiveWACPairing;
@property(retain, nonatomic) NSMutableSet *discoveredAccessoryServerIdentifiers; // @synthesize discoveredAccessoryServerIdentifiers=_discoveredAccessoryServerIdentifiers;
@property(readonly, nonatomic) NSHashTable *discoveringBLEAccessoryServerIdentifiers; // @synthesize discoveringBLEAccessoryServerIdentifiers=_discoveringBLEAccessoryServerIdentifiers;
@property(readonly, nonatomic) NSHashTable *tombstonedHAPAccessoryServers; // @synthesize tombstonedHAPAccessoryServers=_tombstonedHAPAccessoryServers;
@property(retain, nonatomic) NSMutableArray *currentlyPairingProgressHandlers; // @synthesize currentlyPairingProgressHandlers=_currentlyPairingProgressHandlers;
@property(retain, nonatomic) NSMutableArray *currentlyPairingAccessories; // @synthesize currentlyPairingAccessories=_currentlyPairingAccessories;
@property(retain, nonatomic) NSObject<OS_dispatch_source> *reachabilityTimerForBTLE; // @synthesize reachabilityTimerForBTLE=_reachabilityTimerForBTLE;
@property(retain, nonatomic) NSMutableArray *pairedAccessories; // @synthesize pairedAccessories=_pairedAccessories;
@property(nonatomic) _Bool active; // @synthesize active=_active;
@property(retain, nonatomic) NSString *countrycodeForAccessoryReprovisioning; // @synthesize countrycodeForAccessoryReprovisioning=_countrycodeForAccessoryReprovisioning;
@property(retain, nonatomic) NSData *wiFiPSKForAccessoryReprovisioning; // @synthesize wiFiPSKForAccessoryReprovisioning=_wiFiPSKForAccessoryReprovisioning;
@property(retain, nonatomic) NSString *identifierOfAccessoryBeingReprovisioned; // @synthesize identifierOfAccessoryBeingReprovisioned=_identifierOfAccessoryBeingReprovisioned;
@property(readonly, nonatomic) HMFTimer *stopBrowsingAccessoriesNeedingReprovisioningTimer; // @synthesize stopBrowsingAccessoriesNeedingReprovisioningTimer=_stopBrowsingAccessoriesNeedingReprovisioningTimer;
@property(readonly, nonatomic) HMFTimer *stopReprovisioningTimer; // @synthesize stopReprovisioningTimer=_stopReprovisioningTimer;
@property(retain, nonatomic) HMDAccessoryServerBrowserDemo *demoAccessoryServerBrowser; // @synthesize demoAccessoryServerBrowser=_demoAccessoryServerBrowser;
@property(retain, nonatomic) HMDAuthServer *authServer; // @synthesize authServer=_authServer;
@property(retain, nonatomic) HMDWACBrowser *wacBrowser; // @synthesize wacBrowser=_wacBrowser;
@property(retain, nonatomic) HMDMediaBrowser *mediaBrowser; // @synthesize mediaBrowser=_mediaBrowser;
@property(retain, nonatomic) HMDHAP2Storage *hap2Storage; // @synthesize hap2Storage=_hap2Storage;
@property(retain, nonatomic) HAPAccessoryServerBrowser *hap2AccessoryServerBrowser; // @synthesize hap2AccessoryServerBrowser=_hap2AccessoryServerBrowser;
@property(retain, nonatomic) HAPAccessoryServerBrowserBTLE *btleAccessoryServerBrowser; // @synthesize btleAccessoryServerBrowser=_btleAccessoryServerBrowser;
@property(retain, nonatomic) HAPAccessoryServerBrowserIP *ipAccessoryServerBrowser; // @synthesize ipAccessoryServerBrowser=_ipAccessoryServerBrowser;
@property(retain, nonatomic) NSHashTable *discoveringAccessoryServerBrowsers; // @synthesize discoveringAccessoryServerBrowsers=_discoveringAccessoryServerBrowsers;
@property(retain, nonatomic) NSMutableArray *accessoryServerBrowsers; // @synthesize accessoryServerBrowsers=_accessoryServerBrowsers;
@property(nonatomic) __weak HMDHomeManager *homeManager; // @synthesize homeManager=_homeManager;
@property(nonatomic) unsigned long long generationCounter; // @synthesize generationCounter=_generationCounter;
@property(retain, nonatomic) HMFMessageDispatcher *messageDispatcher; // @synthesize messageDispatcher=_messageDispatcher;
@property(retain, nonatomic) NSUUID *uuid; // @synthesize uuid=_uuid;
@property(retain, nonatomic) NSObject<OS_dispatch_queue> *workQueue; // @synthesize workQueue=_workQueue;
@property(nonatomic) unsigned long long unitTestBTLEReachabilityInterval; // @synthesize unitTestBTLEReachabilityInterval=_unitTestBTLEReachabilityInterval;
@property(nonatomic) _Bool unitTestEnableWHB; // @synthesize unitTestEnableWHB=_unitTestEnableWHB;
@property(retain, nonatomic) NSArray *browseableLinkTypes; // @synthesize browseableLinkTypes=_browseableLinkTypes;
@property(nonatomic) __weak id <HMDAccessoryBrowserManagerDelegate> managerDelegate; // @synthesize managerDelegate=_managerDelegate;
@property(nonatomic) _Bool btlePowerState; // @synthesize btlePowerState=_btlePowerState;
@property(readonly) HMMTRAccessoryServerBrowser *chipAccessoryServerBrowser; // @synthesize chipAccessoryServerBrowser=_chipAccessoryServerBrowser;
- (id)dumpRegisteredPairedAccessories;	// IMP=0x0000000000c329b9
- (id)dumpUnassociatedAccessories;	// IMP=0x0000000000c326d8
- (void)accessoryServerBrowser:(id)arg1 didRemoveAccessoryServer:(id)arg2 error:(id)arg3 matterPairingEndContext:(id)arg4;	// IMP=0x0000000000c32520
- (void)notifyMatterAccessoryPairingStep:(unsigned long long)arg1;	// IMP=0x0000000000c32504
- (void)notifyMTRMetrics:(id)arg1;	// IMP=0x0000000000c32340
- (void)accessoryServer:(id)arg1 didStopPairingWithError:(id)arg2 matterPairingEndContext:(id)arg3;	// IMP=0x0000000000c321a7
- (void)vendorModel:(id *)arg1 vendorManufacturer:(id *)arg2 accessoryInfo:(id)arg3;	// IMP=0x0000000000c31f79
- (void)handlePPIDInfoResponse:(id)arg1 context:(id)arg2 error:(id)arg3;	// IMP=0x0000000000c31e6c
- (void)handleActivationResponse:(id)arg1 context:(id)arg2;	// IMP=0x0000000000c31d8e
- (void)didFinishActivation:(id)arg1 context:(id)arg2;	// IMP=0x0000000000c31cb0
- (void)browser:(id)arg1 didLoseAssociatedMediaAccessory:(id)arg2 error:(id)arg3;	// IMP=0x0000000000c31b51
- (void)browser:(id)arg1 didFindAssociatedMediaAccessory:(id)arg2;	// IMP=0x0000000000c319ef
- (void)browser:(id)arg1 didUpdateEndpoints:(id)arg2;	// IMP=0x0000000000c31937
- (void)browser:(id)arg1 didRemoveSessions:(id)arg2;	// IMP=0x0000000000c3188e
- (void)browser:(id)arg1 didRemoveAdvertisements:(id)arg2;	// IMP=0x0000000000c317d6
- (void)browser:(id)arg1 didAddAdvertisements:(id)arg2;	// IMP=0x0000000000c3171e
- (void)accessoryServer:(id)arg1 didUpdateConnectionState:(_Bool)arg2 linkLayerType:(long long)arg3 bookkeeping:(id)arg4 withError:(id)arg5;	// IMP=0x0000000000c314c2
- (void)accessoryServer:(id)arg1 didUpdateConnectionState:(_Bool)arg2 sessionInfo:(id)arg3 linkLayerType:(long long)arg4 withError:(id)arg5;	// IMP=0x0000000000c31265
- (void)accessoryServer:(id)arg1 didUpdateConnectionState:(_Bool)arg2 linkLayerType:(long long)arg3 withError:(id)arg4;	// IMP=0x0000000000c3123d
- (void)accessoryServer:(id)arg1 confirmUUID:(id)arg2 token:(id)arg3;	// IMP=0x0000000000c30f2a
- (void)accessoryServer:(id)arg1 authenticateUUID:(id)arg2 token:(id)arg3;	// IMP=0x0000000000c30be7
- (void)accessoryServer:(id)arg1 validateCert:(id)arg2 model:(id)arg3;	// IMP=0x0000000000c30b0c
- (void)accessoryServer:(id)arg1 validateUUID:(id)arg2 token:(id)arg3 model:(id)arg4;	// IMP=0x0000000000c30499
- (void)accessoryServerNeedsOwnershipToken:(id)arg1;	// IMP=0x0000000000c30189
- (void)accessoryServer:(id)arg1 didFinishAuth:(id)arg2;	// IMP=0x0000000000c2fd1a
- (void)accessoryServer:(id)arg1 didUpdateName:(id)arg2;	// IMP=0x0000000000c2fb19
- (void)accessoryServer:(id)arg1 didUpdateCategory:(id)arg2;	// IMP=0x0000000000c2fa72
- (void)_notifyDelegateOfAccessoryServer:(id)arg1 didUpdateCategory:(id)arg2;	// IMP=0x0000000000c2f897
- (void)accessoryServerDidUpdateStateNumber:(id)arg1;	// IMP=0x0000000000c2f794
- (void)accessoryServer:(id)arg1 didUpdateHasPairings:(_Bool)arg2;	// IMP=0x0000000000c2f48f
- (void)_notifyDelegateOfAccessoryServer:(id)arg1 didUpdateHasPairings:(_Bool)arg2;	// IMP=0x0000000000c2f29b
- (void)accessoryServer:(id)arg1 didUpdateWakeNumber:(id)arg2;	// IMP=0x0000000000c2f1e7
- (void)accessoryServer:(id)arg1 didDisconnectWithError:(id)arg2;	// IMP=0x0000000000c2f153
- (void)accessoryServer:(id)arg1 didUpdateValuesForCharacteristics:(id)arg2 stateNumber:(id)arg3 broadcast:(_Bool)arg4;	// IMP=0x0000000000c2f0a6
- (void)_notifyDelegateOfAccessoryServer:(id)arg1 didUpdateValuesForCharacteristics:(id)arg2 stateNumber:(id)arg3 broadcast:(_Bool)arg4;	// IMP=0x0000000000c2ee55
- (void)continueAddingAccessoryToHomeAfterUserConfirmation:(id)arg1 withError:(id)arg2;	// IMP=0x0000000000c2ed77
- (void)accessoryServer:(id)arg1 didDiscoverAccessories:(id)arg2 transaction:(id)arg3 error:(id)arg4;	// IMP=0x0000000000c2e4b3
- (void)updateProgressForMappedErrors:(id)arg1 accessoryServer:(id)arg2 progressHandler:(CDUnknownBlockType)arg3;	// IMP=0x0000000000c2e3f5
- (void)updateAlreadyPairingProgressForAccessoryServerIdentifier:(id)arg1 progressHandler:(CDUnknownBlockType)arg2;	// IMP=0x0000000000c2e0f1
- (void)updatePairingWithProgress:(long long)arg1 accessoryServer:(id)arg2;	// IMP=0x0000000000c2e039
- (void)_updateHasActiveWACPairing:(long long)arg1;	// IMP=0x0000000000c2df89
- (void)accessoryServer:(id)arg1 updatePairingProgress:(long long)arg2;	// IMP=0x0000000000c2dc06
- (void)_notifyDelegateOfAccessoryServer:(id)arg1 didDiscoverAccessories:(id)arg2 transaction:(id)arg3 error:(id)arg4;	// IMP=0x0000000000c2d9eb
- (void)_accessoryServer:(id)arg1 didStopPairingWithError:(id)arg2 matterPairingEndContext:(id)arg3;	// IMP=0x0000000000c2cfbc
- (void)accessoryServer:(id)arg1 didStopPairingWithError:(id)arg2;	// IMP=0x0000000000c2cfa7
- (void)_notifyDelegateOfAccessoryServer:(id)arg1 didStopPairingWithError:(id)arg2;	// IMP=0x0000000000c2cdcf
- (void)accessoryServer:(id)arg1 didReceiveBadPasswordThrottleAttemptsWithDelay:(long long)arg2;	// IMP=0x0000000000c2cc39
- (void)accessoryServer:(id)arg1 promptUserForPasswordWithType:(unsigned long long)arg2;	// IMP=0x0000000000c2c77c
- (void)accessoryServer:(id)arg1 requestUserPermission:(long long)arg2 accessoryInfo:(id)arg3 error:(id)arg4;	// IMP=0x0000000000c2b680
- (void)accessoryServer:(id)arg1 promtDialog:(id)arg2 forNotCertifiedAccessory:(id)arg3 completion:(CDUnknownBlockType)arg4;	// IMP=0x0000000000c2b42d
- (void)_callProgressOrErrorOut:(id)arg1 pairingInfo:(id)arg2 accessoryInfo:(id)arg3 unpairedAccessory:(id)arg4 progress:(long long)arg5 certStatus:(unsigned long long)arg6;	// IMP=0x0000000000c2af6a
- (void)_continueAfterPPIDValidation:(_Bool)arg1 server:(id)arg2;	// IMP=0x0000000000c2af55
- (id)_getHAPMetadataFromHMMetadata:(id)arg1;	// IMP=0x0000000000c2add0
- (void)accessoryServerBrowser:(id)arg1 getLockedState:(_Bool *)arg2;	// IMP=0x0000000000c2adc7
- (void)accessoryServerBrowser:(id)arg1 getThreadNetworkCredentialsForAccessoryWithIdentifier:(id)arg2 withCompletion:(CDUnknownBlockType)arg3;	// IMP=0x0000000000c2a812
- (void)accessoryServerBrowser:(id)arg1 didFinishPairingForAccessoryServer:(id)arg2;	// IMP=0x0000000000c2a755
- (void)accessoryServerBrowser:(id)arg1 getCachedOperationalCertificateDataForFabricID:(id)arg2 completion:(CDUnknownBlockType)arg3;	// IMP=0x0000000000c2a6af
- (void)accessoryServerBrowser:(id)arg1 cacheOperationalCertData:(id)arg2 forFabricID:(id)arg3;	// IMP=0x0000000000c2a548
- (_Bool)supportsCommissioningCertificateRetrievalForHomeUUID:(id)arg1;	// IMP=0x0000000000c2a149
- (_Bool)supportsCommissioningCertificateRetrievalForCurrentlyPairingAccessory;	// IMP=0x0000000000c29dd2
- (void)accessoryServerBrowser:(id)arg1 getCommissioningCertificatesForNodeID:(id)arg2 fabricID:(id)arg3 publicKey:(id)arg4 completion:(CDUnknownBlockType)arg5;	// IMP=0x0000000000c299af
- (void)removeAccessoryCacheForIdentifier:(id)arg1;	// IMP=0x0000000000c29998
- (void)fetchAccessoryCacheForIdentifier:(id)arg1 completion:(CDUnknownBlockType)arg2;	// IMP=0x0000000000c2997e
- (void)saveAccessoryCache:(id)arg1 forIdentifier:(id)arg2;	// IMP=0x0000000000c29964
- (_Bool)isServerLinkTypeBrowseable:(long long)arg1;	// IMP=0x0000000000c29688
- (void)accessoryServerBrowser:(id)arg1 removeCacheForAccessoryWithIdentifier:(id)arg2;	// IMP=0x0000000000c2966c
- (void)accessoryServerBrowser:(id)arg1 getCacheForAccessoryWithIdentifier:(id)arg2 withCompletion:(CDUnknownBlockType)arg3;	// IMP=0x0000000000c295f9
- (void)accessoryServerBrowser:(id)arg1 saveCache:(id)arg2 serverIdentifier:(id)arg3;	// IMP=0x0000000000c295d3
- (void)_notifyDelegateOfReachabilityChangeChange:(_Bool)arg1 forBTLEAccessories:(id)arg2;	// IMP=0x0000000000c293fe
- (void)accessoryServerBrowser:(id)arg1 didChangeReachability:(_Bool)arg2 forAccessoryServerWithIdentifier:(id)arg3;	// IMP=0x0000000000c293e7
- (void)accessoryServerBrowser:(id)arg1 didFailToDiscoverAccessoryServerWithIdentifier:(id)arg2;	// IMP=0x0000000000c28eb2
- (void)_notifyDelegateOfDiscoveryFailure:(id)arg1 accessoryServer:(id)arg2 linkType:(long long)arg3;	// IMP=0x0000000000c28b0c
- (void)accessoryServerBrowser:(id)arg1 didStopDiscoveringWithError:(id)arg2;	// IMP=0x0000000000c28844
- (void)accessoryServerBrowser:(id)arg1 didStartDiscoveringWithError:(id)arg2;	// IMP=0x0000000000c2870f
- (void)_accessoryServerBrowser:(id)arg1 didRemoveAccessoryServer:(id)arg2 error:(id)arg3 matterPairingEndContext:(id)arg4;	// IMP=0x0000000000c27f45
- (void)accessoryServerBrowser:(id)arg1 didRemoveAccessoryServer:(id)arg2 error:(id)arg3;	// IMP=0x0000000000c27f30
- (void)_addReconfirmTimer:(id)arg1 accessoryServer:(id)arg2;	// IMP=0x0000000000c27a6d
- (void)_startPairingInterruptionTimer:(id)arg1;	// IMP=0x0000000000c276d9
- (void)_stopReconfirmTimer:(id)arg1;	// IMP=0x0000000000c274b5
- (void)_handlePairingInterruptedTimeout:(id)arg1 error:(id)arg2;	// IMP=0x0000000000c2730c
- (void)_notifyDelegateOfRemovedAccessoryServer:(id)arg1 error:(id)arg2;	// IMP=0x0000000000c2712f
- (void)accessoryServerBrowser:(id)arg1 didFinishWACForAccessoryWithIdentifier:(id)arg2 error:(id)arg3;	// IMP=0x0000000000c27076
- (void)_notifyDelegateOfAccessoryServerNeedingReprovisioning:(id)arg1 error:(id)arg2;	// IMP=0x0000000000c26e99
- (void)accessoryServerBrowser:(id)arg1 didFindAccessoryServerNeedingReprovisioning:(id)arg2 error:(id)arg3;	// IMP=0x0000000000c26e81
- (void)_notifyDelegateOfWACCompletionForAccessoryServerWithIdentifier:(id)arg1 error:(id)arg2;	// IMP=0x0000000000c26ce7
- (void)accessoryServerBrowser:(id)arg1 didFindAccessoryServerForReprovisioning:(id)arg2;	// IMP=0x0000000000c269c4
- (void)accessoryServerBrowser:(id)arg1 didFindAccessoryServer:(id)arg2 stateChanged:(_Bool)arg3 stateNumber:(id)arg4;	// IMP=0x0000000000c265f4
- (void)_checkIfPairingWithPairedAccessoryServer:(id)arg1 errorCode:(long long)arg2;	// IMP=0x0000000000c261e7
- (void)_removePairingInformation:(id)arg1 error:(id)arg2 context:(id)arg3;	// IMP=0x0000000000c25e43
- (void)accessoryServerBrowser:(id)arg1 accessoryServer:(id)arg2 didUpdateValuesForCharacteristics:(id)arg3 stateNumber:(id)arg4 broadcast:(_Bool)arg5;	// IMP=0x0000000000c25bca
- (void)_notifyDelegateOfNewPairedAccessoryServer:(id)arg1 stateChanged:(_Bool)arg2 stateNumber:(id)arg3;	// IMP=0x0000000000c258d6
- (void)_resurrectAccessoryServer:(id)arg1;	// IMP=0x0000000000c256fa
- (void)_discoverAccessories:(id)arg1;	// IMP=0x0000000000c252fb
- (id)_requiredCharacteristicsTypesToReadFromBTLEServer:(id)arg1;	// IMP=0x0000000000c24f3d
- (void)_tombstoneAccessoryServer:(id)arg1 forceNotify:(_Bool)arg2;	// IMP=0x0000000000c24d40
- (void)_notifyDelegateOfTombstonedAccessoryServer:(id)arg1;	// IMP=0x0000000000c24b63
- (_Bool)_shouldAccessoryServerBeTombstoned:(id)arg1;	// IMP=0x0000000000c24a83
- (id)_tombstonedAccessoryServerWithServerIdentifier:(id)arg1;	// IMP=0x0000000000c248b0
- (_Bool)_isAccessoryServerTombstoned:(id)arg1;	// IMP=0x0000000000c24842
@property(readonly, nonatomic) NSObject<OS_dispatch_queue> *messageReceiveQueue;
// Preceding property had unknown attributes: ?
// Original attribute string: T@"NSObject<OS_dispatch_queue>",?,R,N

@property(readonly, nonatomic) NSUUID *messageTargetUUID;
- (id)messageDestination;	// IMP=0x0000000000c247b5
- (void)_sendPairingCompletionStatusForServer:(id)arg1 error:(id)arg2 matterPairingEndContext:(id)arg3 completionHandler:(CDUnknownBlockType)arg4;	// IMP=0x0000000000c2458c
- (void)_updatePairingRetryTimerForAccessory:(id)arg1 delay:(long long)arg2;	// IMP=0x0000000000c242cc
- (void)_promptForPairingPasswordForServer:(id)arg1 reason:(id)arg2;	// IMP=0x0000000000c23c0b
- (void)_pairAccessory:(id)arg1 configuration:(id)arg2 completionHandler:(CDUnknownBlockType)arg3;	// IMP=0x0000000000c2246c
- (_Bool)_isHomeHubMatterSharedAdminPairingCapableWithConfiguration:(id)arg1;	// IMP=0x0000000000c221e8
- (_Bool)_isHomeHubAvailableWithConfiguration:(id)arg1;	// IMP=0x0000000000c220d7
- (_Bool)_isPrimaryResidentReachableWithConfiguration:(id)arg1;	// IMP=0x0000000000c21fb7
- (_Bool)_isOwnerPairingAccessoryWithConfiguration:(id)arg1;	// IMP=0x0000000000c21d86
- (void)_pairAccessoryWithDescription:(id)arg1 configuration:(id)arg2 progressHandler:(CDUnknownBlockType)arg3 completionHandler:(CDUnknownBlockType)arg4;	// IMP=0x0000000000c1f0e9
- (void)_cancelPairingWithAccessoryDescription:(id)arg1 error:(id)arg2 context:(id)arg3;	// IMP=0x0000000000c1eafa
- (void)cancelPairingWithAccessoryDescription:(id)arg1 error:(id)arg2 context:(id)arg3;	// IMP=0x0000000000c1e9ef
- (void)cancelPairingWithAccessoryDescription:(id)arg1 error:(id)arg2;	// IMP=0x0000000000c1e9da
- (id)currentControllerPairingIdentity;	// IMP=0x0000000000c1e960
- (id)findAccessoryServerForAccessoryDescription:(id)arg1;	// IMP=0x0000000000c1e605
- (void)_cancelPairingWithAccessory:(id)arg1 error:(id)arg2 context:(id)arg3;	// IMP=0x0000000000c1d948
- (void)_handleSetupCodeAvailable:(id)arg1;	// IMP=0x0000000000c1d59c
- (void)_notifyManagerOfNewAccessory;	// IMP=0x0000000000c1d47d
- (id)unpairedAccessoryForServer:(id)arg1;	// IMP=0x0000000000c1d3da
- (id)unpairedAccessoryWithServerIdentifier:(id)arg1;	// IMP=0x0000000000c1d207
- (void)_setBTLEPowerChangeCompletionHandler;	// IMP=0x0000000000c1d126
- (void)handleXPCConnectionInvalidated:(id)arg1;	// IMP=0x0000000000c1d06e
- (void)_handleRequestSearchForNewAccessories:(id)arg1;	// IMP=0x0000000000c1c92e
- (void)_handleRequestFetchNewAccessories:(id)arg1;	// IMP=0x0000000000c1c35c
- (void)_handleCurrentWiFiNetworkChangedNotification:(id)arg1;	// IMP=0x0000000000c1c2d7
- (void)__handleProcessStateChange:(id)arg1;	// IMP=0x0000000000c1c17d
- (void)_cancelCurrentlyPairingAccessories:(long long)arg1 linkType:(id)arg2;	// IMP=0x0000000000c1b6e6
- (void)_registerForNotifications;	// IMP=0x0000000000c1b5ee
- (void)_registerForMessages;	// IMP=0x0000000000c1b371
@property(nonatomic) __weak id <HMDAccessoryBrowserUnpairedAccessoryManagerDelegate> unpairedAccessoryManagerDelegate; // @synthesize unpairedAccessoryManagerDelegate=_unpairedAccessoryManagerDelegate;
- (void)resurrectAccessoryServer:(id)arg1;	// IMP=0x0000000000c1b1c1
- (void)tombstoneAccessoryServer:(id)arg1;	// IMP=0x0000000000c1b109
- (void)discoverAccessories:(id)arg1;	// IMP=0x0000000000c1b051
- (void)handleConnectionUpdateWithBonjourDeviceInfo:(id)arg1 socketInfo:(id)arg2;	// IMP=0x0000000000c1afc6
- (void)restartBrowsers;	// IMP=0x0000000000c1af55
- (void)_restartBrowsers;	// IMP=0x0000000000c1aac7
- (void)_startDiscoveringAccessoriesNeedingReprovisioning;	// IMP=0x0000000000c1a691
- (void)startDiscoveringAccessoriesNeedingReprovisioning;	// IMP=0x0000000000c1a620
- (void)_stopDiscoveryForAccessoryServerBrowser:(id)arg1;	// IMP=0x0000000000c1a508
- (void)_stopDiscoveringAccessoriesWithError:(id)arg1;	// IMP=0x0000000000c1a48a
- (void)_stopDiscoveringAccessoriesWithLinkType:(id)arg1 force:(_Bool)arg2 error:(id)arg3;	// IMP=0x0000000000c1a03f
- (void)_stopDiscoveringMediaAccessories;	// IMP=0x0000000000c19e87
- (void)_startDiscoveringMediaAccessories;	// IMP=0x0000000000c19ded
- (void)_startDiscoveryForAccessoryServerBrowser:(id)arg1;	// IMP=0x0000000000c19cd5
- (void)_startDiscoveringAccessoriesWithLinkType:(id)arg1;	// IMP=0x0000000000c19995
- (void)_startDiscoveringPairedAccessories:(id)arg1;	// IMP=0x0000000000c195da
- (void)currentlyFoundHAPAccessoryServerWithIdentifier:(id)arg1 linkType:(long long)arg2 completion:(CDUnknownBlockType)arg3;	// IMP=0x0000000000c193af
- (void)_discoverAccessoryServer:(id)arg1 linkType:(long long)arg2 errorHandler:(CDUnknownBlockType)arg3;	// IMP=0x0000000000c18e55
- (void)timerDidFire:(id)arg1;	// IMP=0x0000000000c1869a
- (void)_stopReprovisioningTimerHandler;	// IMP=0x0000000000c1839c
- (void)_startOrStopAccessoryDiscovery;	// IMP=0x0000000000c18396
- (void)evaluateAccessoryDiscoveryState;	// IMP=0x0000000000c18319
- (void)_stopBtleAccessoryReachabilityProbeTimer;	// IMP=0x0000000000c181a3
- (void)_btleAccessoryReachabilityProbeTimer:(_Bool)arg1;	// IMP=0x0000000000c17cb1
- (void)cancelPairingWithAccessory:(id)arg1 error:(id)arg2 context:(id)arg3;	// IMP=0x0000000000c17ba6
- (void)handleSetupCodeAvailable:(id)arg1;	// IMP=0x0000000000c17aee
- (void)didReceiveUserConsentResponseForSetupAccessoryDetail:(id)arg1 consent:(_Bool)arg2;	// IMP=0x0000000000c17a37
- (void)removePairingInformationForAccessoryServer:(id)arg1;	// IMP=0x0000000000c1797f
- (id)unpairedHAPAccessoryWithAccessoryDescription:(id)arg1;	// IMP=0x0000000000c17920
- (void)pairAccessoryWithDescription:(id)arg1 configuration:(id)arg2 progressHandler:(CDUnknownBlockType)arg3 completionHandler:(CDUnknownBlockType)arg4;	// IMP=0x0000000000c177d9
- (void)pairAccessory:(id)arg1 configuration:(id)arg2 completionHandler:(CDUnknownBlockType)arg3;	// IMP=0x0000000000c176ce
- (void)registerProgressHandler:(CDUnknownBlockType)arg1 unpairedAccessoryUUID:(id)arg2;	// IMP=0x0000000000c175f0
- (void)_removeDiscoveredAccessoryServerIdentifier:(id)arg1;	// IMP=0x0000000000c17575
- (void)_addDiscoveredAccessoryServerIdentifier:(id)arg1;	// IMP=0x0000000000c174fa
- (id)discoveredAccessoryServers;	// IMP=0x0000000000c1749a
- (void)addUnpairedAccessoryServer:(id)arg1 identifier:(id)arg2;	// IMP=0x0000000000c173bc
- (void)deregisterPairedAccessory:(id)arg1;	// IMP=0x0000000000c17148
- (void)registerPairedAccessory:(id)arg1 transports:(unsigned long long)arg2 setupHash:(id)arg3 delegate:(id)arg4;	// IMP=0x0000000000c16a94
- (void)_addUnpairedAccessoryForServer:(id)arg1;	// IMP=0x0000000000c15b3c
- (void)_setupHMMTRAccessoryServer:(id)arg1 pairingInfo:(id)arg2;	// IMP=0x0000000000c1589a
- (void)_handleWACAccessoryFound;	// IMP=0x0000000000c1567e
- (void)_removePairingInformationForUnpairedAccessory:(id)arg1;	// IMP=0x0000000000c1541b
- (void)_handleRemovedUnpairedHAPAccessory:(id)arg1;	// IMP=0x0000000000c153a1
- (void)removeUnpairedHAPAccessory:(id)arg1;	// IMP=0x0000000000c15281
- (void)addUnpairedHAPAccessory:(id)arg1;	// IMP=0x0000000000c15161
- (void)unassociatedWACAccessoryDidFinishAssociation:(id)arg1 withError:(id)arg2;	// IMP=0x0000000000c14fab
- (void)unassociatedWACAccessoryDidStartAssociation:(id)arg1;	// IMP=0x0000000000c14e8a
- (void)requestPermissionToAssociateWACAccessory:(id)arg1 completionHandler:(CDUnknownBlockType)arg2;	// IMP=0x0000000000c14ca9
@property(retain, nonatomic, getter=getActiveWACSession, setter=setActiveWACSession:) HMDUnassociatedWACAccessory *accessoryPerformingWAC; // @synthesize accessoryPerformingWAC=_accessoryPerformingWAC;
- (void)updateUnassociatedWACAccessory:(id)arg1;	// IMP=0x0000000000c14b68
- (void)removeUnassociatedWACAccessory:(id)arg1;	// IMP=0x0000000000c14a48
- (void)addUnassociatedWACAccessory:(id)arg1;	// IMP=0x0000000000c14965
- (void)removeUnassociatedMediaAccessory:(id)arg1;	// IMP=0x0000000000c1480c
- (void)_associateMediaAccessoryForServer:(id)arg1;	// IMP=0x0000000000c1458b
- (void)_associate:(_Bool)arg1 hapAccessoryWithAdvertisement:(id)arg2;	// IMP=0x0000000000c1409f
- (void)addUnassociatedMediaAccessory:(id)arg1 forDeviceSetup:(_Bool)arg2;	// IMP=0x0000000000c13cd2
- (id)_progressHandlerForUnpairedAccessory:(id)arg1;	// IMP=0x0000000000c13ad7
- (id)_pairingInformationForAccessoryIdentifier:(id)arg1;	// IMP=0x0000000000c1386b
- (id)_pairingInformationForUnpairedAccessory:(id)arg1;	// IMP=0x0000000000c136c6
- (id)_unpairedAccessoryMatchingPairingInfo:(id)arg1;	// IMP=0x0000000000c13549
- (id)unpairedAccessoryWithUUID:(id)arg1;	// IMP=0x0000000000c134cf
@property(readonly, nonatomic) NSArray *unpairedHAPAccessories;
- (void)probeReachabilityForBTLEAccessoryServersWithIdentifiers:(id)arg1 forceScan:(_Bool)arg2 withCompletion:(CDUnknownBlockType)arg3;	// IMP=0x0000000000c13380
- (_Bool)isBrowsingAllowed;	// IMP=0x0000000000c13378
- (id)accessoryBrowserHapProtocol;	// IMP=0x0000000000c1336f
- (void)handleNewlyPairedAccessory:(id)arg1 linkType:(long long)arg2;	// IMP=0x0000000000c132b7
- (void)homeLocationChangeNotification:(id)arg1;	// IMP=0x0000000000c13106
- (void)updateRemoteAccessoryBrowsing:(_Bool)arg1 whbScan:(_Bool)arg2;	// IMP=0x0000000000c12d23
- (_Bool)supportsRemoteBrowsing;	// IMP=0x0000000000c12d11
- (void)handleConnectionDeactivation:(id)arg1;	// IMP=0x0000000000c12c59
- (void)_reprovisionAccessoryWithIdentifier:(id)arg1 wiFiPSK:(id)arg2 countryCode:(id)arg3 withCompletion:(CDUnknownBlockType)arg4;	// IMP=0x0000000000c126f5
- (void)reprovisionAccessoryWithIdentifier:(id)arg1 wiFiPSK:(id)arg2 countryCode:(id)arg3 withCompletion:(CDUnknownBlockType)arg4;	// IMP=0x0000000000c125ae
- (void)activate:(_Bool)arg1;	// IMP=0x0000000000c12534
- (void)discoverAccessoryServer:(id)arg1 linkType:(long long)arg2 errorHandler:(CDUnknownBlockType)arg3;	// IMP=0x0000000000c1244a
- (void)stopTrackingBTLEAccessoriesWithIdentifiers:(id)arg1;	// IMP=0x0000000000c12392
- (void)btleAccessoryReachabilityProbeTimer:(_Bool)arg1;	// IMP=0x0000000000c12318
- (void)stopDiscoveringMediaAccessories;	// IMP=0x0000000000c122a7
- (void)stopDiscoveringForUnpairedAccessoriesWithLinkType:(long long)arg1;	// IMP=0x0000000000c1222b
- (void)stopDiscoveringAccessoriesWithLinkType:(long long)arg1;	// IMP=0x0000000000c121af
- (void)stopDiscoveringAccessories;	// IMP=0x0000000000c1213e
- (void)startDiscoveringMediaAccessories;	// IMP=0x0000000000c120cd
- (void)startDiscoveringAccessoriesWithLinkType:(long long)arg1;	// IMP=0x0000000000c12051
- (void)startDiscoveringAccessories;	// IMP=0x0000000000c11fe0
- (void)startDiscoveringPairedAccessoriesWithLinkType:(long long)arg1;	// IMP=0x0000000000c11f64
- (void)startDiscoveringPairedAccessories;	// IMP=0x0000000000c11ef3
- (_Bool)isDiscoveringAccessoriesWithLinkType:(long long)arg1;	// IMP=0x0000000000c11d41
- (void)resetConfiguration;	// IMP=0x0000000000c11cd0
- (void)_handleRemovedAccessoryAdvertisements:(id)arg1;	// IMP=0x0000000000c1174c
- (void)_handleAddedAccessoryAdvertisements:(id)arg1;	// IMP=0x0000000000c109db
- (void)_notifyDelegateOfReachabilityChange:(_Bool)arg1 forAccessoryWithIdentifier:(id)arg2;	// IMP=0x0000000000c1081f
- (void)__inactivate;	// IMP=0x0000000000c107ae
- (void)__activate;	// IMP=0x0000000000c1073d
- (void)endActiveAssertion:(id)arg1;	// IMP=0x0000000000c104e0
- (id)beginActiveAssertionWithReason:(id)arg1;	// IMP=0x0000000000c10360
- (unsigned long long)numPairedIPAccessories;	// IMP=0x0000000000c10317
- (_Bool)areThereAnyAssociatedAirPlayAccessories;	// IMP=0x0000000000c102cf
- (id)identifiersOfAssociatedMediaAccessories;	// IMP=0x0000000000c102b8
- (_Bool)areThereAnyPairedBTLEAccessories;	// IMP=0x0000000000c10270
- (id)identifiersOfPairedUnknownLinkTypeAccessories;	// IMP=0x0000000000c10219
- (_Bool)areThereAnyPairedUnknownLinkTypeAccessories;	// IMP=0x0000000000c101ce
- (id)identifiersOfPairedBTLEAccessories;	// IMP=0x0000000000c101b7
- (_Bool)areThereAnyPairedAccessories;	// IMP=0x0000000000c1016f
- (id)__identifiersOfPairedAccessoriesWithTransports:(unsigned long long)arg1;	// IMP=0x0000000000c0ff45
- (id)pairedHMDHAPAccessoryWithAccessoryServer:(id)arg1;	// IMP=0x0000000000c0fe25
- (id)pairedAccessoryInformationWithSetupID:(id)arg1;	// IMP=0x0000000000c0fc23
- (id)pairedAccessoryInformationWithIdentifier:(id)arg1;	// IMP=0x0000000000c0fa50
- (void)removePairedAccessoryInfoWithIdentifier:(id)arg1;	// IMP=0x0000000000c0f809
- (void)resetPairedAccessories;	// IMP=0x0000000000c0f7b4
- (void)removePairedAccessory:(id)arg1;	// IMP=0x0000000000c0f739
- (void)addPairedAccessory:(id)arg1;	// IMP=0x0000000000c0f4d1
- (void)_removeBrowsingConnection:(id)arg1 error:(id)arg2;	// IMP=0x0000000000c0f2b0
- (void)__addBrowsingConnection:(id)arg1;	// IMP=0x0000000000c0ebce
- (void)__removeBrowsingObserver:(id)arg1 error:(id)arg2;	// IMP=0x0000000000c0e821
- (_Bool)__isMediaAccessoryBrowsingRequested;	// IMP=0x0000000000c0e7d9
- (_Bool)__isAccessoryBrowsingRequested;	// IMP=0x0000000000c0e791
- (void)__resetBrowsingConnections;	// IMP=0x0000000000c0e73c
- (id)browsingConnections;	// IMP=0x0000000000c0e6dc
@property _Bool internalDiscoveryRequest; // @synthesize internalDiscoveryRequest=_internalDiscoveryRequest;
- (id)dumpBrowsingConnections;	// IMP=0x0000000000c0e410
- (void)_sendNewAccessoryData:(id)arg1 messageName:(id)arg2;	// IMP=0x0000000000c0dff8
- (void)_handleRemovedAccessory:(id)arg1;	// IMP=0x0000000000c0deae
- (void)handleRemovedAccessory:(id)arg1;	// IMP=0x0000000000c0ddf6
- (void)_handleAddedAccessory:(id)arg1;	// IMP=0x0000000000c0dc9f
- (void)handleAddedAccessory:(id)arg1;	// IMP=0x0000000000c0dbe7
@property(readonly, nonatomic) NSArray *deviceSetupMediaAccessories;
@property(readonly, nonatomic) NSArray *unassociatedMediaAccessories;
- (id)_unassociatedMediaAccessoryWithIdentifier:(id)arg1;	// IMP=0x0000000000c0d944
- (id)unassociatedAccessoriesForClientRequest:(id)arg1;	// IMP=0x0000000000c0d6b8
- (void)resetUnassociatedCurrentAccessory;	// IMP=0x0000000000c0d565
- (void)populateUnassociatedCurrentAccessory;	// IMP=0x0000000000c0d391
@property(readonly, copy) NSArray *unassociatedAccessories;
- (void)removeUnassociatedAccessory:(id)arg1;	// IMP=0x0000000000c0cfa9
- (void)removeUnassociatedAccessoryWithIdentifier:(id)arg1;	// IMP=0x0000000000c0cd0e
- (void)addUnassociatedAccessory:(id)arg1 forDeviceSetup:(_Bool)arg2;	// IMP=0x0000000000c0cb4b
- (void)_handleTestModeConfigRequest:(id)arg1;	// IMP=0x0000000000c0c578
- (void)configureDemoBrowserWithDemoAccessories:(id)arg1 finalized:(_Bool)arg2;	// IMP=0x0000000000c0c3bd
- (void)validateLinkTypes:(id)arg1;	// IMP=0x0000000000c0c236
- (void)dealloc;	// IMP=0x0000000000c0c18e
- (void)updateBroadcastKeyForIdentifier:(id)arg1 key:(id)arg2 keyUpdatedStateNumber:(id)arg3 keyUpdatedTime:(double)arg4;	// IMP=0x0000000000c0c074
- (void)updateStateForIdentifier:(id)arg1 stateNumber:(id)arg2;	// IMP=0x0000000000c0bfe9
- (void)retrieveCurrentStateForIdentifier:(id)arg1 stateNumber:(id *)arg2 isReachable:(_Bool *)arg3 linkQuality:(unsigned long long *)arg4 lastSeen:(id *)arg5;	// IMP=0x0000000000c0bf5a
- (void)setQOS:(long long)arg1;	// IMP=0x0000000000c0bede
- (void)configureAccessory:(id)arg1 trackState:(_Bool)arg2 connectionPriority:(_Bool)arg3;	// IMP=0x0000000000c0be1d
- (void)configureWithHomeManager:(id)arg1 mediaBrowserFactory:(CDUnknownBlockType)arg2;	// IMP=0x0000000000c0bd3f
- (void)configureWithHomeManager:(id)arg1;	// IMP=0x0000000000c0bd26
- (id)initWithMessageDispatcher:(id)arg1 injectedSettings:(id)arg2;	// IMP=0x0000000000c0b537
- (id)initWithMessageDispatcher:(id)arg1;	// IMP=0x0000000000c0b4d3

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
// Preceding property had unknown attributes: ?
// Original attribute string: T@"NSString",?,R,C

@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

