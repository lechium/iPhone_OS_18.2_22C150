//
//     Generated by classdump-c 4.2.0 (64 bit) (iOS port by DreamDevLost, Updated by Kevin Bradley.)(Debug version compiled Dec 27 2024 14:18:54).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <HomeKitDaemon/NSObject-Protocol.h>

@class HMDHomeNFCReaderKey, HMDHomeWalletKey, HMDHomeWalletKeySecureElementInfo, HMFFlow, NSData, NSSet, NSString, NSURL, PKPaymentApplication;
@protocol HMDWalletPassLibraryDelegate;

@protocol HMDWalletPassLibrary <NSObject>

@optional
@property(readonly, getter=isWalletVisible) _Bool walletVisible;
// Preceding property had unknown attributes: ?
// Original attribute string: TB,?,R,GisWalletVisible

@property(readonly, copy) NSSet *walletKeys;
// Preceding property had unknown attributes: ?
// Original attribute string: T@"NSSet",?,R,C

@property(readonly, copy) NSString *secureElementIdentifier;
// Preceding property had unknown attributes: ?
// Original attribute string: T@"NSString",?,R,C

@property __weak id <HMDWalletPassLibraryDelegate> delegate;
// Preceding property had unknown attributes: ?
// Original attribute string: T@"<HMDWalletPassLibraryDelegate>",?,W

- (void)fetchExpressEnablementConflictingPassDescriptionForPassAtURL:(NSURL *)arg1 flow:(HMFFlow *)arg2 completion:(void (^)(NSString *, NSError *))arg3;
- (void)setExpressSettingsWithAuthData:(NSData *)arg1 enableUWB:(_Bool)arg2 enableNFCExpress:(_Bool)arg3 passTypeIdentifier:(NSString *)arg4 serialNumber:(NSString *)arg5 flow:(HMFFlow *)arg6 completion:(void (^)(NSError *))arg7;
- (HMDHomeWalletKeySecureElementInfo *)nfcInfoFromPaymentApplication:(PKPaymentApplication *)arg1 readerKey:(HMDHomeNFCReaderKey *)arg2 flow:(HMFFlow *)arg3;
- (_Bool)isExpressModeEnabledForPassUniqueIdentifier:(NSString *)arg1 serialNumber:(NSString *)arg2;
- (NSURL *)createTemporaryPassDirectoryURL;
- (_Bool)removePassWithTypeIdentifier:(NSString *)arg1 serialNumber:(NSString *)arg2 flow:(HMFFlow *)arg3;
- (void)deleteKeyMaterialForSubCredentialId:(NSString *)arg1;
- (void)fetchExpressEnablementConflictingPassDescriptionForPassAtURL:(NSURL *)arg1 completion:(void (^)(NSString *, NSError *))arg2;
- (void)fetchIsExpressEnabledForPassWithTypeIdentifier:(NSString *)arg1 serialNumber:(NSString *)arg2 flow:(HMFFlow *)arg3 completion:(void (^)(_Bool, _Bool, NSError *))arg4;
- (void)fetchTransactionKeyForPassWithTypeIdentifier:(NSString *)arg1 serialNumber:(NSString *)arg2 completion:(void (^)(NSData *, NSError *))arg3;
- (void)acquireAssertionOfType:(unsigned long long)arg1 withReason:(NSString *)arg2 completion:(void (^)(PKAssertion *, NSError *))arg3;
- (void)generateHomeKeyNFCInfoWithReaderPublicKey:(NSData *)arg1 readerIdentifier:(NSData *)arg2 flow:(HMFFlow *)arg3 completion:(void (^)(NSArray *, NSError *))arg4;
- (void)fetchHomeKeySupportedWithFlow:(HMFFlow *)arg1 completion:(void (^)(_Bool, NSError *))arg2;
- (NSURL *)urlForWalletKeyWithTypeIdentifier:(NSString *)arg1 serialNumber:(NSString *)arg2;
- (HMDHomeWalletKey *)walletKeyWithTypeIdentifier:(NSString *)arg1 serialNumber:(NSString *)arg2 flow:(HMFFlow *)arg3;
- (NSString *)passUniqueIDOfWalletKeyWithTypeIdentifier:(NSString *)arg1 serialNumber:(NSString *)arg2;
- (void)enableExpressWithAuthData:(NSData *)arg1 passTypeIdentifier:(NSString *)arg2 serialNumber:(NSString *)arg3 flow:(HMFFlow *)arg4 completion:(void (^)(NSError *))arg5;
- (void)updatePassAtURL:(NSURL *)arg1 flow:(HMFFlow *)arg2 completion:(void (^)(NSError *))arg3;
- (void)addPassAtURL:(NSURL *)arg1 flow:(HMFFlow *)arg2 completion:(void (^)(NSError *))arg3;
- (void)start;
@end

