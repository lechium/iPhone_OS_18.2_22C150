//
//     Generated by classdump-c 4.2.0 (64 bit) (iOS port by DreamDevLost, Updated by Kevin Bradley.)(Debug version compiled Dec 27 2024 14:18:54).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <objc/NSObject.h>

@class AVPlayerPlaybackCoordinator, ICLiveLink, ICSharedListeningQueue, MPCModelGenericAVItemUserIdentityPropertySet, MPCPlaybackRequestEnvironment, MPPropertySet, MPRequestResponseController, NSArray, NSDictionary, NSHashTable, NSMutableArray, NSMutableSet, NSString;
@protocol MPCQueueControllerBehaviorHost, MPCQueueControllerBehaviorMusicDelegate, MPCQueueControllerBehaviorMusicSharePlayDelegate, MPCQueueControllerExternalSyncBehaviorHost;

__attribute__((visibility("hidden")))
@interface _MPCQueueControllerBehaviorMusicSharePlay : NSObject
{
    AVPlayerPlaybackCoordinator *_playbackCoordinator;	// 8 = 0x8
    CDUnknownBlockType _loadingCompletionHandler;	// 16 = 0x10
    unsigned short _activeItemFlags;	// 24 = 0x18
    MPCPlaybackRequestEnvironment *_playbackRequestEnvironment;	// 32 = 0x20
    _Bool _liveLinkStopped;	// 40 = 0x28
    _Bool _queueRanDry;	// 41 = 0x29
    _Bool _hasUserMutations;	// 42 = 0x2a
    _Bool _joiningAsInitiator;	// 43 = 0x2b
    NSString *_sessionID;	// 48 = 0x30
    id <MPCQueueControllerBehaviorHost> _host;	// 56 = 0x38
    id <MPCQueueControllerExternalSyncBehaviorHost> _externalSyncHost;	// 64 = 0x40
    id <MPCQueueControllerBehaviorMusicDelegate> _musicBehaviorDelegate;	// 72 = 0x48
    long long _repeatType;	// 80 = 0x50
    long long _shuffleType;	// 88 = 0x58
    id <MPCQueueControllerBehaviorMusicSharePlayDelegate> _musicSharePlayBehaviorDelegate;	// 96 = 0x60
    MPPropertySet *_requestedPropertySetForEvents;	// 104 = 0x68
    ICLiveLink *_liveLink;	// 112 = 0x70
    ICSharedListeningQueue *_queue;	// 120 = 0x78
    MPRequestResponseController *_requestController;	// 128 = 0x80
    MPCModelGenericAVItemUserIdentityPropertySet *_identityPropertySet;	// 136 = 0x88
    NSMutableArray *_pendingActions;	// 144 = 0x90
    NSMutableSet *_knownContainerIDs;	// 152 = 0x98
    NSDictionary *_resultsIndexPathMap;	// 160 = 0xa0
    NSArray *_enumeratorContentItemIDs;	// 168 = 0xa8
    NSHashTable *_activeModelGenericAVItems;	// 176 = 0xb0
}

+ (_Bool)canLoadQueue:(id)arg1 reason:(id *)arg2;	// IMP=0x001000000026c19e
- (void).cxx_destruct;	// IMP=0x000000000026695b
@property(retain, nonatomic) NSHashTable *activeModelGenericAVItems; // @synthesize activeModelGenericAVItems=_activeModelGenericAVItems;
@property(nonatomic) _Bool joiningAsInitiator; // @synthesize joiningAsInitiator=_joiningAsInitiator;
@property(copy, nonatomic) NSArray *enumeratorContentItemIDs; // @synthesize enumeratorContentItemIDs=_enumeratorContentItemIDs;
@property(copy, nonatomic) NSDictionary *resultsIndexPathMap; // @synthesize resultsIndexPathMap=_resultsIndexPathMap;
@property(retain, nonatomic) NSMutableSet *knownContainerIDs; // @synthesize knownContainerIDs=_knownContainerIDs;
@property(retain, nonatomic) NSMutableArray *pendingActions; // @synthesize pendingActions=_pendingActions;
@property(retain, nonatomic) MPCModelGenericAVItemUserIdentityPropertySet *identityPropertySet; // @synthesize identityPropertySet=_identityPropertySet;
@property(retain, nonatomic) MPRequestResponseController *requestController; // @synthesize requestController=_requestController;
@property(retain, nonatomic, setter=_setQueue:) ICSharedListeningQueue *queue; // @synthesize queue=_queue;
@property(retain, nonatomic) ICLiveLink *liveLink; // @synthesize liveLink=_liveLink;
@property(readonly, nonatomic) _Bool hasUserMutations; // @synthesize hasUserMutations=_hasUserMutations;
@property(copy, nonatomic) MPPropertySet *requestedPropertySetForEvents; // @synthesize requestedPropertySetForEvents=_requestedPropertySetForEvents;
@property(nonatomic) __weak id <MPCQueueControllerBehaviorMusicSharePlayDelegate> musicSharePlayBehaviorDelegate; // @synthesize musicSharePlayBehaviorDelegate=_musicSharePlayBehaviorDelegate;
@property(readonly, nonatomic) long long shuffleType; // @synthesize shuffleType=_shuffleType;
@property(readonly, nonatomic) long long repeatType; // @synthesize repeatType=_repeatType;
@property(nonatomic) __weak id <MPCQueueControllerBehaviorMusicDelegate> musicBehaviorDelegate; // @synthesize musicBehaviorDelegate=_musicBehaviorDelegate;
@property(readonly, nonatomic) __weak id <MPCQueueControllerExternalSyncBehaviorHost> externalSyncHost; // @synthesize externalSyncHost=_externalSyncHost;
@property(readonly, nonatomic) __weak id <MPCQueueControllerBehaviorHost> host; // @synthesize host=_host;
@property(readonly, copy, nonatomic) NSString *sessionID; // @synthesize sessionID=_sessionID;
- (_Bool)_useItemPlaceholderForContentItemID:(id)arg1;	// IMP=0x00000000002666b6
- (_Bool)_useItemPlaceholderForItemID:(id)arg1;	// IMP=0x00000000002665a0
- (id)_sectionObjectForSharedListeningContainerID:(id)arg1;	// IMP=0x000000000026623f
- (id)_sectionedCollectionForQueue:(id)arg1;	// IMP=0x000000000026610c
- (void)_reloadCacheDataWithOptions:(unsigned long long)arg1;	// IMP=0x0000000000265eb0
- (id)_queueAsStateDictionary;	// IMP=0x0000000000265be7
- (void)_purgePendingActionsWithLabel:(id)arg1;	// IMP=0x0000000000265878
- (id)_mpcSharedListeningEventForICLiveLinkEvent:(id)arg1;	// IMP=0x00000000002646c0
- (id)_itemObjectForSharedListeningItemID:(id)arg1;	// IMP=0x00000000002645bc
- (void)_initializeWithQueue:(id)arg1;	// IMP=0x00000000002644a3
- (void)_enqueuePendingActionWithLabel:(id)arg1 itemIdentifier:(id)arg2 block:(CDUnknownBlockType)arg3;	// IMP=0x0000000000264184
- (void)_emitEventsForPlaybackBehaviorChange;	// IMP=0x0000000000263f9d
- (void)_emitEventsForParticipants:(id)arg1 localUserIdentity:(id)arg2;	// IMP=0x0000000000263d45
- (void)_emitEventsForAddedSharedListeningContainer:(id)arg1;	// IMP=0x0000000000263a58
- (void)_dequeuePendingActions;	// IMP=0x00000000002630d2
- (id)_componentsForSharedListeningItemID:(id)arg1;	// IMP=0x0000000000262f8c
- (id)_componentsForContentItemID:(id)arg1;	// IMP=0x0000000000262e45
- (void)liveLink:(id)arg1 didReceiveEvent:(id)arg2;	// IMP=0x0000000000262dc3
- (void)liveLink:(id)arg1 didReceiveDirectCurrentItemChanged:(id)arg2 fromParticipant:(id)arg3;	// IMP=0x0000000000262d05
- (void)liveLink:(id)arg1 didUpdateQueue:(id)arg2;	// IMP=0x0000000000262c7c
- (void)liveLink:(id)arg1 didUpdateParticipants:(id)arg2;	// IMP=0x0000000000262bc2
- (void)liveLink:(id)arg1 didEncounterError:(id)arg2 willRetry:(_Bool)arg3;	// IMP=0x0000000000262b2e
- (void)didStopLiveLink:(id)arg1;	// IMP=0x0000000000262ae3
- (void)liveLinkDidReconnect:(id)arg1;	// IMP=0x0000000000262a98
- (id)playbackCoordinator:(id)arg1 identifierForPlayerItem:(id)arg2;	// IMP=0x0000000000262a15
- (void)controller:(id)arg1 defersResponseReplacement:(CDUnknownBlockType)arg2;	// IMP=0x000000000026298c
- (_Bool)controller:(id)arg1 shouldRetryFailedRequestWithError:(id)arg2;	// IMP=0x0000000000262984
- (long long)displayItemCount;	// IMP=0x000000000026293c
- (void)clearAllItemsAfterContentItemID:(id)arg1;	// IMP=0x000000000026286d
- (void)removeContentItemID:(id)arg1 completion:(CDUnknownBlockType)arg2;	// IMP=0x000000000026271a
- (_Bool)canRemoveContentItemID:(id)arg1 reason:(id *)arg2;	// IMP=0x0000000000262712
- (void)moveContentItemID:(id)arg1 afterContentItemID:(id)arg2 completion:(CDUnknownBlockType)arg3;	// IMP=0x00000000002624a7
- (void)moveContentItemID:(id)arg1 beforeContentItemID:(id)arg2 completion:(CDUnknownBlockType)arg3;	// IMP=0x000000000026223c
- (void)performInsertCommand:(id)arg1 targetContentItemID:(id)arg2 completion:(CDUnknownBlockType)arg3;	// IMP=0x00000000002620c0
- (id)tailInsertionContentItemIDForTargetContentItemID:(id)arg1;	// IMP=0x00000000002620b8
- (_Bool)isSupportedInsertionPosition:(long long)arg1 fromContentItemID:(id)arg2 reason:(id *)arg3;	// IMP=0x0000000000261fb7
@property(nonatomic) _Bool allowsQueueModifications;
- (void)canReuseQueue:(id)arg1 completion:(CDUnknownBlockType)arg2;	// IMP=0x0000000000261d15
@property(readonly, nonatomic) long long queueExplicitContentState;
- (void)updatePlaybackCoordinator:(id)arg1;	// IMP=0x0000000000261a76
- (void)endSynchronizedPlayback;	// IMP=0x00000000002619e8
- (id)lastSectionContentItemIDForTargetContentItemID:(id)arg1;	// IMP=0x00000000002619e0
- (id)copyContentItemID:(id)arg1 repeatIteration:(long long)arg2;	// IMP=0x0000000000261960
- (id)contentItemIDWithoutRepeatIteration:(id)arg1;	// IMP=0x00000000002618e0
- (void)prepareForCreateStationAfterContentItemID:(id)arg1;	// IMP=0x00000000002618da
- (void)setHostingSharedSessionID:(id)arg1 reason:(id)arg2;	// IMP=0x0000000000261879
- (void)findFirstContentItemIDForItemIntersectingIdentifierSet:(id)arg1 completion:(CDUnknownBlockType)arg2;	// IMP=0x00000000002616d0
- (void)getSharedQueueTracklistWithStartingContentItemID:(id)arg1 completion:(CDUnknownBlockType)arg2;	// IMP=0x0000000000261656
- (_Bool)isAutoPlayContentItemID:(id)arg1;	// IMP=0x000000000026160e
- (void)setAutoPlayEnabled:(_Bool)arg1 targetContentItemID:(id)arg2 completion:(CDUnknownBlockType)arg3;	// IMP=0x0000000000261512
- (_Bool)canUserEnableAutoPlayWithReason:(id *)arg1;	// IMP=0x00000000002614de
@property(readonly, nonatomic) _Bool autoPlayEnabled;
- (void)reshuffleWithTargetContentItemID:(id)arg1 completion:(CDUnknownBlockType)arg2;	// IMP=0x000000000026144f
- (void)setShuffleType:(long long)arg1 targetContentItemID:(id)arg2 completion:(CDUnknownBlockType)arg3;	// IMP=0x00000000002613d6
- (_Bool)canUserChangeShuffleModeWithReason:(id *)arg1;	// IMP=0x00000000002613bf
- (void)setRepeatType:(long long)arg1 completion:(CDUnknownBlockType)arg2;	// IMP=0x0000000000261346
- (_Bool)canUserChangeRepeatTypeWithReason:(id *)arg1;	// IMP=0x000000000026132f
- (void)didJumpToTargetContentItemID:(id)arg1;	// IMP=0x00000000002612bd
- (void)disconnectFromExternalSyncHost:(id)arg1;	// IMP=0x00000000002612ad
- (void)connectToExternalSyncHost:(id)arg1;	// IMP=0x000000000026129c
- (void)didReachEndOfQueueWithReason:(id)arg1;	// IMP=0x0000000000261282
- (id)_itemForContentItemID:(id)arg1;	// IMP=0x0000000000260a63
- (void)currentItemDidChangeFromContentItemID:(id)arg1 toContentItemID:(id)arg2;	// IMP=0x0000000000260a5d
- (id)_stateDictionaryIncludingQueue:(_Bool)arg1;	// IMP=0x0000000000260920
- (id)contentItemIDEnumeratorStartingAfterContentItemID:(id)arg1 mode:(long long)arg2 options:(unsigned long long)arg3;	// IMP=0x000000000026054d
@property(readonly, nonatomic) _Bool isEmpty;
- (_Bool)canNextItemFromContentItemID:(id)arg1 reason:(id *)arg2;	// IMP=0x000000000026032e
- (_Bool)canPreviousItemFromContentItemID:(id)arg1 reason:(id *)arg2;	// IMP=0x0000000000260229
- (_Bool)canJumpToContentItemID:(id)arg1 reason:(id *)arg2;	// IMP=0x0000000000260124
- (_Bool)itemExistsForContentItemID:(id)arg1;	// IMP=0x000000000025feb2
- (id)componentsForContentItemID:(id)arg1;	// IMP=0x000000000025fea0
- (void)activeItemFlagsDidChange:(unsigned short)arg1;	// IMP=0x000000000025fe96
- (id)performLoadCommand:(id)arg1 completion:(CDUnknownBlockType)arg2;	// IMP=0x000000000025f643
@property(readonly, nonatomic) long long playbackPositionRestorationPolicy;
- (void)disconnectFromHost:(id)arg1;	// IMP=0x000000000025f4dd
- (void)didConnectToHost:(id)arg1;	// IMP=0x000000000025f32b
- (void)connectToHost:(id)arg1;	// IMP=0x000000000025f31a
- (id)initWithSessionID:(id)arg1;	// IMP=0x000000000025f1d3
- (void)getExpectedCurrentItemModelObjectWithCompletion:(CDUnknownBlockType)arg1;	// IMP=0x000000000025f09a

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
// Preceding property had unknown attributes: ?
// Original attribute string: T@"NSString",?,R,C

@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

