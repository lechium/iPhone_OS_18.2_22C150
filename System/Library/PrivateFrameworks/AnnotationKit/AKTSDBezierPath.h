//
//     Generated by classdump-c 4.2.0 (64 bit) (iOS port by DreamDevLost, Updated by Kevin Bradley.)(Debug version compiled Dec 27 2024 14:18:54).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <objc/NSObject.h>

@interface AKTSDBezierPath : NSObject
{
    long long sfr_elementCount;	// 8 = 0x8
    long long sfr_elementMax;	// 16 = 0x10
    struct PATHSEGMENT *sfr_head;	// 24 = 0x18
    double *sfr_elementLength;	// 32 = 0x20
    double sfr_totalLength;	// 40 = 0x28
    long long sfr_lastSubpathIndex;	// 48 = 0x30
    void *sfr_extraSegments;	// 56 = 0x38
    double sfr_lineWidth;	// 64 = 0x40
    struct CGRect sfr_controlPointBounds;	// 72 = 0x48
    double sfr_miterLimit;	// 104 = 0x68
    double sfr_flatness;	// 112 = 0x70
    double *sfr_dashedLinePattern;	// 120 = 0x78
    unsigned long long sfr_dashedLineCount;	// 128 = 0x80
    double sfr_dashedLinePhase;	// 136 = 0x88
    void *sfr_path;	// 144 = 0x90
    long long sfr_extraSegmentCount;	// 152 = 0x98
    long long sfr_extraSegmentMax;	// 160 = 0xa0
    struct {
        unsigned int sfr_flags:8;
        unsigned int sfr_pathState:2;
        unsigned int sfr_calculatedLengths:1;
        unsigned int sfr_unused:21;
    } sfr_bpFlags;	// 168 = 0xa8
}

+ (double)defaultLineWidth;	// IMP=0x0010000000044e2d
+ (void)setDefaultLineWidth:(double)arg1;	// IMP=0x0010000000044e1f
+ (unsigned long long)defaultLineJoinStyle;	// IMP=0x0010000000044e12
+ (void)setDefaultLineJoinStyle:(unsigned long long)arg1;	// IMP=0x0010000000044e05
+ (unsigned long long)defaultLineCapStyle;	// IMP=0x0010000000044df8
+ (void)setDefaultLineCapStyle:(unsigned long long)arg1;	// IMP=0x0010000000044deb
+ (unsigned long long)defaultWindingRule;	// IMP=0x0010000000044dde
+ (void)setDefaultWindingRule:(unsigned long long)arg1;	// IMP=0x0010000000044dd1
+ (double)defaultFlatness;	// IMP=0x0010000000044dc3
+ (void)setDefaultFlatness:(double)arg1;	// IMP=0x0010000000044db5
+ (double)defaultMiterLimit;	// IMP=0x0010000000044da7
+ (void)setDefaultMiterLimit:(double)arg1;	// IMP=0x0010000000044d99
+ (void)strokeLineFromPoint:(struct CGPoint)arg1 toPoint:(struct CGPoint)arg2;	// IMP=0x0010000000044cfe
+ (void)clipRect:(struct CGRect)arg1;	// IMP=0x0010000000044cd8
+ (void)strokeRect:(struct CGRect)arg1;	// IMP=0x0010000000044b1e
+ (void)fillRect:(struct CGRect)arg1;	// IMP=0x0010000000044af8
+ (id)bezierPathWithCGPath:(struct CGPath *)arg1;	// IMP=0x0010000000044970
+ (id)bezierPathWithRoundedRect:(struct CGRect)arg1 cornerRadius:(double)arg2;	// IMP=0x0010000000044968
+ (id)bezierPathWithOvalInRect:(struct CGRect)arg1;	// IMP=0x0010000000044913
+ (id)bezierPathWithRect:(struct CGRect)arg1;	// IMP=0x00100000000448be
+ (id)bezierPathWithStart:(struct CGPoint)arg1 end:(struct CGPoint)arg2;	// IMP=0x0010000000044845
+ (id)bezierPath;	// IMP=0x0010000000044833
+ (void)initialize;	// IMP=0x00100000000447f3
+ (double)lineWidth;	// IMP=0x0010000000049178
+ (void)setLineWidth:(double)arg1;	// IMP=0x0010000000049166
+ (unsigned long long)lineJoinStyle;	// IMP=0x0010000000049154
+ (void)setLineJoinStyle:(unsigned long long)arg1;	// IMP=0x0010000000049142
+ (unsigned long long)lineCapStyle;	// IMP=0x0010000000049130
+ (void)setLineCapStyle:(unsigned long long)arg1;	// IMP=0x001000000004911e
+ (unsigned long long)windingRule;	// IMP=0x001000000004910c
+ (void)setWindingRule:(unsigned long long)arg1;	// IMP=0x00100000000490fa
+ (double)flatness;	// IMP=0x00100000000490e8
+ (void)setFlatness:(double)arg1;	// IMP=0x00100000000490d6
+ (double)miterLimit;	// IMP=0x00100000000490c4
+ (void)setMiterLimit:(double)arg1;	// IMP=0x00100000000490b2
- (id)initWithCString:(const char *)arg1;	// IMP=0x0000000000048910
- (const char *)cString;	// IMP=0x0000000000048714
- (id)initWithCoder:(id)arg1;	// IMP=0x0000000000047e80
- (void)encodeWithCoder:(id)arg1;	// IMP=0x000000000004783e
- (_Bool)containsPoint:(struct CGPoint)arg1;	// IMP=0x00000000000477ba
- (void)appendBezierPathWithArcFromPoint:(struct CGPoint)arg1 toPoint:(struct CGPoint)arg2 radius:(double)arg3;	// IMP=0x00000000000473a2
- (void)appendBezierPathWithArcWithCenter:(struct CGPoint)arg1 radius:(double)arg2 startAngle:(double)arg3 endAngle:(double)arg4;	// IMP=0x000000000004738b
- (void)appendBezierPathWithArcWithCenter:(struct CGPoint)arg1 radius:(double)arg2 startAngle:(double)arg3 endAngle:(double)arg4 clockwise:(_Bool)arg5;	// IMP=0x0000000000047091
- (void)_appendArcSegmentWithCenter:(struct CGPoint)arg1 radius:(double)arg2 angle1:(double)arg3 angle2:(double)arg4;	// IMP=0x0000000000046f70
- (void)appendBezierPathWithOvalInRect:(struct CGRect)arg1;	// IMP=0x0000000000046d9c
- (void)appendBezierPathWithPoints:(struct CGPoint *)arg1 count:(long long)arg2;	// IMP=0x0000000000046ced
- (void)appendBezierPathWithRect:(struct CGRect)arg1;	// IMP=0x0000000000046bdc
- (void)appendBezierPath:(id)arg1;	// IMP=0x0000000000046a48
- (void)_appendToPath:(id)arg1;	// IMP=0x000000000004691b
- (void)setAssociatedPoints:(struct CGPoint *)arg1 atIndex:(long long)arg2;	// IMP=0x000000000004682b
- (unsigned long long)elementAtIndex:(long long)arg1 allPoints:(struct CGPoint *)arg2;	// IMP=0x0000000000046739
- (unsigned long long)elementAtIndex:(long long)arg1 associatedPoints:(struct CGPoint *)arg2;	// IMP=0x0000000000046661
- (unsigned long long)elementAtIndex:(long long)arg1;	// IMP=0x000000000004664d
- (long long)elementCount;	// IMP=0x0000000000046643
- (double)lengthToElement:(long long)arg1;	// IMP=0x00000000000465f6
- (double)lengthOfElement:(long long)arg1;	// IMP=0x00000000000465c2
- (double)length;	// IMP=0x0000000000046594
- (void)calculateLengths;	// IMP=0x00000000000464c8
- (double)calculateLengthOfElement:(long long)arg1;	// IMP=0x000000000004641c
- (_Bool)isClockwise;	// IMP=0x0000000000046209
- (_Bool)isFlat;	// IMP=0x000000000004617c
- (struct CGRect)bounds;	// IMP=0x000000000004610f
- (struct CGRect)controlPointBounds;	// IMP=0x0000000000045fe3
- (struct CGPoint)currentPoint;	// IMP=0x0000000000045f83
- (_Bool)isEmpty;	// IMP=0x0000000000045f75
- (struct CGPath *)CGPath;	// IMP=0x0000000000045f51
- (void)transformUsingAffineTransform:(struct CGAffineTransform)arg1;	// IMP=0x0000000000045e60
- (id)bezierPathByReversingPath;	// IMP=0x0000000000045c8b
- (id)_copyFlattenedPath;	// IMP=0x0000000000045c56
- (id)bezierPathByFlatteningPath;	// IMP=0x0000000000045bfc
- (void)flattenIntoPath:(id)arg1;	// IMP=0x0000000000045aba
- (void)subdivideBezierWithFlatness:(double)arg1 startPoint:(struct CGPoint)arg2 controlPoint1:(struct CGPoint)arg3 controlPoint2:(struct CGPoint)arg4 endPoint:(struct CGPoint)arg5;	// IMP=0x00000000000458e2
- (void)addClip;	// IMP=0x000000000004587f
- (void)fill;	// IMP=0x000000000004581c
- (void)stroke;	// IMP=0x0000000000045668
- (void)_doPath;	// IMP=0x0000000000045547
- (void)getLineDash:(double *)arg1 count:(long long *)arg2 phase:(double *)arg3;	// IMP=0x00000000000454f2
- (void)setLineDash:(const double *)arg1 count:(long long)arg2 phase:(double)arg3;	// IMP=0x0000000000045417
- (void)setFlatness:(double)arg1;	// IMP=0x000000000004540c
- (double)flatness;	// IMP=0x0000000000045401
- (void)setMiterLimit:(double)arg1;	// IMP=0x00000000000453f6
- (double)miterLimit;	// IMP=0x00000000000453eb
- (void)setWindingRule:(unsigned long long)arg1;	// IMP=0x00000000000453ce
- (unsigned long long)windingRule;	// IMP=0x00000000000453bc
- (void)setLineJoinStyle:(unsigned long long)arg1;	// IMP=0x000000000004539f
- (unsigned long long)lineJoinStyle;	// IMP=0x000000000004538d
- (void)setLineCapStyle:(unsigned long long)arg1;	// IMP=0x000000000004536e
- (unsigned long long)lineCapStyle;	// IMP=0x000000000004535c
- (void)setLineWidth:(double)arg1;	// IMP=0x0000000000045351
- (double)lineWidth;	// IMP=0x0000000000045346
- (void)relativeCurveToPoint:(struct CGPoint)arg1 controlPoint1:(struct CGPoint)arg2 controlPoint2:(struct CGPoint)arg3;	// IMP=0x00000000000452c4
- (void)relativeLineToPoint:(struct CGPoint)arg1;	// IMP=0x000000000004527a
- (void)relativeMoveToPoint:(struct CGPoint)arg1;	// IMP=0x0000000000045230
- (void)removeAllPoints;	// IMP=0x00000000000451cf
- (void)closePath;	// IMP=0x00000000000451bd
- (void)curveToPoint:(struct CGPoint)arg1 controlPoint1:(struct CGPoint)arg2 controlPoint2:(struct CGPoint)arg3;	// IMP=0x0000000000045124
- (void)lineToPoint:(struct CGPoint)arg1;	// IMP=0x00000000000450b6
- (void)moveToPoint:(struct CGPoint)arg1;	// IMP=0x00000000000450a4
- (id)copyWithZone:(struct _NSZone *)arg1;	// IMP=0x0000000000044f94
- (void)dealloc;	// IMP=0x0000000000044f24
- (id)init;	// IMP=0x0000000000044e3b
- (void)_deviceClosePath;	// IMP=0x0000000000049013
- (void)_deviceCurveToPoint:(struct CGPoint)arg1 controlPoint1:(struct CGPoint)arg2 controlPoint2:(struct CGPoint)arg3;	// IMP=0x0000000000048e8b
- (void)_deviceLineToPoint:(struct CGPoint)arg1;	// IMP=0x0000000000048e53
- (void)_deviceMoveToPoint:(struct CGPoint)arg1;	// IMP=0x0000000000048dc5
- (void)_addPathSegment:(long long)arg1 point:(struct CGPoint)arg2;	// IMP=0x0000000000048bc2
- (id)description;	// IMP=0x000000000004918a
- (id)chisel;	// IMP=0x00000000000e4c5a
- (void)recursiveSubdivideOntoPath:(id)arg1 withScaling:(CDStruct_c3b9c2ee)arg2 inElementRange:(struct _NSRange)arg3 into:(id)arg4;	// IMP=0x00000000000e4459
- (void)recursiveSubdivideOntoPath:(id)arg1 withScaling:(CDStruct_c3b9c2ee)arg2 into:(id)arg3;	// IMP=0x00000000000e43c2
- (void)recursiveSubdivideOntoPath:(id)arg1 into:(id)arg2;	// IMP=0x00000000000e4337
- (double)curvatureAt:(double)arg1 fromElement:(int)arg2;	// IMP=0x00000000000e2b47
- (float)curvatureAt:(float)arg1;	// IMP=0x00000000000e2ac8
- (struct CGPoint)myGradientAt:(float)arg1 fromElement:(long long)arg2;	// IMP=0x00000000000e2a56
- (struct CGPoint)myGradientAt:(float)arg1;	// IMP=0x00000000000e29bc
- (struct CGPoint)rawGradientAt:(float)arg1 fromElement:(long long)arg2;	// IMP=0x00000000000e2819
- (float)elementPercentageFromElement:(int)arg1 forOverallPercentage:(float)arg2;	// IMP=0x00000000000e2746
- (struct CGPoint)transformedTotalCoordinate:(struct CGPoint)arg1 betweenElement:(long long)arg2 andElement:(long long)arg3 withPressure:(id)arg4 getElement:(long long *)arg5 getPercentage:(float *)arg6;	// IMP=0x00000000000e25af
- (struct CGPoint)transformedTotalCoordinate:(struct CGPoint)arg1 inElement:(long long)arg2 withPressure:(id)arg3;	// IMP=0x00000000000e2491
- (struct CGPoint)transformedCoordinate:(struct CGPoint)arg1 withPressure:(id)arg2;	// IMP=0x00000000000e2363
- (struct CGPoint)gradientAt:(float)arg1;	// IMP=0x00000000000e2314
- (struct CGPoint)gradientAt:(double)arg1 fromElement:(long long)arg2;	// IMP=0x00000000000e22c4
- (struct CGPoint)pointAt:(double)arg1 fromElement:(long long)arg2;	// IMP=0x00000000000e20f3
- (long long)elementPercentage:(float *)arg1 forOverallPercentage:(float)arg2;	// IMP=0x00000000000e1f73
- (id)pressure;	// IMP=0x00000000000e1f6b
- (struct CGPoint)nearestAngleOnPathToLine:(struct CGPoint [2])arg1;	// IMP=0x00000000000e19ac
- (struct CGPoint)nearestPointOnPathToLine:(struct CGPoint [2])arg1;	// IMP=0x00000000000e1763
- (id)copyFromSegment:(int)arg1 t:(float)arg2 toSegment:(int)arg3 t:(float)arg4;	// IMP=0x00000000000e1680
- (void)appendBezierPath:(id)arg1 fromSegment:(long long)arg2 t:(double)arg3 toSegment:(long long)arg4 t:(double)arg5 withoutMove:(_Bool)arg6;	// IMP=0x00000000000e10d4
- (void)appendBezierPath:(id)arg1 fromSegment:(long long)arg2 toSegment:(long long)arg3;	// IMP=0x00000000000e0f98
- (void)addIntersectionsWithLine:(struct CGPoint [2])arg1 to:(id)arg2;	// IMP=0x00000000000e0e4f
- (void)addIntersectionsWithPath:(id)arg1 to:(id)arg2;	// IMP=0x00000000000e0e34
- (void)addIntersectionsWithPath:(id)arg1 to:(id)arg2 allIntersections:(_Bool)arg3 reversed:(_Bool)arg4;	// IMP=0x00000000000e0436
- (void)getStartPoint:(struct CGPoint *)arg1 andEndPoint:(struct CGPoint *)arg2;	// IMP=0x00000000000e0394

@end

