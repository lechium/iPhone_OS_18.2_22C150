//
//     Generated by classdump-c 4.2.0 (64 bit) (iOS port by DreamDevLost, Updated by Kevin Bradley.)(Debug version compiled Dec 27 2024 14:18:54).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <Foundation/NSDate.h>

@interface NSDate (CalendarAdditions)
+ (id)CalDateRangeStringWithStart:(id)arg1 end:(id)arg2;	// IMP=0x0060000000023081
+ (id)nextRoundedChunkForDuration:(double)arg1;	// IMP=0x0060000000021406
+ (id)nextRoundedHour;	// IMP=0x006000000002137c
+ (id)dateWithDatePartFromDate:(id)arg1 timePartFromDate:(id)arg2 inCalendar:(id)arg3;	// IMP=0x006000000002085d
+ (id)dateFromISO8601String:(id)arg1 inTimeZone:(id)arg2;	// IMP=0x006000000001ebb0
+ (id)dateFromISO8601String:(id)arg1;	// IMP=0x006000000001eb29
+ (id)CalDateForEndOfTomorrow;	// IMP=0x006000000001ea6c
+ (id)CalDateForBeginningOfTomorrow;	// IMP=0x006000000001e9e5
+ (id)_tomorrowComponents;	// IMP=0x006000000001e8fa
+ (id)CalDateForEndOfToday;	// IMP=0x006000000001e83d
+ (id)CalDateForBeginningOfToday;	// IMP=0x00600000000086d1
+ (id)_todayComponents;	// IMP=0x0060000000008758
+ (id)_nowComponents;	// IMP=0x00600000000087b4
+ (id)CalDateForNow;	// IMP=0x0060000000008840
+ (id)CalSimulatedDateForNow;	// IMP=0x006000000001e63f
+ (id)calGMT;	// IMP=0x006000000001e2bb
+ (long long)daysSpannedFromStartDate:(id)arg1 toEndDate:(id)arg2 allDay:(_Bool)arg3 inCalendar:(id)arg4;	// IMP=0x00600000000083b0
- (void)_performBlockBehindDispatchSync:(CDUnknownBlockType)arg1 inTimeZone:(id)arg2;	// IMP=0x001000000001d5de
- (id)dateWithoutTimeComponentsInTimeZone:(id)arg1;	// IMP=0x001000000001d473
- (id)dateAtHour:(unsigned long long)arg1 minute:(unsigned long long)arg2 second:(unsigned long long)arg3 inTimeZone:(id)arg4;	// IMP=0x001000000000d1cd
- (id)dateForEndOfDayInTimeZone:(id)arg1;	// IMP=0x001000000000cfe8
- (id)dateForStartOfDayInTimeZone:(id)arg1;	// IMP=0x001000000000d1b1
- (id)localizedStringForEventTimeInTimeZone:(id)arg1;	// IMP=0x0010000000022f42
- (id)localizedStringForEventTime;	// IMP=0x0010000000022edc
- (id)localizedHourWithoutAMPM;	// IMP=0x0010000000022ec0
- (id)localizedHourMinutesWithoutAMPMInTimeZone:(id)arg1;	// IMP=0x0010000000022ea1
- (id)localizedHourMinutesWithoutAMPM;	// IMP=0x0010000000022e3b
- (id)localizedHourInTimeZone:(id)arg1;	// IMP=0x0010000000022e1c
- (id)localizedHour;	// IMP=0x0010000000022db6
- (id)localizedShortTimeInTimeZone:(id)arg1;	// IMP=0x0010000000022d97
- (id)localizedShortTime;	// IMP=0x0010000000022d31
- (id)localizedTime;	// IMP=0x0010000000022d15
- (id)localizedAbbrevStandaloneMonth;	// IMP=0x0010000000022c96
- (id)localizedAbbrevMonthWithDayRangeToDate:(id)arg1;	// IMP=0x0010000000022b21
- (id)localizedAbbrevWeekdayWithDayOfMonthPreferWeekdayFirstForEnglish;	// IMP=0x0010000000022903
- (struct _NSRange)rangeOfDayInLocalizedDateString:(id)arg1;	// IMP=0x001000000002274a
- (id)localizedAbbrevWeekdayWithDayOfMonth;	// IMP=0x001000000002272e
- (id)localizedFullWeekdayWithDayOfMonth;	// IMP=0x0010000000022712
- (id)localizedShortStandaloneWeekday;	// IMP=0x00100000000226f6
- (id)localizedFullStandaloneWeekday;	// IMP=0x00100000000226da
- (id)localizedMonthWithDayWithPreferredShortening;	// IMP=0x001000000002265a
- (id)localizedShortMonthWithDay;	// IMP=0x001000000002263e
- (id)localizedAbbrevMonthWithDayInTimeZone:(id)arg1;	// IMP=0x001000000002261f
- (id)localizedAbbrevMonthWithDay;	// IMP=0x00100000000225b9
- (id)localizedFullMonthWithDay;	// IMP=0x001000000002259d
- (id)localizedAbbrevMonthWeekdayDay;	// IMP=0x0010000000022581
- (id)localizedFullMonthWeekdayDay;	// IMP=0x0010000000022565
- (id)localizedFullYearMonth;	// IMP=0x0010000000022549
- (id)localizedShortDate;	// IMP=0x001000000002252d
- (id)localizedDayOfWeekWithAbbrevDateInTimeZone:(id)arg1;	// IMP=0x001000000002250e
- (id)localizedAbbrevDateInTimeZone:(id)arg1;	// IMP=0x00100000000224ef
- (id)localizedAbbrevDate;	// IMP=0x0010000000022489
- (id)localizedLongDate;	// IMP=0x001000000002246d
- (id)localizedFullDate;	// IMP=0x0010000000022451
- (id)localizedShortDateAndTime;	// IMP=0x0010000000022435
- (id)localizedFullDateAndTime;	// IMP=0x0010000000022419
- (id)localizedDayOfMonth;	// IMP=0x00100000000223fd
- (id)localizedFullMonth;	// IMP=0x00100000000223e1
- (id)localizedYear;	// IMP=0x00100000000223c5
- (id)dateRemovingComponents:(unsigned long long)arg1 inCalendar:(id)arg2;	// IMP=0x001000000002231e
- (long long)midnightOffsetMinutes:(id)arg1;	// IMP=0x00100000000222af
- (id)timeStringAlwaysIncludeMinutes:(_Bool)arg1;	// IMP=0x001000000000dc11
- (id)_stringWithUseAbbreviatedFormats:(_Bool)arg1 lowerCase:(_Bool)arg2;	// IMP=0x0010000000021d7e
- (id)localizedRelativeDateStringShortened:(_Bool)arg1 lowercase:(_Bool)arg2;	// IMP=0x0010000000021d6c
- (id)localizedRelativeDateStringShortened:(_Bool)arg1;	// IMP=0x0010000000021d58
- (id)localizedWeekNumber;	// IMP=0x0010000000021cd7
- (id)localizedDateStringWithTemplate:(id)arg1;	// IMP=0x0010000000021be6
- (id)localizedWeekdayMonthDayStringShortened:(_Bool)arg1;	// IMP=0x0010000000021bbd
- (id)localizedWeekdayMonthYearStringShortened:(_Bool)arg1;	// IMP=0x0010000000021b94
- (id)localizedWeekdayMonthDayYearStringShortened:(_Bool)arg1;	// IMP=0x0010000000021b6b
- (id)localizedYearMonthAndDayStringShortened:(_Bool)arg1;	// IMP=0x0010000000021b42
- (id)localizedMonthAndDayStringShortened:(_Bool)arg1;	// IMP=0x0010000000021b19
- (id)localizedMonthAndYearStringShortened:(_Bool)arg1;	// IMP=0x0010000000021af0
- (id)localizedMonthShortened:(_Bool)arg1;	// IMP=0x0010000000021ac7
- (void)printComparisonToDate:(id)arg1;	// IMP=0x0010000000021584
- (id)dateRoundedToStartOfNextDayInCalendar:(id)arg1;	// IMP=0x00100000000212fa
- (id)dateRoundedToHourOnSameDayInCalendar:(id)arg1;	// IMP=0x00100000000211db
- (id)dateRoundedDownToNearestFiveMinutesInCalendar:(id)arg1;	// IMP=0x00100000000211c1
- (id)dateRoundedToNearestFifteenMinutesInCalendar:(id)arg1;	// IMP=0x00100000000210f9
- (id)CalDateRoundedDownToNearestMinuteIncrement:(long long)arg1 inCalendar:(id)arg2;	// IMP=0x0010000000020fe5
- (_Bool)isTodayInCalendar:(id)arg1;	// IMP=0x0010000000020eff
- (_Bool)isAfterOrSameDayAsDate:(id)arg1 inCalendar:(id)arg2;	// IMP=0x0010000000020ee5
- (_Bool)isAfterDayForDate:(id)arg1 inCalendar:(id)arg2;	// IMP=0x0010000000020ecb
- (_Bool)isBeforeOrSameDayAsDate:(id)arg1 inCalendar:(id)arg2;	// IMP=0x0010000000020eb1
- (_Bool)isBeforeDayForDate:(id)arg1 inCalendar:(id)arg2;	// IMP=0x0010000000020e97
- (_Bool)isEqualToDateIgnoringTimeComponents:(id)arg1 inCalendar:(id)arg2;	// IMP=0x0010000000020db6
- (_Bool)isSameYearAsDate:(id)arg1 inCalendar:(id)arg2;	// IMP=0x0010000000020cc7
- (_Bool)isSameWeekAsDate:(id)arg1 inCalendar:(id)arg2;	// IMP=0x0010000000020bed
- (_Bool)isSameMonthAsDate:(id)arg1 inCalendar:(id)arg2;	// IMP=0x0010000000020afe
- (_Bool)isSameDayAsDate:(id)arg1 inCalendar:(id)arg2;	// IMP=0x0010000000020aec
- (long long)compareDateIgnoringTimeComponents:(id)arg1 inCalendar:(id)arg2;	// IMP=0x0010000000020a0b
- (_Bool)isBeforeDate:(id)arg1;	// IMP=0x00100000000209e9
- (_Bool)isAfterDate:(id)arg1;	// IMP=0x00100000000209c7
- (id)roundToCurrentYearInCalendar:(id)arg1;	// IMP=0x00100000000207bc
- (id)roundToCurrentMonthInCalendar:(id)arg1;	// IMP=0x001000000002072d
- (id)roundToCurrentMondayInCalendar:(id)arg1;	// IMP=0x00100000000206a4
- (id)roundToCurrentWeekInCalendar:(id)arg1 withFirstWeekdayIndex:(long long)arg2;	// IMP=0x0010000000020622
- (id)roundToCurrentDayInCalendar:(id)arg1;	// IMP=0x0010000000020610
- (id)subtractOneSecondIfAt0InCalendar:(id)arg1;	// IMP=0x0010000000020519
- (id)roundUpOneSecondIfAt59InCalendar:(id)arg1;	// IMP=0x0010000000020421
- (id)roundSecondsAndMinutesUpInCalendar:(id)arg1;	// IMP=0x0010000000020335
- (id)roundSecondsAndMinutesDownInCalendar:(id)arg1;	// IMP=0x0010000000020279
- (id)roundSecondsDownInCalendar:(id)arg1;	// IMP=0x00100000000201cc
- (id)CalDateByComponentwiseAddingComponents:(id)arg1 inCalendar:(id)arg2;	// IMP=0x001000000001fc65
- (id)CalDateByComponentwiseAddingHours:(long long)arg1 inCalendar:(id)arg2;	// IMP=0x001000000001fbad
- (id)CalDateByComponentwiseAddingMinutes:(long long)arg1 inCalendar:(id)arg2;	// IMP=0x001000000001faf5
- (id)CalDateByComponentwiseAddingSeconds:(long long)arg1 inCalendar:(id)arg2;	// IMP=0x001000000001fa3d
- (id)dateByAddingYears:(long long)arg1 inCalendar:(id)arg2;	// IMP=0x001000000001f996
- (id)dateByAddingMonths:(long long)arg1 inCalendar:(id)arg2;	// IMP=0x001000000001f8ef
- (id)dateByAddingWeeks:(long long)arg1 inCalendar:(id)arg2;	// IMP=0x001000000001f848
- (id)dateByAddingDays:(long long)arg1 inCalendar:(id)arg2;	// IMP=0x001000000001f7a1
- (id)dateByAddingHours:(long long)arg1 inCalendar:(id)arg2;	// IMP=0x001000000001f6fa
- (id)dateByAddingMinutes:(long long)arg1 inCalendar:(id)arg2;	// IMP=0x001000000001f653
- (id)dateRemovingTimeComponentsInCalendar:(id)arg1;	// IMP=0x001000000001f5b5
- (long long)secondInCalendar:(id)arg1;	// IMP=0x001000000001f508
- (long long)minuteInCalendar:(id)arg1;	// IMP=0x001000000001f45b
- (long long)hourInCalendar:(id)arg1;	// IMP=0x001000000001f3ae
- (long long)weekdayInCalendar:(id)arg1;	// IMP=0x001000000001f301
- (long long)dayInCalendar:(id)arg1;	// IMP=0x001000000001f254
- (long long)weekInCalendar:(id)arg1;	// IMP=0x001000000001f1a7
- (long long)monthInCalendar:(id)arg1;	// IMP=0x001000000001f0fa
- (long long)yearInCalendar:(id)arg1;	// IMP=0x001000000001f04d
- (id)dateOnlyByTranslatingFrom:(id)arg1 toCalendar:(id)arg2;	// IMP=0x001000000001ef27
- (id)timeOnlyComponentsInCalendar:(id)arg1;	// IMP=0x001000000001ee9b
- (id)dateOnlyComponentsInCalendar:(id)arg1;	// IMP=0x001000000001ee0f
- (id)allComponentsInCalendar:(id)arg1;	// IMP=0x001000000001ed81
- (id)toISO8601String;	// IMP=0x001000000001ec9b
- (id)dateBySubtractingCalSimulatedOffset;	// IMP=0x001000000001e7c6
- (id)dateByAddingCalSimulatedOffset;	// IMP=0x001000000001e756
- (_Bool)CalIsAfterOrSameAsDate:(id)arg1;	// IMP=0x0010000000003887
- (_Bool)CalIsAfterDate:(id)arg1;	// IMP=0x001000000000615f
- (_Bool)CalIsBeforeOrSameAsDate:(id)arg1;	// IMP=0x0010000000003863
- (_Bool)CalIsBeforeDate:(id)arg1;	// IMP=0x0010000000005df9
- (_Bool)CalIsBetweenStartDate:(id)arg1 endDate:(id)arg2;	// IMP=0x001000000000f254
- (id)ek_ios_dateForEndOfDayInTimeZone:(id)arg1;	// IMP=0x001000000001e5b1
- (id)dateForDayInTimeZone:(id)arg1;	// IMP=0x001000000001e559
- (id)components:(unsigned long long)arg1 forDayInTimeZone:(id)arg2;	// IMP=0x001000000001e481
- (id)dateInTimeZone:(id)arg1 fromTimeZone:(id)arg2;	// IMP=0x001000000001e327
- (id)localizedStringWithFormat:(id)arg1 timeZone:(id)arg2;	// IMP=0x0010000000044d02
- (id)localizedStringWithFormat:(id)arg1;	// IMP=0x0010000000044c75
@end

