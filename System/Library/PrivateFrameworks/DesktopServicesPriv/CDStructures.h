//
//     Generated by classdump-c 4.2.0 (64 bit) (iOS port by DreamDevLost, Updated by Kevin Bradley.)(Debug version compiled Dec 27 2024 14:18:54).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

@class FINode, NSObject;

#pragma mark Blocks

typedef void (^CDUnknownBlockType)(void); // return type and parameters are unknown

#pragma mark Named Structures

struct Blob {
    unsigned int capacity;
    unsigned int length;
    char *buffer;
};

struct DestinationSpaceNeeds {
    long long _field1;
    long long _field2;
    long long _field3;
    long long _field4;
    long long _field5;
    long long _field6;
    long long _field7;
    long long _field8;
    long long _field9;
    long long _field10;
    long long _field11;
    long long _field12;
    long long _field13;
    char _field14[1024];
    char _field15[1024];
    long long _field16;
    unsigned long long _field17;
    _Bool _field18;
    unsigned int _field19;
    int _field20;
};

struct Point {
    short v;
    short h;
};

struct TDSMutex {
    struct _opaque_pthread_mutex_t fMutex;
};

struct TDSNotifier;

struct TKeyValueObserver;

struct TNodeEvent {
    unsigned int fEventKind;
    FINode *fFINode;
    unsigned int fProperty;
    struct TPropertyValue fPropertyValue;
    struct shared_ptr<TNodeTask> fTask;
    struct TRef<TDSNotifier *, TRetainReleasePolicy<TDSNotifier *>> fNotifier;
};

struct TNodePtr {
    FINode *fFINode;
};

struct TNodeTask;

struct TPropertyValue {
    struct variant<std::monostate, bool, unsigned char, short, int, long long, unsigned int, double, Point, Blob, NSObject *, TString, TRef<const __CFString *>, TRef<const __CFNumber *>, TRef<const __CFData *>, TRef<const __CFDictionary *>, TRef<const __CFURL *>, TRef<const __CFArray *>, TRef<__CFFileSecurity *>, TRef<TReferenceCounted *>, Property, NodeRequestOptions, NodeDSStoreStatus, DSBladeRunnerFlags> fData;
};

struct TRef<TDSNotifier *, TRetainReleasePolicy<TDSNotifier *>> {
    struct TDSNotifier *fRef;
};

struct TRef<TReferenceCounted *, TRetainReleasePolicy<TReferenceCounted *>> {
    struct TReferenceCounted *fRef;
};

struct TRef<__CFFileSecurity *, TRetainReleasePolicy<CFFileSecurityRef>> {
    struct __CFFileSecurity *fRef;
};

struct TRef<const __CFArray *, TRetainReleasePolicy<CFArrayRef>> {
    struct __CFArray *fRef;
};

struct TRef<const __CFData *, TRetainReleasePolicy<CFDataRef>> {
    struct __CFData *fRef;
};

struct TRef<const __CFDictionary *, TRetainReleasePolicy<CFDictionaryRef>> {
    struct __CFDictionary *fRef;
};

struct TRef<const __CFNumber *, TRetainReleasePolicy<CFNumberRef>> {
    struct __CFNumber *fRef;
};

struct TRef<const __CFString *, TRetainReleasePolicy<CFStringRef>> {
    struct __CFString *fRef;
};

struct TRef<const __CFURL *, TRetainReleasePolicy<CFURLRef>> {
    struct __CFURL *fRef;
};

struct TReferenceCounted;

struct TSizerOutput {
    long long _field1;
    long long _field2;
    long long _field3;
    long long _field4;
    long long _field5;
    long long _field6;
    long long _field7;
    long long _field8;
    long long _field9;
    long long _field10;
    long long _field11;
    long long _field12;
    long long _field13;
    long long _field14;
    struct TString _field15;
    struct TString _field16;
    long long _field17;
    unsigned long long _field18;
    unsigned int _field19;
    _Bool _field20;
    _Bool _field21;
    _Bool _field22;
    _Bool _field23;
    _Bool _field24;
};

struct TString {
    struct TRef<const __CFString *, TRetainReleasePolicy<CFStringRef>> fString;
};

struct _opaque_pthread_mutex_t {
    long long __sig;
    char __opaque[56];
};

struct equal_to<NSObject *>;

struct equal_to<NSObject *__unsafe_unretained> {
    struct equal_to<NSObject *> fEqual;
};

struct function<void ()> {
    struct __value_func<void ()> {
        struct type __buf_;
        void *__f_;
    } __f_;
};

struct function<void (NSDictionary<NSString *, NSObject *>*)> {
    struct __value_func<void (NSDictionary<NSString *, NSObject *>*)> {
        struct type __buf_;
        void *__f_;
    } __f_;
};

struct hash<NSObject *>;

struct hash<NSObject *__unsafe_unretained> {
    struct hash<NSObject *> fHash;
};

struct monostate;

struct mutex {
    struct _opaque_pthread_mutex_t __m_;
};

struct pair<FINode *, FINode *> {
    id _field1;
    id _field2;
};

struct shared_ptr<TNodeTask> {
    struct TNodeTask *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct type {
    unsigned char __lx[32];
};

struct unique_ptr<std::__hash_node_base<std::__hash_node<NSObject *__unsafe_unretained, void *>*>*[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<NSObject *__unsafe_unretained, void *>*>*>>> {
    struct __compressed_pair<std::__hash_node_base<std::__hash_node<NSObject *__unsafe_unretained, void *>*>**, std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<NSObject *__unsafe_unretained, void *>*>*>>> {
        void **__value_;
        struct __bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<NSObject *__unsafe_unretained, void *>*>*>> {
            struct __compressed_pair<unsigned long, std::allocator<std::__hash_node_base<std::__hash_node<NSObject *__unsafe_unretained, void *>*>*>> {
                unsigned long long __value_;
            } __data_;
        } __value_;
    } __ptr_;
};

struct unordered_set<NSObject *__unsafe_unretained, std::hash<NSObject *__unsafe_unretained>, std::equal_to<NSObject *__unsafe_unretained>, std::allocator<NSObject *__unsafe_unretained>> {
    struct __hash_table<NSObject *__unsafe_unretained, std::hash<NSObject *__unsafe_unretained>, std::equal_to<NSObject *__unsafe_unretained>, std::allocator<NSObject *__unsafe_unretained>> {
        struct unique_ptr<std::__hash_node_base<std::__hash_node<NSObject *__unsafe_unretained, void *>*>*[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<NSObject *__unsafe_unretained, void *>*>*>>> __bucket_list_;
        struct __compressed_pair<std::__hash_node_base<std::__hash_node<NSObject *__unsafe_unretained, void *>*>, std::allocator<std::__hash_node<NSObject *__unsafe_unretained, void *>>> {
            struct __hash_node_base<std::__hash_node<NSObject *__unsafe_unretained, void *>*> {
                void *__next_;
            } __value_;
        } __p1_;
        struct __compressed_pair<unsigned long, std::hash<NSObject *__unsafe_unretained>> {
            unsigned long long __value_;
            struct hash<NSObject *__unsafe_unretained> __value_;
        } __p2_;
        struct __compressed_pair<float, std::equal_to<NSObject *__unsafe_unretained>> {
            float __value_;
            struct equal_to<NSObject *__unsafe_unretained> __value_;
        } __p3_;
    } __table_;
};

struct variant<std::monostate, bool, unsigned char, short, int, long long, unsigned int, double, Point, Blob, NSObject *, TString, TRef<const __CFString *>, TRef<const __CFNumber *>, TRef<const __CFData *>, TRef<const __CFDictionary *>, TRef<const __CFURL *>, TRef<const __CFArray *>, TRef<__CFFileSecurity *>, TRef<TReferenceCounted *>, Property, NodeRequestOptions, NodeDSStoreStatus, DSBladeRunnerFlags> {
    struct __impl<std::monostate, bool, unsigned char, short, int, long long, unsigned int, double, Point, Blob, NSObject *, TString, TRef<const __CFString *>, TRef<const __CFNumber *>, TRef<const __CFData *>, TRef<const __CFDictionary *>, TRef<const __CFURL *>, TRef<const __CFArray *>, TRef<__CFFileSecurity *>, TRef<TReferenceCounted *>, Property, NodeRequestOptions, NodeDSStoreStatus, DSBladeRunnerFlags> {
        union __union<std::__variant_detail::_Trait::_Available, 0UL, std::monostate, bool, unsigned char, short, int, long long, unsigned int, double, Point, Blob, NSObject *, TString, TRef<const __CFString *>, TRef<const __CFNumber *>, TRef<const __CFData *>, TRef<const __CFDictionary *>, TRef<const __CFURL *>, TRef<const __CFArray *>, TRef<__CFFileSecurity *>, TRef<TReferenceCounted *>, Property, NodeRequestOptions, NodeDSStoreStatus, DSBladeRunnerFlags> {
            char __dummy;
            struct __alt<0UL, std::monostate> {
                struct monostate __value;
            } __head;
            union __union<std::__variant_detail::_Trait::_Available, 1UL, bool, unsigned char, short, int, long long, unsigned int, double, Point, Blob, NSObject *, TString, TRef<const __CFString *>, TRef<const __CFNumber *>, TRef<const __CFData *>, TRef<const __CFDictionary *>, TRef<const __CFURL *>, TRef<const __CFArray *>, TRef<__CFFileSecurity *>, TRef<TReferenceCounted *>, Property, NodeRequestOptions, NodeDSStoreStatus, DSBladeRunnerFlags> {
                char __dummy;
                struct __alt<1UL, bool> {
                    _Bool __value;
                } __head;
                union __union<std::__variant_detail::_Trait::_Available, 2UL, unsigned char, short, int, long long, unsigned int, double, Point, Blob, NSObject *, TString, TRef<const __CFString *>, TRef<const __CFNumber *>, TRef<const __CFData *>, TRef<const __CFDictionary *>, TRef<const __CFURL *>, TRef<const __CFArray *>, TRef<__CFFileSecurity *>, TRef<TReferenceCounted *>, Property, NodeRequestOptions, NodeDSStoreStatus, DSBladeRunnerFlags> {
                    char __dummy;
                    struct __alt<2UL, unsigned char> {
                        unsigned char __value;
                    } __head;
                    union __union<std::__variant_detail::_Trait::_Available, 3UL, short, int, long long, unsigned int, double, Point, Blob, NSObject *, TString, TRef<const __CFString *>, TRef<const __CFNumber *>, TRef<const __CFData *>, TRef<const __CFDictionary *>, TRef<const __CFURL *>, TRef<const __CFArray *>, TRef<__CFFileSecurity *>, TRef<TReferenceCounted *>, Property, NodeRequestOptions, NodeDSStoreStatus, DSBladeRunnerFlags> {
                        char __dummy;
                        struct __alt<3UL, short> {
                            short __value;
                        } __head;
                        union __union<std::__variant_detail::_Trait::_Available, 4UL, int, long long, unsigned int, double, Point, Blob, NSObject *, TString, TRef<const __CFString *>, TRef<const __CFNumber *>, TRef<const __CFData *>, TRef<const __CFDictionary *>, TRef<const __CFURL *>, TRef<const __CFArray *>, TRef<__CFFileSecurity *>, TRef<TReferenceCounted *>, Property, NodeRequestOptions, NodeDSStoreStatus, DSBladeRunnerFlags> {
                            char __dummy;
                            struct __alt<4UL, int> {
                                int __value;
                            } __head;
                            union __union<std::__variant_detail::_Trait::_Available, 5UL, long long, unsigned int, double, Point, Blob, NSObject *, TString, TRef<const __CFString *>, TRef<const __CFNumber *>, TRef<const __CFData *>, TRef<const __CFDictionary *>, TRef<const __CFURL *>, TRef<const __CFArray *>, TRef<__CFFileSecurity *>, TRef<TReferenceCounted *>, Property, NodeRequestOptions, NodeDSStoreStatus, DSBladeRunnerFlags> {
                                char __dummy;
                                struct __alt<5UL, long long> {
                                    long long __value;
                                } __head;
                                union __union<std::__variant_detail::_Trait::_Available, 6UL, unsigned int, double, Point, Blob, NSObject *, TString, TRef<const __CFString *>, TRef<const __CFNumber *>, TRef<const __CFData *>, TRef<const __CFDictionary *>, TRef<const __CFURL *>, TRef<const __CFArray *>, TRef<__CFFileSecurity *>, TRef<TReferenceCounted *>, Property, NodeRequestOptions, NodeDSStoreStatus, DSBladeRunnerFlags> {
                                    char __dummy;
                                    struct __alt<6UL, unsigned int> {
                                        unsigned int __value;
                                    } __head;
                                    union __union<std::__variant_detail::_Trait::_Available, 7UL, double, Point, Blob, NSObject *, TString, TRef<const __CFString *>, TRef<const __CFNumber *>, TRef<const __CFData *>, TRef<const __CFDictionary *>, TRef<const __CFURL *>, TRef<const __CFArray *>, TRef<__CFFileSecurity *>, TRef<TReferenceCounted *>, Property, NodeRequestOptions, NodeDSStoreStatus, DSBladeRunnerFlags> {
                                        char __dummy;
                                        struct __alt<7UL, double> {
                                            double __value;
                                        } __head;
                                        union __union<std::__variant_detail::_Trait::_Available, 8UL, Point, Blob, NSObject *, TString, TRef<const __CFString *>, TRef<const __CFNumber *>, TRef<const __CFData *>, TRef<const __CFDictionary *>, TRef<const __CFURL *>, TRef<const __CFArray *>, TRef<__CFFileSecurity *>, TRef<TReferenceCounted *>, Property, NodeRequestOptions, NodeDSStoreStatus, DSBladeRunnerFlags> {
                                            char __dummy;
                                            struct __alt<8UL, Point> {
                                                struct Point __value;
                                            } __head;
                                            union __union<std::__variant_detail::_Trait::_Available, 9UL, Blob, NSObject *, TString, TRef<const __CFString *>, TRef<const __CFNumber *>, TRef<const __CFData *>, TRef<const __CFDictionary *>, TRef<const __CFURL *>, TRef<const __CFArray *>, TRef<__CFFileSecurity *>, TRef<TReferenceCounted *>, Property, NodeRequestOptions, NodeDSStoreStatus, DSBladeRunnerFlags> {
                                                char __dummy;
                                                struct __alt<9UL, Blob> {
                                                    struct Blob __value;
                                                } __head;
                                                union __union<std::__variant_detail::_Trait::_Available, 10UL, NSObject *, TString, TRef<const __CFString *>, TRef<const __CFNumber *>, TRef<const __CFData *>, TRef<const __CFDictionary *>, TRef<const __CFURL *>, TRef<const __CFArray *>, TRef<__CFFileSecurity *>, TRef<TReferenceCounted *>, Property, NodeRequestOptions, NodeDSStoreStatus, DSBladeRunnerFlags> {
                                                    char __dummy;
                                                    struct __alt<10UL, NSObject *> {
                                                        NSObject *__value;
                                                    } __head;
                                                    union __union<std::__variant_detail::_Trait::_Available, 11UL, TString, TRef<const __CFString *>, TRef<const __CFNumber *>, TRef<const __CFData *>, TRef<const __CFDictionary *>, TRef<const __CFURL *>, TRef<const __CFArray *>, TRef<__CFFileSecurity *>, TRef<TReferenceCounted *>, Property, NodeRequestOptions, NodeDSStoreStatus, DSBladeRunnerFlags> {
                                                        char __dummy;
                                                        struct __alt<11UL, TString> {
                                                            struct TString __value;
                                                        } __head;
                                                        union __union<std::__variant_detail::_Trait::_Available, 12UL, TRef<const __CFString *>, TRef<const __CFNumber *>, TRef<const __CFData *>, TRef<const __CFDictionary *>, TRef<const __CFURL *>, TRef<const __CFArray *>, TRef<__CFFileSecurity *>, TRef<TReferenceCounted *>, Property, NodeRequestOptions, NodeDSStoreStatus, DSBladeRunnerFlags> {
                                                            char __dummy;
                                                            struct __alt<12UL, TRef<const __CFString *>> {
                                                                struct TRef<const __CFString *, TRetainReleasePolicy<CFStringRef>> __value;
                                                            } __head;
                                                            union __union<std::__variant_detail::_Trait::_Available, 13UL, TRef<const __CFNumber *>, TRef<const __CFData *>, TRef<const __CFDictionary *>, TRef<const __CFURL *>, TRef<const __CFArray *>, TRef<__CFFileSecurity *>, TRef<TReferenceCounted *>, Property, NodeRequestOptions, NodeDSStoreStatus, DSBladeRunnerFlags> {
                                                                char __dummy;
                                                                struct __alt<13UL, TRef<const __CFNumber *>> {
                                                                    struct TRef<const __CFNumber *, TRetainReleasePolicy<CFNumberRef>> __value;
                                                                } __head;
                                                                union __union<std::__variant_detail::_Trait::_Available, 14UL, TRef<const __CFData *>, TRef<const __CFDictionary *>, TRef<const __CFURL *>, TRef<const __CFArray *>, TRef<__CFFileSecurity *>, TRef<TReferenceCounted *>, Property, NodeRequestOptions, NodeDSStoreStatus, DSBladeRunnerFlags> {
                                                                    char __dummy;
                                                                    struct __alt<14UL, TRef<const __CFData *>> {
                                                                        struct TRef<const __CFData *, TRetainReleasePolicy<CFDataRef>> __value;
                                                                    } __head;
                                                                    union __union<std::__variant_detail::_Trait::_Available, 15UL, TRef<const __CFDictionary *>, TRef<const __CFURL *>, TRef<const __CFArray *>, TRef<__CFFileSecurity *>, TRef<TReferenceCounted *>, Property, NodeRequestOptions, NodeDSStoreStatus, DSBladeRunnerFlags> {
                                                                        char __dummy;
                                                                        struct __alt<15UL, TRef<const __CFDictionary *>> {
                                                                            struct TRef<const __CFDictionary *, TRetainReleasePolicy<CFDictionaryRef>> __value;
                                                                        } __head;
                                                                        union __union<std::__variant_detail::_Trait::_Available, 16UL, TRef<const __CFURL *>, TRef<const __CFArray *>, TRef<__CFFileSecurity *>, TRef<TReferenceCounted *>, Property, NodeRequestOptions, NodeDSStoreStatus, DSBladeRunnerFlags> {
                                                                            char __dummy;
                                                                            struct __alt<16UL, TRef<const __CFURL *>> {
                                                                                struct TRef<const __CFURL *, TRetainReleasePolicy<CFURLRef>> __value;
                                                                            } __head;
                                                                            union __union<std::__variant_detail::_Trait::_Available, 17UL, TRef<const __CFArray *>, TRef<__CFFileSecurity *>, TRef<TReferenceCounted *>, Property, NodeRequestOptions, NodeDSStoreStatus, DSBladeRunnerFlags> {
                                                                                char __dummy;
                                                                                struct __alt<17UL, TRef<const __CFArray *>> {
                                                                                    struct TRef<const __CFArray *, TRetainReleasePolicy<CFArrayRef>> __value;
                                                                                } __head;
                                                                                union __union<std::__variant_detail::_Trait::_Available, 18UL, TRef<__CFFileSecurity *>, TRef<TReferenceCounted *>, Property, NodeRequestOptions, NodeDSStoreStatus, DSBladeRunnerFlags> {
                                                                                    char __dummy;
                                                                                    struct __alt<18UL, TRef<__CFFileSecurity *>> {
                                                                                        struct TRef<__CFFileSecurity *, TRetainReleasePolicy<CFFileSecurityRef>> __value;
                                                                                    } __head;
                                                                                    union __union<std::__variant_detail::_Trait::_Available, 19UL, TRef<TReferenceCounted *>, Property, NodeRequestOptions, NodeDSStoreStatus, DSBladeRunnerFlags> {
                                                                                        char __dummy;
                                                                                        struct __alt<19UL, TRef<TReferenceCounted *>> {
                                                                                            struct TRef<TReferenceCounted *, TRetainReleasePolicy<TReferenceCounted *>> __value;
                                                                                        } __head;
                                                                                        union __union<std::__variant_detail::_Trait::_Available, 20UL, Property, NodeRequestOptions, NodeDSStoreStatus, DSBladeRunnerFlags> {
                                                                                            char __dummy;
                                                                                            struct __alt<20UL, Property> {
                                                                                                unsigned int __value;
                                                                                            } __head;
                                                                                            union __union<std::__variant_detail::_Trait::_Available, 21UL, NodeRequestOptions, NodeDSStoreStatus, DSBladeRunnerFlags> {
                                                                                                char __dummy;
                                                                                                struct __alt<21UL, NodeRequestOptions> {
                                                                                                    unsigned int __value;
                                                                                                } __head;
                                                                                                union __union<std::__variant_detail::_Trait::_Available, 22UL, NodeDSStoreStatus, DSBladeRunnerFlags> {
                                                                                                    char __dummy;
                                                                                                    struct __alt<22UL, NodeDSStoreStatus> {
                                                                                                        unsigned int __value;
                                                                                                    } __head;
                                                                                                    union __union<std::__variant_detail::_Trait::_Available, 23UL, DSBladeRunnerFlags> {
                                                                                                        char __dummy;
                                                                                                        struct __alt<23UL, DSBladeRunnerFlags> {
                                                                                                            unsigned int __value;
                                                                                                        } __head;
                                                                                                        union __union<std::__variant_detail::_Trait::_Available, 24UL> __tail;
                                                                                                    } __tail;
                                                                                                } __tail;
                                                                                            } __tail;
                                                                                        } __tail;
                                                                                    } __tail;
                                                                                } __tail;
                                                                            } __tail;
                                                                        } __tail;
                                                                    } __tail;
                                                                } __tail;
                                                            } __tail;
                                                        } __tail;
                                                    } __tail;
                                                } __tail;
                                            } __tail;
                                        } __tail;
                                    } __tail;
                                } __tail;
                            } __tail;
                        } __tail;
                    } __tail;
                } __tail;
            } __tail;
        } __data;
        unsigned int __index;
    } __impl_;
};

struct vector<NSObject<FINodeIterator>*, std::allocator<NSObject<FINodeIterator>*>> {
    id *__begin_;
    id *__end_;
    struct __compressed_pair<NSObject<FINodeIterator>*__strong *, std::allocator<NSObject<FINodeIterator>*>> {
        id *__value_;
    } __end_cap_;
};

struct vector<TKeyValueObserver, std::allocator<TKeyValueObserver>> {
    struct TKeyValueObserver *__begin_;
    struct TKeyValueObserver *__end_;
    struct __compressed_pair<TKeyValueObserver *, std::allocator<TKeyValueObserver>> {
        struct TKeyValueObserver *__value_;
    } __end_cap_;
};

#pragma mark Typedef'd Structures

// Template types
typedef struct pair<FINode *, FINode *> {
    id _field1;
    id _field2;
} pair_b0b1a2a1;

