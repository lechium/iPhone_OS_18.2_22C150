//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

@class MISSING_TYPE, NRLocalPropertyMonitor, NRMutableDevice, NRRemoteObjectClassC, NSError, NSLock, NSMutableArray, NSNumber, NSObject, NSString, NSUUID, NSXPCConnection, NSXPCListener;
@protocol OS_dispatch_queue;

@interface NRPairingDaemon
{
    _Bool _initRemoteProperties;	// 8 = 0x8
    _Bool _isPairingOrUnpairing;	// 9 = 0x9
    _Bool _mirrorOfIsPaired;	// 10 = 0xa
    unsigned int _xpcTransactionHasBegun;	// 12 = 0xc
    int _idsSwitchRetryCounter;	// 16 = 0x10
    int _syncAdviceNotifyToken;	// 20 = 0x14
    NSMutableArray *_xpcClients;	// 24 = 0x18
    MISSING_TYPE *_xpcListener;	// 32 = 0x20
    NSXPCConnection *_xpcLaunchDConnection;	// 40 = 0x28
    NRLocalPropertyMonitor *_localProperties;	// 48 = 0x30
    NSLock *_xpcTransactionTimerLock;	// 56 = 0x38
    NRRemoteObjectClassC *_idsServiceClassC;	// 64 = 0x40
    long long _maxPairingCompatibilityVersion;	// 72 = 0x48
    long long _minPairingCompatibilityVersion;	// 80 = 0x50
    NSError *_switchCompletionBlockError;	// 88 = 0x58
    NSNumber *_lastDaemonState;	// 96 = 0x60
    NRMutableDevice *_mirrorOfActiveDevice;	// 104 = 0x68
    NSUUID *_mirrorOfActiveDeviceID;	// 112 = 0x70
}

+ (id)sharedInstance;	// IMP=0x002000000000eac9
+ (void)updateActiveFlag:(_Bool)arg1;	// IMP=0x0010000000008ac6
+ (Class)proxyClass;	// IMP=0x00100000000088a8
- (void).cxx_destruct;	// IMP=0x0020000000012bb1
@property(nonatomic) _Bool mirrorOfIsPaired; // @synthesize mirrorOfIsPaired=_mirrorOfIsPaired;
@property(retain, nonatomic) NSUUID *mirrorOfActiveDeviceID; // @synthesize mirrorOfActiveDeviceID=_mirrorOfActiveDeviceID;
@property(retain, nonatomic) NRMutableDevice *mirrorOfActiveDevice; // @synthesize mirrorOfActiveDevice=_mirrorOfActiveDevice;
@property(nonatomic) int syncAdviceNotifyToken; // @synthesize syncAdviceNotifyToken=_syncAdviceNotifyToken;
@property(nonatomic) _Bool isPairingOrUnpairing; // @synthesize isPairingOrUnpairing=_isPairingOrUnpairing;
@property(retain, nonatomic) NSNumber *lastDaemonState; // @synthesize lastDaemonState=_lastDaemonState;
@property(nonatomic) int idsSwitchRetryCounter; // @synthesize idsSwitchRetryCounter=_idsSwitchRetryCounter;
@property(retain, nonatomic) NSError *switchCompletionBlockError; // @synthesize switchCompletionBlockError=_switchCompletionBlockError;
@property(nonatomic) long long minPairingCompatibilityVersion; // @synthesize minPairingCompatibilityVersion=_minPairingCompatibilityVersion;
@property(nonatomic) long long maxPairingCompatibilityVersion; // @synthesize maxPairingCompatibilityVersion=_maxPairingCompatibilityVersion;
@property(nonatomic) _Bool initRemoteProperties; // @synthesize initRemoteProperties=_initRemoteProperties;
@property(retain, nonatomic) NRRemoteObjectClassC *idsServiceClassC; // @synthesize idsServiceClassC=_idsServiceClassC;
@property(nonatomic) unsigned int xpcTransactionHasBegun; // @synthesize xpcTransactionHasBegun=_xpcTransactionHasBegun;
@property(retain, nonatomic) NSLock *xpcTransactionTimerLock; // @synthesize xpcTransactionTimerLock=_xpcTransactionTimerLock;
@property(retain, nonatomic) NRLocalPropertyMonitor *localProperties; // @synthesize localProperties=_localProperties;
@property(retain, nonatomic) NSXPCConnection *xpcLaunchDConnection; // @synthesize xpcLaunchDConnection=_xpcLaunchDConnection;
@property(retain, nonatomic) NSXPCListener *xpcListener; // @synthesize xpcListener=_xpcListener;
@property(retain, nonatomic) NSMutableArray *xpcClients; // @synthesize xpcClients=_xpcClients;
- (void)xpcUpdateWatchBuddyStage:(unsigned int)arg1 forPairingID:(id)arg2;	// IMP=0x0010000000012935
- (void)xpcWatchNeedsGraduation:(CDUnknownBlockType)arg1;	// IMP=0x001000000001292f
- (void)xpcSetWatchNeedsGraduation:(CDUnknownBlockType)arg1;	// IMP=0x0010000000012929
- (void)xpcClearWatchNeedsGraduation:(CDUnknownBlockType)arg1;	// IMP=0x0010000000012923
- (void)xpcBooleanForInternalPreference:(id)arg1 withBlock:(CDUnknownBlockType)arg2;	// IMP=0x00100000000128f4
- (void)xpcLongForInternalPreference:(id)arg1 withBlock:(CDUnknownBlockType)arg2;	// IMP=0x00100000000128c5
- (void)xpcSwitchIndex:(CDUnknownBlockType)arg1;	// IMP=0x0010000000012896
- (void)xpcWatchBuddyCompletedSetupSteps:(CDUnknownBlockType)arg1;	// IMP=0x0010000000012880
- (void)xpcPairingClientSetPairingParentName:(id)arg1 pairingParentAltDSID:(id)arg2 forPairingID:(id)arg3 completion:(CDUnknownBlockType)arg4;	// IMP=0x001000000001286a
- (void)xpcPairingClientSetAltAccountName:(id)arg1 altDSID:(id)arg2 forPairingID:(id)arg3 completion:(CDUnknownBlockType)arg4;	// IMP=0x0010000000012854
- (void)xpcIsAssertionActive:(id)arg1 withCompletion:(CDUnknownBlockType)arg2;	// IMP=0x001000000001283c
- (void)xpcGetInitialSyncCompletedForPairingID:(id)arg1 completion:(CDUnknownBlockType)arg2;	// IMP=0x0010000000012824
- (void)xpcGetMigrationCountForPairingID:(id)arg1 completion:(CDUnknownBlockType)arg2;	// IMP=0x001000000001280c
- (void)xpcGetLastSwitchIndex:(CDUnknownBlockType)arg1;	// IMP=0x00100000000127f4
- (void)xpcIsPhoneReadyToMigrateDevice:(id)arg1 withCompletion:(CDUnknownBlockType)arg2;	// IMP=0x00100000000127e2
- (void)xpcClearRecoveryFlagWithCompletion:(CDUnknownBlockType)arg1;	// IMP=0x0010000000012790
- (void)xpcTriggerTailspinFrom:(unsigned long long)arg1 forApp:(id)arg2;	// IMP=0x001000000001278a
- (void)xpcFakePairedSyncIsCompleteWithCompletion:(CDUnknownBlockType)arg1;	// IMP=0x0010000000012738
- (void)xpcCheckIfFlaggedForRecoveryWithCompletion:(CDUnknownBlockType)arg1;	// IMP=0x0010000000012720
- (void)xpcSetMigrationConsented:(_Bool)arg1 forDeviceID:(id)arg2 withBlock:(CDUnknownBlockType)arg3;	// IMP=0x00100000000126f1
- (void)xpcRetrieveSecureProperties:(id)arg1 block:(CDUnknownBlockType)arg2;	// IMP=0x00100000000126c2
- (void)xpcGetDiffSinceTokenValue:(unsigned long long)arg1 getSecureProperties:(_Bool)arg2 withBlock:(CDUnknownBlockType)arg3;	// IMP=0x0010000000012693
- (void)xpcGetDeviceCollectionWithBlock:(CDUnknownBlockType)arg1;	// IMP=0x0010000000012664
- (void)xpcGetChangeHistoryWithBlock:(CDUnknownBlockType)arg1;	// IMP=0x0010000000012635
- (void)xpcDeviceIDAtSwitchIndex:(unsigned int)arg1 withBlock:(CDUnknownBlockType)arg2;	// IMP=0x0010000000012606
- (void)xpcClientInfo:(CDUnknownBlockType)arg1;	// IMP=0x00100000000125d7
- (void)xpcApplyDiff:(id)arg1 withSecureProperties:(id)arg2 block:(CDUnknownBlockType)arg3;	// IMP=0x00100000000125a8
@property(readonly, nonatomic) NSObject<OS_dispatch_queue> *pairingQueue;
- (void)child:(id)arg1 didApplyDiff:(id)arg2;	// IMP=0x001000000001254b
- (_Bool)setPairingClientCrashMonitoringCache:(_Bool)arg1 proxy:(id)arg2;	// IMP=0x0010000000012543
- (void)proxyWillInvalidateSwitchAssertion:(id)arg1;	// IMP=0x001000000001253d
- (void)proxyWillTakeSwitchAssertion:(id)arg1;	// IMP=0x0010000000012537
- (void)proxyWillEndPushing:(id)arg1;	// IMP=0x0010000000012531
- (void)proxyWillEndDiscovering:(id)arg1;	// IMP=0x001000000001252b
- (void)proxyWillEndAdvertising:(id)arg1;	// IMP=0x0010000000012525
- (void)proxyWillBeginUnpairing:(id)arg1;	// IMP=0x001000000001251f
- (void)proxyWillBeginPushing:(id)arg1;	// IMP=0x0010000000012519
- (void)proxyWillBeginPairing:(id)arg1;	// IMP=0x0010000000012513
- (void)proxyWillBeginDiscovering:(id)arg1;	// IMP=0x001000000001250d
- (void)proxyWillBeginAdvertising:(id)arg1;	// IMP=0x0010000000012507
- (void)proxyWillAbortPairing:(id)arg1;	// IMP=0x0010000000012501
- (void)proxyRequestsSuspensionOfCrashMonitoring:(id)arg1;	// IMP=0x00100000000124fb
- (void)proxyRequestsResumptionOfCrashMonitoring:(id)arg1;	// IMP=0x00100000000124f5
- (void)remoteObject:(id)arg1 receivedCheckTermsEvent:(id)arg2 fromIDSBTUUID:(id)arg3 responseBlock:(CDUnknownBlockType)arg4;	// IMP=0x00100000000124dd
- (void)remoteObject:(id)arg1 receivedAddTermsEvent:(id)arg2 fromIDSBTUUID:(id)arg3 responseBlock:(CDUnknownBlockType)arg4;	// IMP=0x00100000000124c7
- (void)remoteObject:(id)arg1 receivedPropertyRequestWithRequestIdentifier:(id)arg2 fromIDSBTUUID:(id)arg3;	// IMP=0x001000000001243b
- (void)remoteObject:(id)arg1 receivedPropertyChanges:(id)arg2 isAllProperties:(_Bool)arg3 fromIDSBTUUID:(id)arg4;	// IMP=0x0010000000011e0c
- (void)remoteObjectIDSServiceUnavailable:(id)arg1;	// IMP=0x0010000000011e06
- (void)remoteObjectIDSServiceAvailable:(id)arg1 withIDSDevice:(id)arg2;	// IMP=0x0010000000011e00
- (void)remoteObjectAllowedTrafficClassifiersDidReset:(id)arg1;	// IMP=0x0010000000011dfa
- (void)initIDSAsyncWithBlock:(CDUnknownBlockType)arg1 shouldConnect:(_Bool)arg2;	// IMP=0x00100000000119d9
- (void)connectIDSDuringPairing;	// IMP=0x00100000000118fb
- (_Bool)_xpcConnectToNanoRegistryLaunchDService;	// IMP=0x0010000000011785
- (void)notifyStateChangedWithBlock:(CDUnknownBlockType)arg1;	// IMP=0x0010000000011034
- (void)setActiveDeviceWithPairingID:(id)arg1 withBlock:(CDUnknownBlockType)arg2;	// IMP=0x0010000000010e44
- (void)setIsPairedAndIsSetup:(_Bool)arg1 withPairingID:(id)arg2 withBlock:(CDUnknownBlockType)arg3;	// IMP=0x0010000000010811
- (void)sendPropertyRequestWithTimeout:(id)arg1 toDeviceID:(id)arg2 withBlock:(CDUnknownBlockType)arg3;	// IMP=0x00100000000102bc
- (void)_updateDeviceID:(id)arg1 withProperties:(id)arg2 withBlock:(CDUnknownBlockType)arg3;	// IMP=0x001000000000fbff
- (void)idsSendProperties:(id)arg1 thisIsAllOfThem:(_Bool)arg2;	// IMP=0x001000000000f9f5
- (void)localMonitor:(id)arg1 propertiesDidChange:(id)arg2 thisIsAllOfThem:(_Bool)arg3;	// IMP=0x001000000000f9dd
- (void)deleteLocalPairingStore:(id)arg1 withBlock:(CDUnknownBlockType)arg2;	// IMP=0x001000000000f5b8
- (void)createLocalPairingStore:(id)arg1 andNotifyPairingBeginning:(_Bool)arg2 withBlock:(CDUnknownBlockType)arg3;	// IMP=0x001000000000f14c
- (void)createLocalPairingStore:(id)arg1 withBlock:(CDUnknownBlockType)arg2;	// IMP=0x001000000000f135
- (void)enableDaemonsWithBool:(_Bool)arg1 withBlock:(CDUnknownBlockType)arg2;	// IMP=0x001000000000ee82
- (void)pollProperties;	// IMP=0x001000000000ee70
- (void)refreshPropertyCache;	// IMP=0x001000000000ed5c
- (id)makeLocalPairingStorePairingID:(id)arg1;	// IMP=0x001000000000ec32
- (id)getLocalPairingStorePairingID:(id)arg1;	// IMP=0x001000000000eb4e
- (_Bool)isInternalInstall;	// IMP=0x001000000000eabf
- (void)normalizeDaemonStateWithBlock:(CDUnknownBlockType)arg1;	// IMP=0x001000000000e6f4
- (void)normalizeDaemonState;	// IMP=0x001000000000e596
- (unsigned long long)readNotifyToken:(int)arg1;	// IMP=0x001000000000e565
- (void)updateNotifyToken:(int)arg1 withValue:(unsigned long long)arg2 withNotificationName:(id)arg3;	// IMP=0x001000000000e3f4
- (int)getNotifyTokenWithName:(id)arg1;	// IMP=0x001000000000e2ec
- (void)initLocalProperties;	// IMP=0x001000000000e270
- (void)ackXPCEvents;	// IMP=0x001000000000e033
- (id)init;	// IMP=0x001000000000dd58
- (void)xpcWaitForWatchPairingExtendedMetadataForAdvertisedName:(id)arg1 completion:(CDUnknownBlockType)arg2;	// IMP=0x001000000000dd46
- (void)xpcUnpairWithDeviceID:(id)arg1 withOptions:(id)arg2 operationHasBegun:(CDUnknownBlockType)arg3;	// IMP=0x001000000000dd36
- (void)xpcTriggerVersion4Workaround;	// IMP=0x001000000000dd30
- (void)xpcSwitchActiveDeviceWithDeviceID:(id)arg1 withAssertionHandler:(CDUnknownBlockType)arg2;	// IMP=0x001000000000dd1e
- (void)xpcSwitchActiveDeviceWithDeviceID:(id)arg1 isMagicSwitch:(_Bool)arg2 operationHasCompleted:(CDUnknownBlockType)arg3;	// IMP=0x001000000000dd0e
- (void)xpcSuspendPairingClientCrashMonitoring:(CDUnknownBlockType)arg1;	// IMP=0x001000000000dd03
- (void)xpcSubmitServerRequestReportWithRequestType:(id)arg1 duration:(double)arg2 errorCode:(unsigned int)arg3 block:(CDUnknownBlockType)arg4;	// IMP=0x001000000000dcf8
- (void)xpcSubmitRTCPairingMetricForMetricID:(id)arg1 withSuccess:(CDUnknownBlockType)arg2;	// IMP=0x001000000000dc18
- (void)xpcSubmitAlbertPairingReport:(CDUnknownBlockType)arg1;	// IMP=0x001000000000dc0d
- (void)xpcStopWatchSetupPushWithBlock:(CDUnknownBlockType)arg1;	// IMP=0x001000000000dc02
- (void)xpcStartWatchSetupPushWithBlock:(CDUnknownBlockType)arg1;	// IMP=0x001000000000dbf7
- (void)xpcScanForMigratableWatchesWithBlock:(CDUnknownBlockType)arg1;	// IMP=0x001000000000dbec
- (void)xpcRetriggerUnpairInfoDialogWithBlock:(CDUnknownBlockType)arg1;	// IMP=0x001000000000dbe1
- (void)xpcResumePairingClientCrashMonitoring:(CDUnknownBlockType)arg1;	// IMP=0x001000000000dbd6
- (void)xpcPutMigrationChallengeCharacteristicWriteData:(id)arg1 completion:(CDUnknownBlockType)arg2;	// IMP=0x001000000000dbc6
- (void)xpcPingActiveGizmoWithPriority:(int)arg1 withMessageSize:(long long)arg2 withBlock:(CDUnknownBlockType)arg3;	// IMP=0x001000000000dbb0
- (void)xpcPairingShouldContinue;	// IMP=0x001000000000dbaa
- (void)xpcPairingClientDidEnterPhase:(id)arg1 withBlock:(CDUnknownBlockType)arg2;	// IMP=0x001000000000db9f
- (void)xpcNotifyPasscode:(id)arg1 withDeviceID:(id)arg2;	// IMP=0x001000000000db99
- (void)xpcNotifyActivationCompleted:(id)arg1 withSuccess:(_Bool)arg2;	// IMP=0x001000000000db93
- (void)xpcKeepPhoneUnlockedInternalTestSPI:(CDUnknownBlockType)arg1;	// IMP=0x001000000000db88
- (void)xpcInvalidateSwitchAssertionWithIdentifier:(id)arg1 block:(CDUnknownBlockType)arg2;	// IMP=0x001000000000db78
- (void)xpcGizmoPasscodeAdvertiseAndPairWithName:(id)arg1 operationHasBegun:(CDUnknownBlockType)arg2;	// IMP=0x001000000000db68
- (void)xpcGizmoOOBAdvertiseAndPairWithName:(id)arg1 operationHasBegun:(CDUnknownBlockType)arg2;	// IMP=0x001000000000db58
- (void)xpcGetMigrationPairingCharacteristicReadDataWithCompletion:(CDUnknownBlockType)arg1;	// IMP=0x001000000000db48
- (void)xpcGetLastMigrationRequestPhoneNameWithCompletion:(CDUnknownBlockType)arg1;	// IMP=0x001000000000db38
- (void)xpcEnterCompatibilityState:(unsigned short)arg1 withDeviceID:(id)arg2;	// IMP=0x001000000000db32
- (void)xpcEndDiscoveryWithBlock:(CDUnknownBlockType)arg1;	// IMP=0x001000000000db27
- (void)xpcCompanionPasscodePairWithDeviceID:(id)arg1 withOptions:(id)arg2 operationHasBegun:(CDUnknownBlockType)arg3;	// IMP=0x001000000000db17
- (void)xpcCompanionOOBDiscoverAndPairWithName:(id)arg1 withOutOfBandPairingKey:(id)arg2 withOptions:(id)arg3 operationHasBegun:(CDUnknownBlockType)arg4;	// IMP=0x001000000000db07
- (void)xpcBeginMigrationWithDeviceID:(id)arg1 passcode:(id)arg2 withBlock:(CDUnknownBlockType)arg3;	// IMP=0x001000000000dafc
- (void)xpcBeginMigrationWithDeviceID:(id)arg1 completion:(CDUnknownBlockType)arg2;	// IMP=0x001000000000daec
- (void)xpcBeginMigrationWithCompletion:(CDUnknownBlockType)arg1;	// IMP=0x001000000000dadc
- (void)xpcBeginDiscoveryWithBlock:(CDUnknownBlockType)arg1;	// IMP=0x001000000000dad1
- (void)xpcActiveDeviceAssertions:(CDUnknownBlockType)arg1;	// IMP=0x001000000000dac1
- (void)xpcAbortPairingReason:(id)arg1 withBlock:(CDUnknownBlockType)arg2;	// IMP=0x001000000000dab6
- (void)xpcSwitchToSimulator:(id)arg1 withCompletion:(CDUnknownBlockType)arg2;	// IMP=0x001000000000cfd3
- (void)xpcUnpairWithSimulator:(id)arg1 withCompletion:(CDUnknownBlockType)arg2;	// IMP=0x001000000000c395
- (void)xpcPairWithSimulator:(id)arg1 withCompletion:(CDUnknownBlockType)arg2;	// IMP=0x001000000000a5f3
- (id)__idsBTUUIDForDevice:(id)arg1;	// IMP=0x001000000000a596
- (id)_idsBTUUIDForDevice:(id)arg1;	// IMP=0x001000000000a584
- (id)_activeDeviceBTIDSUUID;	// IMP=0x001000000000a4f9
- (void)cleanUpDevicesWithBlock:(CDUnknownBlockType)arg1;	// IMP=0x001000000000a06a
- (void)deleteDevice:(id)arg1 withBlock:(CDUnknownBlockType)arg2;	// IMP=0x0010000000009e09
- (void)newDeviceForSimulator:(id)arg1 withBlock:(CDUnknownBlockType)arg2;	// IMP=0x00100000000097a6
- (void);	// IMP=0x0010000000008c2c
- (void)_updateActiveFlag:(id)arg1;	// IMP=0x00100000000088b9

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
// Preceding property had unknown attributes: ?
// Original attribute string: T@"NSString",?,R,C

@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

