//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <objc/NSObject.h>

@class MISSING_TYPE, NSMapTable, NSMutableDictionary, NSString;
@protocol ASPasskeyAutoFillManagerDelegate;

@interface PublicKeyCredentialManager : NSObject
{
    struct os_unfair_lock_s _operationsLock;	// 8 = 0x8
    NSMutableDictionary *_uuidToOperation;	// 16 = 0x10
    NSMapTable *_panelToWeakOperation;	// 24 = 0x18
    NSMapTable *_applicationIdentifierToWeakOperation;	// 32 = 0x20
    NSMapTable *_webFrameIdentifierToWeakOperationForBrowser;	// 40 = 0x28
    _Bool _isForTesting;	// 48 = 0x30
    id <ASPasskeyAutoFillManagerDelegate> _passkeyAutoFillManagerDelegate;	// 56 = 0x38
}

+ (id)wkSecurityKeyTransportsFromASTransports:(id)arg1;	// IMP=0x001000000000e9b0
+ (id)asTransportsFromWKTransports:(id)arg1;	// IMP=0x001000000000e940
- (void).cxx_destruct;	// IMP=0x002000000000bbd5
@property(readonly, nonatomic) _Bool isForTesting; // @synthesize isForTesting=_isForTesting;
@property(retain, nonatomic) id <ASPasskeyAutoFillManagerDelegate> passkeyAutoFillManagerDelegate; // @synthesize passkeyAutoFillManagerDelegate=_passkeyAutoFillManagerDelegate;
- (id)internalErrorToWKErrorIfApplicable:(id)arg1;	// IMP=0x001000000000ba98
- (void)computeClientDataIfNeededForAssertionOptions:(id)arg1;	// IMP=0x001000000000b85f
- (void)computeClientDataIfNeededForCreationOptions:(id)arg1;	// IMP=0x001000000000b629
- (id)_operationForWebFrameIdentifier:(id)arg1;	// IMP=0x001000000000b5c2
- (id)_operationForApplicationIdentifierIfExists:(id)arg1;	// IMP=0x001000000000b55b
- (id)_operationForUUID:(id)arg1;	// IMP=0x001000000000b4c9
- (id)_operationForUUIDIfExists:(id)arg1;	// IMP=0x001000000000b462
- (id)_operationForPanel:(id)arg1;	// IMP=0x001000000000b3d0
- (id)_operationForPanelIfExists:(id)arg1;	// IMP=0x001000000000b369
- (void)_tearDownOperationWithUUID:(id)arg1;	// IMP=0x001000000000b1d0
- (MISSING_TYPE *)_newOperationWithRelyingPartyIdentifier:delegate:sourceApplicationIdentifier:webFrameIdentifier:shouldRequireUserVerification:parentActivity: /* Error: Ran out of types for this method. */;	// IMP=0x001000000000aedb
- (id)_newPanelForOperation:(id)arg1;	// IMP=0x001000000000acc6
- (id)_createCredentialOfKind:(unsigned long long)arg1 withOptions:(id)arg2 authenticatedLAContext:(id)arg3 delegate:(id)arg4 webFrameIdentifier:(id)arg5 parentActivity:(id)arg6 isConditionalRegistration:(_Bool)arg7;	// IMP=0x001000000000a2e7
- (id)_allowedCredentialsForAssertionOptions:(id)arg1;	// IMP=0x001000000000a1c8
- (id)_asToWKCredentialAssertionOptions:(id)arg1;	// IMP=0x001000000000a001
- (id)_asToWKCredentialCreationOptions:(id)arg1 forCredentialKind:(unsigned long long)arg2;	// IMP=0x00100000000097f5
- (void)_getPasskeyAssertionRequestParametersForOperation:(id)arg1 completionHandler:(CDUnknownBlockType)arg2;	// IMP=0x001000000000950e
- (void)getIsPasskeyAssertionRequestRunningForWebFrameIdentifier:(id)arg1 orApplicationIdentifier:(id)arg2 completionHandler:(CDUnknownBlockType)arg3;	// IMP=0x0010000000009412
- (void)getPasskeyAssertionRequestParametersForCABLEWithCompletionHandler:(CDUnknownBlockType)arg1;	// IMP=0x00100000000091ec
- (void)getPasskeyAssertionRequestParametersForApplicationIdentifier:(id)arg1 completionHandler:(CDUnknownBlockType)arg2;	// IMP=0x0010000000009171
- (void)getPasskeyAssertionRequestParametersForWebFrameIdentifier:(id)arg1 completionHandler:(CDUnknownBlockType)arg2;	// IMP=0x00100000000090b9
- (void)_queryExternalLoginChoicesForOperation:(id)arg1 completionHandler:(CDUnknownBlockType)arg2;	// IMP=0x0010000000008b59
- (void)_completeAssertionWithExternalPasskeyForOperation:(id)arg1 usingCredential:(id)arg2;	// IMP=0x0010000000008a0a
- (void)completeAssertionWithExternalPasskeyForUUID:(id)arg1 usingCredential:(id)arg2;	// IMP=0x001000000000898f
- (void)completeAssertionWithExternalPasskeyForApplicationIdentifier:(id)arg1 usingCredential:(id)arg2;	// IMP=0x0010000000008914
- (void)completeAssertionWithExternalPasskeyForWebFrameIdentifier:(id)arg1 usingCredential:(id)arg2;	// IMP=0x001000000000885c
- (void)_getExternalPasskeyRequestForOperation:(id)arg1 relyingPartyIdentifier:(id)arg2 credentialID:(id)arg3 completionHandler:(CDUnknownBlockType)arg4;	// IMP=0x001000000000832d
- (void)getExternalPasskeyRequestForApplicationIdentifier:(id)arg1 relyingPartyIdentifier:(id)arg2 credentialID:(id)arg3 completionHandler:(CDUnknownBlockType)arg4;	// IMP=0x00100000000081fb
- (void)getExternalPasskeyRequestForWebFrameIdentifier:(id)arg1 relyingPartyIdentifier:(id)arg2 credentialID:(id)arg3 completionHandler:(CDUnknownBlockType)arg4;	// IMP=0x0010000000008071
- (_Bool)renamePasskeywithIdentifier:(id)arg1 newName:(id)arg2 error:(id *)arg3;	// IMP=0x0010000000007e9f
- (_Bool)deleteAllPasskeysForRelyingParty:(id)arg1 error:(id *)arg2;	// IMP=0x0010000000007a9a
- (_Bool)deletePasskeyForRelyingParty:(id)arg1 withCredentialID:(id)arg2 error:(id *)arg3;	// IMP=0x0010000000007847
- (id)allPasskeysDataForRelyingParty:(id)arg1;	// IMP=0x001000000000782e
- (id)browserPasskeysForRelyingParty:(id)arg1;	// IMP=0x001000000000714a
- (id)encodeGetAssertionCommandWithOptions:(id)arg1 authenticatorUserVerificationAvailability:(unsigned long long)arg2 authenticatorSupportedExtensions:(id)arg3;	// IMP=0x0010000000006ec7
- (id)encodeMakeCredentialCommandWithOptions:(id)arg1 authenticatorUserVerificationAvailability:(unsigned long long)arg2 authenticatorSupportedExtensions:(id)arg3;	// IMP=0x0010000000006c42
- (void)cancelOperationIfNecessaryWithUUID:(id)arg1 overrideError:(id)arg2;	// IMP=0x0010000000006a1a
- (void)clearAllCredentials;	// IMP=0x0010000000006a01
- (void)assertUsingSecurityKeyCredentialForLoginChoice:(id)arg1;	// IMP=0x0010000000006841
- (id)beginCreatingNewSecurityKeyCredentialIfAvailableWithOptions:(id)arg1 delegate:(id)arg2 webFrameIdentifier:(id)arg3 parentActivity:(id)arg4;	// IMP=0x001000000000680d
- (void)presentCABLESheetForOperationUUID:(id)arg1 withCompletionHandler:(CDUnknownBlockType)arg2;	// IMP=0x00100000000066a5
- (void)assertUsingAutoFillPasskeyWithIdentifier:(id)arg1 authenticatedContext:(id)arg2 savedAccountContext:(id)arg3 forOperationUUID:(id)arg4;	// IMP=0x0010000000006684
- (id)autoFillPasskeysForOperationUUID:(id)arg1;	// IMP=0x0010000000005e70
- (id)autoFillOperationUUIDForWebFrameIdentifier:(id)arg1;	// IMP=0x0010000000005df6
- (id)autoFillOperationUUIDForApplicationIdentifier:(id)arg1;	// IMP=0x0010000000005d93
- (void)_updateLastUsedDateForPasskeySavedAccountWithAssertion:(id)arg1 relyingParty:(id)arg2 context:(id)arg3;	// IMP=0x0010000000005c64
- (void)_finishAssertionForOperationWithUUID:(id)arg1 identifier:(id)arg2 authenticatedContext:(id)arg3 savedAccountContext:(id)arg4;	// IMP=0x0010000000005a54
- (void)assertUsingPlatformCredentialForLoginChoice:(id)arg1 authenticatedContext:(id)arg2;	// IMP=0x0010000000005978
- (id)createNewPlatformCredentialWithOptions:(id)arg1 authenticatedContext:(id)arg2 delegate:(id)arg3 webFrameIdentifier:(id)arg4 parentActivity:(id)arg5 isConditionalRegistration:(_Bool)arg6;	// IMP=0x0010000000005941
- (id)beginAssertionsWithOptions:(id)arg1 forProcessWithApplicationIdentifier:(id)arg2 delegate:(id)arg3 requestStyle:(long long)arg4 webFrameIdentifier:(id)arg5 parentActivity:(id)arg6;	// IMP=0x0010000000004426
- (void)panel:(id)arg1 requestPINWithRemainingRetries:(unsigned long long)arg2 completionHandler:(CDUnknownBlockType)arg3;	// IMP=0x001000000000421f
- (void)panel:(id)arg1 requestLAContextForUserVerificationWithCompletionHandler:(CDUnknownBlockType)arg2;	// IMP=0x0010000000003fff
- (void)panel:(id)arg1 dismissWebAuthenticationPanelWithResult:(long long)arg2;	// IMP=0x0010000000003d8c
- (void)panel:(id)arg1 selectAssertionResponse:(id)arg2 source:(long long)arg3 completionHandler:(CDUnknownBlockType)arg4;	// IMP=0x001000000000312c
- (void)panel:(id)arg1 updateWebAuthenticationPanel:(long long)arg2;	// IMP=0x0010000000002f14
- (id)initForTesting:(_Bool)arg1;	// IMP=0x0010000000002dc4
- (id)init;	// IMP=0x0010000000002db0
- (void)computeUserVerificationForAssertionOptions:(id)arg1;	// IMP=0x001000000000ed90
- (_Bool)passkeyExistsForRelyingParty:(id)arg1 username:(id)arg2;	// IMP=0x001000000000e890
- (id)encodeExtensionsIfNeededForCTAPRegistrationCommand:(id)arg1 registrationOptions:(id)arg2;	// IMP=0x001000000000dd60
- (id)encodeExtensionsIfNeededForCTAPAssertionCommand:(id)arg1 assertionOptions:(id)arg2;	// IMP=0x001000000000dd40
- (void)handleExtensionsIfNeededForCredential:(id)arg1 withRegistrationOptions:(id)arg2 webKitExtensionOutputs:(id)arg3;	// IMP=0x001000000000db10
- (void)handleExtensionsIfNeededForCredential:(id)arg1 withAssertionOptions:(id)arg2 webKitExtensionOutputs:(id)arg3;	// IMP=0x001000000000d0f0

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
// Preceding property had unknown attributes: ?
// Original attribute string: T@"NSString",?,R,C

@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

