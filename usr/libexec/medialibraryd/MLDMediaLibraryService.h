//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <objc/NSObject.h>

@class ML3DatabaseImportManager, ML3MediaLibraryWriter, MLDCacheDeleteController, MLDDatabaseValidationController, NSMutableArray, NSMutableDictionary, NSOperationQueue, NSString, NSTimer, _TtC13medialibraryd41MLDSpotlightIndexMusicAppEntityAssociator;
@protocol OS_dispatch_queue, OS_dispatch_source;

@interface MLDMediaLibraryService : NSObject
{
    NSObject<OS_dispatch_queue> *_serialQueue;	// 8 = 0x8
    NSObject<OS_dispatch_queue> *_spotlightIndexQueue;	// 16 = 0x10
    NSObject<OS_dispatch_queue> *_writerBeginTransactionQueue;	// 24 = 0x18
    NSObject<OS_dispatch_queue> *_writerUpdateQueue;	// 32 = 0x20
    NSObject<OS_dispatch_queue> *_callbackQueue;	// 40 = 0x28
    struct os_unfair_lock_s _xpcLock;	// 48 = 0x30
    NSMutableDictionary *_xpcListeners;	// 56 = 0x38
    NSMutableDictionary *_xpcClients;	// 64 = 0x40
    ML3MediaLibraryWriter *_writer;	// 72 = 0x48
    ML3DatabaseImportManager *_importManager;	// 80 = 0x50
    MLDCacheDeleteController *_cacheDeleteController;	// 88 = 0x58
    MLDDatabaseValidationController *_validationController;	// 96 = 0x60
    NSOperationQueue *_maintenanceTasksOperationQueue;	// 104 = 0x68
    NSOperationQueue *_databaseRecoveryOperationQueue;	// 112 = 0x70
    NSMutableArray *_databaseRecoveryCompletionHandlers;	// 120 = 0x78
    _TtC13medialibraryd41MLDSpotlightIndexMusicAppEntityAssociator *_musicAppAssociator;	// 128 = 0x80
    NSObject<OS_dispatch_source> *_signalDispatchSource;	// 136 = 0x88
    NSObject<OS_dispatch_source> *_spotlightIndexCoalescingTimer;	// 144 = 0x90
    NSTimer *_idleTimer;	// 152 = 0x98
    NSMutableDictionary *_mediaLibraries;	// 160 = 0xa0
    NSString *_deviceSharedLibraryPath;	// 168 = 0xa8
    NSMutableDictionary *_transactionInfoForID;	// 176 = 0xb0
    unsigned long long _stateHandle;	// 184 = 0xb8
    _Bool _databaseLocked;	// 192 = 0xc0
    long long _currentLockReason;	// 200 = 0xc8
}

+ (id)sharedInstance;	// IMP=0x00200000000149be
- (void).cxx_destruct;	// IMP=0x0020000000010660
- (void)faultForQuery:(id)arg1 fromClientBundleID:(id)arg2 onTrustError:(id)arg3;	// IMP=0x0010000000010311
- (id)_generateSecurityScopedURLWrapperForItemPid:(unsigned long long)arg1 withLibrary:(id)arg2 error:(id *)arg3;	// IMP=0x00100000000100ef
- (void)_updateSiriIndexMetadataForLibraryAtPath:(id)arg1 completion:(CDUnknownBlockType)arg2;	// IMP=0x001000000000ff04
- (_Bool)_isMediaPath:(id)arg1 selector:(SEL)arg2 resolvedPath:(id *)arg3;	// IMP=0x001000000000faca
- (_Bool)_platformSupportsSiriIndexing;	// IMP=0x001000000000fa5a
- (_Bool)_platformSupportsSpotlightIndexing;	// IMP=0x001000000000fa52
- (void)_unregisterServiceOriginatedTransactionWithConnection:(id)arg1;	// IMP=0x001000000000f9aa
- (void)_validateDatabaseAtPath:(id)arg1 forConnection:(id)arg2 byTruncatingFirst:(_Bool)arg3 withCompletion:(CDUnknownBlockType)arg4;	// IMP=0x001000000000f766
- (void)_validateDatabaseAtPath:(id)arg1 byTruncatingFirst:(_Bool)arg2 withCompletion:(CDUnknownBlockType)arg3;	// IMP=0x001000000000f74c
- (_Bool)_validateTransactionIdentifier:(id)arg1 forClient:(id)arg2;	// IMP=0x001000000000f58b
- (void)_unregisterTransactionInfoForIdentifier:(id)arg1;	// IMP=0x001000000000f4f5
- (void)_registerTransactionInfo:(id)arg1 forIdentitifer:(id)arg2;	// IMP=0x001000000000f421
- (void)_performMaintenanceOnDatabaseAtPath:(id)arg1 withActivity:(id)arg2 completion:(CDUnknownBlockType)arg3;	// IMP=0x001000000000f24c
- (void)_stopIdleTimer;	// IMP=0x001000000000f19e
- (void)_resetIdleTimer;	// IMP=0x001000000000f0ca
- (void)_idleTimerFired:(id)arg1;	// IMP=0x001000000000efa2
- (void)_startIdleTimer;	// IMP=0x001000000000ee46
- (void)_tearDownLibraryDidChangeNotifications;	// IMP=0x001000000000ed62
- (void)_updateSpotlightIndexForNotification:(id)arg1;	// IMP=0x001000000000ecbd
- (void)_updateSiriIndexForNotification:(id)arg1;	// IMP=0x001000000000ebe8
- (void)_updateMultiUserPurgeabilityForPrimaryLibraryPath:(id)arg1;	// IMP=0x001000000000eafc
- (void)_handleLibraryDidChangeNotification:(id)arg1;	// IMP=0x001000000000ea8b
- (void)_registerForLibraryDidChangeNotifications;	// IMP=0x001000000000e956
- (void)_writeDiagnosticToDisk:(id)arg1;	// IMP=0x001000000000e76a
- (void)_performDiagnosticWithReason:(id)arg1;	// IMP=0x001000000000e5f2
- (void)_handleDebugSignal;	// IMP=0x001000000000e56f
- (void)_tearDownSignalHandler;	// IMP=0x001000000000e55e
- (void)_setupSignalHandler;	// IMP=0x001000000000e454
- (id)_clientForConnection:(id)arg1;	// IMP=0x001000000000e329
- (id)_currentXPCClient;	// IMP=0x001000000000e2aa
- (void)_handleXPCDisconnect:(id)arg1;	// IMP=0x001000000000e155
- (id)_deviceSharedLibraryPath;	// IMP=0x001000000000e0f9
- (id)_allMediaLibraries;	// IMP=0x001000000000e040
- (id)_mediaLibraryForPath:(id)arg1;	// IMP=0x001000000000de98
- (long long)_MLDSupportedServiceForXPCListener:(id)arg1;	// IMP=0x001000000000de0c
- (id)_XPCListenerForService:(long long)arg1;	// IMP=0x001000000000dd47
- (void)_setupCacheDeleteController;	// IMP=0x001000000000dc7a
- (void)_setupActivityHandlers;	// IMP=0x001000000000dba6
- (void)_setupNotifyEventHandlers;	// IMP=0x001000000000dba0
- (void)_logPrivacyAccessWithTransactionIdentifier:(id)arg1;	// IMP=0x001000000000db13
- (void)_reconnectLibraries:(id)arg1;	// IMP=0x001000000000d85a
- (void)_disconnectLibraries:(id)arg1;	// IMP=0x001000000000d557
@property(nonatomic) long long currentLockReason; // @synthesize currentLockReason=_currentLockReason;
@property(nonatomic, getter=isDatabaseLocked) _Bool databaseLocked; // @synthesize databaseLocked=_databaseLocked;
- (void)start;	// IMP=0x001000000000d2a9
- (void)terminateForFailureToPerformDatabasePathChange;	// IMP=0x001000000000d2a3
- (void)performDatabasePathChange:(id)arg1 completion:(CDUnknownBlockType)arg2;	// IMP=0x000000000000d232
- (void)emergencyDisconnectWithCompletion:(CDUnknownBlockType)arg1;	// IMP=0x001000000000d21d
- (void)collectDiagnostic:(id)arg1;	// IMP=0x001000000000d13b
- (void)mediaLibraryWriter:(id)arg1 terminatedTransaction:(id)arg2 withError:(id)arg3;	// IMP=0x001000000000d02c
- (void)library:(id)arg1 didRollbackDatabaseTransactionWithConnection:(id)arg2;	// IMP=0x001000000000d017
- (void)library:(id)arg1 didCommitDatabaseTransactionWithConnection:(id)arg2;	// IMP=0x001000000000d002
- (void)library:(id)arg1 didBeginDatabaseTransactionWithConnection:(id)arg2;	// IMP=0x001000000000cf28
- (_Bool)_shouldAcceptConnectionForMediaLibraryService:(id)arg1;	// IMP=0x001000000000cbc0
- (_Bool)listener:(id)arg1 shouldAcceptNewConnection:(id)arg2;	// IMP=0x001000000000c991
- (void)securityScopedURLWrapperForItemPid:(unsigned long long)arg1 withDatabasePath:(id)arg2 completionHandler:(CDUnknownBlockType)arg3;	// IMP=0x001000000000c6e4
- (void)getClientImportServiceListenerEndpointWithCompletion:(CDUnknownBlockType)arg1;	// IMP=0x001000000000c589
- (void)getMediaLibraryResourcesServiceListenerEndpointWithCompletion:(CDUnknownBlockType)arg1;	// IMP=0x001000000000c42e
- (void)performMaintenanceTasksForDatabaseAtPath:(id)arg1 withCompletionHandler:(CDUnknownBlockType)arg2;	// IMP=0x001000000000c334
- (void)updateSiriIndexMetadataForAllLibrariesWithCompletion:(CDUnknownBlockType)arg1;	// IMP=0x001000000000be95
- (void)updateSpotlightIndexMetadataForItemsWithIdentifiers:(id)arg1 bundleID:(id)arg2 withCompletion:(CDUnknownBlockType)arg3;	// IMP=0x001000000000b794
- (void)updateSpotlightIndexForBundleID:(id)arg1 withCompletion:(CDUnknownBlockType)arg2;	// IMP=0x001000000000b77a
- (void)getLanguageResourcesWithCompletion:(CDUnknownBlockType)arg1;	// IMP=0x001000000000b5a3
- (void)unlockDatabaseWithCompletion:(CDUnknownBlockType)arg1;	// IMP=0x001000000000b516
- (void)lockDatabaseForReason:(long long)arg1 withCompletion:(CDUnknownBlockType)arg2;	// IMP=0x001000000000b408
- (void)cancelImportOperation:(unsigned long long)arg1 completionHandler:(CDUnknownBlockType)arg2;	// IMP=0x001000000000b2eb
- (void)performImport:(id)arg1 fromSource:(unsigned long long)arg2 withUUID:(id)arg3 completionHandler:(CDUnknownBlockType)arg4;	// IMP=0x001000000000afbb
- (void)setOptions:(id)arg1 withCompletionHandler:(CDUnknownBlockType)arg2;	// IMP=0x001000000000ae80
- (void)performDatabaseOperation:(unsigned long long)arg1 withAttributes:(id)arg2 options:(id)arg3 completionHandler:(CDUnknownBlockType)arg4;	// IMP=0x001000000000a853
- (_Bool)endTransaction:(id)arg1 shouldCommit:(_Bool)arg2 error:(id *)arg3;	// IMP=0x001000000000a71b
- (void)endTransaction:(id)arg1 shouldCommit:(_Bool)arg2 withCompletionHandler:(CDUnknownBlockType)arg3;	// IMP=0x001000000000a5b8
- (void)executeQuery:(id)arg1 withParameters:(id)arg2 options:(id)arg3 onTransaction:(id)arg4 withCompletionHandler:(CDUnknownBlockType)arg5;	// IMP=0x001000000000a253
- (void)executeUpdate:(id)arg1 withParameters:(id)arg2 onTransaction:(id)arg3 withCompletionHandler:(CDUnknownBlockType)arg4;	// IMP=0x0010000000009f8f
- (id)beginTransactionForDatabaseWithContext:(id)arg1 error:(id *)arg2;	// IMP=0x0010000000009dd8
- (void)beginTransactionForDatabaseWithContext:(id)arg1 completionHandler:(CDUnknownBlockType)arg2;	// IMP=0x00100000000096df
- (void)recreateDatabaseAtPath:(id)arg1 withCompletionHandler:(CDUnknownBlockType)arg2;	// IMP=0x0010000000009490
- (void)performDiagnosticWithCompletionHandler:(CDUnknownBlockType)arg1;	// IMP=0x00100000000092d7
- (void)checkIntegrityOfDatabaseAtPath:(id)arg1 repairFaults:(_Bool)arg2 withCompletionHandler:(CDUnknownBlockType)arg3;	// IMP=0x0010000000008f97
- (void)attemptDatabaseFileRecoveryAtPath:(id)arg1 withCompletionHandler:(CDUnknownBlockType)arg2;	// IMP=0x0010000000008ce3
- (void)validateDatabaseAtPath:(id)arg1 withCompletionHandler:(CDUnknownBlockType)arg2;	// IMP=0x0010000000008b1f
- (void)dealloc;	// IMP=0x0010000000008a79
- (id)_stateDump;	// IMP=0x00100000000089ff
- (id)_init;	// IMP=0x001000000000870b
- (id)init;	// IMP=0x00100000000086c9

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
// Preceding property had unknown attributes: ?
// Original attribute string: T@"NSString",?,R,C

@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

