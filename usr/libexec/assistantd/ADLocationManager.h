//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <objc/NSObject.h>

@class ADGreenTeaLogger, ADPeerLocationConnection, CLLocation, CLLocationManager, GEOLocationShifter, NSMutableSet, NSString, SAGetRequestOrigin;
@protocol ADLocationManagerDelegate, OS_dispatch_group, OS_dispatch_queue, OS_dispatch_source;

@interface ADLocationManager : NSObject
{
    NSObject<OS_dispatch_queue> *_internalQueue;	// 8 = 0x8
    CLLocationManager *_locationManager;	// 16 = 0x10
    SAGetRequestOrigin *_requestOriginCommand;	// 24 = 0x18
    CDUnknownBlockType _updateCompletion;	// 32 = 0x20
    id <ADLocationManagerDelegate> _delegate;	// 40 = 0x28
    NSObject<OS_dispatch_queue> *_externalQueue;	// 48 = 0x30
    ADPeerLocationConnection *_peerLocationConnection;	// 56 = 0x38
    id _locationInUseAssertion;	// 64 = 0x40
    NSObject<OS_dispatch_source> *_locationTimerSource;	// 72 = 0x48
    NSObject<OS_dispatch_source> *_locationSLATimerSource;	// 80 = 0x50
    _Bool _isLocationManagerReady;	// 88 = 0x58
    NSObject<OS_dispatch_group> *_initialLocationAuthorizationCallbackGroup;	// 96 = 0x60
    GEOLocationShifter *_locationShifter;	// 104 = 0x68
    CLLocation *_lastPeerLocation;	// 112 = 0x70
    ADGreenTeaLogger *_greenTeaLogger;	// 120 = 0x78
    _Bool _isSiriLocationServicesPromptingEnabled;	// 128 = 0x80
    NSMutableSet *_authorizationRequestCompletions;	// 136 = 0x88
    NSMutableSet *_locationFetchRequests;	// 144 = 0x90
    struct os_unfair_lock_s _lastLocationLock;	// 152 = 0x98
    struct os_unfair_lock_s _lastShiftedLocationLock;	// 156 = 0x9c
    struct os_unfair_lock_s _locationSentToServerLock;	// 160 = 0xa0
    double _preferredPlatformLocationAccuracy;	// 168 = 0xa8
    NSObject<OS_dispatch_source> *_locationUpdateSessionTeardownTimer;	// 176 = 0xb0
    unsigned long long _locationUpdateSessionStatus;	// 184 = 0xb8
    _Bool _siriUserInterfaceIsVisible;	// 192 = 0xc0
    _Bool _needsToSendLocation;	// 193 = 0xc1
    _Bool _isNavigating;	// 194 = 0xc2
    _Bool _allowAdHocSendingLocationToServer;	// 195 = 0xc3
    _Bool _doNotClearLocationManagerDelegateForUnitTests;	// 196 = 0xc4
    CLLocation *_lastLocation;	// 200 = 0xc8
    CLLocation *_lastShiftedLocation;	// 208 = 0xd0
    CLLocation *_locationSentToServer;	// 216 = 0xd8
    struct ADLocationManagerState _currentState;	// 224 = 0xe0
}

+ (void)prepareForAssistantEnablementInBackground;	// IMP=0x00200000001b7a78
+ (_Bool)_shouldUseOneshotLocationRequest;	// IMP=0x00100000001b7a6e
- (void).cxx_destruct;	// IMP=0x00200000001b3ba6
@property(nonatomic) _Bool doNotClearLocationManagerDelegateForUnitTests; // @synthesize doNotClearLocationManagerDelegateForUnitTests=_doNotClearLocationManagerDelegateForUnitTests;
@property struct ADLocationManagerState currentState; // @synthesize currentState=_currentState;
@property _Bool allowAdHocSendingLocationToServer; // @synthesize allowAdHocSendingLocationToServer=_allowAdHocSendingLocationToServer;
@property _Bool isNavigating; // @synthesize isNavigating=_isNavigating;
@property _Bool needsToSendLocation; // @synthesize needsToSendLocation=_needsToSendLocation;
@property(nonatomic) __weak id <ADLocationManagerDelegate> delegate; // @synthesize delegate=_delegate;
- (id)createSetRequestOrigin;	// IMP=0x00100000001b393f
- (void)forceLocationUpdateFromCoreLocation;	// IMP=0x00100000001b37c4
- (void)endLocationUpdateSessionIfNeeded;	// IMP=0x00100000001b3436
- (_Bool)shouldEndLocationUpdateSession;	// IMP=0x00100000001b3409
- (void)startLocationUpdateSession;	// IMP=0x00100000001b321f
- (void)cancelLocationUpdateSessionTeardown;	// IMP=0x00100000001b315c
- (void)scheduleLocationUpdateSessionTeardown;	// IMP=0x00100000001b2fe6
- (void)upgradeAccuracyIfNeeded:(double)arg1;	// IMP=0x00100000001b2e09
- (id)createLocationInUseAssertion;	// IMP=0x00100000001b2db9
- (oneway void)dismissTCCDialogIfNeeded:(CDUnknownBlockType)arg1;	// IMP=0x00100000001b2d0a
- (void)_dismissTCCDialogIfNeeded;	// IMP=0x00100000001b2c34
- (void)drainRequestsWithErrorCode:(long long)arg1 clearLocationCache:(_Bool)arg2 dismissDialog:(_Bool)arg3;	// IMP=0x00100000001b2bdd
- (void)prefetchCurrentLocation;	// IMP=0x00100000001b2b92
- (void)startLocationPrefetchRoutine;	// IMP=0x00100000001b2a72
- (oneway void)currentLocationWithFetchRequest:(id)arg1 completion:(CDUnknownBlockType)arg2;	// IMP=0x00100000001b28c3
- (oneway void)currentLocationWithAccuracy:(double)arg1 timeout:(double)arg2 completion:(CDUnknownBlockType)arg3;	// IMP=0x00100000001b281b
- (oneway void)updateTemporaryAuthorizationForAccurateLocation:(_Bool)arg1 timeout:(double)arg2 completion:(CDUnknownBlockType)arg3;	// IMP=0x00100000001b268f
- (oneway void)updateTemporaryAuthorizationForAccurateLocation:(_Bool)arg1 completion:(CDUnknownBlockType)arg2;	// IMP=0x00100000001b25f1
- (oneway void)updateAuthorizationStyleWithUserSelection:(unsigned long long)arg1 timeout:(double)arg2 completion:(CDUnknownBlockType)arg3;	// IMP=0x00100000001b2464
- (oneway void)updateAuthorizationStyleWithUserSelection:(unsigned long long)arg1 completion:(CDUnknownBlockType)arg2;	// IMP=0x00100000001b23c4
- (oneway void)requestTemporaryAccuracyAuthorizationWithStyle:(unsigned long long)arg1 timeout:(double)arg2 completion:(CDUnknownBlockType)arg3;	// IMP=0x00100000001b2239
- (void)sendTemporaryAccuracyAuthorizationRequestWithTimeout:(double)arg1 completion:(CDUnknownBlockType)arg2;	// IMP=0x00100000001b1fe7
- (oneway void)requestAuthorizationWithStyle:(unsigned long long)arg1 timeout:(double)arg2 completion:(CDUnknownBlockType)arg3;	// IMP=0x00100000001b1e5a
- (oneway void)currentAuthorizationStyle:(CDUnknownBlockType)arg1;	// IMP=0x00100000001b1d4f
- (void)drainLocationFetchRequestsWithPossibleError:(id)arg1;	// IMP=0x00100000001b18bd
- (void)drainAuthorizationRequestCompletionsWithPossibleError:(id)arg1;	// IMP=0x00100000001b15e0
- (void)scheduleLocationFetchRequestTimeoutForRequest:(id)arg1 timeout:(double)arg2;	// IMP=0x00100000001b14fc
- (void)scheduleAuthorizationRequestTimeoutForCompletionBlock:(CDUnknownBlockType)arg1 timeout:(double)arg2;	// IMP=0x00100000001b141b
- (void)getRedactedContextForContextSnapshot:(id)arg1 metadata:(id)arg2 privacyPolicy:(long long)arg3 completion:(CDUnknownBlockType)arg4;	// IMP=0x00100000001b13fa
- (void)dismissedAllVisibleAssistantUIForReason:(id)arg1;	// IMP=0x00100000001b136d
- (void)showingVisibleAssistantUIForReason:(id)arg1 completion:(CDUnknownBlockType)arg2;	// IMP=0x00100000001b12b6
- (void)updateLocationForCommand:(id)arg1 completion:(CDUnknownBlockType)arg2;	// IMP=0x00100000001b119f
- (_Bool)shouldSendLocationToServer:(id)arg1 forAceCommand:(id)arg2;	// IMP=0x00100000001b0a26
- (void)updateLocationSnapshotWithCompletion:(CDUnknownBlockType)arg1;	// IMP=0x00100000001b0999
- (void)updateLocationSnapshot;	// IMP=0x00100000001b086c
- (id)createCurrentLocationSnapshot;	// IMP=0x00100000001b0622
- (void)locationManagerDidChangeAuthorization:(id)arg1;	// IMP=0x00100000001b00a0
- (void)locationManager:(id)arg1 didFailWithError:(id)arg2;	// IMP=0x00100000001afc44
- (void)locationManager:(id)arg1 didUpdateLocations:(id)arg2;	// IMP=0x00100000001af837
- (void)peerLocationConnectionSuggestsClearingCachedLocation:(id)arg1;	// IMP=0x00100000001af771
- (void)peerLocationConnection:(id)arg1 didReceiveUnsolicitedLocation:(id)arg2;	// IMP=0x00100000001af65b
- (void)_processUpdatedLocation:(id)arg1;	// IMP=0x00100000001af4c8
- (_Bool)_locationUpdateIsCapableOfSucceeding;	// IMP=0x00100000001af4c0
- (id)locationForSnapshot;	// IMP=0x00100000001af328
- (void)_requestLocationForGetRequestOrigin:(id)arg1 completion:(CDUnknownBlockType)arg2;	// IMP=0x00100000001af222
- (void)_requestLocationWithBestAccuracy;	// IMP=0x00100000001af0ce
- (void)_startMonitoringLocationForGetRequestOrigin:(id)arg1 completion:(CDUnknownBlockType)arg2;	// IMP=0x00100000001aef65
- (void)_startMonitoringLocationWithDesiredAccuracy:(double)arg1;	// IMP=0x00100000001aede5
- (void)_scheduleLocationTimerWithTimeout:(double)arg1;	// IMP=0x00100000001aec95
- (void)_cancelLocationTimer;	// IMP=0x00100000001aebde
- (void)_scheduleLocationSLATimer;	// IMP=0x00100000001aea56
- (void)_triggerLocationABCForSubtype:(id)arg1;	// IMP=0x00100000001ae91e
- (void)_cancelLocationSLATimer;	// IMP=0x00100000001ae867
- (void)_clearCompletionState;	// IMP=0x00100000001ae82e
- (void)_generateLocationUnknownResponseForGetRequestOriginCommand:(id)arg1 completion:(CDUnknownBlockType)arg2;	// IMP=0x00100000001ae80f
- (void)_generateLocationTimedOutResponseForGetRequestOriginCommand:(id)arg1 completion:(CDUnknownBlockType)arg2;	// IMP=0x00100000001ae7f0
- (void)_generateLocationWiFiOffResponseForGetRequestOriginCommand:(id)arg1 completion:(CDUnknownBlockType)arg2;	// IMP=0x00100000001ae7d1
- (void)_generateLocationDeniedResponseForGetRequestOriginCommand:(id)arg1 completion:(CDUnknownBlockType)arg2;	// IMP=0x00100000001ae7b2
- (void)_generateLocationDisabledResponseForGetRequestOriginCommand:(id)arg1 completion:(CDUnknownBlockType)arg2;	// IMP=0x00100000001ae793
- (void)_generateResponseForGetRequestOriginCommand:(id)arg1 withStatus:(id)arg2 completion:(CDUnknownBlockType)arg3;	// IMP=0x00100000001ae63d
- (void)_generateResponseForGetRequestOriginCommand:(id)arg1 withUnshiftedLocation:(id)arg2 completion:(CDUnknownBlockType)arg3;	// IMP=0x00100000001ae3cc
- (void)shiftLocationWithTimeout:(id)arg1 timeoutHandler:(CDUnknownBlockType)arg2 completion:(CDUnknownBlockType)arg3;	// IMP=0x00100000001ae1b6
- (void)shiftLocation:(id)arg1 completion:(CDUnknownBlockType)arg2;	// IMP=0x00000000001adf20
- (id)shiftLocationUsingCachedShifterFunction:(id)arg1;	// IMP=0x00100000001adcb0
- (void)navStatusChanged:(id)arg1;	// IMP=0x00100000001adc65
- (id)_locationShifter;	// IMP=0x00100000001adc2a
- (id)_peerLocationConnection;	// IMP=0x00100000001adbdc
- (id)_locationManager;	// IMP=0x00100000001adad3
@property(retain) CLLocation *locationSentToServer; // @synthesize locationSentToServer=_locationSentToServer;
@property(retain) CLLocation *lastShiftedLocation; // @synthesize lastShiftedLocation=_lastShiftedLocation;
@property(retain) CLLocation *lastLocation; // @synthesize lastLocation=_lastLocation;
@property(readonly) CLLocation *knownLocation;
- (void)dealloc;	// IMP=0x00100000001ad6e0
- (id)initWithSerialQueue:(id)arg1;	// IMP=0x00100000001ad297
- (void)fetchLocationAuthorization:(CDUnknownBlockType)arg1;	// IMP=0x00100000001ad0cf

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
// Preceding property had unknown attributes: ?
// Original attribute string: T@"NSString",?,R,C

@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

