//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <objc/NSObject.h>

@class ADAccount, AFAWDSiriRequestRecord, AFAggregator, AFInstanceContext, MISSING_TYPE, NSError, NSMutableArray, NSMutableDictionary, NSMutableSet, NSString, SABaseCommand, SASSpeechRecognized;
@protocol ADSessionManagerDelegate, ADSessionManagerIntercepting, OS_dispatch_queue, OS_dispatch_source;

@interface ADSessionManager : NSObject
{
    NSObject<OS_dispatch_queue> *_queue;	// 8 = 0x8
    AFInstanceContext *_instanceContext;	// 16 = 0x10
    ADAccount *_account;	// 24 = 0x18
    NSString *_sharedUserIdentifier;	// 32 = 0x20
    NSString *_loggingSharedUserIdentifier;	// 40 = 0x28
    long long _sharedUserIdentifierState;	// 48 = 0x30
    long long _state;	// 56 = 0x38
    _Bool _isRegisteredForSessionDestroyingNotifications;	// 64 = 0x40
    NSString *_connectionMode;	// 72 = 0x48
    NSString *_languageCode;	// 80 = 0x50
    NSMutableArray *_sessions;	// 88 = 0x58
    id <ADSessionManagerDelegate> _delegate;	// 96 = 0x60
    _Bool _callInProcess;	// 104 = 0x68
    _Bool _hasClient;	// 105 = 0x69
    unsigned int _ioConnect;	// 108 = 0x6c
    struct IONotificationPort *_ioNotificationPortRef;	// 112 = 0x70
    unsigned int _ioNotifier;	// 120 = 0x78
    AFAggregator *_aggregator;	// 128 = 0x80
    NSString *_requestId;	// 136 = 0x88
    NSMutableDictionary *_proxiedIdMap;	// 144 = 0x90
    NSMutableDictionary *_reverseProxiedIdMap;	// 152 = 0x98
    NSMutableDictionary *_sessionOriginatedCommandTable;	// 160 = 0xa0
    NSString *_winningSessionId;	// 168 = 0xa8
    NSObject<OS_dispatch_source> *_resultObjectsEvaluationTimer;	// 176 = 0xb0
    _Bool _isQueuingResultsForDelayedEvaluation;	// 184 = 0xb8
    _Bool _timerFiredOnce;	// 185 = 0xb9
    _Bool _continueWithPreviousWinner;	// 186 = 0xba
    NSError *_lastSessionError;	// 192 = 0xc0
    int _preferredSessionType;	// 200 = 0xc8
    int _preferredRemoteSessionType;	// 204 = 0xcc
    SASSpeechRecognized *_savedSasSpeechRecognized;	// 208 = 0xd0
    _Bool _savedSasSpeechRecognizedSubmitted;	// 216 = 0xd8
    MISSING_TYPE *_savedSasSpeechFailure;	// 224 = 0xe0
    unsigned int _serverDrivenResultsHoldTime;	// 232 = 0xe8
    _Bool _serverSpeechRecognitionArrived;	// 236 = 0xec
    _Bool _hasActiveRequest;	// 237 = 0xed
    _Bool _needsResetOnRequestBoundary;	// 238 = 0xee
    NSMutableSet *_assertions;	// 240 = 0xf0
    AFAWDSiriRequestRecord *_awdRequestRecord;	// 248 = 0xf8
    id <ADSessionManagerIntercepting> _interceptor;	// 256 = 0x100
    CDUnknownBlockType _sessionResetOnRequestBoundaryCompletion;	// 264 = 0x108
    SABaseCommand *_currentRequest;	// 272 = 0x110
}

- (void).cxx_destruct;	// IMP=0x00200000001223a4
@property(nonatomic) __weak id <ADSessionManagerIntercepting> interceptor; // @synthesize interceptor=_interceptor;
@property(nonatomic) __weak id <ADSessionManagerDelegate> delegate; // @synthesize delegate=_delegate;
- (void)_logContextForWinningSession:(id)arg1 forReason:(id)arg2 forRemoteSessionScore:(long long)arg3 forLocalSessionScore:(long long)arg4;	// IMP=0x00100000001220df
- (void)_resetWinningState;	// IMP=0x0010000000121fc9
- (_Bool)_reverseMapSessionRequestIdToADRequestId:(id)arg1 forSession:(id)arg2;	// IMP=0x0010000000121df1
- (id)_mapADRequestIdToSessionRequestId:(id)arg1 forSession:(id)arg2;	// IMP=0x0010000000121d8e
- (id)_keyForRequestId:(id)arg1 forSession:(id)arg2;	// IMP=0x0010000000121ce3
- (_Bool)_hasAtleastOneActiveSessionBesides:(id)arg1;	// IMP=0x0010000000121a0b
- (void)refreshValidationData;	// IMP=0x00100000001218c7
- (void)setHasClient:(_Bool)arg1;	// IMP=0x00100000001218be
- (_Bool)hasClient;	// IMP=0x00100000001218b5
- (void)barrier:(CDUnknownBlockType)arg1;	// IMP=0x00100000001215ea
- (void)setAWDRequestRecordMetrics:(id)arg1;	// IMP=0x001000000012148b
- (void)_logMetricsForSessionFailure:(id)arg1 withError:(id)arg2 completion:(CDUnknownBlockType)arg3;	// IMP=0x00100000001211ba
- (void)_logCommandToMetrics:(id)arg1 forSession:(id)arg2 outbound:(_Bool)arg3;	// IMP=0x0010000000120bc7
- (void)getSNConnectionMetrics:(CDUnknownBlockType)arg1;	// IMP=0x0010000000120977
- (void)getConnectionMetrics:(CDUnknownBlockType)arg1;	// IMP=0x0010000000120727
- (void)updateConnectionSetConnectionType:(unsigned int)arg1;	// IMP=0x00100000001206dd
- (void)updateConnectionDidFailAggdMetrics;	// IMP=0x00100000001206a0
- (void)updateConnectionDidDropAggdMetrics;	// IMP=0x0010000000120663
- (id)aggregator;	// IMP=0x001000000012061c
- (id)sessionRequestIdForRefId:(id)arg1;	// IMP=0x001000000012044f
- (void)setRequestId:(id)arg1;	// IMP=0x001000000011fa04
- (void)_resetSessionOnRequestBoundaryIfNeeded;	// IMP=0x001000000011f628
- (void)relinquishAssertion:(id)arg1;	// IMP=0x001000000011f550
- (id)acquireAssertionForReason:(id)arg1;	// IMP=0x001000000011f450
- (void)_setRequestId:(id)arg1;	// IMP=0x001000000011f43c
- (void)_clearSessions;	// IMP=0x001000000011f41f
- (void)_addSession:(id)arg1;	// IMP=0x001000000011f3c5
- (_Bool)hasSessionRequiringServerConnection;	// IMP=0x001000000011f0d7
- (void)setHasActiveRequest:(_Bool)arg1;	// IMP=0x001000000011ecc5
- (void)sendRawCommand:(id)arg1 opportunistically:(_Bool)arg2 logEvent:(_Bool)arg3;	// IMP=0x001000000011eca0
- (void)sendCommand:(id)arg1 opportunistically:(_Bool)arg2 logEvent:(_Bool)arg3;	// IMP=0x001000000011ec78
- (void)setCurrentRequest:(id)arg1;	// IMP=0x001000000011ebab
- (void)_sendCommand:(id)arg1 opportunistically:(_Bool)arg2 logEvent:(_Bool)arg3 doSendPreProcessing:(_Bool)arg4 doSendPostProcessing:(_Bool)arg5;	// IMP=0x001000000011ea1f
- (void)delegateDidHandleCommand:(id)arg1;	// IMP=0x001000000011e77e
- (void)handleCommand:(id)arg1;	// IMP=0x001000000011e58b
- (void)_convertEmbeddedRequestIds:(id)arg1 originalCommand:(id)arg2 session:(id)arg3;	// IMP=0x001000000011e449
- (_Bool)_allowWhitelistedCommands:(id)arg1;	// IMP=0x001000000011e3e9
- (_Bool)_filterUnsupportedCommands:(id)arg1 inGroup:(id)arg2 onSession:(id)arg3;	// IMP=0x001000000011e2df
- (void)assistantSessionConnectionDidClose:(id)arg1;	// IMP=0x001000000011e2a8
- (void)assistantSessionRetryingRequest:(id)arg1;	// IMP=0x001000000011e22c
- (void)assistantSessionDictationHIPAAMDMStatusDidChange;	// IMP=0x001000000011e21a
- (void)assistantSession:(id)arg1 beginSessionRetryPreferringWWAN:(_Bool)arg2;	// IMP=0x001000000011e109
- (void)assistantSession:(id)arg1 willRetryOnError:(id)arg2;	// IMP=0x001000000011e038
- (void)assistantSession:(id)arg1 didLoadAssistantSyncRequested:(_Bool)arg2;	// IMP=0x001000000011dff5
- (void)assistantSessionDidDestroyAssistant:(id)arg1;	// IMP=0x001000000011dfbf
- (void)assistantSessionDidCreateAssistant:(id)arg1;	// IMP=0x001000000011df0b
- (void)assistantSession:(id)arg1 didChangeRequestIdFrom:(id)arg2 toId:(id)arg3;	// IMP=0x001000000011dc6f
- (id)assistantSessionCommandsToRestoreStateOnNewConnection:(id)arg1;	// IMP=0x001000000011dc26
- (_Bool)assistantSessionShouldAttemptRetry:(id)arg1;	// IMP=0x001000000011db6e
- (void)assistantSessionConnectionDidReset:(id)arg1;	// IMP=0x001000000011d9ea
- (_Bool)assistantSessionShouldRestartConnectionOnWiFi:(id)arg1;	// IMP=0x001000000011d9d3
- (_Bool)assistantSessionShouldLogVisibleRequestFailure:(id)arg1 forError:(id)arg2;	// IMP=0x001000000011d8d7
- (void)assistantSession:(id)arg1 receivedIntermediateError:(id)arg2;	// IMP=0x001000000011d87b
- (void)assistantSession:(id)arg1 receivedError:(id)arg2 isRetryableError:(_Bool)arg3;	// IMP=0x001000000011d4ea
- (void)assistantSession:(id)arg1 cannotHandleRequest:(id)arg2 error:(id)arg3;	// IMP=0x001000000011d192
- (void)assistantSession:(id)arg1 receivedCommand:(id)arg2;	// IMP=0x001000000011ccc3
- (void)assistantSession:(id)arg1 didOpenConnectionWithPolicyId:(id)arg2 routeId:(id)arg3 connectionDelay:(double)arg4;	// IMP=0x001000000011c9a8
- (void)assistantSessionWillStartConnection:(id)arg1;	// IMP=0x001000000011c8f4
- (_Bool)assistantSessionShouldPrewarmConnetion:(id)arg1;	// IMP=0x001000000011c8b6
- (void)sendRemoteGizmoDeviceToServer:(id)arg1;	// IMP=0x001000000011c755
- (void)resetSessionsIfRequiredBasedOnOrchestrationMode:(_Bool)arg1;	// IMP=0x001000000011c610
- (void)_resetWinningStateAndPurgeRequestMaps;	// IMP=0x001000000011c5e2
- (void)resetWinningState;	// IMP=0x001000000011c5c9
- (_Bool)hasActiveSessionForSendingMetrics;	// IMP=0x001000000011c3ad
- (void)adviseSessionArbiterToContinueWithPreviousWinner:(_Bool)arg1;	// IMP=0x001000000011c2fb
- (void)_pickDefaultWinnerWithDroppingSession:(id)arg1;	// IMP=0x001000000011bd9d
- (void)_cancelOtherSessionRequests:(id)arg1 forRefId:(id)arg2;	// IMP=0x001000000011b8df
- (_Bool)_haveUsefulness:(id)arg1 usefulnessScore:(id *)arg2;	// IMP=0x001000000011b86d
- (_Bool)_isDestructive:(id)arg1;	// IMP=0x001000000011b571
- (void)_queueResultObject:(id)arg1 forSession:(id)arg2;	// IMP=0x001000000011b321
- (void)_resetResultObjectsTimer;	// IMP=0x001000000011b2e2
- (void)_resultObjectsTimerFired:(id)arg1;	// IMP=0x001000000011b1f1
- (void)_startResultObjectsTimer;	// IMP=0x001000000011b0be
- (unsigned int)_resultObjectsHoldTime;	// IMP=0x001000000011b007
- (_Bool)_evaluateResultObjects;	// IMP=0x001000000011a763
- (int)_preferredSessionType;	// IMP=0x001000000011a757
- (void)updateForCallIsLikelyDueToRequest:(_Bool)arg1;	// IMP=0x001000000011a61e
- (void)updateForCallState:(_Bool)arg1;	// IMP=0x001000000011a610
- (void)_unregisterForSleepNotification;	// IMP=0x001000000011a539
- (void)_registerForSleepNotification;	// IMP=0x001000000011a46c
- (void)_powerChangedMessageType:(unsigned int)arg1 notificationID:(long long)arg2;	// IMP=0x001000000011a325
- (void)_languageCodeDidChange:(id)arg1;	// IMP=0x001000000011a25f
- (void)_enabledBitsChanged:(id)arg1;	// IMP=0x001000000011a199
- (void)_unregisterForPossibleSessionDestroyingNotifications;	// IMP=0x001000000011a127
- (void)_registerForPossibleSessionDestroyingNotifications;	// IMP=0x001000000011a0ae
- (id)_saConnectionMode;	// IMP=0x001000000011a03e
- (void)_sharedAssistantdIdentifierDidChange:(id)arg1;	// IMP=0x0010000000119f78
- (void)_updateSharedUserIdentifiers;	// IMP=0x0010000000119ea9
- (id)languageCode;	// IMP=0x0010000000119e97
- (id)_languageCode;	// IMP=0x0010000000119e1e
- (void)_purgeRequestMaps;	// IMP=0x0010000000119d59
- (void)endRetryableRequestForCommand:(id)arg1;	// IMP=0x0010000000119abe
- (void)resetRetryManager;	// IMP=0x0010000000119996
- (void)startRetry;	// IMP=0x0010000000119836
- (void)resetSessionsAtNextRequestBoundaryWithCompletion:(CDUnknownBlockType)arg1;	// IMP=0x0010000000119660
- (void)resetSessionsAtNextRequestBoundary;	// IMP=0x001000000011964c
- (void)resetSessionsAndMakeQuiet:(_Bool)arg1;	// IMP=0x001000000011963a
- (void)_resetSessionsAndMakeQuiet:(_Bool)arg1;	// IMP=0x00100000001192e6
- (void)cancelSessions;	// IMP=0x00100000001192d4
- (void)cancelSynchronously;	// IMP=0x00100000001192aa
- (void)cancel;	// IMP=0x0010000000119227
- (void)_cancelSynchronously:(_Bool)arg1;	// IMP=0x0010000000119097
- (void)beginUpdatingAssistantData;	// IMP=0x0010000000118f53
- (void)preheatSessions;	// IMP=0x0010000000118f3c
- (void)preheatAndMakeQuiet:(_Bool)arg1;	// IMP=0x0010000000118dd4
- (void)_startSession:(int)arg1 makeQuiet:(_Bool)arg2;	// IMP=0x0010000000118bb7
- (void)_startSessions:(_Bool)arg1;	// IMP=0x00100000001188b5
- (void)dealloc;	// IMP=0x00100000001186d6
- (id)initOnQueue:(id)arg1 account:(id)arg2 instanceContext:(id)arg3;	// IMP=0x00100000001184d1

@end

