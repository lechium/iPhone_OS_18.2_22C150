//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <objc/NSObject.h>

@class NSDictionary, NSString, NSUUID, TCCDMainSyncController, TCCDProtectedServiceManager, TCCDServer, TCCDSyncController;

@interface TCCDPlatform : NSObject
{
    _Bool _isChinaSKUDevice;	// 8 = 0x8
    int _indirectRequestsOutstanding;	// 12 = 0xc
    NSDictionary *_configurationDictionary;	// 16 = 0x10
    NSUUID *_bootUUID;	// 24 = 0x18
    NSString *_name;	// 32 = 0x20
    TCCDServer *_server;	// 40 = 0x28
    TCCDSyncController *_syncController;	// 48 = 0x30
    TCCDMainSyncController *_mainSyncController;	// 56 = 0x38
    TCCDProtectedServiceManager *_protectedAppManager;	// 64 = 0x40
    NSDictionary *_servicesByName;	// 72 = 0x48
}

+ (id)allTCCEntitlements;	// IMP=0x004000000005e668
+ (id)currentPlatform;	// IMP=0x001000000005e5fc
+ (id)macOSPlatformNames;	// IMP=0x001000000005e58c
+ (id)iosFamilyPlatformNames;	// IMP=0x001000000005e50d
+ (id)allPlatformNames;	// IMP=0x001000000005e47a
- (void).cxx_destruct;	// IMP=0x0020000000060c71
@property int indirectRequestsOutstanding; // @synthesize indirectRequestsOutstanding=_indirectRequestsOutstanding;
@property(readonly) _Bool isChinaSKUDevice; // @synthesize isChinaSKUDevice=_isChinaSKUDevice;
@property(retain) NSDictionary *servicesByName; // @synthesize servicesByName=_servicesByName;
@property(retain) TCCDProtectedServiceManager *protectedAppManager; // @synthesize protectedAppManager=_protectedAppManager;
@property(retain) TCCDMainSyncController *mainSyncController; // @synthesize mainSyncController=_mainSyncController;
@property(retain) TCCDSyncController *syncController; // @synthesize syncController=_syncController;
@property __weak TCCDServer *server; // @synthesize server=_server;
@property(readonly) NSString *name; // @synthesize name=_name;
@property(readonly) NSDictionary *configurationDictionary; // @synthesize configurationDictionary=_configurationDictionary;
- (_Bool)indirectRequestPipelineStalled;	// IMP=0x0010000000060b6c
- (void)registerWithApplicationResolverSubjectIdentity:(id)arg1 processChain:(id)arg2;	// IMP=0x0010000000060b66
- (_Bool)displayAlert:(id)arg1;	// IMP=0x0010000000060b5e
- (id)prefixOfBundleIdentifiersToResetAfterResetOfAppBundleIdentifier:(id)arg1;	// IMP=0x0010000000060b56
- (_Bool)removalOfAppBundleIdentifierRequiresPruning:(id)arg1;	// IMP=0x0010000000060b4e
- (_Bool)isNonAppBundleIdentifierValid:(id)arg1;	// IMP=0x0010000000060b46
- (void)runBacktraceToolOnProcess:(id)arg1 forService:(id)arg2;	// IMP=0x0010000000060b40
- (void)prepareForAbort;	// IMP=0x0010000000060b3a
- (unsigned long long)evaluatePolicyForUsageStringAndPromptingForClient:(id)arg1 attributionChain:(id)arg2 service:(id)arg3 desiredAuth:(unsigned long long)arg4 resultUsageString:(id *)arg5;	// IMP=0x0010000000060b27
- (void)sendAnalyticsAsyncWithEventName:(id)arg1 fields:(id)arg2;	// IMP=0x0010000000060816
- (void)sendAnalyticsWithEventName:(id)arg1 fields:(id)arg2;	// IMP=0x0010000000060505
- (void)sendAnalyticsForAction:(long long)arg1 service:(id)arg2 subjectIdentity:(id)arg3 indirectObjectIdentity:(id)arg4 authValue:(unsigned long long)arg5 includeV1AuthValue:(_Bool)arg6 v1AuthValue:(unsigned long long)arg7 desiredAuth:(unsigned long long)arg8 domainReason:(id)arg9 promptType:(long long)arg10;	// IMP=0x001000000005fe7b
- (void)sendAnalyticsForEntitlement:(id)arg1 withIdentifier:(id)arg2 service:(id)arg3 function:(id)arg4;	// IMP=0x001000000005fd16
- (void)sendAnalyticsForPlugin:(id)arg1 service:(id)arg2 API:(id)arg3;	// IMP=0x001000000005f9d1
- (void)updateAnalyticsEvent:(id)arg1 fromIdentity:(id)arg2 keyPrefix:(id)arg3;	// IMP=0x001000000005f70f
- (id)stringForAnalyticsAction:(long long)arg1;	// IMP=0x001000000005f6f0
- (void)notifyUserOfDeniedAccessBy:(id)arg1 forService:(id)arg2;	// IMP=0x001000000005f6de
- (id)appBundleURLContainingExecutableURL:(id)arg1;	// IMP=0x001000000005f1c9
- (id)bundleURLContainingExecutableURL:(id)arg1;	// IMP=0x001000000005f187
- (long long)promptingPolicyForIdentity:(id)arg1 accessingService:(id)arg2 withAttributionChain:(id)arg3;	// IMP=0x001000000005f172
- (void)handleCompositionType:(long long)arg1 forParentService:(id)arg2 forRequest:(id)arg3 intoReply:(id)arg4;	// IMP=0x001000000005f160
- (void)forwardMessage:(id)arg1 toUserTCCDFromAttributionChain:(id)arg2 forService:(id)arg3 andMergeReplyInto:(id)arg4 forConnnection:(id)arg5;	// IMP=0x001000000005f14e
- (_Bool)sendMessageAsync:(id)arg1 toTCCDForTargetUID:(unsigned int)arg2 withReplyBlock:(CDUnknownBlockType)arg3;	// IMP=0x001000000005f139
- (id)sendMessageSync:(id)arg1 toTCCDForTargetUID:(unsigned int)arg2;	// IMP=0x001000000005f124
@property(readonly) NSUUID *bootUUID; // @synthesize bootUUID=_bootUUID;
- (id)homeRelativePathToStateDirectory;	// IMP=0x001000000005ef89
- (void)_invalidMethodForPlatform;	// IMP=0x001000000005ef77
- (id)serviceByName:(id)arg1;	// IMP=0x001000000005ebf6
- (void)_configureServices;	// IMP=0x001000000005ebf0
- (id)description;	// IMP=0x001000000005ebde
- (void)loadConfigurationDictionary;	// IMP=0x001000000005e97b
- (id)initWithName:(id)arg1;	// IMP=0x001000000005e908

@end

