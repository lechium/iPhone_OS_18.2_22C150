//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

@class NSObject, NSString;

#pragma mark Blocks

typedef void (^CDUnknownBlockType)(void); // return type and parameters are unknown

#pragma mark Named Structures

struct CLLocationCoordinate2D {
    double latitude;
    double longitude;
};

struct Queue {
    NSObject *_innerQueue;
    NSString *_name;
};

struct _Moment;

struct deque<_Moment, std::allocator<_Moment>> {
    struct __split_buffer<_Moment *, std::allocator<_Moment *>> {
        struct _Moment **__first_;
        struct _Moment **__begin_;
        struct _Moment **__end_;
        struct __compressed_pair<_Moment **, std::allocator<_Moment *>> {
            struct _Moment **__value_;
        } __end_cap_;
    } __map_;
    unsigned long long __start_;
    struct __compressed_pair<unsigned long, std::allocator<_Moment>> {
        unsigned long long __value_;
    } __size_;
};

struct os_unfair_lock_s {
    unsigned int _os_unfair_lock_opaque;
};

struct queue<_Moment, std::deque<_Moment>> {
    struct deque<_Moment, std::allocator<_Moment>> c;
};

struct unique_ptr<std::__hash_node_base<std::__hash_node<_Moment, void *>*>*[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<_Moment, void *>*>*>>> {
    struct __compressed_pair<std::__hash_node_base<std::__hash_node<_Moment, void *>*>**, std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<_Moment, void *>*>*>>> {
        void **__value_;
        struct __bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<_Moment, void *>*>*>> {
            struct __compressed_pair<unsigned long, std::allocator<std::__hash_node_base<std::__hash_node<_Moment, void *>*>*>> {
                unsigned long long __value_;
            } __data_;
        } __value_;
    } __ptr_;
};

struct unordered_set<_Moment, std::hash<_Moment>, std::equal_to<_Moment>, std::allocator<_Moment>> {
    struct __hash_table<_Moment, std::hash<_Moment>, std::equal_to<_Moment>, std::allocator<_Moment>> {
        struct unique_ptr<std::__hash_node_base<std::__hash_node<_Moment, void *>*>*[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<_Moment, void *>*>*>>> __bucket_list_;
        struct __compressed_pair<std::__hash_node_base<std::__hash_node<_Moment, void *>*>, std::allocator<std::__hash_node<_Moment, void *>>> {
            struct __hash_node_base<std::__hash_node<_Moment, void *>*> {
                void *__next_;
            } __value_;
        } __p1_;
        struct __compressed_pair<unsigned long, std::hash<_Moment>> {
            unsigned long long __value_;
        } __p2_;
        struct __compressed_pair<float, std::equal_to<_Moment>> {
            float __value_;
        } __p3_;
    } __table_;
};

#pragma mark Typedef'd Structures

typedef struct {
    unsigned long long _field1;
    id *_field2;
    unsigned long long *_field3;
    unsigned long long _field4[5];
} CDStruct_70511ce9;

