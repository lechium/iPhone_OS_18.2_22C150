//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <objc/NSObject.h>

@class BAExtensionRuntime, NSData, NSDate, NSMutableArray, NSMutableDictionary, NSRecursiveLock, NSString, NSURL;

@interface BAApplicationInfo : NSObject
{
    _Bool _awaitingNetworkConsent;	// 8 = 0x8
    _Bool _userForceQuitApp;	// 9 = 0x9
    _Bool _receivedInstalledNotification;	// 10 = 0xa
    _Bool _receivedInstallingNotification;	// 11 = 0xb
    _Bool _hasLaunchedApplication;	// 12 = 0xc
    _Bool _permittedForInitialBackgroundActivity;	// 13 = 0xd
    long long _applicationState;	// 16 = 0x10
    long long _applicationExtensionState;	// 24 = 0x18
    long long _installSource;	// 32 = 0x20
    NSData *_persistentIdentifier;	// 40 = 0x28
    NSMutableArray *_allowedDownloadDomains;	// 48 = 0x30
    NSMutableArray *_allowedDownloadDomainWildcards;	// 56 = 0x38
    NSString *_applicationIdentifier;	// 64 = 0x40
    NSDate *_lastPeriodicCheckTime;	// 72 = 0x48
    NSDate *_lastApplicationLaunchTime;	// 80 = 0x50
    unsigned long long _initialBackgroundCellularPolicy;	// 88 = 0x58
    NSString *_applicationTeamIdentifier;	// 96 = 0x60
    unsigned long long _optionalAssetDownloadAllowance;	// 104 = 0x68
    unsigned long long _essentialAssetDownloadAllowance;	// 112 = 0x70
    NSURL *_manifestURL;	// 120 = 0x78
    unsigned long long _optionalAmountDownloaded;	// 128 = 0x80
    unsigned long long _essentialAmountDownloaded;	// 136 = 0x88
    NSMutableDictionary *_blocksAwaitingNetworkConsent;	// 144 = 0x90
    NSRecursiveLock *_appInfoRecursiveLock;	// 152 = 0x98
    NSMutableArray *_extensionRuntimeEvents;	// 160 = 0xa0
    BAExtensionRuntime *_currentRuntime;	// 168 = 0xa8
}

+ (id)extensionContainingApplicationList;	// IMP=0x0020000000033853
+ (id)extensionPointQueriesWithPostProcessing:(_Bool)arg1;	// IMP=0x00100000000336b7
+ (id)classesForSerialization;	// IMP=0x00100000000335af
+ (_Bool)supportsSecureCoding;	// IMP=0x00100000000335a7
+ (_Bool)applicationForIdentifierAllowsBackgroundActivity:(id)arg1;	// IMP=0x00100000000332ff
- (void).cxx_destruct;	// IMP=0x0020000000038d83
@property(retain) BAExtensionRuntime *currentRuntime; // @synthesize currentRuntime=_currentRuntime;
@property(retain) NSMutableArray *extensionRuntimeEvents; // @synthesize extensionRuntimeEvents=_extensionRuntimeEvents;
@property(retain) NSRecursiveLock *appInfoRecursiveLock; // @synthesize appInfoRecursiveLock=_appInfoRecursiveLock;
@property(readonly) NSMutableDictionary *blocksAwaitingNetworkConsent; // @synthesize blocksAwaitingNetworkConsent=_blocksAwaitingNetworkConsent;
@property unsigned long long essentialAmountDownloaded; // @synthesize essentialAmountDownloaded=_essentialAmountDownloaded;
@property unsigned long long optionalAmountDownloaded; // @synthesize optionalAmountDownloaded=_optionalAmountDownloaded;
@property(retain) NSURL *manifestURL; // @synthesize manifestURL=_manifestURL;
@property unsigned long long essentialAssetDownloadAllowance; // @synthesize essentialAssetDownloadAllowance=_essentialAssetDownloadAllowance;
@property unsigned long long optionalAssetDownloadAllowance; // @synthesize optionalAssetDownloadAllowance=_optionalAssetDownloadAllowance;
@property(retain) NSString *applicationTeamIdentifier; // @synthesize applicationTeamIdentifier=_applicationTeamIdentifier;
@property unsigned long long initialBackgroundCellularPolicy; // @synthesize initialBackgroundCellularPolicy=_initialBackgroundCellularPolicy;
@property _Bool permittedForInitialBackgroundActivity; // @synthesize permittedForInitialBackgroundActivity=_permittedForInitialBackgroundActivity;
@property _Bool hasLaunchedApplication; // @synthesize hasLaunchedApplication=_hasLaunchedApplication;
@property(retain) NSDate *lastApplicationLaunchTime; // @synthesize lastApplicationLaunchTime=_lastApplicationLaunchTime;
@property(retain) NSDate *lastPeriodicCheckTime; // @synthesize lastPeriodicCheckTime=_lastPeriodicCheckTime;
@property(retain) NSString *applicationIdentifier; // @synthesize applicationIdentifier=_applicationIdentifier;
- (id)debugDescription;	// IMP=0x00100000000389a1
- (id)_serializableAllowedDomainInfo;	// IMP=0x0010000000038984
- (void)_populateAllowedDomainInfoWithArray:(id)arg1;	// IMP=0x001000000003872f
- (void)_debugConsumeTime:(double)arg1;	// IMP=0x0010000000038558
- (void)performAfterNetworkConsentProvided:(CDUnknownBlockType)arg1 queue:(id)arg2;	// IMP=0x00100000000382cb
- (void)applicationLaunched;	// IMP=0x00100000000381de
- (void)donePeriodicCheck;	// IMP=0x001000000003812b
- (void)extensionExited;	// IMP=0x0010000000037f60
- (void)willLaunchExtension;	// IMP=0x0010000000037e53
- (_Bool)shouldLaunchExtension;	// IMP=0x0010000000037e0f
- (void)resetExtensionRuntime;	// IMP=0x0010000000037cc6
- (double)extensionRuntime;	// IMP=0x0010000000037a07
- (_Bool)shouldDoPeriodicCheck;	// IMP=0x0010000000037918
- (_Bool)allowsBackgroundActivity;	// IMP=0x001000000003766f
- (_Bool)initialRestrictionsAreEnforced;	// IMP=0x0010000000037634
- (_Bool)consumeAllowanceShouldStopWithAdditionalBytes:(unsigned long long)arg1 downloadNecessity:(long long)arg2 isManifest:(_Bool)arg3;	// IMP=0x001000000003756a
- (_Bool)_consumeAllowanceShouldStopWithAdditionalBytes:(unsigned long long)arg1 downloadNecessity:(long long)arg2 isManifest:(_Bool)arg3;	// IMP=0x0010000000037472
- (unsigned long long)_remainingDownloadAllowanceWithNecessity:(long long)arg1 isManifest:(_Bool)arg2;	// IMP=0x001000000003736b
- (unsigned long long)remainingDownloadAllowanceWithNecessity:(long long)arg1 isManifest:(_Bool)arg2;	// IMP=0x00100000000372c8
- (unsigned long long)remainingDownloadAllowanceWithNecessity:(long long)arg1;	// IMP=0x00100000000372b4
- (id)applicationSecurityGroups;	// IMP=0x0010000000036fa8
- (id)extensionIdentity;	// IMP=0x0010000000036983
- (void)updateApplicationWithInfoDictionary:(id)arg1 applicationRecord:(id)arg2 overrides:(id)arg3;	// IMP=0x0010000000036225
- (void)applicationInstalled;	// IMP=0x00100000000360e3
- (void)applicationInstallingWithUpdateInstall:(_Bool)arg1;	// IMP=0x0010000000035f20
@property(retain) NSData *persistentIdentifier; // @synthesize persistentIdentifier=_persistentIdentifier;
- (_Bool)setAwaitingNetworkConsent:(_Bool)arg1;	// IMP=0x0010000000035b24
- (_Bool)awaitingNetworkConsent;	// IMP=0x0010000000035a9d
@property _Bool receivedInstallingNotification; // @synthesize receivedInstallingNotification=_receivedInstallingNotification;
@property _Bool receivedInstalledNotification; // @synthesize receivedInstalledNotification=_receivedInstalledNotification;
- (void)applicationPrepareWithDescriptor:(id)arg1;	// IMP=0x00100000000356c4
@property(retain) NSMutableArray *allowedDownloadDomainWildcards; // @synthesize allowedDownloadDomainWildcards=_allowedDownloadDomainWildcards;
@property(retain) NSMutableArray *allowedDownloadDomains; // @synthesize allowedDownloadDomains=_allowedDownloadDomains;
- (void)determineInstallSourceIfUnsetFromAuditToken:(CDStruct_6ad76789)arg1;	// IMP=0x0010000000035334
@property long long installSource; // @synthesize installSource=_installSource;
@property _Bool userForceQuitApp; // @synthesize userForceQuitApp=_userForceQuitApp;
@property long long applicationExtensionState; // @synthesize applicationExtensionState=_applicationExtensionState;
@property long long applicationState; // @synthesize applicationState=_applicationState;
- (_Bool)isEqual:(id)arg1;	// IMP=0x0010000000034e25
- (void)encodeWithCoder:(id)arg1;	// IMP=0x001000000003495f
- (id)initWithCoder:(id)arg1;	// IMP=0x00100000000340ba
- (id)initWithIdentifier:(id)arg1 applicationTeamIdentifier:(id)arg2;	// IMP=0x0010000000033c81
- (id)initWithIdentifier:(id)arg1;	// IMP=0x0010000000033c6d

@end

