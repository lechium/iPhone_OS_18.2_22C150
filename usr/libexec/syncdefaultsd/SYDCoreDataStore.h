//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <objc/NSObject.h>

@class NSCache, NSLock, NSManagedObjectContext, NSPersistentContainer, NSString, NSURL;
@protocol OS_dispatch_queue;

@interface SYDCoreDataStore : NSObject
{
    _Bool _shouldLogValues;	// 8 = 0x8
    NSPersistentContainer *__persistentContainer;	// 16 = 0x10
    NSURL *_URL;	// 24 = 0x18
    NSString *_fileProtectionType;	// 32 = 0x20
    NSObject<OS_dispatch_queue> *_persistentContainerQueue;	// 40 = 0x28
    NSManagedObjectContext *_transactionContext;	// 48 = 0x30
    NSCache *_contexts;	// 56 = 0x38
    NSLock *_contextsLock;	// 64 = 0x40
}

+ (_Bool)isInvalidTokenError:(id)arg1;	// IMP=0x0040000000037c67
+ (_Bool)isCorruptionError:(id)arg1;	// IMP=0x00100000000377be
+ (id)managedObjectModel;	// IMP=0x001000000003690e
- (void).cxx_destruct;	// IMP=0x0020000000037e0c
@property(retain, nonatomic) NSLock *contextsLock; // @synthesize contextsLock=_contextsLock;
@property(retain, nonatomic) NSCache *contexts; // @synthesize contexts=_contexts;
@property(retain, nonatomic) NSManagedObjectContext *transactionContext; // @synthesize transactionContext=_transactionContext;
@property(retain, nonatomic) NSObject<OS_dispatch_queue> *persistentContainerQueue; // @synthesize persistentContainerQueue=_persistentContainerQueue;
@property(nonatomic) _Bool shouldLogValues; // @synthesize shouldLogValues=_shouldLogValues;
@property(retain, nonatomic) NSString *fileProtectionType; // @synthesize fileProtectionType=_fileProtectionType;
@property(retain, nonatomic) NSURL *URL; // @synthesize URL=_URL;
@property(retain, nonatomic) NSPersistentContainer *_persistentContainer; // @synthesize _persistentContainer=__persistentContainer;
- (_Bool)_queue_handleCorruptionIfNecessaryFromError:(id)arg1 inPersistentStoreCoordinator:(id)arg2;	// IMP=0x00100000000379dd
- (void)handleCorruptionIfNecessaryFromError:(id)arg1 inPersistentStoreCoordinator:(id)arg2;	// IMP=0x0010000000037696
- (void)transactionStoreDidSave:(id)arg1;	// IMP=0x001000000003761a
- (_Bool)saveTransaction:(id *)arg1;	// IMP=0x001000000003738f
- (id)transactionalStoreWithError:(id *)arg1;	// IMP=0x0010000000037246
- (unsigned long long)fileSizeBytes;	// IMP=0x0010000000036dcb
- (void)_queue_destroyPersistentStoreInPersistentStoreCoordinator:(id)arg1;	// IMP=0x0010000000036c3a
- (void)destroyPersistentStore;	// IMP=0x0010000000036a85
- (id)persistentContainerWithError:(id *)arg1;	// IMP=0x0010000000036061
- (_Bool)saveContext:(id)arg1 reason:(id)arg2 includingTransactionContext:(_Bool)arg3 error:(id *)arg4;	// IMP=0x0010000000035cd9
- (void)clearContexts;	// IMP=0x0010000000035c2d
- (id)_contextForStoreIdentifier:(id)arg1 persistentContainer:(id)arg2;	// IMP=0x0010000000035a74
- (id)contextForStoreIdentifier:(id)arg1 error:(id *)arg2;	// IMP=0x0010000000035967
- (id)managedKeyValuesMatchingPredicate:(id)arg1 inContext:(id)arg2 error:(id *)arg3;	// IMP=0x001000000003574f
- (id)managedKeyValuesForKeyIDs:(id)arg1 inContext:(id)arg2 error:(id *)arg3;	// IMP=0x0010000000034e93
- (id)managedKeyValueWithRecordName:(id)arg1 inStoreWithIdentifier:(id)arg2 inContext:(id)arg3 error:(id *)arg4;	// IMP=0x0010000000034b57
- (id)managedStoreWithIdentifier:(id)arg1 createIfNecessary:(_Bool)arg2 inContext:(id)arg3 error:(id *)arg4;	// IMP=0x0010000000034878
- (id)managedDatabaseCreateIfNecessary:(_Bool)arg1 inContext:(id)arg2 error:(id *)arg3;	// IMP=0x0010000000034649
- (id)deprecatedSyncEngineMetadataWithError:(id *)arg1;	// IMP=0x00100000000343b2
- (_Bool)saveDeprecatedSyncEngineMetadata:(id)arg1 error:(id *)arg2;	// IMP=0x0010000000034117
- (id)syncEngineStateSerializationWithError:(id *)arg1;	// IMP=0x0010000000033e80
- (_Bool)saveSyncEngineStateSerialization:(id)arg1 error:(id *)arg2;	// IMP=0x0010000000033bd6
- (id)dictionaryRepresentationForStoreWithIdentifier:(id)arg1 error:(id *)arg2;	// IMP=0x0010000000033221
- (short)failedMigrationCountWithError:(id *)arg1;	// IMP=0x0010000000032fe7
- (_Bool)setFailedMigrationCount:(short)arg1 error:(id *)arg2;	// IMP=0x0010000000032cc8
- (_Bool)didMigrateFromPlistsWithError:(id *)arg1;	// IMP=0x0010000000032a92
- (_Bool)setDidMigrateFromPlists:(_Bool)arg1 error:(id *)arg2;	// IMP=0x0010000000032774
- (id)acAccountIdentifierWithError:(id *)arg1;	// IMP=0x001000000003251b
- (_Bool)setACAccountIdentifier:(id)arg1 error:(id *)arg2;	// IMP=0x001000000003224c
- (_Bool)clearServerSystemFieldsRecordsForAllStoresWithError:(id *)arg1;	// IMP=0x0010000000031d33
- (id)changedKeysForStoreIdentifier:(id)arg1 sinceChangeToken:(id)arg2 error:(id *)arg3;	// IMP=0x00100000000305ba
- (id)currentChangeTokenForStoreIdentifier:(id)arg1 error:(id *)arg2;	// IMP=0x00100000000300b4
- (unsigned long long)numberOfKeyValuesInStoreWithIdentifier:(id)arg1 error:(id *)arg2;	// IMP=0x001000000002fdb9
- (_Bool)clearServerSystemFieldsRecordsForAllKeyValuesInStoreWithIdentifier:(id)arg1 error:(id *)arg2;	// IMP=0x001000000002f82a
- (id)allStoreIdentifiersWithError:(id *)arg1;	// IMP=0x001000000002f235
- (id)allRecordNamesInStoreWithIdentifier:(id)arg1 error:(id *)arg2;	// IMP=0x001000000002ec4b
- (_Bool)deleteDataForStoresMatchingPredicate:(id)arg1 context:(id)arg2 error:(id *)arg3;	// IMP=0x001000000002e96e
- (_Bool)deleteDataForAllStoresWithError:(id *)arg1;	// IMP=0x001000000002e8ab
- (_Bool)deleteDataForStoreWithIdentifier:(id)arg1 error:(id *)arg2;	// IMP=0x001000000002e790
- (_Bool)saveServerSyncAnchorSystemFieldsRecordData:(id)arg1 forStoreWithIdentifier:(id)arg2 error:(id *)arg3;	// IMP=0x001000000002e41d
- (id)serverSyncAnchorSystemFieldsRecordDataForStoreWithIdentifier:(id)arg1 error:(id *)arg2;	// IMP=0x001000000002e0d8
- (_Bool)removeKeyValueForRecordName:(id)arg1 inStoreWithIdentifier:(id)arg2 error:(id *)arg3;	// IMP=0x001000000002dc9b
- (_Bool)removeKeyValueForKey:(id)arg1 inStoreWithIdentifier:(id)arg2 excludeFromChangeTracking:(_Bool)arg3 error:(id *)arg4;	// IMP=0x001000000002d747
- (_Bool)saveKeyValue:(id)arg1 inStoreWithIdentifier:(id)arg2 error:(id *)arg3;	// IMP=0x001000000002d722
- (_Bool)_saveKeyValues:(id)arg1 excludeFromChangeTracking:(_Bool)arg2 enforceQuota:(_Bool)arg3 forceCreateNewRow:(_Bool)arg4 error:(id *)arg5;	// IMP=0x001000000002c217
- (_Bool)saveKeyValues:(id)arg1 excludeFromChangeTracking:(_Bool)arg2 enforceQuota:(_Bool)arg3 error:(id *)arg4;	// IMP=0x001000000002c1f5
- (_Bool)_saveKeyValue:(id)arg1 inStoreWithIdentifier:(id)arg2 excludeFromChangeTracking:(_Bool)arg3 enforceQuota:(_Bool)arg4 forceCreateNewRow:(_Bool)arg5 error:(id *)arg6;	// IMP=0x001000000002bff9
- (_Bool)saveKeyValue:(id)arg1 inStoreWithIdentifier:(id)arg2 excludeFromChangeTracking:(_Bool)arg3 enforceQuota:(_Bool)arg4 error:(id *)arg5;	// IMP=0x001000000002bfdd
- (id)keyValueFromManagedKeyValue:(id)arg1 inStoreWithIdentifier:(id)arg2;	// IMP=0x001000000002bbe0
- (id)keyValueForRecordName:(id)arg1 inStoreWithIdentifier:(id)arg2 error:(id *)arg3;	// IMP=0x001000000002b863
- (id)keyValuesForKeyIDs:(id)arg1 createIfNecessary:(_Bool)arg2 error:(id *)arg3;	// IMP=0x001000000002acdd
- (id)keyValueForKey:(id)arg1 inStoreWithIdentifier:(id)arg2 createIfNecessary:(_Bool)arg3 error:(id *)arg4;	// IMP=0x001000000002a95a
- (id)description;	// IMP=0x001000000002a8b8
- (void)dealloc;	// IMP=0x001000000002a843
- (id)initWithURL:(id)arg1 fileProtectionType:(id)arg2 persistentContainer:(id)arg3 isTransactional:(_Bool)arg4;	// IMP=0x001000000002a54c
- (id)initWithURL:(id)arg1 fileProtectionType:(id)arg2;	// IMP=0x001000000002a534
- (id)initWithURL:(id)arg1;	// IMP=0x001000000002a518

@end

