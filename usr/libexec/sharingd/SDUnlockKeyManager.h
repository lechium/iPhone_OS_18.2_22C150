//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

@class NSDate, NSObject, NSString, NSTimer, SDUnlockKeyMetricDates, SDUnlockSessionRecord;
@protocol OS_dispatch_source;

@interface SDUnlockKeyManager
{
    _Bool _useEscrowRecord;	// 8 = 0x8
    _Bool _remoteDeviceLocked;	// 9 = 0x9
    _Bool _ltkWaitingForUnlock;	// 10 = 0xa
    _Bool _outstandingStartLTK;	// 11 = 0xb
    _Bool _unlockingForKeybagUnlock;	// 12 = 0xc
    _Bool _needsOffWristBeforePairedUnlock;	// 13 = 0xd
    _Bool _wasInLockScreen;	// 14 = 0xe
    _Bool _autoUnlockEnabledUpdatedAfterFirstUnlock;	// 15 = 0xf
    _Bool _waitingForAutoUnlockStateUpdateToStartPairedUnlock;	// 16 = 0x10
    long long _unlockingState;	// 24 = 0x18
    NSTimer *_stashTimer;	// 32 = 0x20
    NSDate *_deviceSwitchUnlockRetryDate;	// 40 = 0x28
    NSObject<OS_dispatch_source> *_delayedStartTimer;	// 48 = 0x30
    NSObject<OS_dispatch_source> *_stateTimer;	// 56 = 0x38
    NSObject<OS_dispatch_source> *_longTermKeyTimer;	// 64 = 0x40
    SDUnlockSessionRecord *_sessionRecord;	// 72 = 0x48
    SDUnlockKeyMetricDates *_metricDates;	// 80 = 0x50
    CDUnknownBlockType _stashHandler;	// 88 = 0x58
    CDUnknownBlockType _stateHandler;	// 96 = 0x60
}

+ (id)sharedKeyManager;	// IMP=0x0020000000206594
- (void).cxx_destruct;	// IMP=0x002000000020f5ee
@property(copy) CDUnknownBlockType stateHandler; // @synthesize stateHandler=_stateHandler;
@property(copy) CDUnknownBlockType stashHandler; // @synthesize stashHandler=_stashHandler;
@property(retain) SDUnlockKeyMetricDates *metricDates; // @synthesize metricDates=_metricDates;
@property(retain) SDUnlockSessionRecord *sessionRecord; // @synthesize sessionRecord=_sessionRecord;
@property(retain) NSObject<OS_dispatch_source> *longTermKeyTimer; // @synthesize longTermKeyTimer=_longTermKeyTimer;
@property(retain) NSObject<OS_dispatch_source> *stateTimer; // @synthesize stateTimer=_stateTimer;
@property(retain) NSObject<OS_dispatch_source> *delayedStartTimer; // @synthesize delayedStartTimer=_delayedStartTimer;
@property(retain) NSDate *deviceSwitchUnlockRetryDate; // @synthesize deviceSwitchUnlockRetryDate=_deviceSwitchUnlockRetryDate;
@property _Bool waitingForAutoUnlockStateUpdateToStartPairedUnlock; // @synthesize waitingForAutoUnlockStateUpdateToStartPairedUnlock=_waitingForAutoUnlockStateUpdateToStartPairedUnlock;
@property _Bool autoUnlockEnabledUpdatedAfterFirstUnlock; // @synthesize autoUnlockEnabledUpdatedAfterFirstUnlock=_autoUnlockEnabledUpdatedAfterFirstUnlock;
@property _Bool wasInLockScreen; // @synthesize wasInLockScreen=_wasInLockScreen;
@property _Bool needsOffWristBeforePairedUnlock; // @synthesize needsOffWristBeforePairedUnlock=_needsOffWristBeforePairedUnlock;
@property _Bool unlockingForKeybagUnlock; // @synthesize unlockingForKeybagUnlock=_unlockingForKeybagUnlock;
@property _Bool outstandingStartLTK; // @synthesize outstandingStartLTK=_outstandingStartLTK;
@property _Bool ltkWaitingForUnlock; // @synthesize ltkWaitingForUnlock=_ltkWaitingForUnlock;
@property _Bool remoteDeviceLocked; // @synthesize remoteDeviceLocked=_remoteDeviceLocked;
@property(retain) NSTimer *stashTimer; // @synthesize stashTimer=_stashTimer;
@property _Bool useEscrowRecord; // @synthesize useEscrowRecord=_useEscrowRecord;
- (void)consolidateLatencies:(id)arg1;	// IMP=0x001000000020ed26
- (void)initializeMetrics;	// IMP=0x001000000020e9fb
- (_Bool)initiateStashBagCreationWithManifest:(id)arg1;	// IMP=0x001000000020e823
- (void)initiateRemoteUnlock;	// IMP=0x001000000020de66
- (_Bool)startUnlockIfNeeded;	// IMP=0x001000000020ddb4
- (_Bool)shouldStartUnlock;	// IMP=0x001000000020dc88
- (_Bool)shouldUseTwoPartPill;	// IMP=0x001000000020dc31
- (_Bool)pairedWatchSupportsRelock;	// IMP=0x001000000020dafa
- (void)sendRelockRequestWithReset:(_Bool)arg1;	// IMP=0x001000000020d91f
- (void)sendStateRequest;	// IMP=0x001000000020d6a7
- (void)sendStashToken:(id)arg1 sessionID:(unsigned int)arg2;	// IMP=0x001000000020d453
- (void)sendStashKeyRequest:(id)arg1 sessionID:(unsigned int)arg2;	// IMP=0x001000000020d1ff
- (void)sendSessionAuthenticationToken:(id)arg1 sessionID:(unsigned int)arg2;	// IMP=0x001000000020cf31
- (void)sendSessionKeyExchangeRequest:(id)arg1 usedEscrow:(_Bool)arg2 sessionID:(unsigned int)arg3;	// IMP=0x001000000020cd19
- (void)sendSetupCreateEscrowRecordWithSessionID:(unsigned int)arg1 stepData:(id)arg2 errorCode:(long long)arg3;	// IMP=0x001000000020cb78
- (void)sendSetupSessionCreatedWithLocalKey:(id)arg1 stepData:(id)arg2 sessionID:(unsigned int)arg3 errorCode:(long long)arg4;	// IMP=0x001000000020c99d
- (void)sendClassALongTermKeyResponse:(id)arg1 sessionID:(unsigned int)arg2 errorCode:(unsigned int)arg3;	// IMP=0x001000000020c7f6
- (void)sendLongTermKeyResponse:(id)arg1 requestID:(id)arg2;	// IMP=0x001000000020c605
- (void)sendStartLTKTransfer;	// IMP=0x001000000020c407
- (void)handleUnlockStateResponse:(id)arg1;	// IMP=0x001000000020c17b
- (void)handleStashConfirmation:(id)arg1;	// IMP=0x001000000020c00d
- (void)handleStashKeyExchangeResponse:(id)arg1;	// IMP=0x001000000020bcae
- (void)handleResetState:(id)arg1;	// IMP=0x001000000020bb7e
- (void)handleUnlockConfirmation:(id)arg1;	// IMP=0x001000000020b73c
- (void)handleSessionKeyExchangeResponse:(id)arg1;	// IMP=0x001000000020b130
- (void)handleCreateEscrowSecret:(id)arg1;	// IMP=0x001000000020ad92
- (void)handleEscrowSessionRequest:(unsigned int)arg1 withUpdatedLongTermKey:(_Bool)arg2;	// IMP=0x001000000020aaad
- (void)handleSetupRequest:(id)arg1;	// IMP=0x001000000020a82b
- (_Bool)updateLongTermKey:(id)arg1;	// IMP=0x001000000020a6eb
- (void)handleClassALongTermKeyRequest:(id)arg1;	// IMP=0x001000000020a47c
- (void)handleLongTermKeyRequest:(id)arg1;	// IMP=0x001000000020a3bb
- (void)handleRemoteLockStateChanged:(id)arg1;	// IMP=0x001000000020a04d
- (void)idsControllerNearbyStateChanged:(id)arg1;	// IMP=0x0010000000209fdc
- (void)idsController:(id)arg1 didReceiveProtoData:(id)arg2 forType:(unsigned short)arg3;	// IMP=0x0010000000209dc9
- (id)stringForState:(long long)arg1;	// IMP=0x0010000000209daa
@property long long unlockingState; // @synthesize unlockingState=_unlockingState;
- (void)resetState;	// IMP=0x0010000000209a31
- (void)resetAndClearState;	// IMP=0x00100000002099f7
- (void)resetSetupState;	// IMP=0x00100000002099bd
- (void)notifyStashStateWithError:(id)arg1;	// IMP=0x00100000002098c4
- (void)establishStashBagWithManifest:(id)arg1 completionHandler:(CDUnknownBlockType)arg2;	// IMP=0x0010000000209635
- (void)establishStashBagWithCompletionHandler:(CDUnknownBlockType)arg1;	// IMP=0x00100000002093d9
- (void)invalidateStashTimer;	// IMP=0x0010000000209397
- (void)stashTimerFired:(id)arg1;	// IMP=0x001000000020929b
- (void)restartStashTimer;	// IMP=0x001000000020922e
- (void)invalidateStateTimer;	// IMP=0x00100000002091a1
- (void)restartStateTimer;	// IMP=0x0010000000208f66
- (void)notifyUnlockStateWithState:(id)arg1 error:(id)arg2;	// IMP=0x0010000000208f1d
- (void)unlockStateForDevice:(id)arg1 completionHandler:(CDUnknownBlockType)arg2;	// IMP=0x0010000000208dd7
- (void)syncUnlockEnabled:(_Bool)arg1;	// IMP=0x0010000000208cfa
- (_Bool)unlockEnabled;	// IMP=0x0010000000208c80
- (void)disableUnlockPairingForSecurityManager:(id)arg1;	// IMP=0x0010000000208bc1
- (void)disableUnlockPairing;	// IMP=0x0010000000208bad
- (void)checkDevicePairingState;	// IMP=0x0010000000208ba7
- (void)handleActiveDeviceUpdated;	// IMP=0x0010000000208a17
- (void)releaseKeyBagAssertion;	// IMP=0x00100000002089bb
- (void)takeMobileKeybagAssertion;	// IMP=0x001000000020895f
- (void)invalidateLongTermKeyTimer;	// IMP=0x00100000002088d2
- (void)restartLongTermKeyTimer:(unsigned long long)arg1;	// IMP=0x0010000000208749
- (void)invalidateDelayedStartTimer;	// IMP=0x00100000002086bc
- (void)restartDelayedStartTimer:(unsigned long long)arg1 withCompletionHandler:(CDUnknownBlockType)arg2;	// IMP=0x0010000000208502
- (void)newDeviceBecameActive:(id)arg1;	// IMP=0x001000000020843c
- (void)devicesDidFailToPair:(id)arg1;	// IMP=0x0010000000208397
- (void)devicesDidUnpair:(id)arg1;	// IMP=0x00100000002082f2
- (void)bannerLockButtonWasTapped;	// IMP=0x0010000000208092
- (void)bannerDidDismiss;	// IMP=0x0010000000207e22
- (void)handlePairedWatchWristStateChanged;	// IMP=0x0010000000207c66
- (void)beginUnlockIfNotOnLockScreen;	// IMP=0x00100000002079dd
- (void)handleSystemUIChanged;	// IMP=0x001000000020780b
- (void)handleUILockStateChange;	// IMP=0x001000000020758e
- (void)keyBagLockStateChange:(id)arg1;	// IMP=0x0010000000207172
- (void)startLTKExchange;	// IMP=0x0010000000207137
- (void)handleAutoUnlockEnabledStateUpdated;	// IMP=0x0010000000206ecf
- (void)handleConfigState;	// IMP=0x0010000000206e0f
- (void)deviceDidEnterConfigurationState:(id)arg1;	// IMP=0x0010000000206d38
- (void)addObserversForTests;	// IMP=0x0010000000206d32
- (id)getWatchNameForTesting;	// IMP=0x0010000000206ca8
- (id)generateDebugInfo;	// IMP=0x0010000000206a31
- (void)debugInfoRequested:(id)arg1;	// IMP=0x00000000002069c7
- (void)addObservers;	// IMP=0x001000000020674c
- (id)init;	// IMP=0x00100000002065e9

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
// Preceding property had unknown attributes: ?
// Original attribute string: T@"NSString",?,R,C

@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

