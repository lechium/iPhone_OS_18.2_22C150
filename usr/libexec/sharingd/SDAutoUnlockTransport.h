//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

@class IDSService, NSDate, NSMapTable, NSMutableDictionary, NSNumber, NSObject, NSSet, NSString;
@protocol OS_dispatch_queue, SDAutoUnlockTransportClient;

@interface SDAutoUnlockTransport
{
    NSDate *_lastSeenWatchDate;	// 8 = 0x8
    NSNumber *_watchExistedInUnlockList;	// 16 = 0x10
    NSNumber *_watchCurrentlyInList;	// 24 = 0x18
    IDSService *_autoUnlockService;	// 32 = 0x20
    id <SDAutoUnlockTransportClient> _primaryClient;	// 40 = 0x28
    IDSService *_idsService;	// 48 = 0x30
    IDSService *_activityService;	// 56 = 0x38
    NSObject<OS_dispatch_queue> *_transportQueue;	// 64 = 0x40
    NSObject<OS_dispatch_queue> *_clientQueue;	// 72 = 0x48
    NSMapTable *_clientMap;	// 80 = 0x50
    NSMutableDictionary *_completionHandlers;	// 88 = 0x58
    NSMutableDictionary *_sendIdentifierToSessionID;	// 96 = 0x60
    NSMutableDictionary *_sendDates;	// 104 = 0x68
    NSDate *_lastSendDate;	// 112 = 0x70
    NSMutableDictionary *_autoUnlockDeviceCache;	// 120 = 0x78
    NSMutableDictionary *_cloudPairRetryRecords;	// 128 = 0x80
    NSMutableDictionary *_cachedBluetoothIDToUniqueIDs;	// 136 = 0x88
    NSSet *_cachedApproveBluetoothIDs;	// 144 = 0x90
}

+ (id)sharedTransport;	// IMP=0x002000000019a5b3
- (void).cxx_destruct;	// IMP=0x00200000001a29bf
@property(retain, nonatomic) NSSet *cachedApproveBluetoothIDs; // @synthesize cachedApproveBluetoothIDs=_cachedApproveBluetoothIDs;
@property(retain, nonatomic) NSMutableDictionary *cachedBluetoothIDToUniqueIDs; // @synthesize cachedBluetoothIDToUniqueIDs=_cachedBluetoothIDToUniqueIDs;
@property(retain, nonatomic) NSMutableDictionary *cloudPairRetryRecords; // @synthesize cloudPairRetryRecords=_cloudPairRetryRecords;
@property(retain, nonatomic) NSMutableDictionary *autoUnlockDeviceCache; // @synthesize autoUnlockDeviceCache=_autoUnlockDeviceCache;
- (id);	// IMP=0x00100000001a292b
@property(retain, nonatomic) NSDate *lastSendDate; // @synthesize lastSendDate=_lastSendDate;
@property(retain) NSMutableDictionary *sendDates; // @synthesize sendDates=_sendDates;
@property(retain, nonatomic) NSMutableDictionary *sendIdentifierToSessionID; // @synthesize sendIdentifierToSessionID=_sendIdentifierToSessionID;
@property(retain) NSMutableDictionary *completionHandlers; // @synthesize completionHandlers=_completionHandlers;
@property(retain, nonatomic) NSMapTable *clientMap; // @synthesize clientMap=_clientMap;
@property(retain, nonatomic) NSObject<OS_dispatch_queue> *clientQueue; // @synthesize clientQueue=_clientQueue;
@property(retain, nonatomic) NSObject<OS_dispatch_queue> *transportQueue; // @synthesize transportQueue=_transportQueue;
@property(retain, nonatomic) IDSService *activityService; // @synthesize activityService=_activityService;
@property(retain, nonatomic) IDSService *idsService; // @synthesize idsService=_idsService;
@property __weak id <SDAutoUnlockTransportClient> primaryClient; // @synthesize primaryClient=_primaryClient;
- (id)autoUnlockService;	// IMP=0x00100000001a279c
- (id)state;	// IMP=0x00100000001a2281
- (_Bool)pairingRequestIsValidForDeviceID:(id)arg1 messageContext:(id)arg2;	// IMP=0x00100000001a2009
- (_Bool)disableEncryption;	// IMP=0x00100000001a1ff0
- (_Bool)showOtherDevices;	// IMP=0x00100000001a1fd7
- (_Bool)showIDInName;	// IMP=0x00100000001a1fbe
@property(retain, nonatomic) NSNumber *watchCurrentlyInList; // @synthesize watchCurrentlyInList=_watchCurrentlyInList;
@property(retain, nonatomic) NSNumber *watchExistedInUnlockList; // @synthesize watchExistedInUnlockList=_watchExistedInUnlockList;
@property(retain, nonatomic) NSDate *lastSeenWatchDate; // @synthesize lastSeenWatchDate=_lastSeenWatchDate;
@property(readonly, nonatomic) _Bool watchSeenRecently;
- (void)resetAppleWatchExisted;	// IMP=0x00100000001a18f0
@property(readonly, nonatomic) _Bool appleWatchExisted;
- (void)service:(id)arg1 account:(id)arg2 identifier:(id)arg3 hasBeenDeliveredWithContext:(id)arg4;	// IMP=0x00100000001a15a5
- (void)service:(id)arg1 account:(id)arg2 incomingUnhandledProtobuf:(id)arg3 fromID:(id)arg4 context:(id)arg5;	// IMP=0x00100000001a0bca
- (void)service:(id)arg1 nearbyDevicesChanged:(id)arg2;	// IMP=0x00100000001a0a21
- (void)service:(id)arg1 devicesChanged:(id)arg2;	// IMP=0x00100000001a08fc
- (id)dataFromUUID:(id)arg1;	// IMP=0x00100000001a087c
- (id)transferDataFromPayload:(id)arg1 sessionID:(id)arg2;	// IMP=0x00100000001a0794
- (id)sendPayload:(id)arg1 toDevice:(id)arg2 type:(unsigned short)arg3 sessionID:(id)arg4 queueOneID:(id)arg5 wantsACK:(_Bool)arg6 timeout:(id)arg7 completion:(CDUnknownBlockType)arg8;	// IMP=0x00100000001a073b
- (void)sendPayload:(id)arg1 toDevice:(id)arg2 type:(unsigned short)arg3 sessionID:(id)arg4 queueOneID:(id)arg5 timeout:(id)arg6 completion:(CDUnknownBlockType)arg7;	// IMP=0x00100000001a06ff
- (void)sendPayload:(id)arg1 toDevice:(id)arg2 type:(unsigned short)arg3 sessionID:(id)arg4 queueOneID:(id)arg5 timeout:(id)arg6 errorHandler:(CDUnknownBlockType)arg7;	// IMP=0x00100000001a062b
- (void)sendPayload:(id)arg1 toDevice:(id)arg2 type:(unsigned short)arg3 sessionID:(id)arg4 timeout:(id)arg5 errorHandler:(CDUnknownBlockType)arg6;	// IMP=0x00100000001a05ff
- (void)loadCloudPairRetries;	// IMP=0x00100000001a0538
- (_Bool)canRetryCloudPairingForDeviceID:(id)arg1 useShortDate:(_Bool)arg2;	// IMP=0x00100000001a02d9
- (void)updateRetryDatesForDeviceIDs:(id)arg1;	// IMP=0x001000000019ff06
- (void)triggerCloudPairRetryWithShortRetryDeviceIDs:(id)arg1;	// IMP=0x001000000019ff00
- (void)handleSuccessfulMessageSentWithIdentifier:(id)arg1 sessionID:(id)arg2;	// IMP=0x001000000019fdd0
- (id)stableBluetoothIdentifierForIDSDevice:(id)arg1;	// IMP=0x001000000019fd4f
- (id)connectionCacheDevices;	// IMP=0x001000000019fbca
- (_Bool)localDeviceIDSRegistered;	// IMP=0x001000000019f9a4
- (_Bool)activityServiceHasWatch;	// IMP=0x001000000019f74d
- (id)placeholderDevice;	// IMP=0x001000000019f627
- (void)updateBluetoothIDCache;	// IMP=0x001000000019f22b
- (void)logBluetoothIDCache;	// IMP=0x001000000019f179
- (id)cachedIDSDeviceIDsForBluetoothID:(id)arg1;	// IMP=0x001000000019f0ff
- (id)idsDeviceIDsForBluetoothID:(id)arg1;	// IMP=0x001000000019eea8
- (id)idsDeviceForBluetoothID:(id)arg1;	// IMP=0x001000000019ecaf
- (id)idsDeviceForUniqueID:(id)arg1;	// IMP=0x001000000019eab6
- (id)proxyBluetoothDeviceIDForDeviceID:(id)arg1;	// IMP=0x001000000019e9c4
- (id)nameForDevice:(id)arg1;	// IMP=0x001000000019e8d8
- (_Bool)macVersionEligibleForDeviceID:(id)arg1;	// IMP=0x001000000019e582
- (_Bool)watchVersionEligibleForDevice:(id)arg1;	// IMP=0x001000000019e473
- (id)modelNameForDevice:(id)arg1;	// IMP=0x001000000019e441
- (void)updateApproveBluetoothIDs;	// IMP=0x001000000019e0da
- (id)approveBluetoothIDs;	// IMP=0x001000000019e036
- (id)autoUnlockDeviceForIDSDevice:(id)arg1 cloudPaired:(_Bool)arg2 cached:(_Bool)arg3;	// IMP=0x001000000019d712
- (id)autoUnlockDeviceForIDSDevice:(id)arg1;	// IMP=0x001000000019d6f8
- (id)enabledAutoUnlockLockDevices;	// IMP=0x001000000019d3b2
- (id)onqueue_enabledAutoUnlockDevicesUsingCache:(_Bool)arg1;	// IMP=0x001000000019cfc8
- (id)enabledAutoUnlockDevicesUsingCache:(_Bool)arg1;	// IMP=0x001000000019ce6e
- (id)enabledAutoUnlockDevices;	// IMP=0x001000000019ce5a
- (id)onqueue_autoUnlockEligibleDevices:(_Bool)arg1 deviceType:(long long)arg2;	// IMP=0x001000000019c557
- (id)autoUnlockEligibleDevicesWithCloudPairing:(_Bool)arg1 deviceType:(long long)arg2;	// IMP=0x001000000019c3ee
- (id)autoUnlockEligibleWatchesWithCloudPairing:(_Bool)arg1;	// IMP=0x001000000019c3d7
- (id)autoUnlockEligibleWatches;	// IMP=0x001000000019c3c0
- (id)onqueue_devicesWithLTKs;	// IMP=0x001000000019c15d
- (id)devicesWithLTKs;	// IMP=0x001000000019c011
- (id)autoUnlockDeviceForBluetoothID:(id)arg1 cached:(_Bool)arg2;	// IMP=0x001000000019bfa0
- (id)autoUnlockDeviceForBluetoothID:(id)arg1;	// IMP=0x001000000019bf8c
- (id)autoUnlockDeviceForDeviceID:(id)arg1;	// IMP=0x001000000019bf2d
- (id)modelIdentifierForDeviceID:(id)arg1;	// IMP=0x001000000019bedd
- (long long)deviceTypeForDevice:(id)arg1;	// IMP=0x001000000019bcfd
- (long long)deviceTypeForDeviceID:(id)arg1;	// IMP=0x001000000019bcaa
- (id)deviceNameForDeviceID:(id)arg1;	// IMP=0x001000000019bc5a
- (id)idsMacDeviceIDs;	// IMP=0x001000000019b9e9
- (id)idsDevicesIDs;	// IMP=0x001000000019b820
- (_Bool)deviceNearby;	// IMP=0x001000000019b7dc
- (_Bool)isDeviceSatellitePaired;	// IMP=0x001000000019b7d4
- (id)activeDevice;	// IMP=0x001000000019b657
- (id)pairedAutoUnlockDevice;	// IMP=0x001000000019b5f8
- (id)pairedDeviceID;	// IMP=0x001000000019b5a8
- (id)onqueue_bluetoothDeviceIdentifiers;	// IMP=0x001000000019b3a6
- (id)bluetoothDeviceIdentifiers;	// IMP=0x001000000019b264
- (id)onqueue_bluetoothIDForIDSID:(id)arg1;	// IMP=0x001000000019b01b
- (id)bluetoothIDForIDSID:(id)arg1;	// IMP=0x001000000019ae75
- (void)clearAutoUnlockDeviceCache;	// IMP=0x001000000019add8
- (void)refreshAutoUnlockDeviceCache;	// IMP=0x001000000019ada1
- (void)logDevices;	// IMP=0x001000000019acc1
- (void)removeClientForIdentifier:(id)arg1;	// IMP=0x001000000019a959
- (void)addClient:(id)arg1 forIdentifer:(id)arg2;	// IMP=0x001000000019a826
- (id)init;	// IMP=0x001000000019a608

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
// Preceding property had unknown attributes: ?
// Original attribute string: T@"NSString",?,R,C

@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

