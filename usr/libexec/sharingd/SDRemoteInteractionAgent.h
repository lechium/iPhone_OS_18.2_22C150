//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <objc/NSObject.h>

@class CUSystemMonitor, MISSING_TYPE, NSMutableDictionary, NSMutableSet, NSSet, NSString, NSUUID, RPCompanionLinkClient, SDNotificationManager, SFDeviceDiscovery, SFService;
@protocol OS_dispatch_queue, OS_dispatch_source;

@interface SDRemoteInteractionAgent : NSObject
{
    NSObject<OS_dispatch_source> *_aggressiveTimer;	// 8 = 0x8
    _Bool _clientEnabled;	// 16 = 0x10
    RPCompanionLinkClient *_clinkClient;	// 24 = 0x18
    _Bool _cloudPairedOnly;	// 32 = 0x20
    SFService *_controlService;	// 40 = 0x28
    NSUUID *_currentSessionID;	// 48 = 0x30
    NSString *_currentText;	// 56 = 0x38
    SFDeviceDiscovery *_deviceDiscovery;	// 64 = 0x40
    NSMutableDictionary *_devices;	// 72 = 0x48
    _Bool _idsMonitorInstalled;	// 80 = 0x50
    NSMutableSet *_legacy_sessionDeviceIDs;	// 88 = 0x58
    SDNotificationManager *_notificationManager;	// 96 = 0x60
    NSMutableDictionary *_notificationTimers;	// 104 = 0x68
    _Bool _rapportMonitorInstalled;	// 112 = 0x70
    long long _rssiThreshold;	// 120 = 0x78
    NSObject<OS_dispatch_source> *_rtiTimer;	// 128 = 0x80
    _Bool _serverEnabled;	// 136 = 0x88
    NSSet *_sessionDeviceIDs;	// 144 = 0x90
    NSMutableSet *_sessions;	// 152 = 0x98
    CUSystemMonitor *_systemMonitor;	// 160 = 0xa0
    _Bool _preventNotifications;	// 168 = 0xa8
    NSObject<OS_dispatch_queue> *_dispatchQueue;	// 176 = 0xb0
}

+ (id)sharedAgent;	// IMP=0x00200000000f1b42
- (void).cxx_destruct;	// IMP=0x00200000000f6c11
@property(nonatomic) _Bool preventNotifications; // @synthesize preventNotifications=_preventNotifications;
@property(retain, nonatomic) NSObject<OS_dispatch_queue> *dispatchQueue; // @synthesize dispatchQueue=_dispatchQueue;
- (void)testKeyboardUpdateWithDelay;	// IMP=0x00100000000f6bc1
- (void)testKeyboardUpdate;	// IMP=0x00100000000f6abf
- (void)testKeyboardRemoveWithDelay;	// IMP=0x00100000000f6a9c
- (void)testKeyboardRemove;	// IMP=0x00100000000f69c6
- (void)testKeyboardPostWithDelay;	// IMP=0x00100000000f69a3
- (void)testKeyboardPostThenUpdate;	// IMP=0x00100000000f68b7
- (void)testKeyboardPost:(id)arg1;	// IMP=0x00100000000f679a
- (void)clientUserDidTapNotification:(id)arg1;	// IMP=0x00100000000f6731
- (void)_clientUpdateCoalesceTimerForDevice:(id)arg1 identifier:(id)arg2;	// IMP=0x00100000000f6395
- (MISSING_TYPE *)clientTextSessionDidBegin:device: /* Error: Ran out of types for this method. */;	// IMP=0x00100000000f637a
- (void)clientNotificationUpdateForDevice:(id)arg1 info:(id)arg2;	// IMP=0x00100000000f61a3
- (void)clientNotificationUpdateForDevice:(id)arg1 rtiData:(id)arg2;	// IMP=0x00100000000f5fcc
- (void)clientNotificationRemoveForDevice:(id)arg1;	// IMP=0x00100000000f5e27
- (void)clientNotificationPostIfNeededForDevice:(id)arg1;	// IMP=0x00100000000f5932
- (id)_rpCompanionLinkDeviceForSFDevice:(id)arg1;	// IMP=0x00100000000f5570
- (_Bool)_clientShouldStart;	// IMP=0x00100000000f53ea
- (void)_clientDeviceLockStatusChanged;	// IMP=0x00100000000f5302
- (void)_clientDeviceLost:(id)arg1;	// IMP=0x00100000000f5196
- (void)_clientDeviceFound:(id)arg1;	// IMP=0x00100000000f4dd5
- (void)_clientClinkDeviceChanged:(id)arg1;	// IMP=0x00100000000f4d69
- (void)_clientClinkDeviceLost:(id)arg1;	// IMP=0x00100000000f4cfd
- (void)_clientClinkDeviceFound:(id)arg1;	// IMP=0x00100000000f4c91
- (void)_clientEnsureStopped;	// IMP=0x00100000000f4a3f
- (void)_clientEnsureStarted;	// IMP=0x00100000000f4031
- (void)sessionStop:(id)arg1;	// IMP=0x00100000000f3f89
- (int)sessionStart:(id)arg1;	// IMP=0x00100000000f3c0d
- (void)advertisingTimerStart;	// IMP=0x00100000000f3ab2
- (void)advertisingTimerFired;	// IMP=0x00100000000f39ed
- (void)handleInputDidEndWithFlags:(unsigned long long)arg1 sessionInfo:(id)arg2;	// IMP=0x00100000000f39e7
- (void)handleInputDidBeginWithFlags:(unsigned long long)arg1 sessionInfo:(id)arg2;	// IMP=0x00100000000f39e1
- (void)handleEventWithData:(id)arg1;	// IMP=0x00100000000f393b
- (void)_sendRTIPayload:(id)arg1;	// IMP=0x00100000000f35ff
- (void)_serverSendTextSessionDidEnd:(id)arg1;	// IMP=0x00100000000f35f9
- (void)_serverSendTextSessionDidBegin:(id)arg1;	// IMP=0x00100000000f35f3
- (void)_legacy_serverRespondInfo:(id)arg1;	// IMP=0x00100000000f3510
- (void)_legacy_serverHandleRequest:(id)arg1;	// IMP=0x00100000000f32a6
- (void)_legacy_serverHandleEvent:(id)arg1;	// IMP=0x00100000000f2e11
- (void)_serverEnsureStopped;	// IMP=0x00100000000f2d06
- (void)_serverEnsureStarted;	// IMP=0x00100000000f29a0
- (void)_commonRapportChanged:(id)arg1;	// IMP=0x00100000000f28d9
- (void)_commonIDSChanged:(id)arg1;	// IMP=0x00100000000f2812
- (void)_commonEnsureStopped;	// IMP=0x00100000000f2714
- (void)_commonEnsureStarted;	// IMP=0x00100000000f25f9
- (void)_update;	// IMP=0x00100000000f257d
- (void)prefsChanged;	// IMP=0x00100000000f21ca
- (void)invalidate;	// IMP=0x00100000000f20c2
- (void)activate;	// IMP=0x00100000000f1ef9
- (id)description;	// IMP=0x00100000000f1bf4
- (id)init;	// IMP=0x00100000000f1b97

@end

