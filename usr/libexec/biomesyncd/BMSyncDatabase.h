//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <objc/NSObject.h>

@class NSDate, NSString, NSUUID, _bmFMDatabase;
@protocol OS_dispatch_queue;

@interface BMSyncDatabase : NSObject
{
    _bmFMDatabase *_fmdb;	// 8 = 0x8
    NSObject<OS_dispatch_queue> *_queue;	// 16 = 0x10
    unsigned long long _options;	// 24 = 0x18
    unsigned long long _flags;	// 32 = 0x20
    NSString *_loggingSuffix;	// 40 = 0x28
    NSString *__error_ivar;	// 48 = 0x30
    unsigned long long __internal_state_ivar;	// 56 = 0x38
    CDUnknownBlockType _corruptionHandler;	// 64 = 0x40
    NSString *_name;	// 72 = 0x48
}

+ (id)primaryDatabaseWALPath;	// IMP=0x002000000004328b
+ (id)primaryDatabasePath;	// IMP=0x001000000004322d
+ (void)enumerateAccountSpecificDatabasesWithBlock:(CDUnknownBlockType)arg1;	// IMP=0x001000000002de1e
+ (id)createDatabaseForAccount:(id)arg1 queue:(id)arg2;	// IMP=0x001000000002d7ea
+ (id)createPrimaryDatabaseWithQueue:(id)arg1;	// IMP=0x001000000002d2ed
- (void).cxx_destruct;	// IMP=0x002000000004540c
@property(retain, nonatomic) NSString *name; // @synthesize name=_name;
@property(copy, nonatomic) CDUnknownBlockType corruptionHandler; // @synthesize corruptionHandler=_corruptionHandler;
@property(readonly, nonatomic) unsigned long long internalState; // @synthesize internalState=__internal_state_ivar;
@property(readonly, nonatomic) NSString *error; // @synthesize error=__error_ivar;
- (_Bool)migration_Schema27ToSchema28;	// IMP=0x00100000000453b7
- (_Bool)migration_Schema20ToSchema21;	// IMP=0x001000000004523c
- (_Bool)migration_StarSkySchema11ToSydRoSchema12;	// IMP=0x0010000000044f1c
@property(readonly, nonatomic) unsigned int version;
- (void)setValue:(id)arg1 forMetadataKey:(id)arg2;	// IMP=0x0010000000044ee4
- (id)valueForMetadataKey:(id)arg1;	// IMP=0x0010000000044e63
- (void)disableStatementCachingForBlock:(CDUnknownBlockType)arg1;	// IMP=0x0010000000044dcf
- (void)clearCachedStatements;	// IMP=0x0010000000044d21
- (_Bool)rollback;	// IMP=0x0010000000044d0b
- (_Bool)commit;	// IMP=0x0010000000044cf5
- (_Bool)isInTransaction;	// IMP=0x0010000000044cdf
- (_Bool)beginTransaction;	// IMP=0x0010000000044cc9
- (void)close;	// IMP=0x0010000000044c18
@property(readonly, nonatomic) unsigned long long state;
- (_Bool)open;	// IMP=0x0010000000044b40
- (_Bool)_tryOpen:(unsigned long long)arg1;	// IMP=0x001000000004389d
- (void)setState:(unsigned long long)arg1 errorFormat:(id)arg2;	// IMP=0x0010000000043773
- (void)setState:(unsigned long long)arg1 error:(id)arg2;	// IMP=0x00100000000435a8
- (id)initWithPath:(id)arg1 options:(unsigned long long)arg2 queue:(id)arg3;	// IMP=0x0010000000043388
- (id)initWithPath:(id)arg1 queue:(id)arg2;	// IMP=0x0010000000043371
- (id)initWithPath:(id)arg1;	// IMP=0x001000000004335a
- (id)initWithQueue:(id)arg1;	// IMP=0x00100000000432e2
- (int)CRDTLocationCount;	// IMP=0x00100000000056a8
- (id)highestDeletedLocationForSiteIdentifier:(id)arg1 inStream:(id)arg2;	// IMP=0x001000000000552b
- (id)highestDeletedLocationsForStream:(id)arg1;	// IMP=0x0010000000005359
- (id)locationsWithState:(unsigned long long)arg1;	// IMP=0x0010000000005189
- (id)previousLocationRowBeforeLocationRow:(id)arg1;	// IMP=0x0010000000004f2f
- (_Bool)removeAllDeletedLocationsBeforeHighestDeletedLocation:(id)arg1;	// IMP=0x0010000000004ce3
- (_Bool)upsertLocation:(id)arg1;	// IMP=0x001000000000489d
- (id)insertLocationIfNotExists:(id)arg1 withState:(unsigned long long)arg2;	// IMP=0x001000000000460e
- (_Bool)updateAllLocationsAtOrBefore:(id)arg1 state:(unsigned long long)arg2;	// IMP=0x0010000000004319
- (_Bool)updateLocationState:(unsigned long long)arg1 forLocation:(id)arg2;	// IMP=0x00100000000041db
- (id)locationRowWithLocationID:(id)arg1;	// IMP=0x00100000000040a2
- (id)locationRowWithLocation:(id)arg1;	// IMP=0x0010000000003ea0
- (id)allPeers;	// IMP=0x0010000000007f62
- (_Bool)setLastSyncDate:(id)arg1 forDeviceWithIdentifier:(id)arg2;	// IMP=0x0010000000007e2e
- (id)lastSyncDateOfDeviceWithIdentifier:(id)arg1;	// IMP=0x0010000000007cf1
- (id)lastSyncDateFromAnyDevice;	// IMP=0x0010000000007c36
- (id)deviceWithIdentifier:(id)arg1;	// IMP=0x0010000000007af4
- (_Bool)upsertSyncDevicePeer:(id)arg1 isMe:(_Bool)arg2;	// IMP=0x0010000000007535
- (id)localDevice;	// IMP=0x0010000000007477
- (void)runMetricsCollectionTask:(id)arg1;	// IMP=0x0010000000008069
- (void)enumerateZonesWithBlock:(CDUnknownBlockType)arg1;	// IMP=0x001000000001df01
- (_Bool)ckZoneSetAttemptedRecoveryDate:(id)arg1 state:(int)arg2 forZoneName:(id)arg3;	// IMP=0x001000000001dc93
- (_Bool)ckZoneSetZoneVersionUUID:(id)arg1 forZoneName:(id)arg2;	// IMP=0x001000000001da7d
- (_Bool)ckZoneSetAttemptingRecoveryForZoneName:(id)arg1 state:(int)arg2;	// IMP=0x001000000001d824
- (id)ckZoneForZoneName:(id)arg1;	// IMP=0x001000000001d6f2
- (_Bool)ckZoneExists:(id)arg1;	// IMP=0x001000000001d5e8
- (id)SELECT_ATOMS_WHERE:(id)arg1 ORDER_BY:(id)arg2 LIMIT:(id)arg3;	// IMP=0x0010000000027061
- (id)highestLocationWithBufferedAtomsOlderThan:(double)arg1 forSiteIdentifier:(id)arg2 inStream:(id)arg3;	// IMP=0x0010000000026ebf
- (id)computeHighestLocationToDeleteUpToBookmark:(id)arg1 forSiteIdentifier:(id)arg2 inStream:(id)arg3 offsetsIncrease:(_Bool)arg4;	// IMP=0x0010000000026b9a
- (void)atomRowsInTimestampClockVector:(id)arg1 forLocation:(id)arg2 inStream:(id)arg3 enumerateWithBlock:(CDUnknownBlockType)arg4;	// IMP=0x001000000002623c
- (id)activeLocationsInClockVector:(id)arg1 inStream:(id)arg2 error:(id *)arg3;	// IMP=0x00100000000255f9
- (_Bool)deleteAllAtomsAtOrBeforeLocation:(id)arg1;	// IMP=0x001000000002513f
- (void)atomsAtOrBeforeLocation:(id)arg1 ofType:(unsigned long long)arg2 enumerateWithBlock:(CDUnknownBlockType)arg3;	// IMP=0x0010000000024dde
- (void)atomRowsNotOnDiskReferencingSiteIdentifier:(id)arg1 inStream:(id)arg2 enumerateWithBlock:(CDUnknownBlockType)arg3;	// IMP=0x0010000000024b82
- (id)CKAtomRowSiteIdentifiersForStreamIdentifier:(id)arg1;	// IMP=0x0010000000024a02
- (id)CKAtomRowSiteIdentifiers;	// IMP=0x0010000000024906
- (_Bool)containsCKAtomRowWithSegment:(id)arg1 inStream:(id)arg2;	// IMP=0x00100000000247c9
- (id)latestDistributedTimestampForSiteIdentifier:(id)arg1 inStream:(id)arg2;	// IMP=0x00100000000245e6
- (id)ckAtomRowForAtomWithBookmark:(id)arg1 type:(unsigned long long)arg2 forSiteIdentifier:(id)arg3 inStream:(id)arg4;	// IMP=0x0010000000024386
- (_Bool)updateCKAtomRow:(id)arg1 inStream:(id)arg2;	// IMP=0x0010000000023df2
- (_Bool)containsCKAtomRowWithTimestamp:(id)arg1 inStream:(id)arg2 onDisk:(_Bool)arg3;	// IMP=0x0010000000023b5f
- (_Bool)containsCKAtomRowWithTimestamp:(id)arg1 inStream:(id)arg2;	// IMP=0x001000000002392d
- (int)ckAtomCount;	// IMP=0x0010000000023880
- (id)latestCKAtomRowOfType:(unsigned long long)arg1 forSiteIdentifier:(id)arg2 inStream:(id)arg3;	// IMP=0x00100000000236ab
- (id)stateVectorForLocationRow:(id)arg1;	// IMP=0x0010000000023140
- (id)rangeClockVectorForStreamName:(id)arg1;	// IMP=0x0010000000022c7c
- (id)legacyTimestampClockVectorForStreamName:(id)arg1;	// IMP=0x00100000000229de
- (id)latestCKAtomRowForSiteIdentifier:(id)arg1 inStream:(id)arg2;	// IMP=0x001000000002286b
- (id)ckAtomRowWithTimestamp:(id)arg1 inStream:(id)arg2;	// IMP=0x001000000002264e
- (_Bool)addCKAtomRow:(id)arg1 inStream:(id)arg2;	// IMP=0x0010000000021c8c
@property(retain, nonatomic) NSString *mergeableRecordValueKey;
- (void)clearCKSyncEngineMetaData;	// IMP=0x001000000002b9a2
- (void)saveCKSyncEngineMetaData:(id)arg1;	// IMP=0x001000000002b989
- (id)ckSyncEngineMetaData;	// IMP=0x001000000002b970
@property(retain, nonatomic) NSDate *lastCloudKitSyncDate;
@property(retain, nonatomic) NSDate *lastCloudKitSyncAttemptDate;
@property(retain, nonatomic) NSDate *lastRapportSyncDate;
@property(retain, nonatomic) NSDate *lastRapportSyncAttemptDate;
@property(retain, nonatomic) NSUUID *sharedSyncGeneration;
- (void)enumerateMergeableRecordValuesForRecordName:(id)arg1 zoneName:(id)arg2 withBlock:(CDUnknownBlockType)arg3;	// IMP=0x001000000002bd3e
- (_Bool)clearCKMergeableRecordValueServerMergeableValuesForZoneName:(id)arg1;	// IMP=0x001000000002bc60
- (_Bool)clearCKMergeableRecordValueServerMergeableValuesForRecordName:(id)arg1 zoneName:(id)arg2;	// IMP=0x001000000002bb59
- (_Bool)saveCKMergeableRecordValueRecordName:(id)arg1 zoneName:(id)arg2 mergeableRecordValueData:(id)arg3;	// IMP=0x001000000002ba2e
- (_Bool)saveLatestTombstoneBookmark:(id)arg1 forSiteIdentifier:(id)arg2 inStream:(id)arg3;	// IMP=0x001000000002c053
- (_Bool)getLatestTombstoneBookmarkForSiteIdentifier:(id)arg1 inStream:(id)arg2 segmentName:(id *)arg3 segmentOffset:(unsigned long long *)arg4;	// IMP=0x001000000002bed6
- (_Bool)enableAllCKSyncRecordsPreviouslyDisabledForSite:(id)arg1 stream:(id)arg2;	// IMP=0x00100000000402aa
- (_Bool)disableAllCKSyncRecordsForSite:(id)arg1 stream:(id)arg2;	// IMP=0x001000000004008d
- (_Bool)upsertCKRecordWithLocation:(id)arg1 inStream:(id)arg2;	// IMP=0x001000000003fc5a
- (unsigned long long)ckRecordCountForRecordType:(unsigned long long)arg1;	// IMP=0x001000000003fb1c
- (void)deleteAllCKRecordsInZone:(id)arg1;	// IMP=0x001000000003f9d0
- (id)gatherAllCKSyncRecordRecordsToBeDeleted;	// IMP=0x001000000003f866
- (void)enumerateCKSyncRecordRecordsSetForDeletingUsingBlock:(CDUnknownBlockType)arg1;	// IMP=0x001000000003f69f
- (void)deleteCKRecordAtLocation:(id)arg1;	// IMP=0x001000000003f518
- (void)deleteCKRecordsForStreamName:(id)arg1;	// IMP=0x001000000003f3fd
- (void)deleteCKRecordsAtOrBeforeLocation:(id)arg1;	// IMP=0x001000000003f20d
- (void)enumerateRecordsWithBlock:(CDUnknownBlockType)arg1;	// IMP=0x001000000003f0f1
- (void)markCKRecordsAtOrBeforeLocationToBeDeletedOnSync:(id)arg1;	// IMP=0x001000000003ee6b
- (void)updateAllCKRecordsAtOrBeforeLocationToBeDeletedOnSync:(id)arg1;	// IMP=0x001000000003ec74
- (_Bool)ckRecordExists:(id)arg1 zoneName:(id)arg2 recordType:(unsigned long long)arg3;	// IMP=0x001000000003eb05
- (id)ckRecordForRecordName:(id)arg1 zoneName:(id)arg2 recordType:(unsigned long long)arg3;	// IMP=0x001000000003e96a
- (_Bool)clearCKRecordLocalMergeableValueAndSetToSyncForZone:(id)arg1;	// IMP=0x001000000003e780
- (_Bool)saveCKRecordLocalMergeableValue:(id)arg1 recordName:(id)arg2 zoneName:(id)arg3 locationRow:(id)arg4;	// IMP=0x001000000003e3d0
- (_Bool)saveCKRecordHighestDeletedLocationRow:(id)arg1 recordName:(id)arg2 zoneName:(id)arg3 recordExists:(_Bool)arg4;	// IMP=0x001000000003e0f8
- (_Bool)saveCKRecordServerMergeableValue:(id)arg1 recordName:(id)arg2 zoneName:(id)arg3 locationRow:(id)arg4;	// IMP=0x001000000003de55
- (void)resetMetadataForRecord:(id)arg1 zoneName:(id)arg2;	// IMP=0x001000000003dc55
- (_Bool)resetCKRecordsMetaDataAndSetToSyncForZone:(id)arg1;	// IMP=0x001000000003da6f
- (id)getSystemFieldsDataForRecordName:(id)arg1 zoneName:(id)arg2 recordType:(unsigned long long)arg3;	// IMP=0x001000000003d8d9
- (void)saveSystemFieldsDataForRecord:(id)arg1 syncToCloudKit:(id)arg2 recordType:(unsigned long long)arg3 crdtDeleted:(id)arg4;	// IMP=0x001000000003d1ff
- (id)createCKRecordFromRecordID:(id)arg1 newRecord:(_Bool *)arg2 recordType:(unsigned long long)arg3;	// IMP=0x001000000003d012
- (id)recordFromSystemFieldsData:(id)arg1;	// IMP=0x001000000003cf1a
- (id)ckRecordsToSyncToCloudKitForZone:(id)arg1;	// IMP=0x001000000003cc78
- (void)enforceMaxSessionLogPrunePolicy;	// IMP=0x00100000000468dc
- (void)compactAndDeleteSessionLogs;	// IMP=0x001000000004685b
- (void)computeAggregatedSessionLogsWithHandlerBlock:(CDUnknownBlockType)arg1;	// IMP=0x001000000004673f
- (unsigned long long)countAtomMergeResultRecords;	// IMP=0x001000000004669f
- (void)recordAtomMergeResult:(unsigned long long)arg1 inStream:(id)arg2 sessionID:(id)arg3 messageID:(unsigned long long)arg4 ownerSite:(id)arg5 originatingSite:(id)arg6 eventCreatedAt:(double)arg7;	// IMP=0x00100000000463ac
- (void)recordMessageToDeviceIdentifier:(id)arg1 sessionID:(id)arg2 messageID:(unsigned long long)arg3 reachable:(_Bool)arg4 bytes:(unsigned long long)arg5 isReciprocal:(_Bool)arg6;	// IMP=0x00100000000460c7
- (void)recordSessionEnd:(id)arg1 timeSincePreviousSync:(double)arg2;	// IMP=0x0010000000045ed7
- (void)recordSessionStart:(id)arg1 transport:(unsigned long long)arg2 reason:(unsigned long long)arg3 isReciprocal:(_Bool)arg4;	// IMP=0x0010000000045c73
- (unsigned long long)sizeOfTableInKilobytes:(id)arg1;	// IMP=0x0010000000047a44
- (unsigned long long)numRowsInTable:(id)arg1;	// IMP=0x00100000000476de
- (unsigned long long)_sizeOfFileInKilobytes:(id)arg1;	// IMP=0x0010000000047544
- (unsigned long long)walSizeInKilobytes;	// IMP=0x00100000000474bb
- (unsigned long long)databaseSizeInKilobytes;	// IMP=0x001000000004745a
- (_Bool)vacuumWithShouldContinueBlock:(CDUnknownBlockType)arg1;	// IMP=0x0010000000046ee8
- (unsigned long long)_numPagesToVacuum;	// IMP=0x0010000000046b6a
@property(retain, nonatomic) NSDate *dateOfLastVacuum;
- (void)runVacuumingTask:(id)arg1;	// IMP=0x0010000000046974

@end

