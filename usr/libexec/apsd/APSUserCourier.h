//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <objc/NSObject.h>

@class APSEnvironment, APSNoOpPowerAssertion, APSOutgoingMessageQueue, APSOutgoingQueue, APSProxyClient, APSPushHistory, APSTTLCollection, APSTokenStore, APSTopicHasher, APSTopicManager, APSWakeMetricTracker, CUTPowerAssertion, CUTWeakReference, MISSING_TYPE, NSArray, NSCountedSet, NSData, NSDate, NSMutableArray, NSMutableDictionary, NSMutableSet, NSNumber, NSString, NSTimer, PCPersistentTimer;
@protocol APSClientIdentityProvider, APSDebugOverrides, APSFilterVersionStateMachine, APSProtocolConnection, APSProtocolConnectionEstablisher, APSSystemTokenStorage, APSUser, APSUserAppIDManager, APSUserCourierDelegate;

@interface APSUserCourier : NSObject
{
    id <APSUserCourierDelegate> _delegate;	// 8 = 0x8
    APSEnvironment *_environment;	// 16 = 0x10
    CUTPowerAssertion *_delayedKeepAlivePowerAssertion;	// 24 = 0x18
    NSMutableDictionary *_connectionPortNamesToConnections;	// 32 = 0x20
    APSTopicManager *_topicManager;	// 40 = 0x28
    PCPersistentTimer *_pendingMessageReconnectTimer;	// 48 = 0x30
    PCPersistentTimer *_delayedReconnectTimer;	// 56 = 0x38
    PCPersistentTimer *_delayedSuspendKeepAliveTimer;	// 64 = 0x40
    NSNumber *_serverExpectedKeepAliveInterval;	// 72 = 0x48
    NSData *_lastReceivedPayloadHash;	// 80 = 0x50
    NSString *_lastReceivedTopic;	// 88 = 0x58
    double _lastReceivedTopicTime;	// 96 = 0x60
    NSNumber *_lastReceivedTimestamp;	// 104 = 0x68
    NSDate *_startedOpeningStream;	// 112 = 0x70
    NSDate *_keepAliveSent;	// 120 = 0x78
    NSDate *_timeSinceLastKeepAlive;	// 128 = 0x80
    double _lastKeepAliveFailureTime;	// 136 = 0x88
    APSWakeMetricTracker *_wakeMetricTracker;	// 144 = 0x90
    NSCountedSet *_inhibitedTopics;	// 152 = 0x98
    NSTimer *_resetInterfacePreferenceTimer;	// 160 = 0xa0
    unsigned long long _forceKeepAliveProxyInterfaceFailureCount;	// 168 = 0xa8
    unsigned long long _obtainKeepAliveProxyFailureCount;	// 176 = 0xb0
    unsigned long long _findKeepAliveProxyInterfaceFailureCount;	// 184 = 0xb8
    _Bool _firstPushSinceWake;	// 192 = 0xc0
    _Bool _preparingForSleep;	// 193 = 0xc1
    _Bool _lastHasConnectionsWithListeningTopics;	// 194 = 0xc2
    _Bool _disconnectingStream;	// 195 = 0xc3
    long long _usersPotentiallyWithMessages;	// 200 = 0xc8
    double _lastUserConnectTime;	// 208 = 0xd0
    long long _successfulConnectionCount;	// 216 = 0xd8
    APSNoOpPowerAssertion *_waitForStoredMessagesToArrivePowerAssertion;	// 224 = 0xe0
    NSString *_lastReceivedTopicToCauseWake;	// 232 = 0xe8
    double _lastReceivedTopicToCauseWakeTime;	// 240 = 0xf0
    NSCountedSet *_topicsToCauseWake;	// 248 = 0xf8
    NSCountedSet *_offendingTopics;	// 256 = 0x100
    double _startedDarkWake;	// 264 = 0x108
    NSString *_redirectHost;	// 272 = 0x110
    NSMutableDictionary *_proxyClients;	// 280 = 0x118
    APSProxyClient *_proxyClientWithOutstandingPresence;	// 288 = 0x120
    APSPushHistory *_pushHistory;	// 296 = 0x128
    APSTokenStore *_tokenStore;	// 304 = 0x130
    APSTopicHasher *_topicHasher;	// 312 = 0x138
    NSData *_cachedPublicToken;	// 320 = 0x140
    _Bool _shouldUseInternet;	// 328 = 0x148
    _Bool _shouldRun;	// 329 = 0x149
    _Bool _enabled;	// 330 = 0x14a
    _Bool _enableCriticalReliability;	// 331 = 0x14b
    _Bool _trackActivityPresence;	// 332 = 0x14c
    unsigned long long _activityPresenceSalt;	// 336 = 0x150
    NSDate *_lastActivityPresenceSaltRoll;	// 344 = 0x158
    _Bool _isConnectedToService;	// 352 = 0x160
    NSDate *_lastConnectionAttempt;	// 360 = 0x168
    double _lastClientRequestedKeepaliveTime;	// 368 = 0x170
    double _lastLateCriticalOutgoingMessageAcknowledgmentReconnectTime;	// 376 = 0x178
    NSString *_latestGeoRegion;	// 384 = 0x180
    NSDate *_lastPresence;	// 392 = 0x188
    NSData *_certificate;	// 400 = 0x190
    NSData *_nonce;	// 408 = 0x198
    NSData *_signature;	// 416 = 0x1a0
    APSOutgoingMessageQueue *_outgoingMessageQueue;	// 424 = 0x1a8
    APSOutgoingQueue *_tokenRequestQueue;	// 432 = 0x1b0
    double _slowReceiveThreshold;	// 440 = 0x1b8
    NSMutableSet *_activeTaskServers;	// 448 = 0x1c0
    unsigned long long _nextTaskMessageId;	// 456 = 0x1c8
    CUTWeakReference *_weakSelf;	// 464 = 0x1d0
    APSTTLCollection *_tracingEnabledAcksCollection;	// 472 = 0x1d8
    double _delayedSuspendKeepAliveInterval;	// 480 = 0x1e0
    _Bool _pendingPostSuspensionWWANFlush;	// 488 = 0x1e8
    _Bool _hasFilterChanged;	// 489 = 0x1e9
    _Bool _locallyDisabledFilterOptimization;	// 490 = 0x1ea
    _Bool _serverDisabledFilterOptimization;	// 491 = 0x1eb
    unsigned int _disconnectReason;	// 492 = 0x1ec
    NSArray *_certificates;	// 496 = 0x1f0
    NSMutableArray *_connectionServers;	// 504 = 0x1f8
    NSString *_ifname;	// 512 = 0x200
    NSNumber *_currentMessageID;	// 520 = 0x208
    NSMutableArray *_subscriptionRequests;	// 528 = 0x210
    id <APSClientIdentityProvider> _clientIdentityProvider;	// 536 = 0x218
    id <APSSystemTokenStorage> _systemTokenStorage;	// 544 = 0x220
    id <APSFilterVersionStateMachine> _filterVersionStateMachine;	// 552 = 0x228
    id <APSDebugOverrides> _debugOverrides;	// 560 = 0x230
    NSMutableDictionary *_protocolConnectionByIdentifier;	// 568 = 0x238
    id <APSUser> _courierUser;	// 576 = 0x240
    id <APSUserAppIDManager> _userAppIDManager;	// 584 = 0x248
    NSMutableDictionary *_stateByConnectionIdentifier;	// 592 = 0x250
    MISSING_TYPE *_protocolConnectionEstablisher;	// 600 = 0x258
}

- (void).cxx_destruct;	// IMP=0x002000000003e4e1
@property(retain, nonatomic) id <APSProtocolConnectionEstablisher> protocolConnectionEstablisher; // @synthesize protocolConnectionEstablisher=_protocolConnectionEstablisher;
@property(retain, nonatomic) NSMutableDictionary *stateByConnectionIdentifier; // @synthesize stateByConnectionIdentifier=_stateByConnectionIdentifier;
@property(retain, nonatomic) id <APSUserAppIDManager> userAppIDManager; // @synthesize userAppIDManager=_userAppIDManager;
@property(retain, nonatomic) id <APSUser> courierUser; // @synthesize courierUser=_courierUser;
@property(retain, nonatomic) NSMutableDictionary *protocolConnectionByIdentifier; // @synthesize protocolConnectionByIdentifier=_protocolConnectionByIdentifier;
@property(retain, nonatomic) id <APSDebugOverrides> debugOverrides; // @synthesize debugOverrides=_debugOverrides;
@property(retain, nonatomic) id <APSFilterVersionStateMachine> filterVersionStateMachine; // @synthesize filterVersionStateMachine=_filterVersionStateMachine;
@property(retain, nonatomic) id <APSSystemTokenStorage> systemTokenStorage; // @synthesize systemTokenStorage=_systemTokenStorage;
@property(retain, nonatomic) id <APSClientIdentityProvider> clientIdentityProvider; // @synthesize clientIdentityProvider=_clientIdentityProvider;
@property(nonatomic) _Bool serverDisabledFilterOptimization; // @synthesize serverDisabledFilterOptimization=_serverDisabledFilterOptimization;
@property(nonatomic) _Bool locallyDisabledFilterOptimization; // @synthesize locallyDisabledFilterOptimization=_locallyDisabledFilterOptimization;
@property(nonatomic) _Bool hasFilterChanged; // @synthesize hasFilterChanged=_hasFilterChanged;
@property(nonatomic) unsigned int disconnectReason; // @synthesize disconnectReason=_disconnectReason;
@property(retain, nonatomic) NSMutableArray *subscriptionRequests; // @synthesize subscriptionRequests=_subscriptionRequests;
@property(retain, nonatomic) NSNumber *currentMessageID; // @synthesize currentMessageID=_currentMessageID;
@property(readonly, copy, nonatomic) NSString *latestGeoRegion; // @synthesize latestGeoRegion=_latestGeoRegion;
@property(readonly, copy, nonatomic) NSString *ifname; // @synthesize ifname=_ifname;
@property(retain, nonatomic) NSMutableArray *connectionServers; // @synthesize connectionServers=_connectionServers;
@property(nonatomic) _Bool enabled; // @synthesize enabled=_enabled;
@property(retain, nonatomic) NSDate *lastPresence; // @synthesize lastPresence=_lastPresence;
@property(copy, nonatomic) NSData *signature; // @synthesize signature=_signature;
@property(copy, nonatomic) NSData *nonce; // @synthesize nonce=_nonce;
@property(copy, nonatomic) NSArray *certificates; // @synthesize certificates=_certificates;
@property(readonly, retain, nonatomic) APSEnvironment *environment; // @synthesize environment=_environment;
@property(nonatomic) _Bool isConnectedToService; // @synthesize isConnectedToService=_isConnectedToService;
@property(nonatomic) __weak id <APSUserCourierDelegate> delegate; // @synthesize delegate=_delegate;
- (void)_reportAPSConnectivity;	// IMP=0x001000000003e217
- (void)_sendQueuedOutgoingMessages;	// IMP=0x001000000003de7f
- (void)_sendOutgoingMessage:(id)arg1 onProtocolConnection:(id)arg2;	// IMP=0x001000000003d5f7
- (void)_sendActiveStateMessageWithSendAllBlueListMessages:(_Bool)arg1;	// IMP=0x001000000003d4c3
- (void)_finishDisconnectForInterface:(id)arg1;	// IMP=0x001000000003d1a5
- (void)_disconnectTokenWithReason:(unsigned int)arg1 onProtocolConnection:(id)arg2;	// IMP=0x001000000003ce01
- (void)_sendFilterMessageOnProtocolConnection:(id)arg1 withChange:(id)arg2;	// IMP=0x001000000003c0e1
- (void)_sendFilterMessageOnProtocolConnection:(id)arg1 withReason:(unsigned long long)arg2;	// IMP=0x001000000003c063
- (id)_ultraConstrainedTopicsFromTopicDictionary:(id)arg1;	// IMP=0x001000000003bde5
- (id)_topicsByHashFromTopicStateDictionary:(id)arg1;	// IMP=0x001000000003bbc6
- (void)_requestToSendFilterOnTopicManager:(id)arg1 change:(id)arg2;	// IMP=0x001000000003ba67
- (void)_sendPresenceMessageOnProtocolConnection:(id)arg1 serverTime:(id)arg2;	// IMP=0x001000000003b2cd
- (void)_didFinishAssertingAllPresences:(id)arg1;	// IMP=0x001000000003af65
- (void)handleDisconnectForInterface:(id)arg1 connectionState:(long long)arg2 withReason:(unsigned int)arg3;	// IMP=0x001000000003a530
- (void)_handleOutgoingMessageAcknowledgment:(id)arg1 onProtocolConnection:(id)arg2;	// IMP=0x001000000003a2cc
- (id)_copyParsedPayload:(id)arg1;	// IMP=0x0010000000039fbe
- (void)_handleMessageMessage:(id)arg1 onProtocolConnection:(id)arg2 withGeneration:(unsigned long long)arg3 isWakingMessage:(_Bool)arg4 fromAgent:(_Bool)arg5;	// IMP=0x0010000000037d2e
- (_Bool)_wakeCausedByTopic:(id)arg1 interface:(id)arg2 priorityVal:(unsigned long long)arg3 inAllowlist:(_Bool)arg4;	// IMP=0x0010000000037c58
- (void)_notifyForIncomingMessage:(id)arg1 forConnection:(id)arg2;	// IMP=0x0010000000037606
- (void)_notifyForIncomingMessage:(id)arg1;	// IMP=0x00100000000375f2
- (void)_forceReconnectionsWithReason:(unsigned int)arg1;	// IMP=0x00100000000374bb
- (void)_triggerAutoBugCaptureForInvalidPresence:(id)arg1;	// IMP=0x0010000000037466
- (void)_handleConnectedMessage:(id)arg1 onProtocolConnection:(id)arg2;	// IMP=0x0010000000035b7f
- (void)receivedConnectedResponseWithParameters:(id)arg1 onProtocolConnection:(id)arg2;	// IMP=0x0010000000035822
- (void)_handlePresenceOffline:(id)arg1;	// IMP=0x0010000000035698
- (void)connectionDidOpenonProtocolConnection:(id)arg1 secureHandshakeEnabled:(_Bool)arg2;	// IMP=0x0010000000035684
- (void)updateForReceivedConfig:(id)arg1;	// IMP=0x0010000000035335
- (_Bool)expectsResponseForFilterMessageOnProtocolConnection:(id)arg1 forClient:(id)arg2;	// IMP=0x00100000000350a0
- (_Bool)expectsResponseForFilterMessageOnProtocolConnection:(id)arg1;	// IMP=0x0010000000034e46
- (_Bool)hasOutOfDateFilterOnProtocolConnection:(id)arg1;	// IMP=0x0010000000034d95
- (_Bool)shouldOnlySendFilterOnPreferredInterface;	// IMP=0x0010000000034b58
- (void)receivedFilterResponseWithParameters:(id)arg1 onProtocolConnection:(id)arg2;	// IMP=0x001000000003423d
- (void)protocolConnection:(id)arg1 receivedFilterUpdateWithParameters:(id)arg2;	// IMP=0x0010000000033bae
- (void)protocolConnection:(id)arg1 receivedPresenceTrackingRequestWithParameters:(id)arg2;	// IMP=0x0010000000033b93
- (void)protocolConnection:(id)arg1 receivedTaskNotificationWithParameters:(id)arg2;	// IMP=0x0010000000033917
- (void)protocolConnection:(id)arg1 receivedTaskControlWithParameters:(id)arg2;	// IMP=0x00100000000336dd
- (void)protocolConnection:(id)arg1 receivedNoStorageWithParameters:(id)arg2;	// IMP=0x00100000000336c8
- (void)protocolConnection:(id)arg1 receivedPubSubChannelListWithParameters:(id)arg2;	// IMP=0x00100000000336ae
- (void)protocolConnection:(id)arg1 receivedPubSubChannelUpdateWithParameters:(id)arg2;	// IMP=0x0010000000033693
- (void)protocolConnection:(id)arg1 receivedMessageWithParameters:(id)arg2 generation:(unsigned long long)arg3 isWaking:(_Bool)arg4;	// IMP=0x0010000000033668
- (void)protocolConnection:(id)arg1 receivedOfflinePresencekWithParameters:(id)arg2;	// IMP=0x0010000000033653
- (_Bool)shouldHandleIncomingPush:(id)arg1 forProtocolConnection:(id)arg2;	// IMP=0x0010000000033177
- (void)outgoingDataAboutToSendForProtocolConnection:(id)arg1;	// IMP=0x0010000000032bce
- (void)efficientToUseChangedForProtocolConnection:(id)arg1;	// IMP=0x0010000000032bbc
- (void)protocolConnection:(id)arg1 encounteredError:(id)arg2;	// IMP=0x0010000000032bb6
- (void)failedToConnectOnProtocolConnection:(id)arg1;	// IMP=0x0010000000032ba4
- (void)didSuspendProtocolConnection:(id)arg1;	// IMP=0x0010000000032ac8
- (void)didRecoverFromSuspensionOnProtocolConnection:(id)arg1;	// IMP=0x0010000000032a64
- (void)protocolConnection:(id)arg1 didDisconnectWithConnectionState:(long long)arg2 reason:(unsigned int)arg3;	// IMP=0x0010000000032a52
- (id)stateForProtocolConnection:(id)arg1;	// IMP=0x00100000000329b1
- (void)beginTrackingProtocolConnection:(id)arg1;	// IMP=0x00100000000326e9
- (void)enumerateConnectedProtocolConnectionsOfType:(long long)arg1 block:(CDUnknownBlockType)arg2;	// IMP=0x0010000000032513
- (void)enumerateConnectedProtocolConnections:(CDUnknownBlockType)arg1;	// IMP=0x001000000003236a
- (void)enumerateAllProtocolConnections:(CDUnknownBlockType)arg1;	// IMP=0x00100000000321f6
- (id)connectedInterfaceForIdentifier:(id)arg1;	// IMP=0x001000000003217c
- (_Bool)hasConnectedInterfaceForIdentifier:(id)arg1;	// IMP=0x00100000000320f9
- (_Bool)hasConnectedInterfaceOfType:(long long)arg1;	// IMP=0x0010000000031f48
- (_Bool)hasProtocolConnectionInterfaceOfType:(long long)arg1;	// IMP=0x0010000000031dd8
@property(readonly, nonatomic) _Bool hasConnectedInterface;
- (long long)countOfConnectedInterface;	// IMP=0x0010000000031b05
@property(readonly, nonatomic) id <APSProtocolConnection> preferredProtocolConnection;
- (void)_tryConnectingOrDisconnectingTokens;	// IMP=0x0010000000031898
- (void)_useInteractivePowerAssertionIfNeededForConnectionServer:(id)arg1 withReason:(id)arg2;	// IMP=0x0010000000031762
- (void)_clearTopicsForGuestUser;	// IMP=0x0010000000031529
- (void)flush;	// IMP=0x0010000000031132
- (void)logout;	// IMP=0x0010000000030bae
- (unsigned long long)getNextTaskMessageId;	// IMP=0x0010000000030b96
- (void)removeTaskServer:(id)arg1;	// IMP=0x0010000000030b7d
- (void)addTaskServer:(id)arg1;	// IMP=0x0010000000030b64
- (void)sendTaskControlMessageWithMetadata:(id)arg1 messageId:(unsigned long long)arg2;	// IMP=0x0010000000030aed
- (void)prepareForFullWake;	// IMP=0x0010000000030a10
- (void)prepareForDarkWake;	// IMP=0x0010000000030932
- (void)prepareForSleep;	// IMP=0x0010000000030855
- (void)_handleNoStorageMessage:(id)arg1;	// IMP=0x001000000003084f
- (void)clientIdentityDidBecomeUnavailable;	// IMP=0x0010000000030741
- (void)clientIdentityDidBecomeAvailable;	// IMP=0x0010000000030614
- (_Bool)shouldForceShortTimeouts;	// IMP=0x00100000000305cb
- (void)outgoingMessageQueue:(id)arg1 requestToSendLowPriorityMessages:(id)arg2;	// IMP=0x0010000000030364
- (void)outgoingMessageQueue:(id)arg1 requestCriticalMessageFlushWithPaddingLength:(unsigned long long)arg2;	// IMP=0x0010000000030245
- (void)outgoingMessageQueueShortMessageTimeoutExceeded:(id)arg1;	// IMP=0x001000000003015f
- (void)outgoingMessageQueue:(id)arg1 lateAcknowledgmentForCriticalOutgoingMessage:(id)arg2;	// IMP=0x001000000002fee4
- (id)getConnectionTypeFromProtocolConnection:(id)arg1;	// IMP=0x001000000002fe7e
- (void)topicManagerRequestToSendFilter:(id)arg1 change:(id)arg2;	// IMP=0x001000000002fd2c
- (void)rollTokensForAllBAAEnvironments;	// IMP=0x001000000002fc4e
- (void)rollTokenAndReconnect;	// IMP=0x001000000002fb84
- (_Bool)_processPotentialIdentityChanged;	// IMP=0x001000000002fa61
- (void)_processShouldUseInternetChangeIfNecessary;	// IMP=0x001000000002f582
- (void)_processShouldRunChangeIfNecessary;	// IMP=0x001000000002f45b
- (void)_processStoredOutgoingMessages;	// IMP=0x001000000002f455
- (void)_processStoredIncomingMessages;	// IMP=0x001000000002f0ef
- (void)_handleLostPushTokens;	// IMP=0x001000000002efe7
- (void)_recreateCacheDictionaries;	// IMP=0x001000000002ee2a
- (void)processIsPowerEfficientToSendChange;	// IMP=0x001000000002ec32
@property(readonly, nonatomic) _Bool isConnectedOnUltraConstrainedInterface;
- (void)_processInvalidIdentity;	// IMP=0x001000000002ea5d
- (void)systemDidUnlock;	// IMP=0x001000000002e92d
- (void)systemDidLock;	// IMP=0x001000000002e803
- (void)_deleteClientIdentityRequestingReplacement;	// IMP=0x001000000002e71f
- (_Bool)_isIdentityAvailable;	// IMP=0x001000000002e717
- (void)getClientIdentityForcingRefresh:(_Bool)arg1 withCompletion:(CDUnknownBlockType)arg2;	// IMP=0x001000000002e620
- (void)generateCertWithServerTime:(id)arg1 completionBlock:(CDUnknownBlockType)arg2;	// IMP=0x001000000002e321
- (void)_clearCachedSigNonceCert;	// IMP=0x001000000002e241
- (void)refreshCertNonceAndSignatureWithServerTime:(id)arg1 withCompletion:(CDUnknownBlockType)arg2;	// IMP=0x001000000002de08
- (void)client:(id)arg1 sendPubSubChannelList:(id)arg2 token:(id)arg3;	// IMP=0x001000000002db2b
- (void);	// IMP=0x001000000002d8ce
- (void)client:(id)arg1 requestTokenGenerateWithTopicHash:(id)arg2 baseToken:(id)arg3 appId:(id)arg4 expirationTTL:(id)arg5 vapidPublicKeyHash:(id)arg6 type:(id)arg7;	// IMP=0x001000000002d215
- (void)client:(id)arg1 requestSendOutgoingMessage:(id)arg2;	// IMP=0x001000000002cc91
- (void)client:(id)arg1 requestPushAckResponse:(id)arg2 messageId:(id)arg3 token:(id)arg4 connectionType:(id)arg5 generation:(id)arg6;	// IMP=0x001000000002c849
- (void)clientBecameInactive:(id)arg1;	// IMP=0x001000000002c762
- (void)requestFilterForClient:(id)arg1;	// IMP=0x001000000002c30f
- (void)pushTokenBecameInvalidForClient:(id)arg1;	// IMP=0x001000000002c234
- (void)_sendClientFilter:(id)arg1 onProtocolConnection:(id)arg2;	// IMP=0x001000000002b9f5
- (_Bool)_processPendingProxyPresences;	// IMP=0x001000000002a84e
- (void)_clearPendingProxyPresence;	// IMP=0x001000000002a557
- (void)incomingPresenceWithGuid:(id)arg1 token:(id)arg2 hwVersion:(id)arg3 swVersion:(id)arg4 swBuild:(id)arg5 certificate:(id)arg6 nonce:(id)arg7 signature:(id)arg8;	// IMP=0x001000000002a126
- (void)canUseProxyChanged;	// IMP=0x001000000002a079
- (unsigned long long)_countConnectedClients;	// IMP=0x0010000000029ed3
- (unsigned long long)_countActiveClients;	// IMP=0x0010000000029d2d
- (id)_findClientWithToken:(id)arg1;	// IMP=0x0010000000029add
- (id)_findConnectedClientWithToken:(id)arg1 onProtocolConnection:(id)arg2;	// IMP=0x00100000000297f0
- (id)_findActiveClientWithToken:(id)arg1;	// IMP=0x0010000000029570
- (void)periodicSignalFired;	// IMP=0x0010000000028ff8
- (void)invalidateDeviceIdentity;	// IMP=0x0010000000028f4b
- (void)ttlCollection:(id)arg1 itemsDidExpire:(id)arg2 withStates:(id)arg3;	// IMP=0x0010000000028e17
- (void)connectionDidClientDisconnect:(id)arg1;	// IMP=0x0010000000028d11
- (void)connection:(id)arg1 setKeepAliveConfiguration:(unsigned long long)arg2;	// IMP=0x0010000000028cc5
- (void)connection:(id)arg1 didReceiveIncomingMessageReceiptWithTopic:(id)arg2 tracingUUID:(id)arg3;	// IMP=0x0010000000028a87
- (void)connection:(id)arg1 handleAckIncomingMessageWithGuid:(id)arg2 topic:(id)arg3 tracingUUID:(id)arg4;	// IMP=0x00100000000287c5
- (void)connection:(id)arg1 didReceiveFakeMessageToSend:(id)arg2;	// IMP=0x001000000002803c
- (void)connection:(id)arg1 didReceiveCancellationForOutgoingMessageWithID:(unsigned long long)arg2;	// IMP=0x0010000000027f76
- (void)connection:(id)arg1 didReceiveUnsubscribeToChannels:(id)arg2 forTopic:(id)arg3;	// IMP=0x0010000000027ee8
- (void)connection:(id)arg1 didReceiveSubscribeToChannels:(id)arg2 forTopic:(id)arg3;	// IMP=0x0010000000027e5a
- (void)connection:(id)arg1 didReceiveOutgoingMessageToSend:(id)arg2;	// IMP=0x001000000002792e
- (void)connection:(id)arg1 subscribeToPreviouslyIgnoredTopics:(id)arg2;	// IMP=0x0010000000027919
- (void)_enqueueMessage:(id)arg1 forOriginator:(id)arg2;	// IMP=0x00100000000275c7
- (void)connectionChangedTrackActivityPresence:(id)arg1;	// IMP=0x00100000000274f1
- (void)connectionChangedCriticalReliability:(id)arg1;	// IMP=0x00100000000273df
- (_Bool)connectionDelegateHasConnectedUser:(id)arg1;	// IMP=0x00100000000273b9
- (_Bool)connectionDelegateIsConnectedToService:(id)arg1;	// IMP=0x00100000000273ad
- (void)__performIdleCheck;	// IMP=0x001000000002727b
- (void)_performIdleCheck;	// IMP=0x0010000000027206
- (void)connectionWasOpened:(id)arg1;	// IMP=0x00100000000270fe
- (void)connectionWasClosed:(id)arg1;	// IMP=0x0010000000026e88
- (void)__processStoredIncomingMessagesForConnection:(id)arg1;	// IMP=0x0010000000026c34
- (void)_processStoredIncomingMessagesForConnection:(id)arg1;	// IMP=0x0010000000026ba2
- (void)connectionTopicsChanged:(id)arg1;	// IMP=0x0010000000026b13
- (void)removeConnectionForConnectionPortName:(id)arg1;	// IMP=0x0010000000026aae
- (id)connectionForConnectionPortName:(id)arg1;	// IMP=0x0010000000026a98
- (void)addConnection:(id)arg1;	// IMP=0x0010000000026908
- (void)_logTopics;	// IMP=0x0010000000025f7a
- (void)__dumpLogsForInconsistencyIfNecessary;	// IMP=0x0010000000025f74
- (void)_dumpLogsForInconsistencyIfNecessary;	// IMP=0x0010000000025f05
- (void)_triggerAutoBugCaptureIfMessageIsRetried:(id)arg1;	// IMP=0x0010000000025e35
- (void)appendPrettyStatusToStatusPrinter:(id)arg1;	// IMP=0x0010000000024d5b
- (id)JSONDebugState;	// IMP=0x0010000000024530
- (id)aps_prettyDescription;	// IMP=0x0010000000023fe8
@property(readonly, copy) NSString *debugDescription;
// Preceding property had unknown attributes: ?
// Original attribute string: T@"NSString",?,R,C

@property(readonly, copy) NSString *description;
- (id)verboseDescription;	// IMP=0x00100000000239dc
- (void)logStateWithReason:(id)arg1;	// IMP=0x00100000000238d4
- (_Bool)willBeAbleToConnect;	// IMP=0x001000000002388a
- (_Bool)_requestKeepAliveProxy;	// IMP=0x0010000000023882
- (_Bool)_isInteractivePushDuringSleepEnabledForConnectionServer:(id)arg1;	// IMP=0x001000000002387a
@property(readonly, retain, nonatomic) NSData *publicToken; // @dynamic publicToken;
- (_Bool)_hasListeningTopics;	// IMP=0x00100000000236d5
- (_Bool)hasReasonToConnect;	// IMP=0x001000000002369c
- (_Bool)isConnectableRightNow;	// IMP=0x0010000000023663
- (_Bool)isKeepAliveProxyConfigured;	// IMP=0x00100000000235fa
- (_Bool)isInteractivePushDuringSleepEnabled;	// IMP=0x0010000000023478
- (_Bool)isIdle;	// IMP=0x0010000000023470
- (_Bool)wantsCriticalReliability;	// IMP=0x0010000000023332
- (_Bool)hasEagerMessages;	// IMP=0x0010000000023319
- (_Bool)_useShortKeepAliveInterval;	// IMP=0x0010000000023311
- (_Bool)isCellularWatch;	// IMP=0x0010000000023309
@property(readonly, nonatomic) _Bool shouldUseInternet;
- (_Bool)shouldRun;	// IMP=0x001000000002326f
- (void)setLargeMessageSize:(unsigned long long)arg1;	// IMP=0x0010000000022e8c
- (unsigned long long)largeMessageSize;	// IMP=0x0010000000022e48
- (void)setMessageSize:(unsigned long long)arg1;	// IMP=0x0010000000022b9f
@property(readonly, nonatomic) unsigned long long messageSize; // @dynamic messageSize;
- (void)setPublicToken:(id)arg1 fromServer:(_Bool)arg2;	// IMP=0x0010000000022721
- (void)_adjustIsConnectedToService;	// IMP=0x0010000000022479
- (unsigned long long)overallCourierStatus;	// IMP=0x0010000000022307
@property(readonly, nonatomic) _Bool hasIdentity;
- (id)_getCurrentTokens;	// IMP=0x0010000000022294
- (id)copyOperatorName;	// IMP=0x001000000002223d
- (id)topicManager;	// IMP=0x001000000002222f
- (id)_proxyManager;	// IMP=0x00100000000221ec
- (void)dealloc;	// IMP=0x0010000000021eaf
- (id)initWithEnvironment:(id)arg1 courierUser:(id)arg2 userPreferences:(id)arg3 clientIdentityProvider:(id)arg4 userAppIDManager:(id)arg5 systemTokenStorage:(id)arg6 filterVersionStateMachine:(id)arg7 debugOverrides:(id)arg8 delegate:(id)arg9 withConnectionEstablisher:(id)arg10 tokenStore:(id)arg11 tokenRequestQueue:(id)arg12;	// IMP=0x0010000000021324
- (id)initWithEnvironment:(id)arg1 courierUser:(id)arg2 userPreferences:(id)arg3 clientIdentityProvider:(id)arg4 userAppIDManager:(id)arg5 systemTokenStorage:(id)arg6 delegate:(id)arg7 withConnectionEstablisher:(id)arg8;	// IMP=0x001000000002106b
- (void)_handlePresenceTrackingResponse:(id)arg1 onProtocolConnection:(id)arg2;	// IMP=0x001000000003f50e
- (void)_generateSalt;	// IMP=0x001000000003f437
- (void)attemptToRollSalt;	// IMP=0x001000000003f003
- (_Bool)protocolConnectionHasSentActivityTrackingSalt:(id)arg1;	// IMP=0x001000000003ef3d
- (void)markProtocolConnectionDisconnectedForActivityTracking:(id)arg1;	// IMP=0x001000000003ee44
- (void)sendPresenceTrackingRequestOnProtocolConnection:(id)arg1;	// IMP=0x001000000003ec06
- (void)recalculateTrackActivityPresence;	// IMP=0x001000000003e7c9
- (void)_handleAppTokenGenerateResponse:(id)arg1 onProtocolConnection:(id)arg2;	// IMP=0x0010000000042cfa
- (id)urlPrefix;	// IMP=0x0010000000042bc5
- (id)connection:(id)arg1 createURLTokenForToken:(id)arg2;	// IMP=0x0010000000042b03
- (void)connection:(id)arg1 didInvalidateTokenForInfo:(id)arg2;	// IMP=0x00100000000426fb
- (void)connection:(id)arg1 didRequestCurrentTokenForInfo:(id)arg2;	// IMP=0x00100000000423de
- (void)connection:(id)arg1 didRequestTokenForInfo:(id)arg2;	// IMP=0x0010000000040d5f
- (void)saveToken:(id)arg1 forInfo:(id)arg2 connection:(id)arg3;	// IMP=0x0010000000040bf0
- (void)performAppTokenCleanup;	// IMP=0x0010000000040408
- (void)_registerAppTokenCleanup;	// IMP=0x0010000000040070
- (void)_cancelRequest:(id)arg1;	// IMP=0x00100000000bebba
- (void)_handlePubSubChannelListRequestonProtocolConnection:(id)arg1;	// IMP=0x00100000000beb4f
- (void)_requestClientPubSubChannelList:(id)arg1 onProtocolConnection:(id)arg2;	// IMP=0x00100000000beafd
- (void)_sendProxyChannelList:(id)arg1 onConnectionType:(long long)arg2;	// IMP=0x00100000000be8c8
- (id)updateChannelForIncomingMessageWithData:(id)arg1 forTopic:(id)arg2;	// IMP=0x00100000000be60e
- (_Bool)shouldDropPubSubMessageWithData:(id)arg1 forTopic:(id)arg2;	// IMP=0x00100000000be36f
- (int)_protoUpdateFailureToReadableFailure:(int)arg1;	// IMP=0x00100000000be363
- (void)_handleChannelUpdateCommand:(id)arg1;	// IMP=0x00100000000bda64
- (void)_handleSubscriptionUpdateCommand:(id)arg1 token:(id)arg2 protocolConnection:(id)arg3;	// IMP=0x00100000000bd670
- (void)_handlePubSubUpdateMessage:(id)arg1 onProtocolConnection:(id)arg2;	// IMP=0x00100000000bd3d1
- (id)_getNextMessageID;	// IMP=0x00100000000bd2f7
- (void)subscribeToPreviouslyIgnoredTopics:(id)arg1;	// IMP=0x00100000000bd0bd
- (void)_resetCheckpointForIgnoredTopics:(id)arg1;	// IMP=0x00100000000bcce4
- (void)handleIgnoredTopics:(id)arg1;	// IMP=0x00100000000bca97
- (void)sendFailuresToClient:(id)arg1 pushTopic:(id)arg2;	// IMP=0x00100000000bc72e
- (int)_protoSubscriptionFailureToReadableFailure:(int)arg1;	// IMP=0x00100000000bc722
- (_Bool)_isResponseForProxyDevice:(id)arg1;	// IMP=0x00100000000bc4b2
- (void)_handlePubSubSubscriptionResponse:(id)arg1 fromAgent:(_Bool)arg2 onProtocolConnection:(id)arg3;	// IMP=0x00100000000bb409
- (void)_removePendingRequestsForProtocolConnection:(id)arg1;	// IMP=0x00100000000bb1da
- (void)_writePubSubMessagetoConnection:(id)arg1 messageID:(unsigned int)arg2 token:(id)arg3 connectionType:(long long)arg4;	// IMP=0x00100000000bad55
- (void)_sendPubsubConnectMessageOnProtocolConnection:(id)arg1 token:(id)arg2;	// IMP=0x00100000000baa48
- (id)allRegisteredChannelsForTopic:(id)arg1;	// IMP=0x00100000000ba92f
- (void)_retryRequestAfterDelay:(id)arg1 withDelay:(double)arg2;	// IMP=0x00100000000ba3b2
- (void)_retryRequestAfterDelay:(id)arg1;	// IMP=0x00100000000ba2a6
- (void)_handlePubSubRequest:(id)arg1 unsubscriptionChannels:(id)arg2 token:(id)arg3;	// IMP=0x00100000000b9bbf
- (void)unsubscribeFromChannels:(id)arg1 forTopic:(id)arg2 token:(id)arg3;	// IMP=0x00100000000b9637
- (void)subscribeToChannels:(id)arg1 forTopic:(id)arg2 token:(id)arg3;	// IMP=0x00100000000b8fed

// Remaining properties
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

