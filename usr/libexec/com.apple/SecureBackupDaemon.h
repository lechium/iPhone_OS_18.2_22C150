//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <objc/NSObject.h>

@class NSData, NSMutableDictionary, NSString, NSURL, SBEscrowOperationLogger;
@protocol OS_dispatch_queue;

@interface SecureBackupDaemon : NSObject
{
    _Bool _needInitialBackup;	// 8 = 0x8
    _Bool _pendingNotification;	// 9 = 0x9
    int _cachedPassphraseFD;	// 12 = 0xc
    int _cachedRecordIDPassphraseFD;	// 16 = 0x10
    int _cachedRecoveryKeyFD;	// 20 = 0x14
    SBEscrowOperationLogger *_operationsLogger;	// 24 = 0x18
    NSURL *_cacheDirURL;	// 32 = 0x20
    NSData *_iCDPKeybag;	// 40 = 0x28
    NSObject<OS_dispatch_queue> *_connectionQueue;	// 48 = 0x30
    NSObject<OS_dispatch_queue> *_backupQueue;	// 56 = 0x38
    NSObject<OS_dispatch_queue> *_kvsQueue;	// 64 = 0x40
    NSString *_cachedRecordID;	// 72 = 0x48
    NSString *_iCloudEnvironment;	// 80 = 0x50
    NSMutableDictionary *_ignoredNotifications;	// 88 = 0x58
    NSMutableDictionary *_handledNotifications;	// 96 = 0x60
}

- (void).cxx_destruct;	// IMP=0x002000000003a618
@property(retain, nonatomic) NSMutableDictionary *handledNotifications; // @synthesize handledNotifications=_handledNotifications;
@property(retain, nonatomic) NSMutableDictionary *ignoredNotifications; // @synthesize ignoredNotifications=_ignoredNotifications;
@property _Bool pendingNotification; // @synthesize pendingNotification=_pendingNotification;
@property(copy, nonatomic) NSString *iCloudEnvironment; // @synthesize iCloudEnvironment=_iCloudEnvironment;
@property int cachedRecoveryKeyFD; // @synthesize cachedRecoveryKeyFD=_cachedRecoveryKeyFD;
@property int cachedRecordIDPassphraseFD; // @synthesize cachedRecordIDPassphraseFD=_cachedRecordIDPassphraseFD;
@property int cachedPassphraseFD; // @synthesize cachedPassphraseFD=_cachedPassphraseFD;
@property(copy, nonatomic) NSString *cachedRecordID; // @synthesize cachedRecordID=_cachedRecordID;
@property _Bool needInitialBackup; // @synthesize needInitialBackup=_needInitialBackup;
@property(readonly, retain, nonatomic) NSObject<OS_dispatch_queue> *kvsQueue; // @synthesize kvsQueue=_kvsQueue;
@property(readonly, retain, nonatomic) NSObject<OS_dispatch_queue> *backupQueue; // @synthesize backupQueue=_backupQueue;
@property(readonly, retain, nonatomic) NSObject<OS_dispatch_queue> *connectionQueue; // @synthesize connectionQueue=_connectionQueue;
@property(readonly, nonatomic) NSData *iCDPKeybag; // @synthesize iCDPKeybag=_iCDPKeybag;
@property(retain, nonatomic) NSURL *cacheDirURL; // @synthesize cacheDirURL=_cacheDirURL;
@property(readonly, nonatomic) SBEscrowOperationLogger *operationsLogger; // @synthesize operationsLogger=_operationsLogger;
- (void)recoverGuitarfishTokenWithRequest:(id)arg1 reply:(CDUnknownBlockType)arg2;	// IMP=0x0010000000039ebb
- (void)enableGuitarfishTokenWithRequest:(id)arg1 reply:(CDUnknownBlockType)arg2;	// IMP=0x001000000003985f
- (void)knownICDPFederations:(CDUnknownBlockType)arg1;	// IMP=0x0010000000039783
- (void)moveToFederationAllowed:(id)arg1 altDSID:(id)arg2 reply:(CDUnknownBlockType)arg3;	// IMP=0x00100000000396cc
- (void)getAcceptedTermsForAltDSID:(id)arg1 reply:(CDUnknownBlockType)arg2;	// IMP=0x001000000003958c
- (void)saveTermsAcceptance:(id)arg1 reply:(CDUnknownBlockType)arg2;	// IMP=0x0010000000039387
- (void)getCertificatesWithRequest:(id)arg1 reply:(CDUnknownBlockType)arg2;	// IMP=0x001000000003912b
- (void)daemonPasscodeRequestOpinion:(CDUnknownBlockType)arg1;	// IMP=0x0010000000038d9f
- (id)fetchPRK:(id *)arg1;	// IMP=0x0010000000038c9c
- (void)prepareHSA2EscrowRecordContents:(id)arg1 usesComplexPassphrase:(_Bool)arg2 reply:(CDUnknownBlockType)arg3;	// IMP=0x0010000000037e6d
- (int)getPasscodeRequestFlag:(unsigned long long *)arg1;	// IMP=0x0010000000037e20
- (int)setPasscodeRequestFlag:(unsigned long long)arg1;	// IMP=0x0010000000037dd3
- (void)clearNotifyToken;	// IMP=0x0010000000037d79
- (int)notifyToken;	// IMP=0x0010000000037c64
- (void)beginHSA2PasscodeRequest:(id)arg1 desirePasscodeImmediately:(_Bool)arg2 uuid:(id)arg3 reason:(id)arg4 reply:(CDUnknownBlockType)arg5;	// IMP=0x00100000000375ea
- (id)getPendingEscrowRequest:(id *)arg1;	// IMP=0x0010000000037584
- (void)stateCaptureWithReply:(CDUnknownBlockType)arg1;	// IMP=0x001000000003751f
- (void)notificationInfoWithReply:(CDUnknownBlockType)arg1;	// IMP=0x00100000000373eb
- (void)changeSMSTargetWithRequest:(id)arg1 reply:(CDUnknownBlockType)arg2;	// IMP=0x0010000000036815
- (void)getCountrySMSCodesWithRequest:(id)arg1 reply:(CDUnknownBlockType)arg2;	// IMP=0x00100000000361e9
- (void)startSMSChallengeWithRequest:(id)arg1 reply:(CDUnknownBlockType)arg2;	// IMP=0x0010000000035b45
- (void)uncachePassphraseWithRequestAsync:(id)arg1;	// IMP=0x0010000000035b31
- (void)uncacheRecoveryKeyWithRequest:(id)arg1 reply:(CDUnknownBlockType)arg2;	// IMP=0x00100000000358a6
- (void)cacheRecoveryKeyWithRequest:(id)arg1 reply:(CDUnknownBlockType)arg2;	// IMP=0x0010000000035633
- (void)uncachePassphraseWithRequest:(id)arg1 reply:(CDUnknownBlockType)arg2;	// IMP=0x00100000000353a8
- (void)cachePassphraseWithRequestAsync:(id)arg1;	// IMP=0x0010000000035394
- (void)cachePassphraseWithRequest:(id)arg1 reply:(CDUnknownBlockType)arg2;	// IMP=0x0010000000035121
- (void)uncacheRecordIDPassphrase;	// IMP=0x0010000000034fe1
- (id)cachedRecoveryKey;	// IMP=0x0010000000034fb1
@property(copy, nonatomic) NSString *cachedRecordIDPassphrase;
@property(copy, nonatomic) NSString *cachedPassphrase;
- (id)cachedPassphraseForFD:(int)arg1;	// IMP=0x0010000000034c04
- (void)setCachedRecoveryKey:(id)arg1;	// IMP=0x0010000000034bd4
- (int)storeCachedPassphrase:(id)arg1;	// IMP=0x0010000000034586
- (void)updateMetadataWithRequest:(id)arg1 reply:(CDUnknownBlockType)arg2;	// IMP=0x00100000000339d4
- (void)disableWithRequest:(id)arg1 reply:(CDUnknownBlockType)arg2;	// IMP=0x0010000000032d86
- (void)setBackOffDateWithRequest:(id)arg1 reply:(CDUnknownBlockType)arg2;	// IMP=0x001000000003246a
- (void)backOffDateWithRequest:(id)arg1 reply:(CDUnknownBlockType)arg2;	// IMP=0x00100000000320f6
- (void)deleteAlliCDPRecordsWithRequest:(id)arg1 reply:(CDUnknownBlockType)arg2;	// IMP=0x0010000000031b38
- (void)_deleteAlliCDPRecordsWithContext:(id)arg1;	// IMP=0x001000000003184f
- (void)createICDPRecordWithRequest:(id)arg1 recordContents:(id)arg2 reply:(CDUnknownBlockType)arg3;	// IMP=0x0010000000030e83
- (void)recoverRecordContentsWithRequest:(id)arg1 reply:(CDUnknownBlockType)arg2;	// IMP=0x0010000000030aef
- (void)restoreKeychainAsyncWithPasswordInDaemon:(id)arg1 keybagDigest:(id)arg2 haveBottledPeer:(_Bool)arg3 viewsNotToBeRestored:(id)arg4 reply:(CDUnknownBlockType)arg5;	// IMP=0x0010000000030940
- (void)isRecoveryKeySetInDaemon:(CDUnknownBlockType)arg1;	// IMP=0x0010000000030895
- (_Bool)verifyRecoveryKey:(id)arg1 error:(id *)arg2;	// IMP=0x001000000002fef6
- (void)verifyRecoveryKeyInDaemon:(id)arg1 reply:(CDUnknownBlockType)arg2;	// IMP=0x001000000002fe79
- (_Bool)removeRecoveryKey:(id *)arg1;	// IMP=0x001000000002f335
- (void);	// IMP=0x001000000002f2ba
- (void)restoreKeychainWithBackupPasswordInDaemon:(id)arg1 reply:(CDUnknownBlockType)arg2;	// IMP=0x001000000002f23b
- (void)recoverSilentWithCDPContextInDaemon:(id)arg1 allRecords:(id)arg2 reply:(CDUnknownBlockType)arg3;	// IMP=0x001000000002f13c
- (void)recoverWithCDPContextInDaemon:(id)arg1 escrowRecord:(id)arg2 reply:(CDUnknownBlockType)arg3;	// IMP=0x001000000002f03d
- (void)recoverWithRequest:(id)arg1 reply:(CDUnknownBlockType)arg2;	// IMP=0x001000000002ef66
- (void)_recoverWithRequest:(id)arg1 reply:(CDUnknownBlockType)arg2;	// IMP=0x001000000002ca75
- (void)_restoreKeychainAsyncWithPassword:(id)arg1 keybagDigest:(id)arg2 haveBottledPeer:(_Bool)arg3 viewsNotToBeRestored:(id)arg4 reply:(CDUnknownBlockType)arg5;	// IMP=0x001000000002c6f3
- (void)_recoverWithCDPContext:(id)arg1 escrowRecord:(id)arg2 reply:(CDUnknownBlockType)arg3;	// IMP=0x001000000002c0fa
- (void)_recoverSilentWithCDPContext:(id)arg1 allRecords:(id)arg2 reply:(CDUnknownBlockType)arg3;	// IMP=0x001000000002ad69
- (void)sortForMatchingPassphraseLengthAndPlatform:(id)arg1 secureBackups:(id)arg2 passphraseLength:(unsigned long long)arg3 platform:(unsigned long long)arg4 reply:(CDUnknownBlockType)arg5;	// IMP=0x001000000002a056
- (long long)compare:(id)arg1 with:(id)arg2 backups:(id)arg3;	// IMP=0x00100000000298f7
- (long long)compareEscrowDatesBetweenCurrentRecord:(id)arg1 andCandidateRecord:(id)arg2;	// IMP=0x001000000002972b
- (id)keysOfEntriesContainingObject:(id)arg1 backups:(id)arg2;	// IMP=0x001000000002966d
- (void)recoverEscrowWithRequest:(id)arg1 reply:(CDUnknownBlockType)arg2;	// IMP=0x0010000000027b18
- (id)restoreEMCSBackup:(id)arg1 withPassword:(id)arg2;	// IMP=0x0010000000027638
- (id)restoreEMCSBackup:(id)arg1 keybag:(id)arg2 password:(id)arg3;	// IMP=0x0010000000027287
- (void)recordIDAndMetadataForSilentAttempt:(id)arg1 passphraseLength:(unsigned long long)arg2 platform:(int)arg3 reply:(CDUnknownBlockType)arg4;	// IMP=0x0010000000026b90
- (id)secureBackups;	// IMP=0x00100000000268e5
- (_Bool)_restoreKeychainWithBackupPassword:(id)arg1 keybagDigest:(id)arg2 error:(id *)arg3;	// IMP=0x0010000000025ded
- (void)_restoreKeychainAsyncWithBackupBag:(id)arg1 password:(id)arg2 keybagDigest:(id)arg3 haveBottledPeer:(_Bool)arg4 restoredViews:(id)arg5 viewsNotToBeRestored:(id)arg6;	// IMP=0x0010000000025458
- (_Bool)_restoreView:(id)arg1 password:(id)arg2 keybagDigest:(id)arg3 restoredViews:(id)arg4 error:(id *)arg5;	// IMP=0x00100000000250b5
- (id)encodedStatsForViews:(id)arg1;	// IMP=0x0010000000024e14
- (id)restoreBackup:(id)arg1 withName:(id)arg2 keybagDigest:(id)arg3 keybag:(id)arg4 password:(id)arg5;	// IMP=0x001000000002467f
- (void)backupWithInfo:(id)arg1 reply:(CDUnknownBlockType)arg2;	// IMP=0x0010000000024668
- (void)backupForRecoveryKeyWithInfoInDaemon:(id)arg1 reply:(CDUnknownBlockType)arg2;	// IMP=0x0010000000024651
- (void)backupWithInfo:(id)arg1 garbageCollect:(_Bool)arg2 reply:(CDUnknownBlockType)arg3;	// IMP=0x0010000000024586
- (void)backupForRecoveryKeyWithInfo:(id)arg1 garbageCollect:(_Bool)arg2 reply:(CDUnknownBlockType)arg3;	// IMP=0x00100000000244bb
@property(nonatomic) _Bool backupAllowed;
- (void)handleEscrowStoreResults:(id)arg1 escrowError:(id)arg2 request:(id)arg3 peerID:(id)arg4 newRecordMetadata:(id)arg5 backupKeybag:(id)arg6 reply:(CDUnknownBlockType)arg7;	// IMP=0x0010000000023ffe
- (void)enableWithRequest:(id)arg1 reply:(CDUnknownBlockType)arg2;	// IMP=0x0010000000021bb8
- (void)stashRecoveryDataWithRequest:(id)arg1 reply:(CDUnknownBlockType)arg2;	// IMP=0x0010000000021ae1
- (void)_stashRecoveryDataWithRequest:(id)arg1 reply:(CDUnknownBlockType)arg2;	// IMP=0x00100000000217fc
- (id)massageOutgoingMetadataFromRequest:(id)arg1;	// IMP=0x001000000002162c
- (void)fetchStingrayAccountStatusInDaemon:(id)arg1 reply:(CDUnknownBlockType)arg2;	// IMP=0x0010000000021489
- (void)getAccountInfoWithRequest:(id)arg1 reply:(CDUnknownBlockType)arg2;	// IMP=0x001000000002114b
- (void)synchronizeKVSWithHandler:(CDUnknownBlockType)arg1;	// IMP=0x001000000002099b
- (void)doSynchronize;	// IMP=0x00100000000208e8
- (id)sortRecordsByBottleID:(id)arg1;	// IMP=0x001000000001fb44
- (id)tagStaleBottleRecords:(id)arg1 suggestedBottles:(id)arg2;	// IMP=0x001000000001f7d5
- (void)_fetchStingrayAccountStatusInDaemon:(id)arg1 reply:(CDUnknownBlockType)arg2;	// IMP=0x001000000001ed8a
- (void)_getAccountInfoWithRequest:(id)arg1 reply:(CDUnknownBlockType)arg2;	// IMP=0x001000000001c03b
- (id)_recordIDFromLabel:(id)arg1 withPrefix:(id)arg2 suffix:(id)arg3;	// IMP=0x001000000001bf56
- (_Bool)hasRecoveryKeyInKVS:(id)arg1 error:(id *)arg2;	// IMP=0x001000000001bc54
- (id)filteriCDPRecords:(id)arg1;	// IMP=0x001000000001b505
- (id)massageIncomingMetadataFromInfo:(id)arg1;	// IMP=0x001000000001b1c0
- (void)notificationOccurred:(id)arg1;	// IMP=0x001000000001ae1a
- (void)handleNotification:(id)arg1;	// IMP=0x001000000001aa2a
- (void)recordNotification:(id)arg1 handled:(_Bool)arg2;	// IMP=0x001000000001a94e
- (_Bool)listener:(id)arg1 shouldAcceptNewConnection:(id)arg2;	// IMP=0x001000000001a51c
@property(readonly, nonatomic) _Bool forceICDP;
@property(readonly, retain, nonatomic) NSURL *cachedManifestURL;
@property(readonly, retain, nonatomic) NSURL *cachedKeychainURL;
- (struct os_state_data_s *)_stateCapture;	// IMP=0x0010000000019fdf
- (id)copyKVSState;	// IMP=0x0010000000019a1d
- (void)setupNotifyEvents;	// IMP=0x0010000000019896
- (id)initWithOperationsLogger:(id)arg1;	// IMP=0x001000000001961e
- (id)normalizeSMSTarget:(id)arg1 error:(id *)arg2;	// IMP=0x001000000001939b
- (id)_gestaltValueForKey:(struct __CFString *)arg1;	// IMP=0x0010000000019234
- (void)unregisterForNotifyEvent:(id)arg1;	// IMP=0x00100000000191ff
- (void)registerForNotifyEvent:(id)arg1;	// IMP=0x0010000000019194
- (void)disableiCDPBackup;	// IMP=0x0010000000019152
- (void)_disableBackup;	// IMP=0x00100000000190d6
- (id)_consumeBackupJournal;	// IMP=0x0010000000017e94
- (id)_consumeFullBackupForRecordID:(id)arg1;	// IMP=0x0010000000017af3
- (id)_consumeViewBackup:(id)arg1 recordID:(id)arg2;	// IMP=0x0010000000016740
- (void)_backupCloudIdentityKeychainViewAndPushToKVSCheckBackupEnabled:(_Bool)arg1;	// IMP=0x00100000000161ea
- (void)_backupCloudIdentityKeychainViewAndPushToKVS;	// IMP=0x00100000000161d3
- (void)_backupCloudIdentityKeychainViewAndPushToKVSForRecoveryKey;	// IMP=0x00100000000161bf
- (void)_backupKeychainFully:(_Bool)arg1 reply:(CDUnknownBlockType)arg2;	// IMP=0x0010000000015d95
- (void)_backupKeychain;	// IMP=0x0010000000015d7f
- (void)_backupFullKeychain;	// IMP=0x0010000000015d66
- (void)_backupFullKeychainWithReply:(CDUnknownBlockType)arg1;	// IMP=0x0010000000015d4c
- (void)_setAutobackupEnabled;	// IMP=0x0010000000015d38
- (void)_setAutobackupEnabledWithReply:(CDUnknownBlockType)arg1;	// IMP=0x0010000000015cce
- (void)_removeKVSKeybag;	// IMP=0x0010000000015b9a
- (void)garbageCollectEMCSBackupsExcluding:(id)arg1;	// IMP=0x001000000001592f
- (id)_EMCSBackupDictForKeybagDigest:(id)arg1;	// IMP=0x00100000000154b9
- (id)_EMCSBackup;	// IMP=0x0010000000015462
- (void)_setEMCSBackup:(id)arg1 keybag:(id)arg2;	// IMP=0x001000000001514a
- (id)_KVSKeybag;	// IMP=0x00100000000150f3
- (void)_setKVSKeybag:(id)arg1;	// IMP=0x0010000000014f28
- (void)_removeMetadata;	// IMP=0x0010000000014e17
- (id)_metadata;	// IMP=0x0010000000014dbd
- (void)_setMetadata:(id)arg1;	// IMP=0x0010000000014c84
- (void)_removeUsesEscrow;	// IMP=0x0010000000014c27
- (_Bool)_usesEscrow;	// IMP=0x0010000000014bdc
- (void)_setUsesEscrow:(_Bool)arg1;	// IMP=0x0010000000014ac9
- (_Bool)_backupEnabled;	// IMP=0x00100000000149e7
- (void)_setBackupEnabled:(_Bool)arg1 iCDP:(_Bool)arg2;	// IMP=0x001000000001480f
- (id)_getLastBackupTimestamp;	// IMP=0x0010000000014784
- (id)_getDERBackupFromKVS;	// IMP=0x001000000001464c
- (void)_removeVeeTwoBackup;	// IMP=0x0010000000014511
- (void)_enumerateICDPBackupsUsingBlock:(CDUnknownBlockType)arg1;	// IMP=0x001000000001410a
- (id)_getICDPBackupFromKVS:(id)arg1 forView:(id)arg2;	// IMP=0x001000000001405d
- (id)_getProtectedKeychainAndKeybagDigestFromKVS:(id *)arg1;	// IMP=0x0010000000013eea
- (void)_removeProtectedKeychain;	// IMP=0x0010000000013da6
- (id)_pushCachedKeychainToKVS;	// IMP=0x00100000000137d8
- (id)_pushCachedKeychainToKVSForView:(id)arg1 recordID:(id)arg2;	// IMP=0x00100000000132ef
- (void)storeDERBackupInKVS:(id)arg1;	// IMP=0x0010000000013125
- (id)derDataFromDict:(id)arg1;	// IMP=0x0010000000012f1e
- (void)_removeCachedKeychain;	// IMP=0x0010000000012dbc
- (void)_storeVeeTwoBackupInKVS:(id)arg1 forViewName:(id)arg2 withKeyStore:(id)arg3 manifestDigest:(id)arg4 keybagDigest:(id)arg5;	// IMP=0x00100000000128df
- (void)_storeProtectedKeychainInKVS:(id)arg1 keybagDigest:(id)arg2;	// IMP=0x00100000000126e6
- (id)_getKeychainItemForKey:(id)arg1 status:(int *)arg2;	// IMP=0x0010000000012542
- (void)_removeKeychainItemForKey:(id)arg1;	// IMP=0x00100000000123e4
- (void)_saveKeychainItem:(id)arg1 forKey:(id)arg2;	// IMP=0x0010000000012228
- (id)_createBackupKeybagWithPassword:(id)arg1;	// IMP=0x0010000000012220
- (id)createiCloudRecoveryPasswordWithError:(id *)arg1;	// IMP=0x001000000004ff94
- (id)createPlistFromDERData:(id)arg1;	// IMP=0x001000000004ff20
- (id)createDERDataFromPlist:(id)arg1;	// IMP=0x001000000004fead
- (_Bool)backupSliceKeybagHasRecoveryKey:(id)arg1;	// IMP=0x001000000004fe65
- (id)createEncodedDirectBackupSliceKeybagFromData:(id)arg1 error:(id *)arg2;	// IMP=0x001000000004fd04
- (id)circleChangedNotification;	// IMP=0x001000000004fca8
- (id)currentViews;	// IMP=0x001000000004fc42
- (id)allViews;	// IMP=0x001000000004fbcc
- (id)copyOSVersion:(id)arg1;	// IMP=0x001000000004fba5
- (id)copySerialNumber:(id)arg1;	// IMP=0x001000000004fb8e
- (id)createPeerInfoFromData:(id)arg1 error:(id *)arg2;	// IMP=0x001000000004fb45
- (_Bool)registerSingleRecoverySecret:(id)arg1 iCDP:(_Bool)arg2 error:(id *)arg3;	// IMP=0x001000000004faf9
- (id)copyEncodedData:(id)arg1 error:(id *)arg2;	// IMP=0x001000000004fab1
- (id)copyMyPeerWithNewDeviceRecoverySecret:(id)arg1 error:(id *)arg2;	// IMP=0x001000000004fa6b
- (id)copyBackupKeyForNewDeviceRecoverySecret:(id)arg1 error:(id *)arg2;	// IMP=0x001000000004fa25
- (id)copyBackupKey:(id)arg1;	// IMP=0x001000000004fa18
- (id)copyMyPeerIDWithError:(id *)arg1;	// IMP=0x001000000004f98a
- (id)copyMyPeerID;	// IMP=0x001000000004f8d0
- (id)copyPeerID:(id)arg1;	// IMP=0x001000000004f8b0
- (id)copyMyPeerInfo:(id *)arg1;	// IMP=0x001000000004f86d
- (_Bool)backupWithChanges:(id)arg1 error:(id *)arg2 handler:(CDUnknownBlockType)arg3;	// IMP=0x001000000004f562
- (_Bool)backupSetConfirmedManifest:(id)arg1 digest:(id)arg2 manifest:(id)arg3 error:(id *)arg4;	// IMP=0x001000000004f3c5
- (_Bool)backupWithRegisteredBackupViewWithError:(id)arg1 error:(id *)arg2;	// IMP=0x001000000004f29e
- (_Bool)backupWithRegisteredBackupsWithError:(id *)arg1 handler:(CDUnknownBlockType)arg2;	// IMP=0x001000000004efd3
- (id)removeRKFromKeyBag:(id)arg1 error:(id *)arg2;	// IMP=0x001000000004ee34
- (_Bool)verifyRKWithKeyBag:(id)arg1 password:(id)arg2 error:(id *)arg3;	// IMP=0x001000000004ecf2
- (void)restoreBackupName:(id)arg1 peerID:(id)arg2 keybag:(id)arg3 password:(id)arg4 backup:(id)arg5 reply:(CDUnknownBlockType)arg6;	// IMP=0x001000000004e93d
- (id)kvs;	// IMP=0x001000000004e8c3
- (id)makeRecordCandidate:(id)arg1 error:(id *)arg2;	// IMP=0x00100000000528a4
- (void)setPasscodeMetadata:(id)arg1 passphraseType:(int)arg2;	// IMP=0x001000000005273e
- (void)doEnableEscrowMultiICSCWithRequest:(id)arg1 reply:(CDUnknownBlockType)arg2;	// IMP=0x0010000000050772

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
// Preceding property had unknown attributes: ?
// Original attribute string: T@"NSString",?,R,C

@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

