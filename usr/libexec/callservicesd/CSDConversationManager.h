//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <objc/NSObject.h>

@class CPActivityAuthorizationManager, CPApplicationController, CPSystemStateObserver, CSDConversationLinkManager, CSDConversationNoticeManager, CSDConversationPersistenceController, CSDConversationProviderManager, CSDDeviceLockStateObserver, CSDFileTransferController, CSDPendingMembershipTracker, CSDReportingController, CSDScreenSharingActivityManager, CSDSecureImageTranscoder, CSDSharedConversationServerBag, FTDeviceSupport, MISSING_TYPE, NSDictionary, NSMapTable, NSMutableDictionary, NSMutableSet, NSString, TUCallProviderManager, _TtC13callservicesd28CSDCollaborationStateManager;
@protocol CSDConduitIDSProxy, CSDConversationInvitationResolving, CSDIDSService, CSDParticipantUpdateSanitizer, CSDVoucherManager, OS_dispatch_queue, OS_dispatch_source, TUFeatureFlags;

@interface CSDConversationManager : NSObject
{
    CSDPendingMembershipTracker *_pendingMembershipTracker;	// 8 = 0x8
    NSMutableDictionary *_mutableConversationsByUUID;	// 16 = 0x10
    NSMutableDictionary *_mutablePendingConversationsByPseudonym;	// 24 = 0x18
    NSMutableDictionary *_mutablePseudonymsByCallUUID;	// 32 = 0x20
    MISSING_TYPE *_mutablePseudonymsByRequestIdentifiers;	// 40 = 0x28
    NSMutableDictionary *_mutableSendDataCallbacksByRequestIdentifiers;	// 48 = 0x30
    NSMutableDictionary *_mutableConversationsRequestingUpgradeWithPreferences;	// 56 = 0x38
    NSObject<OS_dispatch_source> *_pendingConversationCleanupTimer;	// 64 = 0x40
    NSMapTable *_delegateToQueue;	// 72 = 0x48
    NSMutableSet *_incomingPendingMessageGUIDs;	// 80 = 0x50
    NSMapTable *_observerToQueue;	// 88 = 0x58
    CSDScreenSharingActivityManager *_screenSharingActivityManager;	// 96 = 0x60
    CPSystemStateObserver *_sharePlaySystemStateObserver;	// 104 = 0x68
    CSDFileTransferController *_fileTransferController;	// 112 = 0x70
    NSMutableDictionary *_resourceTransferCallbacks;	// 120 = 0x78
    CSDConversationPersistenceController *_persistenceController;	// 128 = 0x80
    CSDDeviceLockStateObserver *_lockStateObserver;	// 136 = 0x88
    TUCallProviderManager *_callProviderManager;	// 144 = 0x90
    CSDConversationLinkManager *_linkManager;	// 152 = 0x98
    CSDReportingController *_reportingController;	// 160 = 0xa0
    id <TUFeatureFlags> _featureFlags;	// 168 = 0xa8
    CSDConversationNoticeManager *_conversationNoticeManger;	// 176 = 0xb0
    CSDSharedConversationServerBag *_serverBag;	// 184 = 0xb8
    id <CSDConversationInvitationResolving> _invitationResolver;	// 192 = 0xc0
    NSMutableDictionary *_screenCaptureQueue;	// 200 = 0xc8
    id <CSDVoucherManager> _voucherManager;	// 208 = 0xd0
    id <CSDParticipantUpdateSanitizer> _participantUpdateSanitizer;	// 216 = 0xd8
    _TtC13callservicesd28CSDCollaborationStateManager *_collaborationStateManager;	// 224 = 0xe0
    NSObject<OS_dispatch_queue> *_queue;	// 232 = 0xe8
    id <CSDIDSService> _service;	// 240 = 0xf0
    CDUnknownBlockType _groupSessionProviderCreationBlock;	// 248 = 0xf8
    FTDeviceSupport *_deviceSupport;	// 256 = 0x100
    CDUnknownBlockType _conversationCreationBlock;	// 264 = 0x108
    CDUnknownBlockType _sendDataBlock;	// 272 = 0x110
    CDUnknownBlockType _getPersonalNicknameBlock;	// 280 = 0x118
    CSDConversationProviderManager *_conversationProviderManager;	// 288 = 0x120
    CDUnknownBlockType _lockdownModeEnabled;	// 296 = 0x128
    CDUnknownBlockType _activeLocalHandles;	// 304 = 0x130
    CDUnknownBlockType _activeLocalHandlesForProvider;	// 312 = 0x138
    CDUnknownBlockType _senderIdentitiesBlock;	// 320 = 0x140
    CDUnknownBlockType _localCallerID;	// 328 = 0x148
    CDUnknownBlockType _notifyPendingMembershipTrackerOfDelegatedMember;	// 336 = 0x150
    CDUnknownBlockType _localCallerIDForProvider;	// 344 = 0x158
    CSDSecureImageTranscoder *_imageTranscoder;	// 352 = 0x160
    CDUnknownBlockType _isConversationRelayPreferred;	// 360 = 0x168
    CDUnknownBlockType _isHandleEligibleForScreenSharingRequestsBlock;	// 368 = 0x170
    NSMutableDictionary *_outIdentifierToConversationInfo;	// 376 = 0x178
    CPApplicationController *_cpApplicationController;	// 384 = 0x180
    CPActivityAuthorizationManager *_activityAuthorizationManager;	// 392 = 0x188
    id <CSDConduitIDSProxy> _messageProxy;	// 400 = 0x190
}

- (void).cxx_destruct;	// IMP=0x002000000016edf4
@property(nonatomic) __weak id <CSDConduitIDSProxy> messageProxy; // @synthesize messageProxy=_messageProxy;
@property(retain, nonatomic) CPActivityAuthorizationManager *activityAuthorizationManager; // @synthesize activityAuthorizationManager=_activityAuthorizationManager;
@property(readonly, nonatomic) CPApplicationController *cpApplicationController; // @synthesize cpApplicationController=_cpApplicationController;
@property(retain, nonatomic) NSMutableDictionary *outIdentifierToConversationInfo; // @synthesize outIdentifierToConversationInfo=_outIdentifierToConversationInfo;
@property(copy, nonatomic) CDUnknownBlockType isHandleEligibleForScreenSharingRequestsBlock; // @synthesize isHandleEligibleForScreenSharingRequestsBlock=_isHandleEligibleForScreenSharingRequestsBlock;
@property(copy, nonatomic) CDUnknownBlockType isConversationRelayPreferred; // @synthesize isConversationRelayPreferred=_isConversationRelayPreferred;
@property(retain, nonatomic) CSDSecureImageTranscoder *imageTranscoder; // @synthesize imageTranscoder=_imageTranscoder;
@property(copy, nonatomic) CDUnknownBlockType localCallerIDForProvider; // @synthesize localCallerIDForProvider=_localCallerIDForProvider;
@property(copy, nonatomic) CDUnknownBlockType notifyPendingMembershipTrackerOfDelegatedMember; // @synthesize notifyPendingMembershipTrackerOfDelegatedMember=_notifyPendingMembershipTrackerOfDelegatedMember;
@property(copy, nonatomic) CDUnknownBlockType localCallerID; // @synthesize localCallerID=_localCallerID;
@property(copy, nonatomic) CDUnknownBlockType senderIdentitiesBlock; // @synthesize senderIdentitiesBlock=_senderIdentitiesBlock;
@property(copy, nonatomic) CDUnknownBlockType activeLocalHandlesForProvider; // @synthesize activeLocalHandlesForProvider=_activeLocalHandlesForProvider;
@property(copy, nonatomic) CDUnknownBlockType activeLocalHandles; // @synthesize activeLocalHandles=_activeLocalHandles;
@property(copy, nonatomic) CDUnknownBlockType lockdownModeEnabled; // @synthesize lockdownModeEnabled=_lockdownModeEnabled;
@property(retain, nonatomic) CSDConversationProviderManager *conversationProviderManager; // @synthesize conversationProviderManager=_conversationProviderManager;
@property(copy, nonatomic) CDUnknownBlockType getPersonalNicknameBlock; // @synthesize getPersonalNicknameBlock=_getPersonalNicknameBlock;
@property(copy, nonatomic) CDUnknownBlockType sendDataBlock; // @synthesize sendDataBlock=_sendDataBlock;
@property(copy, nonatomic) CDUnknownBlockType conversationCreationBlock; // @synthesize conversationCreationBlock=_conversationCreationBlock;
@property(retain, nonatomic) FTDeviceSupport *deviceSupport; // @synthesize deviceSupport=_deviceSupport;
@property(copy, nonatomic) CDUnknownBlockType groupSessionProviderCreationBlock; // @synthesize groupSessionProviderCreationBlock=_groupSessionProviderCreationBlock;
@property(retain, nonatomic) id <CSDIDSService> service; // @synthesize service=_service;
@property(readonly, nonatomic) NSObject<OS_dispatch_queue> *queue; // @synthesize queue=_queue;
@property(retain, nonatomic) _TtC13callservicesd28CSDCollaborationStateManager *collaborationStateManager; // @synthesize collaborationStateManager=_collaborationStateManager;
@property(retain, nonatomic) id <CSDParticipantUpdateSanitizer> participantUpdateSanitizer; // @synthesize participantUpdateSanitizer=_participantUpdateSanitizer;
@property(retain, nonatomic) id <CSDVoucherManager> voucherManager; // @synthesize voucherManager=_voucherManager;
@property(readonly, nonatomic) NSMutableDictionary *screenCaptureQueue; // @synthesize screenCaptureQueue=_screenCaptureQueue;
@property(retain, nonatomic) id <CSDConversationInvitationResolving> invitationResolver; // @synthesize invitationResolver=_invitationResolver;
@property(retain, nonatomic) CSDSharedConversationServerBag *serverBag; // @synthesize serverBag=_serverBag;
@property(readonly, nonatomic) CSDConversationNoticeManager *conversationNoticeManger; // @synthesize conversationNoticeManger=_conversationNoticeManger;
@property(retain, nonatomic) id <TUFeatureFlags> featureFlags; // @synthesize featureFlags=_featureFlags;
@property(readonly, nonatomic) CSDReportingController *reportingController; // @synthesize reportingController=_reportingController;
@property(retain, nonatomic) CSDConversationLinkManager *linkManager; // @synthesize linkManager=_linkManager;
@property(retain, nonatomic) TUCallProviderManager *callProviderManager; // @synthesize callProviderManager=_callProviderManager;
@property(readonly, nonatomic) CSDDeviceLockStateObserver *lockStateObserver; // @synthesize lockStateObserver=_lockStateObserver;
@property(readonly, nonatomic) CSDConversationPersistenceController *persistenceController; // @synthesize persistenceController=_persistenceController;
@property(retain, nonatomic) NSMutableDictionary *resourceTransferCallbacks; // @synthesize resourceTransferCallbacks=_resourceTransferCallbacks;
@property(retain, nonatomic) CSDFileTransferController *fileTransferController; // @synthesize fileTransferController=_fileTransferController;
@property(retain, nonatomic) CPSystemStateObserver *sharePlaySystemStateObserver; // @synthesize sharePlaySystemStateObserver=_sharePlaySystemStateObserver;
@property(readonly, nonatomic) CSDScreenSharingActivityManager *screenSharingActivityManager; // @synthesize screenSharingActivityManager=_screenSharingActivityManager;
@property(retain, nonatomic) NSMapTable *observerToQueue; // @synthesize observerToQueue=_observerToQueue;
@property(retain, nonatomic) NSMutableSet *incomingPendingMessageGUIDs; // @synthesize incomingPendingMessageGUIDs=_incomingPendingMessageGUIDs;
@property(retain, nonatomic) NSMapTable *delegateToQueue; // @synthesize delegateToQueue=_delegateToQueue;
@property(retain, nonatomic) NSObject<OS_dispatch_source> *pendingConversationCleanupTimer; // @synthesize pendingConversationCleanupTimer=_pendingConversationCleanupTimer;
@property(readonly, nonatomic) NSMutableDictionary *mutableConversationsRequestingUpgradeWithPreferences; // @synthesize mutableConversationsRequestingUpgradeWithPreferences=_mutableConversationsRequestingUpgradeWithPreferences;
@property(readonly, nonatomic) NSMutableDictionary *mutableSendDataCallbacksByRequestIdentifiers; // @synthesize mutableSendDataCallbacksByRequestIdentifiers=_mutableSendDataCallbacksByRequestIdentifiers;
@property(readonly, nonatomic) NSMutableDictionary *mutablePseudonymsByRequestIdentifiers; // @synthesize mutablePseudonymsByRequestIdentifiers=_mutablePseudonymsByRequestIdentifiers;
@property(readonly, nonatomic) NSMutableDictionary *mutablePseudonymsByCallUUID; // @synthesize mutablePseudonymsByCallUUID=_mutablePseudonymsByCallUUID;
@property(readonly, nonatomic) NSMutableDictionary *mutablePendingConversationsByPseudonym; // @synthesize mutablePendingConversationsByPseudonym=_mutablePendingConversationsByPseudonym;
@property(readonly, nonatomic) NSMutableDictionary *mutableConversationsByUUID; // @synthesize mutableConversationsByUUID=_mutableConversationsByUUID;
@property(retain, nonatomic) CSDPendingMembershipTracker *pendingMembershipTracker; // @synthesize pendingMembershipTracker=_pendingMembershipTracker;
- (void)fileTransferer:(id)arg1 didTransferFileAtURL:(id)arg2 successfully:(_Bool)arg3;	// IMP=0x001000000016e70c
- (void)fileTransferer:(id)arg1 didReceiveResourcesAtURL:(id)arg2 withMetadata:(id)arg3 isZipped:(_Bool)arg4 fromIDSDestination:(id)arg5;	// IMP=0x001000000016e018
- (void)systemStateObserver:(id)arg1 screenSharingAllowedStateChanged:(_Bool)arg2;	// IMP=0x001000000016db14
- (void)systemStateObserver:(id)arg1 sharePlayAllowedStateChanged:(_Bool)arg2;	// IMP=0x001000000016d610
- (void)applicationPolicyManager:(id)arg1 authorizationChangedForBundleIdentifier:(id)arg2;	// IMP=0x001000000016d35f
- (void)screenSharingActivityManager:(id)arg1 invalidatedSessionWithReason:(id)arg2 wasLocallySharing:(_Bool)arg3;	// IMP=0x001000000016cf86
- (void)screenSharingActivityManager:(id)arg1 receivedUpdatedRemoteAttributes:(id)arg2 isLocallySharing:(_Bool)arg3;	// IMP=0x001000000016cdfe
- (void)_sendDelegationMessageTo:(id)arg1 conversation:(id)arg2 link:(id)arg3 transactionUUID:(id)arg4 forMember:(id)arg5 withMessage:(id)arg6;	// IMP=0x001000000016c55d
- (void)sendDelegationResponseMessageTo:(id)arg1 conversation:(id)arg2 transactionUUID:(id)arg3 forMember:(id)arg4 withResponse:(_Bool)arg5;	// IMP=0x001000000016c394
- (void)sendDelegationMessageTo:(id)arg1 conversation:(id)arg2 link:(id)arg3 transactionUUID:(id)arg4 forMember:(id)arg5;	// IMP=0x001000000016c202
- (void)pendingMembershipTracker:(id)arg1 willNotAdd:(id)arg2 to:(id)arg3 using:(id)arg4;	// IMP=0x001000000016bebd
- (void)pendingMembershipTracker:(id)arg1 didTrack:(id)arg2 forGroupUUID:(id)arg3;	// IMP=0x001000000016bd38
- (void)pendingMembershipTracker:(id)arg1 willAdd:(id)arg2 to:(id)arg3 using:(id)arg4;	// IMP=0x001000000016ba01
- (void)handleRemovedLinkDescriptors:(id)arg1;	// IMP=0x001000000016b823
- (void)linkManager:(id)arg1 removedLinkDescriptorsFromValidityCheck:(id)arg2;	// IMP=0x001000000016b6b7
- (void)linkManager:(id)arg1 updatedLinkDescriptorsFromIDSSignal:(id)arg2;	// IMP=0x001000000016b53c
- (void)linkManager:(id)arg1 removedLinkDescriptorsFromIDSSignal:(id)arg2;	// IMP=0x001000000016b3d0
- (void)linkManager:(id)arg1 updatedLinkDescriptorsFromSync:(id)arg2;	// IMP=0x001000000016b264
- (id)pickInitiatorFromActiveParticipants:(id)arg1 forUpdate:(id)arg2;	// IMP=0x001000000016aed0
- (void)prepareAdditionOfActiveParticipant:(id)arg1 toInvitedMembersForLinkOnConversation:(id)arg2;	// IMP=0x001000000016a617
- (void)removePendingMemberMatchingActiveParticipant:(id)arg1 conversation:(id)arg2;	// IMP=0x001000000016a282
- (void)handleParticipantWithIdentifier:(unsigned long long)arg1 leftConversationWithGroupUUID:(id)arg2 fromHandle:(id)arg3 withGroupSessionUpdate:(id)arg4;	// IMP=0x0010000000169f14
- (void)handleParticipants:(id)arg1 joinedConversationWithUpdate:(id)arg2 joinContext:(id)arg3 fromHandle:(id)arg4 isFromPendingMessage:(_Bool)arg5;	// IMP=0x0010000000165a30
- (void)processParticipantDataUpdate:(id)arg1 fromHandle:(id)arg2;	// IMP=0x0010000000165113
- (void)processUpdateMembersUpdate:(id)arg1 fromHandle:(id)arg2;	// IMP=0x0010000000164c2d
- (id)pushTokenForSelf;	// IMP=0x0010000000164bae
- (void)processJoinUpdate:(id)arg1 fromHandle:(id)arg2 senderCorrelationIdentifier:(id)arg3 isFromPendingMessage:(_Bool)arg4;	// IMP=0x00100000001643ec
- (void)processGroupSessionParticipantUpdate:(id)arg1 context:(id)arg2;	// IMP=0x00100000001639d0
- (void)sanitizeAndProcessParticipantUpdate:(id)arg1 context:(id)arg2;	// IMP=0x0010000000163787
- (void)service:(id)arg1 account:(id)arg2 receivedGroupSessionParticipantDataUpdate:(id)arg3;	// IMP=0x00100000001636a4
- (void)service:(id)arg1 account:(id)arg2 receivedGroupSessionParticipantUpdate:(id)arg3 context:(id)arg4;	// IMP=0x00100000001635a8
- (void)_service:(id)arg1 account:(id)arg2 incomingData:(id)arg3 fromID:(id)arg4 context:(id)arg5 attemptCount:(unsigned long long)arg6;	// IMP=0x0010000000161f39
- (void)enqueueMessageRetryAttemptForMessageID:(id)arg1 message:(id)arg2 attemptCount:(unsigned long long)arg3 messageProcessingBlock:(CDUnknownBlockType)arg4;	// IMP=0x0010000000161998
- (void)processProxiedGroupUpdate:(id)arg1;	// IMP=0x0010000000161922
- (void)processProxiedResource:(id)arg1 metadata:(id)arg2 fromID:(id)arg3 context:(id)arg4;	// IMP=0x0010000000161867
- (void)processProxiedMessage:(id)arg1 fromID:(id)arg2 context:(id)arg3;	// IMP=0x00100000001617ab
- (void)service:(id)arg1 account:(id)arg2 incomingData:(id)arg3 fromID:(id)arg4 context:(id)arg5;	// IMP=0x00100000001614f1
- (void)service:(id)arg1 account:(id)arg2 incomingResourceAtURL:(id)arg3 metadata:(id)arg4 fromID:(id)arg5 context:(id)arg6;	// IMP=0x0010000000161049
- (_Bool)shouldCreatePendingChatForMessageType:(long long)arg1 fromHandle:(id)arg2;	// IMP=0x0010000000161028
- (void)service:(id)arg1 account:(id)arg2 incomingPendingMessageOfType:(long long)arg3 fromID:(id)arg4 context:(id)arg5;	// IMP=0x0010000000160aa4
- (void)_runCallbackIfNecessaryForMessage:(id)arg1;	// IMP=0x0010000000160967
- (void)service:(id)arg1 account:(id)arg2 identifier:(id)arg3 didSendWithSuccess:(_Bool)arg4 error:(id)arg5;	// IMP=0x0010000000160394
- (void)conversation:(id)arg1 remoteMembersChanged:(id)arg2;	// IMP=0x001000000015ff33
- (void)conversation:(id)arg1 screenShareAttributesDidChange:(id)arg2;	// IMP=0x001000000015fe9b
- (void)conversation:(id)arg1 screenShareAttributesUpdated:(id)arg2;	// IMP=0x001000000015fde2
- (void)conversation:(id)arg1 screenShareAttributesSelected:(id)arg2;	// IMP=0x001000000015fd24
- (void)conversation:(id)arg1 requestedEndpointWithIdentifier:(id)arg2 activitySession:(id)arg3 completion:(CDUnknownBlockType)arg4;	// IMP=0x001000000015f5d5
- (void)conversationDidTriggerJoin:(id)arg1;	// IMP=0x001000000015f3c9
- (void)conversation:(id)arg1 addedMembers:(id)arg2 triggeredLocally:(_Bool)arg3;	// IMP=0x001000000015effc
- (void)conversation:(id)arg1 sendResourceAtURL:(id)arg2 toParticipants:(id)arg3 metadata:(id)arg4 activitySessionUUID:(id)arg5 completion:(CDUnknownBlockType)arg6;	// IMP=0x001000000015e92b
- (void)conversation:(id)arg1 activitySessionRemoved:(id)arg2 userOriginated:(_Bool)arg3;	// IMP=0x001000000015e566
- (void)conversation:(id)arg1 changedBytesOfDataUsed:(long long)arg2;	// IMP=0x001000000015e103
- (void)addDisclosedCollaborationInitiator:(id)arg1 toConversationUUID:(id)arg2;	// IMP=0x001000000015e078
- (void)getNeedsDisclosureOfCollaborationInitiator:(id)arg1 forConversationUUID:(id)arg2 completionHandler:(CDUnknownBlockType)arg3;	// IMP=0x001000000015dfdb
- (void)addCollaborationDictionary:(id)arg1 forConversationWithUUID:(id)arg2 fromMe:(_Bool)arg3;	// IMP=0x001000000015d627
- (void)sendHighlightMessageForConversation:(id)arg1 highlightIdentifier:(id)arg2 type:(int)arg3;	// IMP=0x001000000015d2f7
- (void)collaborationStateChanged:(long long)arg1 forCollaborationIdentifier:(id)arg2 onConversationUUID:(id)arg3;	// IMP=0x001000000015cd86
- (void)markCollaborationWithIdentifierOpened:(id)arg1 forConversationUUID:(id)arg2;	// IMP=0x001000000015cb80
- (void)removeHighlightIdentifier:(id)arg1 forConversationUUID:(id)arg2;	// IMP=0x001000000015c892
- (void)addHighlightIdentifier:(id)arg1 collaborationURL:(id)arg2 cloudKitAppBundleIDs:(id)arg3 forConversationUUID:(id)arg4;	// IMP=0x001000000015c402
- (void)startTrackingCollaborationWithIdentifier:(id)arg1 collaborationURL:(id)arg2 cloudKitAppBundleIDs:(id)arg3 forConversationUUID:(id)arg4 completionHandler:(CDUnknownBlockType)arg5;	// IMP=0x001000000015c0ca
- (void)notifyDelegateOfHighlightRemovedFromConversation:(id)arg1 highlightIdentifier:(id)arg2 byParticipant:(id)arg3;	// IMP=0x001000000015bc35
- (void)notifyDelegateOfHighlightAddedForConversation:(id)arg1 highlightIdentifier:(id)arg2 oldHighlightIdentifier:(id)arg3 byParticipant:(id)arg4 isFirstAdd:(_Bool)arg5;	// IMP=0x001000000015b734
- (void)conversation:(id)arg1 activityChangedOnSession:(id)arg2;	// IMP=0x001000000015b29d
- (void)conversation:(id)arg1 appLaunchState:(unsigned long long)arg2 forActivitySession:(id)arg3;	// IMP=0x001000000015ad52
- (void)conversation:(id)arg1 didChangeSceneAssociationForActivitySession:(id)arg2;	// IMP=0x001000000015a864
- (void)conversation:(id)arg1 didChangeStateForActivitySession:(id)arg2;	// IMP=0x001000000015a377
- (void)conversation:(id)arg1 activitySessionChanged:(id)arg2;	// IMP=0x001000000015a243
- (void)conversation:(id)arg1 receivedActivitySessionEvent:(id)arg2;	// IMP=0x0010000000159d7b
- (void)conversation:(id)arg1 failedWithContext:(id)arg2;	// IMP=0x00100000001598f1
- (void)conversation:(id)arg1 sendDeclineMessageToParticipantDestination:(id)arg2;	// IMP=0x0010000000159746
- (void)conversation:(id)arg1 requestBlobRecoveryForParticipantDestination:(id)arg2 completion:(CDUnknownBlockType)arg3;	// IMP=0x001000000015955a
- (void)conversation:(id)arg1 participantDidStopReacting:(id)arg2;	// IMP=0x0010000000159090
- (void)conversation:(id)arg1 participant:(id)arg2 didReact:(id)arg3;	// IMP=0x0010000000158b95
- (void)conversation:(id)arg1 mediaPrioritiesChangedForParticipant:(id)arg2;	// IMP=0x00100000001586cb
- (void)conversationDidStopScreenCapture:(id)arg1;	// IMP=0x00100000001585d0
- (void)conversation:(id)arg1 updatedActiveParticipantWithScreenSharing:(id)arg2;	// IMP=0x0010000000158118
- (void);	// IMP=0x0010000000157c71
- (void)conversation:(id)arg1 removedActiveParticipant:(id)arg2 withLeaveReason:(unsigned long long)arg3;	// IMP=0x001000000015750b
- (void)conversation:(id)arg1 didChangeLocalParticipant:(id)arg2 broadcastActivitySession:(_Bool)arg3;	// IMP=0x0010000000156ac6
- (void)conversation:(id)arg1 addedActiveParticipant:(id)arg2;	// IMP=0x001000000015554e
- (void)conversationDidLeave:(id)arg1;	// IMP=0x0010000000155548
- (void)conversationInvalidated:(id)arg1;	// IMP=0x0010000000155193
- (void)conversationConnectionDidStart:(id)arg1;	// IMP=0x0010000000154ce7
- (void)conversationChanged:(id)arg1;	// IMP=0x0010000000154559
- (void)cleanupExpiredPendingConversations;	// IMP=0x0010000000154113
- (void)setupPendingConversationCleanupTimer;	// IMP=0x0010000000153e2c
- (void)registerMessagesGroupUUIDForConversationUUID:(id)arg1;	// IMP=0x0010000000153aa6
- (void)updateLocalParticipantToAVLessWithPresentationMode:(unsigned long long)arg1 forConversationUUID:(id)arg2;	// IMP=0x0010000000153a8f
- (void)setLocalParticipantAudioVideoMode:(unsigned long long)arg1 forConversationUUID:(id)arg2 presentationMode:(unsigned long long)arg3;	// IMP=0x00100000001532c1
- (void)setLocalParticipantAudioVideoMode:(unsigned long long)arg1 forConversationUUID:(id)arg2;	// IMP=0x00100000001532a5
- (void)includeMetricsReport:(id)arg1 onConversationWithUUID:(id)arg2;	// IMP=0x0010000000152fa7
- (void)addAliasesToConversationContainer:(id)arg1 forBundleIdentifier:(id)arg2;	// IMP=0x0010000000152d23
- (void)removeConversationWithUUID:(id)arg1;	// IMP=0x0010000000152aa7
- (void)removeNonIndefiniteLinks;	// IMP=0x0010000000152455
- (void)setMessagesGroupName:(id)arg1 onConversationWithUUID:(id)arg2;	// IMP=0x00100000001521a4
- (void)removeConversationNoticeWithUUID:(id)arg1;	// IMP=0x001000000015209b
- (void)activateConversationNoticeWithActionURL:(id)arg1 bundleIdentifier:(id)arg2;	// IMP=0x0010000000151f68
- (void)fetchUpcomingNoticeWithCompletionHandler:(CDUnknownBlockType)arg1;	// IMP=0x0010000000151e41
- (oneway void)addScreenSharingType:(unsigned long long)arg1 forConversationUUID:(id)arg2;	// IMP=0x0010000000151815
- (oneway void)setIgnoreLetMeInRequests:(_Bool)arg1 forConversationUUID:(id)arg2;	// IMP=0x00100000001511da
- (void)rejectPendingMember:(id)arg1 forConversationUUID:(id)arg2;	// IMP=0x0010000000150ee0
- (void)approvePendingMember:(id)arg1 forConversationUUID:(id)arg2;	// IMP=0x0010000000150bd3
- (void)linkSyncStateIncludeLinks:(_Bool)arg1 WithCompletion:(CDUnknownBlockType)arg2;	// IMP=0x0010000000150a17
- (void)recoverLinksForPseudonyms:(id)arg1;	// IMP=0x0010000000150871
- (void)scheduleConversationLinkCheckInInitial:(_Bool)arg1;	// IMP=0x00100000001506f7
- (void)setLinkName:(id)arg1 forConversationLink:(id)arg2 completionHandler:(CDUnknownBlockType)arg3;	// IMP=0x00100000001501a2
- (void)activateLink:(id)arg1 completionHandler:(CDUnknownBlockType)arg2;	// IMP=0x001000000014fef6
- (void)getInactiveLinkWithCompletionHandler:(CDUnknownBlockType)arg1;	// IMP=0x001000000014fb5d
- (void)generateAllInactiveLinks;	// IMP=0x001000000014f9dd
- (void)checkLinkValidity:(id)arg1 completionHandler:(CDUnknownBlockType)arg2;	// IMP=0x001000000014f84d
- (void)renewLink:(id)arg1 expirationDate:(id)arg2 reason:(unsigned long long)arg3 completionHandler:(CDUnknownBlockType)arg4;	// IMP=0x001000000014f220
- (void)renewLinkIfNeeded:(id)arg1 completionHandler:(CDUnknownBlockType)arg2;	// IMP=0x001000000014ec04
- (void)invalidateLink:(id)arg1 deleteReason:(long long)arg2 completionHandler:(CDUnknownBlockType)arg3;	// IMP=0x001000000014e640
- (void)addInvitedMemberHandles:(id)arg1 toConversationLink:(id)arg2 completionHandler:(CDUnknownBlockType)arg3;	// IMP=0x001000000014e048
- (void)generateLinkWithInvitedMemberHandles:(id)arg1 linkLifetimeScope:(long long)arg2 completionHandler:(CDUnknownBlockType)arg3;	// IMP=0x001000000014d4b5
- (void)setConversationLink:(id)arg1 forConversation:(id)arg2 replyToCompletionHandler:(CDUnknownBlockType)arg3;	// IMP=0x001000000014d2a0
- (id)_getActivatedLinkWithHandle:(id)arg1 updateGroupUUID:(id)arg2 updateInvitedHandles:(id)arg3;	// IMP=0x001000000014cfce
- (void)generateLinkForConversationUUID:(id)arg1 completionHandler:(CDUnknownBlockType)arg2;	// IMP=0x001000000014c58c
- (void)getActiveLinksWithCreatedOnly:(_Bool)arg1 completionHandler:(CDUnknownBlockType)arg2;	// IMP=0x001000000014c1d8
- (void)getLatestRemoteScreenShareAttributesWithCompletionHandler:(CDUnknownBlockType)arg1;	// IMP=0x001000000014c0da
- (void)updateLocalMemberNickname:(id)arg1 conversationUUID:(id)arg2;	// IMP=0x001000000014bca2
- (void)setDownlinkMuted:(_Bool)arg1 forRemoteParticipantsOnConversationWithUUID:(id)arg2;	// IMP=0x001000000014ba18
- (void)noticeManager:(id)arg1 conversation:(id)arg2 participant:(id)arg3 addedNotice:(id)arg4;	// IMP=0x001000000014b4ca
- (void)processUpdatedNickname:(id)arg1 forHandle:(id)arg2 conversationUUID:(id)arg3;	// IMP=0x001000000014ac21
- (_Bool)conversationContainsScreenShareRequest:(id)arg1 localRequest:(_Bool)arg2 requestHandle:(id)arg3;	// IMP=0x001000000014aa29
- (void)kickMember:(id)arg1 conversationUUID:(id)arg2;	// IMP=0x001000000014a731
- (void)buzzMember:(id)arg1 conversationUUID:(id)arg2;	// IMP=0x001000000014a058
- (void)updateParticipantPresentationContexts:(id)arg1 onConversationWithUUID:(id)arg2;	// IMP=0x0010000000149da7
- (void)handleConversation:(id)arg1 updateGuestMode:(id)arg2 fromHandle:(id)arg3;	// IMP=0x0010000000149605
- (void)handleConversation:(id)arg1 receivedActivitySession:(id)arg2 fromHandle:(id)arg3;	// IMP=0x0010000000148f5b
- (void)handleConversation:(id)arg1 receivedEndorsementForMember:(id)arg2 fromHandle:(id)arg3;	// IMP=0x0010000000148dec
- (void)handleConversation:(id)arg1 updateActivityImage:(id)arg2 fromHandle:(id)arg3;	// IMP=0x0010000000147cb4
- (void)removeScreenShareRequestFromParticipant:(id)arg1 conversation:(id)arg2 screenShareContext:(id)arg3;	// IMP=0x0010000000147992
- (void)handleConversation:(id)arg1 screenShareResponse:(id)arg2 fromHandle:(id)arg3;	// IMP=0x00100000001476a6
- (void)handleConversation:(id)arg1 screenShareRequest:(id)arg2 fromHandle:(id)arg3;	// IMP=0x00100000001472cc
- (void)handleConversation:(id)arg1 removeHighlight:(id)arg2 fromHandle:(id)arg3;	// IMP=0x0010000000146bca
- (void)handleConversation:(id)arg1 addHighlight:(id)arg2 fromHandle:(id)arg3;	// IMP=0x0010000000146820
- (void)handleConversation:(id)arg1 updateActivity:(id)arg2 fromHandle:(id)arg3;	// IMP=0x00100000001463ba
- (void)handleConversation:(id)arg1 removeActivitySession:(id)arg2 fromHandle:(id)arg3;	// IMP=0x0010000000146000
- (void)handleConversation:(id)arg1 registerMessagesGroupUUIDMessage:(id)arg2 fromNormalizedHandle:(id)arg3;	// IMP=0x0010000000145ef7
- (void)handleConversation:(id)arg1 participantUpdateMessage:(id)arg2 fromNormalizedHandle:(id)arg3;	// IMP=0x00100000001446de
- (void)resetActivitySessionSceneAssociationsForBundleID:(id)arg1;	// IMP=0x0010000000144556
- (void)revokeBackgroundPipAuthorizationsForBundleID:(id)arg1;	// IMP=0x001000000014424e
- (void)requestActivityAuthorizationForApplicationWithBundleIdentifier:(id)arg1 overrides:(id)arg2 completionHandler:(CDUnknownBlockType)arg3;	// IMP=0x00100000001440de
- (void)launchApplicationForActivitySessionUUID:(id)arg1 authorizedExternally:(_Bool)arg2 forceBackground:(_Bool)arg3 completionHandler:(CDUnknownBlockType)arg4;	// IMP=0x0010000000142eef
- (void)joinConversationWithRequest:(id)arg1;	// IMP=0x0010000000142bba
- (void)setAutoSharePlayEnabled:(_Bool)arg1;	// IMP=0x0010000000142abc
- (void)setActivityAuthorization:(_Bool)arg1 forBundleID:(id)arg2;	// IMP=0x00100000001429c1
- (void)sendMessage:(id)arg1 forConversation:(id)arg2 withActivitySession:(id)arg3 additionalOptions:(id)arg4;	// IMP=0x00100000001426ab
- (void)sendMessage:(id)arg1 forConversation:(id)arg2 withActivitySession:(id)arg3;	// IMP=0x0010000000142696
- (void)setUsingAirplay:(_Bool)arg1 onActivitySession:(id)arg2 onConversationWithUUID:(id)arg3;	// IMP=0x001000000014233f
- (void)cancelPreviouslySentScreenShareRequests:(id)arg1;	// IMP=0x00100000001420ea
- (void)presentDismissalAlertForActivitySessionWithUUID:(id)arg1 onConversationWithUUID:(id)arg2;	// IMP=0x0010000000141e39
- (void)endActivitySession:(id)arg1 onConversationWithUUID:(id)arg2;	// IMP=0x0010000000141b71
- (void)leaveActivitySession:(id)arg1 onConversationWithUUID:(id)arg2;	// IMP=0x00100000001418ab
- (void)createActivitySession:(id)arg1 onConversationWithUUID:(id)arg2 withCompletion:(CDUnknownBlockType)arg3;	// IMP=0x0010000000140f85
- (id)createCPActivitySessionForActivitySession:(id)arg1 onConversationWithUUID:(id)arg2;	// IMP=0x0010000000140a8e
- (void)updateMessagesGroupPhotoOnConversationWithUUID:(id)arg1;	// IMP=0x001000000014041f
- (void)updateMessagesGroupName:(id)arg1 onConversationWithUUID:(id)arg2;	// IMP=0x001000000013fdd2
- (void)_displaySharePlayUnableToStartWithMessage:(id)arg1;	// IMP=0x001000000013faba
- (void)displaySharePlayUnableToStartAlert;	// IMP=0x001000000013f9ca
- (_Bool)isScreenSharingInitiationAvailable;	// IMP=0x001000000013f986
@property(readonly, nonatomic, getter=isScreenSharingAvailable) _Bool screenSharingAvailable;
@property(readonly, nonatomic, getter=isSharePlayAvailable) _Bool sharePlayAvailable;
@property(readonly, nonatomic) _Bool allActiveConversationParticipantsSupportSharePlay;
- (void)addInvitedMemberHandlesFromAddedRemoteMembers:(id)arg1 toConversationLink:(id)arg2;	// IMP=0x001000000013ef19
- (void)maybeAddComplementaryAssociationVoucherFor:(id)arg1 toLocalMemberOf:(id)arg2 completion:(CDUnknownBlockType)arg3;	// IMP=0x001000000013e52a
- (void)setSharePlayHandedOff:(_Bool)arg1 onConversationWithUUID:(id)arg2;	// IMP=0x001000000013e2a0
- (void)prepareConversationWithUUID:(id)arg1 withHandoffContext:(id)arg2;	// IMP=0x001000000013db95
- (void)addRemoteMembers:(id)arg1 otherInvitedHandles:(id)arg2 toConversationWithUUID:(id)arg3;	// IMP=0x001000000013d23d
- (void)addRemoteMembers:(id)arg1 toConversationWithUUID:(id)arg2;	// IMP=0x001000000013d1ab
- (void)removeRemoteMembers:(id)arg1 fromConversationWithUUID:(id)arg2;	// IMP=0x001000000013cef8
- (void)setScreenShareAttributes:(id)arg1 forConversationWithUUID:(id)arg2;	// IMP=0x001000000013cd69
- (void)setGridDisplayMode:(unsigned long long)arg1 forConversationWithUUID:(id)arg2;	// IMP=0x001000000013cc30
- (void)setPresentationRect:(struct CGRect)arg1 forConversationWithUUID:(id)arg2;	// IMP=0x001000000013cade
- (void)setPresentationState:(int)arg1 forConversationWithUUID:(id)arg2;	// IMP=0x001000000013c9a7
- (int)presentationStateForConversationWithUUID:(id)arg1;	// IMP=0x001000000013c817
- (_Bool)isConversationWithUUIDScreening:(id)arg1;	// IMP=0x001000000013c68a
- (_Bool)isConversationWithUUIDRelaying:(id)arg1;	// IMP=0x001000000013c4fd
- (_Bool)isConversationWithUUIDRedirectingAudio:(id)arg1;	// IMP=0x001000000013c49d
- (void)setAudioInjectionAllowed:(_Bool)arg1 forConversationWithUUID:(id)arg2;	// IMP=0x001000000013c365
- (void)setScreening:(_Bool)arg1 forConversationWithUUID:(id)arg2;	// IMP=0x001000000013c1e7
- (void)setRelaying:(_Bool)arg1 forConversationWithUUID:(id)arg2;	// IMP=0x001000000013c0af
- (void)setAudioPaused:(_Bool)arg1 forConversationWithUUID:(id)arg2;	// IMP=0x001000000013bf77
- (void)setVideoPaused:(_Bool)arg1 forConversationWithUUID:(id)arg2;	// IMP=0x001000000013be3f
- (void)setScreenEnabled:(_Bool)arg1 screenShareAttributes:(id)arg2 forConversationWithUUID:(id)arg3;	// IMP=0x001000000013b4cd
- (void)setScreenEnabled:(_Bool)arg1 forConversationWithUUID:(id)arg2;	// IMP=0x001000000013b451
- (void)cancelOrDenyScreenShareRequest:(id)arg1 forConversationUUID:(id)arg2;	// IMP=0x001000000013b0f2
- (void)requestParticipantToShareScreen:(id)arg1 forConversationUUID:(id)arg2;	// IMP=0x001000000013ac19
- (void)setVideoEnabled:(_Bool)arg1 forPendingConversationWithUUID:(id)arg2;	// IMP=0x001000000013a772
- (void)setUplinkMuted:(_Bool)arg1 forPendingConversationWithUUID:(id)arg2;	// IMP=0x001000000013a2cb
- (void)setVideoEnabled:(_Bool)arg1 forConversationWithUUID:(id)arg2;	// IMP=0x001000000013a193
- (void)sendVideoUpgradeMessageforConversationWithUUID:(id)arg1;	// IMP=0x0010000000139e9b
- (void)setVideo:(_Bool)arg1 forConversationWithUUID:(id)arg2;	// IMP=0x0010000000139d63
- (void)setUplinkMuted:(_Bool)arg1 forConversationWithUUID:(id)arg2;	// IMP=0x0010000000139c2b
- (void)removePseudonym:(id)arg1 forCallUUID:(id)arg2;	// IMP=0x0010000000139b22
- (void)addPseudonym:(id)arg1 forCallUUID:(id)arg2;	// IMP=0x00100000001399ed
- (void)leaveAllConversations;	// IMP=0x0010000000139814
- (void)leaveConversationWithUUID:(id)arg1 withContext:(id)arg2;	// IMP=0x001000000013969b
- (void)leaveConversationWithUUID:(id)arg1;	// IMP=0x001000000013962a
- (void)_leaveConversation:(id)arg1;	// IMP=0x0010000000139589
- (void)_leaveConversation:(id)arg1 withContext:(id)arg2;	// IMP=0x0010000000139444
- (void)startAudioForConversationWithUUID:(id)arg1;	// IMP=0x00100000001391cc
- (void)sendInvitationMessageToMember:(id)arg1 forConversation:(id)arg2 includeAllAttributes:(_Bool)arg3 invitationPreferences:(id)arg4 additionalOptions:(id)arg5;	// IMP=0x00100000001388e2
- (void)updateLetMeInRequestState:(long long)arg1 addLink:(id)arg2 forConversationWithUUID:(id)arg3;	// IMP=0x0010000000138281
- (void)sendLetMeInResponseToPendingMember:(id)arg1 forConversation:(id)arg2 usingResponseKeyData:(id)arg3 approved:(_Bool)arg4 callback:(CDUnknownBlockType)arg5;	// IMP=0x0010000000137b7f
- (void)requestLetMeInApprovalForPseudonym:(id)arg1;	// IMP=0x0010000000136d09
- (id)initiatePendingConversationForLink:(id)arg1 localMember:(id)arg2 isVideoEnabled:(_Bool)arg3;	// IMP=0x00100000001364ca
- (void)joinExistingConversationWithUUID:(id)arg1 context:(id)arg2;	// IMP=0x001000000013582b
- (id)findOrCreateConversationWithGroupUUID:(id)arg1 messagesGroupUUID:(id)arg2 remoteMembers:(id)arg3 otherInvitedHandles:(id)arg4 localMember:(id)arg5 remotePushTokens:(id)arg6 link:(id)arg7 activity:(id)arg8 avMode:(unsigned long long)arg9 presentationMode:(unsigned long long)arg10 conversationProvider:(id)arg11 screenSharingRequest:(id)arg12;	// IMP=0x00100000001345ff
- (void)removeAllConversations;	// IMP=0x00100000001345c2
- (void)retreiveActiveConversations;	// IMP=0x0010000000133b0f
- (void)beginListeningOnService:(id)arg1;	// IMP=0x00100000001338b4
- (void)addObserver:(id)arg1 queue:(id)arg2;	// IMP=0x0010000000133781
- (void)removeDelegate:(id)arg1;	// IMP=0x0010000000133677
- (void)addDelegate:(id)arg1 queue:(id)arg2;	// IMP=0x0010000000133544
@property(readonly, copy, nonatomic) NSDictionary *activityAuthorizedBundleIdentifierState;
- (id)deletedConversationLinksWithError:(id *)arg1;	// IMP=0x00100000001333be
- (id)activatedConversationLinksWithError:(id *)arg1;	// IMP=0x001000000013333f
- (id)conversationsByUUIDIncludingStorageConversations:(_Bool)arg1;	// IMP=0x0010000000132dbc
@property(readonly, copy, nonatomic) NSDictionary *pseudonymsByCallUUID;
@property(readonly, copy, nonatomic) NSDictionary *conversationsByUUID;
- (id)_incomingPendingConversationsByGroupUUID;	// IMP=0x00100000001326a7
@property(readonly, copy, nonatomic) NSDictionary *incomingPendingConversationsByGroupUUID;
@property(readonly, copy, nonatomic) NSDictionary *conversationsByGroupUUID;
- (void)refreshActiveParticipantsList;	// IMP=0x0010000000131dab
- (_Bool)verifyEndorseRepresentsMemberFromHandle:(id)arg1 message:(id)arg2 existingConversation:(id)arg3;	// IMP=0x00100000001318ce
- (_Bool)verifyLightweightMessageTypeFromHandle:(id)arg1 message:(id)arg2 existingConversation:(id)arg3;	// IMP=0x0010000000131739
- (_Bool)verifyGroupSessionParticipantUpdateAllowedFromHandle:(id)arg1 participantUpdate:(id)arg2 message:(id)arg3 existingConversation:(id)arg4 lightweightMembers:(id)arg5;	// IMP=0x00100000001312ce
- (_Bool)verifyAllLightweightmembersAssociated:(id)arg1 remoteMembers:(id)arg2;	// IMP=0x0010000000130fce
- (_Bool)verifyBlobResponseFromHandle:(id)arg1 message:(id)arg2 existingConversation:(id)arg3;	// IMP=0x0010000000130a66
- (_Bool)verifyMessageIntentKeyFromContext:(id)arg1 message:(id)arg2;	// IMP=0x0010000000130951
- (_Bool)verifyActivitySessionOriginatorFromHandle:(id)arg1 message:(id)arg2;	// IMP=0x00100000001305bd
- (_Bool)verifyKickMemberPermittedFromHandle:(id)arg1 message:(id)arg2;	// IMP=0x00100000001302a4
- (_Bool)shouldAcceptMembershipUpdateFromHandle:(id)arg1 joinContext:(id)arg2 participantUpdate:(id)arg3 existingConversation:(id)arg4;	// IMP=0x001000000012fca3
- (_Bool)shouldAcceptMessageFromHandle:(id)arg1 messageContext:(id)arg2 message:(id)arg3 existingConversation:(id)arg4;	// IMP=0x001000000012fa60
- (id)memberExistsForParticipantDestination:(id)arg1 groupSessionParticipantUpdate:(id)arg2;	// IMP=0x001000000012f5d3
- (id)memberExistsForParticipantDestination:(id)arg1 members:(id)arg2;	// IMP=0x001000000012f235
- (void)broadcastLightweightEndorsementForAddedMembers:(id)arg1 onConversation:(id)arg2;	// IMP=0x001000000012eec1
- (void)broadcastImageForSession:(id)arg1 onConversation:(id)arg2;	// IMP=0x001000000012e668
- (_Bool)broadcastData:(id)arg1 onConversation:(id)arg2;	// IMP=0x001000000012e653
- (_Bool)broadcastData:(id)arg1 onConversation:(id)arg2 additionalOptions:(id)arg3;	// IMP=0x001000000012df2f
- (_Bool)broadcastFile:(id)arg1 onConversation:(id)arg2 additionalOptions:(id)arg3;	// IMP=0x001000000012d6cf
- (_Bool)sendData:(id)arg1 onConversation:(id)arg2 toMember:(id)arg3;	// IMP=0x001000000012d6ba
- (_Bool)sendData:(id)arg1 onConversation:(id)arg2 toMember:(id)arg3 additionalOptions:(id)arg4;	// IMP=0x001000000012d501
- (_Bool)sendData:(id)arg1 onConversation:(id)arg2 toHandle:(id)arg3 isBlobResponse:(_Bool)arg4;	// IMP=0x001000000012d393
- (MISSING_TYPE *)sendData:onConversation:toHandle: /* Error: Ran out of types for this method. */;	// IMP=0x001000000012d37e
- (_Bool)sendData:(id)arg1 onConversation:(id)arg2 toDestinationID:(id)arg3;	// IMP=0x001000000012d2c8
- (_Bool)sendData:(id)arg1 onConversation:(id)arg2 toDestinationID:(id)arg3 fromMember:(id)arg4;	// IMP=0x001000000012d2a7
- (_Bool)sendData:(id)arg1 onConversation:(id)arg2 toDestinationID:(id)arg3 fromMember:(id)arg4 additionalOptions:(id)arg5 isBlobResponse:(_Bool)arg6 callback:(CDUnknownBlockType)arg7;	// IMP=0x001000000012cb0f
- (void)handleReceivedUpdateJoinedMetadataMessage:(id)arg1 fromHandle:(id)arg2;	// IMP=0x001000000012c1bd
- (void)sendDataForScreenShareMessage:(id)arg1 toParticipant:(id)arg2 conversation:(id)arg3;	// IMP=0x001000000012bf09
- (void)denyScreenShareRequestFrom:(id)arg1 screenShareRequest:(id)arg2 conversation:(id)arg3;	// IMP=0x001000000012bd7b
- (void)requestParticipant:(id)arg1 toCancelScreenShareRequest:(id)arg2 conversation:(id)arg3;	// IMP=0x001000000012bbed
- (void)requestParticipant:(id)arg1 toScreenShareWithRequest:(id)arg2 conversation:(id)arg3;	// IMP=0x001000000012ba71
- (_Bool)sendMessagesForInvalidatedLink:(id)arg1;	// IMP=0x001000000012b5fa
- (_Bool)sendMessagesForCreatedOrChangedLink:(id)arg1 conversation:(id)arg2 messageType:(int)arg3;	// IMP=0x001000000012aa11
- (void)handleDelegatedPendingMemberIfNecessary:(id)arg1 conversation:(id)arg2 groupUUID:(id)arg3 fromHandle:(id)arg4 transactionUUID:(id)arg5;	// IMP=0x001000000012a6dc
- (void)handleReceivedLMIDelegateMessage:(id)arg1 fromHandle:(id)arg2;	// IMP=0x0010000000129e41
- (void)removeLink:(id)arg1 reason:(long long)arg2 withConversation:(id)arg3;	// IMP=0x0010000000129b8f
- (void)removeLink:(id)arg1 reason:(long long)arg2;	// IMP=0x0010000000129b7a
- (void)handleReceivedLinkInvalidatedMessage:(id)arg1 fromHandle:(id)arg2;	// IMP=0x00100000001294f1
- (void)handleReceivedLinkCreatedOrChangedMessage:(id)arg1 fromHandle:(id)arg2;	// IMP=0x0010000000128532
- (void)handleReceivedLetMeInResponse:(id)arg1 pendingConversation:(id)arg2 fromHandle:(id)arg3;	// IMP=0x0010000000127df1
- (void)handleReceivedLetMeInRequest:(id)arg1 toPseudonym:(id)arg2 fromHandle:(id)arg3 responseKeyData:(id)arg4 dateInitiated:(id)arg5;	// IMP=0x00100000001272c0
- (void)handleEncryptedLetMeInResponse:(id)arg1 fromHandle:(id)arg2 context:(id)arg3;	// IMP=0x0010000000126c32
- (void)handleEncryptedLetMeInRequest:(id)arg1 fromHandle:(id)arg2 context:(id)arg3;	// IMP=0x001000000012659d
- (void)handleEncryptedMessageWithin:(id)arg1 fromHandle:(id)arg2 context:(id)arg3;	// IMP=0x00100000001263f8
- (id)createActivitySession:(id)arg1 onConversation:(id)arg2 fromHandle:(id)arg3;	// IMP=0x0010000000126021
- (id)temporaryFilePath;	// IMP=0x0010000000125fa5
- (_Bool)_linksEnabled;	// IMP=0x0010000000125f98
- (void)postEndEventForSession:(id)arg1 originator:(id)arg2 conversation:(id)arg3;	// IMP=0x0010000000125dbb
- (void)postSessionStartedForSession:(id)arg1 originator:(id)arg2 conversation:(id)arg3;	// IMP=0x0010000000125bde
- (void)handleConversationHandoffRouteIdentifierChangedNotification:(id)arg1;	// IMP=0x00100000001250f7
- (void)updateConversationHandoffEligibility:(id)arg1;	// IMP=0x001000000012465d
- (void)handleConversationHandoffRecommendationChangedNotification:(id)arg1;	// IMP=0x001000000012457d
- (void)handleConversation:(id)arg1 receivedBlobRecoveryResponse:(id)arg2 fromHandle:(id)arg3;	// IMP=0x0010000000124202
- (void)handleConversation:(id)arg1 receivedBlobRecoveryRequest:(id)arg2 fromHandle:(id)arg3;	// IMP=0x0010000000123e65
- (void)notifyDelegatesOfInvalidLinkForPendingConversation:(id)arg1;	// IMP=0x0010000000123a36
- (void)notifyDelegatesOfLetMeInRejectedForPendingConversation:(id)arg1;	// IMP=0x0010000000123607
- (void)notifyDelegatesOfRemoteScreenShareEndedWithReason:(id)arg1;	// IMP=0x0010000000123328
- (void)notifyDelegatesOfRemoteScreenShareAttributes:(id)arg1 isLocallySharing:(_Bool)arg2;	// IMP=0x001000000012302e
- (void)notifyDelegatesOfChangedLink:(id)arg1 conversation:(id)arg2;	// IMP=0x0010000000122947
- (void)notifyDelegatesOfChangedLinkDescriptors:(id)arg1;	// IMP=0x00100000001227ce
- (void)notifyDelegatesOfUpdatePendingConversations;	// IMP=0x001000000012250f
- (void)notifyDelegatesOfTrackedPendingMember:(id)arg1 forConversationLink:(id)arg2;	// IMP=0x0010000000122210
- (void)notifyDelegatesOfRemovedConversationWithUUID:(id)arg1;	// IMP=0x0010000000121f88
- (void)notifyDelegatesOfAVModeChanged:(unsigned long long)arg1 toAVMode:(unsigned long long)arg2 forConversation:(id)arg3;	// IMP=0x0010000000121b10
- (void)notifyDelegatesOfNewConversation:(id)arg1 fromHandle:(id)arg2;	// IMP=0x0010000000121684
- (void)notifyDelegatesOfMessage:(id)arg1 fromHandle:(id)arg2 forConversation:(id)arg3 withUpdate:(id)arg4;	// IMP=0x001000000012114d
- (id)conversationWithGroupUUID:(id)arg1 orMemberIdentifiers:(id)arg2 orRemoteMembers:(id)arg3 andLink:(id)arg4 andVideo:(_Bool)arg5;	// IMP=0x0010000000120c8d
- (id)createConversationIfNecessaryWithUUID:(id)arg1 groupUUID:(id)arg2 messagesGroupUUID:(id)arg3 locallyCreated:(_Bool)arg4 localMember:(id)arg5 remoteMembers:(id)arg6 pendingMembers:(id)arg7 otherInvitedHandles:(id)arg8 remotePushTokens:(id)arg9 lightweightMembers:(id)arg10 link:(id)arg11 activity:(id)arg12 avMode:(unsigned long long)arg13 presentationMode:(unsigned long long)arg14 provider:(id)arg15 screenSharingRequest:(id)arg16;	// IMP=0x001000000012085d
- (id)conversationLinkForGroupUUID:(id)arg1;	// IMP=0x001000000012065d
- (id)conversationLinkForPseudonym:(id)arg1;	// IMP=0x00100000001204dc
- (id)findConversationLinkMatchingPseudonym:(id)arg1;	// IMP=0x00100000001202dc
- (id)pendingConversationWithPseudonym:(id)arg1;	// IMP=0x001000000012007e
- (id)activeApprovedConversationWithLink:(id)arg1;	// IMP=0x001000000011fce0
- (id)conversationRepresentedByRemoteMembers:(id)arg1 andLink:(id)arg2;	// IMP=0x001000000011f990
- (id)conversationWithGroupUUID:(id)arg1 orRepresentedByRemoteMembers:(id)arg2 andLink:(id)arg3;	// IMP=0x001000000011f672
- (id)conversationWithGroupUUID:(id)arg1;	// IMP=0x001000000011f451
- (id)conversationWithGroupUUID:(id)arg1 andProvider:(id)arg2;	// IMP=0x001000000011f12e
- (id)activeConversation;	// IMP=0x001000000011ef86
- (void)removeAllPendingConversations;	// IMP=0x001000000011eed4
- (id)_removePendingConversationsWithTemporaryGroupUUIDIfNecessary:(id)arg1;	// IMP=0x001000000011ec47
- (id)_removePendingConversationWithPseudonym:(id)arg1;	// IMP=0x001000000011eaff
- (id)removePendingConversationWithPseudonym:(id)arg1;	// IMP=0x001000000011e97e
- (id)pendingConversationUUIDWithPseudonym:(id)arg1;	// IMP=0x001000000011e5da
- (id)createConversationWithUUID:(id)arg1 groupUUID:(id)arg2 messagesGroupUUID:(id)arg3 locallyCreated:(_Bool)arg4 localMember:(id)arg5 initiator:(id)arg6 remoteMembers:(id)arg7 pendingMembers:(id)arg8 otherInvitedHandles:(id)arg9 remotePushTokens:(id)arg10 lightweightMembers:(id)arg11 activity:(id)arg12 link:(id)arg13 report:(id)arg14 fromStorage:(_Bool)arg15 avMode:(unsigned long long)arg16 presentationMode:(unsigned long long)arg17 provider:(id)arg18 screenSharingRequest:(id)arg19 isInitiator:(_Bool)arg20 isOldMessage:(_Bool)arg21;	// IMP=0x001000000011cfd7
- (id)localMemberForProvider:(id)arg1 fromHandle:(id)arg2 members:(id)arg3 lightweightMembers:(id)arg4 activeLocalHandles:(id)arg5;	// IMP=0x001000000011ca9e
- (id)callerIDForLocalMember:(id)arg1;	// IMP=0x001000000011ca8a
- (id)callerIDForLocalMember:(id)arg1 forProvider:(id)arg2;	// IMP=0x001000000011c967
- (id)callerIDHandleForSenderIdentityUUID:(id)arg1 callerID:(id)arg2;	// IMP=0x001000000011c60a
- (id)senderIdentityUUIDForCallerIDHandle:(id)arg1;	// IMP=0x001000000011c406
- (_Bool)isHandleStringLocalPseudonym:(id)arg1 provider:(id)arg2;	// IMP=0x001000000011c06a
- (_Bool)isHandleStringLocalPseudonym:(id)arg1;	// IMP=0x001000000011c056
- (_Bool)isHandleLocalPseudonym:(id)arg1 provider:(id)arg2;	// IMP=0x001000000011bfd9
- (_Bool)isValidLocalHandle:(id)arg1 activeLocalHandles:(id)arg2 provider:(id)arg3;	// IMP=0x001000000011bf51
- (_Bool)isValidLocalHandle:(id)arg1;	// IMP=0x001000000011beba
- (_Bool)isValidLocalHandle:(id)arg1 forProvider:(id)arg2;	// IMP=0x001000000011bd62
- (_Bool)shouldIgnoreMessageForConversation:(id)arg1;	// IMP=0x001000000011ba8c
- (_Bool)_shouldSkipManualApprovalForHandle:(id)arg1 conversation:(id)arg2 responseKeyData:(id)arg3;	// IMP=0x001000000011b53d
- (id)_inactiveRemoteMemberForHandle:(id)arg1 conversation:(id)arg2;	// IMP=0x001000000011b36a
- (_Bool)_isActiveRemoteMemberForHandle:(id)arg1 conversation:(id)arg2;	// IMP=0x001000000011b011
- (id)_kickedOrRejectedMemberForHandle:(id)arg1 conversation:(id)arg2;	// IMP=0x001000000011ab8f
- (_Bool)_shouldRingForIncomingCallWithHandle:(id)arg1 conversation:(id)arg2 isFromPendingMessage:(_Bool)arg3 isOldMessage:(_Bool)arg4 isLetMeInApproved:(_Bool)arg5;	// IMP=0x001000000011a7d9
- (_Bool)_shouldNotifyDelegatesOfMessage:(id)arg1 localHandleAdded:(_Bool)arg2 isFromStorage:(_Bool)arg3;	// IMP=0x001000000011a75c
- (id)initWithQueue:(id)arg1 reportingController:(id)arg2 persistenceController:(id)arg3 linkManager:(id)arg4 cpApplicationController:(id)arg5 invitationResolver:(id)arg6 pendingMembershipTracker:(id)arg7 featureFlags:(id)arg8 applicationPolicyManager:(id)arg9;	// IMP=0x0010000000117c81
- (id)initWithQueue:(id)arg1 reportingController:(id)arg2 persistenceController:(id)arg3 linkManager:(id)arg4 invitationResolver:(id)arg5 pendingMembershipTracker:(id)arg6 featureFlags:(id)arg7;	// IMP=0x0010000000117b30
- (id)init;	// IMP=0x0010000000117b05
- (id)initWithReportingController:(id)arg1 cpApplicationController:(id)arg2 invitationResolver:(id)arg3;	// IMP=0x00100000001179d8

// Remaining properties
@property(readonly, copy, nonatomic) NSDictionary *activityAuthorizedBundleIdentifiers;
@property(readonly, copy) NSString *debugDescription;
// Preceding property had unknown attributes: ?
// Original attribute string: T@"NSString",?,R,C

@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

