//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <objc/NSObject.h>

@class CPActivitySessionManager, CPApplicationPolicyManager, CPAudioRoutePolicyManager, CPSystemStateObserver, CSDConversationABTestConfiguration, CSDConversationLocalParticipantBlobTracker, CSDConversationParticipant, CSDFaceTimeInviteDemuxer, CSDIDSGroupSession, CXCallFailureContext, FTDeviceSupport, MISSING_TYPE, NSArray, NSDate, NSDictionary, NSMutableArray, NSMutableDictionary, NSMutableSet, NSNumber, NSSet, NSString, NSUUID, TUCallScreenShareAttributes, TUConversation, TUConversationActivitySession, TUConversationHandoffContext, TUConversationHandoffEligibility, TUConversationLink, TUConversationMember, TUConversationParticipant, TUConversationParticipantAssociation, TUConversationProvider, TUConversationReport, TUHandle, TUVideoDeviceController, _TtC13callservicesd36CSDActivitySessionParticipantMonitor;
@protocol CSDAVCSession, CSDConversationDelegate, CSDConversationServerBag, OS_dispatch_queue, TUFeatureFlags;

@interface CSDConversation : NSObject
{
    _Bool _relaying;	// 8 = 0x8
    _Bool _screening;	// 9 = 0x9
    _Bool _fromStorage;	// 10 = 0xa
    _Bool _video;	// 11 = 0xb
    _Bool _audioInjectionAllowed;	// 12 = 0xc
    _Bool _hasReceivedLetMeInRequest;	// 13 = 0xd
    _Bool _locallyCreated;	// 14 = 0xe
    _Bool _hasJoined;	// 15 = 0xf
    _Bool _ignoreLMIRequests;	// 16 = 0x10
    _Bool _captioningEnabled;	// 17 = 0x11
    _Bool _spatialPersonaEnabled;	// 18 = 0x12
    _Bool _cameraMixedWithScreen;	// 19 = 0x13
    _Bool _waitingToPruneParticipants;	// 20 = 0x14
    _Bool _expectedUplinkMuted;	// 21 = 0x15
    _Bool _avcSessionInProgress;	// 22 = 0x16
    _Bool _forceExpanseEnabled;	// 23 = 0x17
    unsigned long long _avMode;	// 24 = 0x18
    unsigned long long _presentationMode;	// 32 = 0x20
    NSSet *_memberIdentifiers;	// 40 = 0x28
    TUVideoDeviceController *_videoDeviceController;	// 48 = 0x30
    id <CSDConversationDelegate> _delegate;	// 56 = 0x38
    MISSING_TYPE *_UUID;	// 64 = 0x40
    NSUUID *_groupUUID;	// 72 = 0x48
    TUConversationLink *_link;	// 80 = 0x50
    NSUUID *_messagesGroupUUID;	// 88 = 0x58
    long long _state;	// 96 = 0x60
    long long _letMeInRequestState;	// 104 = 0x68
    TUConversationMember *_localLightweightSecondaryMember;	// 112 = 0x70
    TUHandle *_initiator;	// 120 = 0x78
    TUConversationMember *_localMember;	// 128 = 0x80
    NSSet *_remoteMembers;	// 136 = 0x88
    NSSet *_lightweightMembers;	// 144 = 0x90
    NSSet *_pendingMembers;	// 152 = 0x98
    NSSet *_kickedMembers;	// 160 = 0xa0
    NSSet *_rejectedMembers;	// 168 = 0xa8
    NSSet *_remotePushTokens;	// 176 = 0xb0
    NSSet *_otherInvitedHandles;	// 184 = 0xb8
    unsigned long long _screenSharingType;	// 192 = 0xc0
    NSArray *_supportedMediaTypes;	// 200 = 0xc8
    TUConversationActivitySession *_stagedActivitySession;	// 208 = 0xd0
    NSString *_messagesGroupName;	// 216 = 0xd8
    CPActivitySessionManager *_activitySessionManager;	// 224 = 0xe0
    TUConversationReport *_report;	// 232 = 0xe8
    TUConversationParticipantAssociation *_localParticipantAssociation;	// 240 = 0xf0
    TUConversationHandoffEligibility *_handoffEligibility;	// 248 = 0xf8
    id <TUFeatureFlags> _featureFlags;	// 256 = 0x100
    NSObject<OS_dispatch_queue> *_queue;	// 264 = 0x108
    NSMutableDictionary *_activeRemoteParticipantsByIdentifier;	// 272 = 0x110
    NSMutableDictionary *_activeLightweightParticipantsByIdentifier;	// 280 = 0x118
    NSMutableSet *_kickedParticipants;	// 288 = 0x120
    NSMutableDictionary *_screenSharingRequestsByUUID;	// 296 = 0x128
    CSDIDSGroupSession *_idsSession;	// 304 = 0x130
    CSDConversationLocalParticipantBlobTracker *_localParticipantBlobTracker;	// 312 = 0x138
    NSNumber *_expectedAudioEnabled;	// 320 = 0x140
    NSNumber *_expectedVideoEnabled;	// 328 = 0x148
    NSNumber *_expectedScreenEnabled;	// 336 = 0x150
    NSNumber *_expectedVideoPaused;	// 344 = 0x158
    NSNumber *_expectedAudioPaused;	// 352 = 0x160
    NSDictionary *_activeLightweightParticipantDestinationsByIdentifier;	// 360 = 0x168
    NSSet *_serverProvidedParticipantIdentifiers;	// 368 = 0x170
    NSSet *_serverProvidedLightweightParticipantIdentifiers;	// 376 = 0x178
    NSDate *_lastRebroadcastTime;	// 384 = 0x180
    unsigned long long _rebroadcastTimeThreshold;	// 392 = 0x188
    NSMutableDictionary *_virtualParticipantsByPluginName;	// 400 = 0x190
    CSDFaceTimeInviteDemuxer *_faceTimeInviteDemuxer;	// 408 = 0x198
    NSMutableDictionary *_pendingKickedMembersByIdentifier;	// 416 = 0x1a0
    NSMutableSet *_pendingAllowedMembers;	// 424 = 0x1a8
    unsigned long long _kickMemberRetryCount;	// 432 = 0x1b0
    unsigned long long _setScreenSharingRetryCount;	// 440 = 0x1b8
    NSArray *_currentParticipantPresentationContexts;	// 448 = 0x1c0
    CSDConversationParticipant *_splitSessionSecondary;	// 456 = 0x1c8
    CSDConversationABTestConfiguration *_ABTestConfiguration;	// 464 = 0x1d0
    NSMutableArray *_addedHandoffParticipants;	// 472 = 0x1d8
    NSMutableArray *_removedHandoffParticipants;	// 480 = 0x1e0
    NSMutableDictionary *_startAddingHandoffParticipantToTime;	// 488 = 0x1e8
    NSMutableDictionary *_addedHandoffParticipantToTime;	// 496 = 0x1f0
    NSMutableDictionary *_removedHandoffParticipantToTime;	// 504 = 0x1f8
    CPApplicationPolicyManager *_applicationLaunchPolicyManager;	// 512 = 0x200
    CPAudioRoutePolicyManager *_audioRoutePolicyManager;	// 520 = 0x208
    CPSystemStateObserver *_sharePlaySystemStateObserver;	// 528 = 0x210
    _TtC13callservicesd36CSDActivitySessionParticipantMonitor *_activitySessionParticipantMonitor;	// 536 = 0x218
    CDUnknownBlockType _downgradeToOneToOneAfterDelayBlock;	// 544 = 0x220
    NSMutableSet *_highlightIdentifiers;	// 552 = 0x228
    NSSet *_remoteMemberHandles;	// 560 = 0x230
    NSSet *_pendingMemberHandles;	// 568 = 0x238
    NSMutableSet *_pendingRemoteMembers;	// 576 = 0x240
    NSMutableArray *_memberHandlesAwaitingInvitesToLink;	// 584 = 0x248
    id <CSDConversationServerBag> _serverBag;	// 592 = 0x250
    CDUnknownBlockType _avcSessionCreationBlock;	// 600 = 0x258
    CDUnknownBlockType _videoDeviceControllerCreationBlock;	// 608 = 0x260
    NSObject *_reportingHierarchyToken;	// 616 = 0x268
    NSObject *_reportingHierarchySubToken;	// 624 = 0x270
    NSMutableDictionary *_inflightAVCBlobRecoveryBlocksByIdentifier;	// 632 = 0x278
    CDUnknownBlockType _timeoutBlock;	// 640 = 0x280
    CDUnknownBlockType _participantRefreshBlock;	// 648 = 0x288
    CDUnknownBlockType _letMeInRequestUINotificationBlock;	// 656 = 0x290
    CDUnknownBlockType _noConversationParticipantTimeoutBlock;	// 664 = 0x298
    double _sessionSwitchTimeout;	// 672 = 0x2a0
    CDUnknownBlockType _personaHandshakeBlobCreationBlock;	// 680 = 0x2a8
    NSSet *_invitationPreferences;	// 688 = 0x2b0
    TUCallScreenShareAttributes *_screenShareAttributes;	// 696 = 0x2b8
    TUConversationProvider *_provider;	// 704 = 0x2c0
    NSDictionary *_activeParticipantDestinationsByIdentifier;	// 712 = 0x2c8
    NSMutableDictionary *_audioRoutesByParticipantIdentifier;	// 720 = 0x2d0
    CXCallFailureContext *_failureContext;	// 728 = 0x2d8
    id <CSDAVCSession> _avcSession;	// 736 = 0x2e0
    FTDeviceSupport *_deviceSupport;	// 744 = 0x2e8
    TUConversationHandoffContext *_handoffContext;	// 752 = 0x2f0
    NSMutableSet *_recentlyLeftParticipantIdentifiers;	// 760 = 0x2f8
    NSMutableDictionary *_pendingConversationParticipantsByIdentifier;	// 768 = 0x300
}

- (void).cxx_destruct;	// IMP=0x002000000005b23e
@property(retain, nonatomic) NSMutableDictionary *pendingConversationParticipantsByIdentifier; // @synthesize pendingConversationParticipantsByIdentifier=_pendingConversationParticipantsByIdentifier;
@property(retain, nonatomic) NSMutableSet *recentlyLeftParticipantIdentifiers; // @synthesize recentlyLeftParticipantIdentifiers=_recentlyLeftParticipantIdentifiers;
@property(retain, nonatomic) TUConversationHandoffContext *handoffContext; // @synthesize handoffContext=_handoffContext;
@property(retain, nonatomic) FTDeviceSupport *deviceSupport; // @synthesize deviceSupport=_deviceSupport;
@property(retain, nonatomic) id <CSDAVCSession> avcSession; // @synthesize avcSession=_avcSession;
@property(retain, nonatomic) CXCallFailureContext *failureContext; // @synthesize failureContext=_failureContext;
@property(retain, nonatomic) NSMutableDictionary *audioRoutesByParticipantIdentifier; // @synthesize audioRoutesByParticipantIdentifier=_audioRoutesByParticipantIdentifier;
@property(copy, nonatomic) NSDictionary *activeParticipantDestinationsByIdentifier; // @synthesize activeParticipantDestinationsByIdentifier=_activeParticipantDestinationsByIdentifier;
@property(retain, nonatomic) TUConversationProvider *provider; // @synthesize provider=_provider;
@property(nonatomic) TUCallScreenShareAttributes *screenShareAttributes; // @synthesize screenShareAttributes=_screenShareAttributes;
@property(copy, nonatomic) NSSet *invitationPreferences; // @synthesize invitationPreferences=_invitationPreferences;
@property(nonatomic) _Bool forceExpanseEnabled; // @synthesize forceExpanseEnabled=_forceExpanseEnabled;
@property(nonatomic) _Bool avcSessionInProgress; // @synthesize avcSessionInProgress=_avcSessionInProgress;
@property(copy, nonatomic) CDUnknownBlockType personaHandshakeBlobCreationBlock; // @synthesize personaHandshakeBlobCreationBlock=_personaHandshakeBlobCreationBlock;
@property(nonatomic) double sessionSwitchTimeout; // @synthesize sessionSwitchTimeout=_sessionSwitchTimeout;
@property(copy, nonatomic) CDUnknownBlockType noConversationParticipantTimeoutBlock; // @synthesize noConversationParticipantTimeoutBlock=_noConversationParticipantTimeoutBlock;
@property(copy, nonatomic) CDUnknownBlockType letMeInRequestUINotificationBlock; // @synthesize letMeInRequestUINotificationBlock=_letMeInRequestUINotificationBlock;
@property(copy, nonatomic) CDUnknownBlockType participantRefreshBlock; // @synthesize participantRefreshBlock=_participantRefreshBlock;
@property(copy, nonatomic) CDUnknownBlockType timeoutBlock; // @synthesize timeoutBlock=_timeoutBlock;
@property(readonly, copy, nonatomic) NSMutableDictionary *inflightAVCBlobRecoveryBlocksByIdentifier; // @synthesize inflightAVCBlobRecoveryBlocksByIdentifier=_inflightAVCBlobRecoveryBlocksByIdentifier;
@property(retain, nonatomic) NSObject *reportingHierarchySubToken; // @synthesize reportingHierarchySubToken=_reportingHierarchySubToken;
@property(retain, nonatomic) NSObject *reportingHierarchyToken; // @synthesize reportingHierarchyToken=_reportingHierarchyToken;
@property(copy, nonatomic) CDUnknownBlockType videoDeviceControllerCreationBlock; // @synthesize videoDeviceControllerCreationBlock=_videoDeviceControllerCreationBlock;
@property(copy, nonatomic) CDUnknownBlockType avcSessionCreationBlock; // @synthesize avcSessionCreationBlock=_avcSessionCreationBlock;
@property(retain, nonatomic) id <CSDConversationServerBag> serverBag; // @synthesize serverBag=_serverBag;
@property(retain, nonatomic) NSMutableArray *memberHandlesAwaitingInvitesToLink; // @synthesize memberHandlesAwaitingInvitesToLink=_memberHandlesAwaitingInvitesToLink;
@property(retain, nonatomic) NSMutableSet *pendingRemoteMembers; // @synthesize pendingRemoteMembers=_pendingRemoteMembers;
@property(copy, nonatomic) NSSet *pendingMemberHandles; // @synthesize pendingMemberHandles=_pendingMemberHandles;
@property(copy, nonatomic) NSSet *remoteMemberHandles; // @synthesize remoteMemberHandles=_remoteMemberHandles;
@property(retain, nonatomic) NSMutableSet *highlightIdentifiers; // @synthesize highlightIdentifiers=_highlightIdentifiers;
@property(copy, nonatomic) CDUnknownBlockType downgradeToOneToOneAfterDelayBlock; // @synthesize downgradeToOneToOneAfterDelayBlock=_downgradeToOneToOneAfterDelayBlock;
@property(nonatomic) _Bool expectedUplinkMuted; // @synthesize expectedUplinkMuted=_expectedUplinkMuted;
@property(retain, nonatomic) _TtC13callservicesd36CSDActivitySessionParticipantMonitor *activitySessionParticipantMonitor; // @synthesize activitySessionParticipantMonitor=_activitySessionParticipantMonitor;
@property(retain, nonatomic) CPSystemStateObserver *sharePlaySystemStateObserver; // @synthesize sharePlaySystemStateObserver=_sharePlaySystemStateObserver;
@property(retain, nonatomic) CPAudioRoutePolicyManager *audioRoutePolicyManager; // @synthesize audioRoutePolicyManager=_audioRoutePolicyManager;
@property(retain, nonatomic) CPApplicationPolicyManager *applicationLaunchPolicyManager; // @synthesize applicationLaunchPolicyManager=_applicationLaunchPolicyManager;
@property(retain, nonatomic) NSMutableDictionary *removedHandoffParticipantToTime; // @synthesize removedHandoffParticipantToTime=_removedHandoffParticipantToTime;
@property(retain, nonatomic) NSMutableDictionary *addedHandoffParticipantToTime; // @synthesize addedHandoffParticipantToTime=_addedHandoffParticipantToTime;
@property(retain, nonatomic) NSMutableDictionary *startAddingHandoffParticipantToTime; // @synthesize startAddingHandoffParticipantToTime=_startAddingHandoffParticipantToTime;
@property(retain, nonatomic) NSMutableArray *removedHandoffParticipants; // @synthesize removedHandoffParticipants=_removedHandoffParticipants;
@property(retain, nonatomic) NSMutableArray *addedHandoffParticipants; // @synthesize addedHandoffParticipants=_addedHandoffParticipants;
@property(retain, nonatomic) CSDConversationABTestConfiguration *ABTestConfiguration; // @synthesize ABTestConfiguration=_ABTestConfiguration;
@property(retain, nonatomic) CSDConversationParticipant *splitSessionSecondary; // @synthesize splitSessionSecondary=_splitSessionSecondary;
@property(retain, nonatomic) NSArray *currentParticipantPresentationContexts; // @synthesize currentParticipantPresentationContexts=_currentParticipantPresentationContexts;
@property(nonatomic) unsigned long long setScreenSharingRetryCount; // @synthesize setScreenSharingRetryCount=_setScreenSharingRetryCount;
@property(nonatomic) unsigned long long kickMemberRetryCount; // @synthesize kickMemberRetryCount=_kickMemberRetryCount;
@property(retain, nonatomic) NSMutableSet *pendingAllowedMembers; // @synthesize pendingAllowedMembers=_pendingAllowedMembers;
@property(retain, nonatomic) NSMutableDictionary *pendingKickedMembersByIdentifier; // @synthesize pendingKickedMembersByIdentifier=_pendingKickedMembersByIdentifier;
@property(readonly, nonatomic) CSDFaceTimeInviteDemuxer *faceTimeInviteDemuxer; // @synthesize faceTimeInviteDemuxer=_faceTimeInviteDemuxer;
@property(readonly, nonatomic) NSMutableDictionary *virtualParticipantsByPluginName; // @synthesize virtualParticipantsByPluginName=_virtualParticipantsByPluginName;
@property(nonatomic) unsigned long long rebroadcastTimeThreshold; // @synthesize rebroadcastTimeThreshold=_rebroadcastTimeThreshold;
@property(copy, nonatomic) NSDate *lastRebroadcastTime; // @synthesize lastRebroadcastTime=_lastRebroadcastTime;
@property(nonatomic, getter=isWaitingToPruneParticipants) _Bool waitingToPruneParticipants; // @synthesize waitingToPruneParticipants=_waitingToPruneParticipants;
@property(copy, nonatomic) NSSet *serverProvidedLightweightParticipantIdentifiers; // @synthesize serverProvidedLightweightParticipantIdentifiers=_serverProvidedLightweightParticipantIdentifiers;
@property(copy, nonatomic) NSSet *serverProvidedParticipantIdentifiers; // @synthesize serverProvidedParticipantIdentifiers=_serverProvidedParticipantIdentifiers;
@property(copy, nonatomic) NSDictionary *activeLightweightParticipantDestinationsByIdentifier; // @synthesize activeLightweightParticipantDestinationsByIdentifier=_activeLightweightParticipantDestinationsByIdentifier;
@property(retain, nonatomic) NSNumber *expectedAudioPaused; // @synthesize expectedAudioPaused=_expectedAudioPaused;
@property(retain, nonatomic) NSNumber *expectedVideoPaused; // @synthesize expectedVideoPaused=_expectedVideoPaused;
@property(retain, nonatomic) NSNumber *expectedScreenEnabled; // @synthesize expectedScreenEnabled=_expectedScreenEnabled;
@property(retain, nonatomic) NSNumber *expectedVideoEnabled; // @synthesize expectedVideoEnabled=_expectedVideoEnabled;
@property(retain, nonatomic) NSNumber *expectedAudioEnabled; // @synthesize expectedAudioEnabled=_expectedAudioEnabled;
@property(readonly, nonatomic) CSDConversationLocalParticipantBlobTracker *localParticipantBlobTracker; // @synthesize localParticipantBlobTracker=_localParticipantBlobTracker;
@property(readonly, nonatomic) CSDIDSGroupSession *idsSession; // @synthesize idsSession=_idsSession;
@property(retain, nonatomic) NSMutableDictionary *screenSharingRequestsByUUID; // @synthesize screenSharingRequestsByUUID=_screenSharingRequestsByUUID;
@property(retain, nonatomic) NSMutableSet *kickedParticipants; // @synthesize kickedParticipants=_kickedParticipants;
@property(retain, nonatomic) NSMutableDictionary *activeLightweightParticipantsByIdentifier; // @synthesize activeLightweightParticipantsByIdentifier=_activeLightweightParticipantsByIdentifier;
@property(readonly, nonatomic) NSMutableDictionary *activeRemoteParticipantsByIdentifier; // @synthesize activeRemoteParticipantsByIdentifier=_activeRemoteParticipantsByIdentifier;
@property(readonly, nonatomic) NSObject<OS_dispatch_queue> *queue; // @synthesize queue=_queue;
@property(readonly, nonatomic) id <TUFeatureFlags> featureFlags; // @synthesize featureFlags=_featureFlags;
@property(copy, nonatomic) TUConversationHandoffEligibility *handoffEligibility; // @synthesize handoffEligibility=_handoffEligibility;
@property(copy, nonatomic) TUConversationParticipantAssociation *localParticipantAssociation; // @synthesize localParticipantAssociation=_localParticipantAssociation;
@property(readonly, nonatomic) TUConversationReport *report; // @synthesize report=_report;
@property(retain, nonatomic) CPActivitySessionManager *activitySessionManager; // @synthesize activitySessionManager=_activitySessionManager;
@property(nonatomic, getter=isCameraMixedWithScreen) _Bool cameraMixedWithScreen; // @synthesize cameraMixedWithScreen=_cameraMixedWithScreen;
@property(nonatomic, getter=isSpatialPersonaEnabled) _Bool spatialPersonaEnabled; // @synthesize spatialPersonaEnabled=_spatialPersonaEnabled;
@property(readonly, nonatomic, getter=isCaptioningEnable) _Bool captioningEnabled; // @synthesize captioningEnabled=_captioningEnabled;
@property(copy, nonatomic) NSString *messagesGroupName; // @synthesize messagesGroupName=_messagesGroupName;
@property(retain, nonatomic) TUConversationActivitySession *stagedActivitySession; // @synthesize stagedActivitySession=_stagedActivitySession;
@property(copy, nonatomic) NSArray *supportedMediaTypes; // @synthesize supportedMediaTypes=_supportedMediaTypes;
@property(nonatomic) unsigned long long screenSharingType; // @synthesize screenSharingType=_screenSharingType;
@property(nonatomic) _Bool ignoreLMIRequests; // @synthesize ignoreLMIRequests=_ignoreLMIRequests;
@property(copy, nonatomic) NSSet *otherInvitedHandles; // @synthesize otherInvitedHandles=_otherInvitedHandles;
@property(copy, nonatomic) NSSet *remotePushTokens; // @synthesize remotePushTokens=_remotePushTokens;
@property(copy, nonatomic) NSSet *rejectedMembers; // @synthesize rejectedMembers=_rejectedMembers;
@property(copy, nonatomic) NSSet *kickedMembers; // @synthesize kickedMembers=_kickedMembers;
@property(copy, nonatomic) NSSet *pendingMembers; // @synthesize pendingMembers=_pendingMembers;
@property(copy, nonatomic) NSSet *lightweightMembers; // @synthesize lightweightMembers=_lightweightMembers;
@property(copy, nonatomic) NSSet *remoteMembers; // @synthesize remoteMembers=_remoteMembers;
@property(readonly, nonatomic) TUConversationMember *localMember; // @synthesize localMember=_localMember;
@property(readonly, nonatomic) TUHandle *initiator; // @synthesize initiator=_initiator;
@property(nonatomic, getter=hasJoined) _Bool hasJoined; // @synthesize hasJoined=_hasJoined;
@property(retain, nonatomic) TUConversationMember *localLightweightSecondaryMember; // @synthesize localLightweightSecondaryMember=_localLightweightSecondaryMember;
@property(readonly, nonatomic, getter=isLocallyCreated) _Bool locallyCreated; // @synthesize locallyCreated=_locallyCreated;
@property(nonatomic) long long letMeInRequestState; // @synthesize letMeInRequestState=_letMeInRequestState;
@property(nonatomic) _Bool hasReceivedLetMeInRequest; // @synthesize hasReceivedLetMeInRequest=_hasReceivedLetMeInRequest;
@property(nonatomic) long long state; // @synthesize state=_state;
@property(retain, nonatomic) NSUUID *messagesGroupUUID; // @synthesize messagesGroupUUID=_messagesGroupUUID;
@property(retain, nonatomic) TUConversationLink *link; // @synthesize link=_link;
@property(readonly, nonatomic) NSUUID *groupUUID; // @synthesize groupUUID=_groupUUID;
@property(readonly, nonatomic) NSUUID *UUID; // @synthesize UUID=_UUID;
@property(nonatomic) __weak id <CSDConversationDelegate> delegate; // @synthesize delegate=_delegate;
@property(nonatomic, getter=isAudioInjectionAllowed) _Bool audioInjectionAllowed; // @synthesize audioInjectionAllowed=_audioInjectionAllowed;
@property(nonatomic) unsigned long long presentationMode; // @synthesize presentationMode=_presentationMode;
@property(nonatomic) unsigned long long avMode; // @synthesize avMode=_avMode;
- (void)systemStateObserver:(id)arg1 screenSharingInitiationAllowedStateChanged:(_Bool)arg2;	// IMP=0x001000000005a731
- (void)systemStateObserver:(id)arg1 screenSharingAllowedStateChanged:(_Bool)arg2;	// IMP=0x001000000005a624
- (void)systemStateObserver:(id)arg1 sharePlayAllowedStateChanged:(_Bool)arg2;	// IMP=0x001000000005a61e
- (void)activitySessionManager:(id)arg1 shouldRegisterPlugin:(id)arg2;	// IMP=0x001000000005a339
- (void)activitySessionManager:(id)arg1 requestedEndpointWithIdentifier:(id)arg2 activitySession:(id)arg3 completion:(CDUnknownBlockType)arg4;	// IMP=0x001000000005a263
- (void)activitySessionManager:(id)arg1 sendResourceAtURL:(id)arg2 toParticipants:(id)arg3 metadata:(id)arg4 activitySessionUUID:(id)arg5 completion:(CDUnknownBlockType)arg6;	// IMP=0x001000000005a059
- (void)activitySessionManager:(id)arg1 activitySessionAssociatedSceneChanged:(id)arg2;	// IMP=0x0010000000059f11
- (void)activitySessionManager:(id)arg1 activitySessionStateChanged:(id)arg2 oldState:(unsigned long long)arg3;	// IMP=0x0010000000059e47
- (void)activitySessionManager:(id)arg1 activitySessionRemoved:(id)arg2 userOriginated:(_Bool)arg3;	// IMP=0x0010000000059cc2
- (void)activitySessionManager:(id)arg1 requestForegroundPresentationForActivity:(id)arg2;	// IMP=0x0010000000059b67
- (void)activitySessionManager:(id)arg1 sessionUnjoined:(id)arg2 startDate:(id)arg3 endDate:(id)arg4;	// IMP=0x0010000000059a0b
- (id)activitySessionManagerRequestedCallTypeStringForLogging:(id)arg1;	// IMP=0x00100000000599a2
- (void)activitySessionManager:(id)arg1 activityChangedOnSession:(id)arg2;	// IMP=0x0010000000059907
- (void)activitySessionManager:(id)arg1 activeRemoteParticipantWithParticipantIdentifier:(unsigned long long)arg2 bundleIdentifier:(id)arg3 completionHandler:(CDUnknownBlockType)arg4;	// IMP=0x00100000000596c4
- (id)activitySessionManager:(id)arg1 activeRemoteParticipantWithParticipantIdentifier:(unsigned long long)arg2 bundleIdentifier:(id)arg3;	// IMP=0x0010000000059526
- (id)activitySessionManager:(id)arg1 localParticipantWithParticipantIdentifier:(unsigned long long)arg2 bundleIdentifier:(id)arg3;	// IMP=0x001000000005939b
- (void)activitySessionManager:(id)arg1 requestEncryptionKeysForParticipants:(id)arg2 topicName:(id)arg3;	// IMP=0x00100000000592e4
- (void)activitySessionManager:(id)arg1 fetchDataCryptorForTopic:(id)arg2 completionHandler:(CDUnknownBlockType)arg3;	// IMP=0x001000000005922d
- (void)activitySessionManager:(id)arg1 receivedActivitySessionEvent:(id)arg2;	// IMP=0x0010000000059192
- (_Bool)activitySessionManager:(id)arg1 activitySessionIsJoinable:(id)arg2;	// IMP=0x0010000000059139
- (void)activitySessionManager:(id)arg1 activitySessionChanged:(id)arg2;	// IMP=0x001000000005904d
- (void)activitySessionManager:(id)arg1 tuActivitySessionsDidChange:(id)arg2;	// IMP=0x0010000000058fd3
- (void)checkAndSetTUActivityActive:(id)arg1;	// IMP=0x0010000000058fcd
- (_Bool)remoteJoinedActivity:(id)arg1;	// IMP=0x0010000000058de1
- (void)postUserNotificationForUnsupportedScreenSharingActivity:(id)arg1 alternateReponseHandler:(CDUnknownBlockType)arg2;	// IMP=0x0010000000058a18
- (void)audioPolicyManager:(id)arg1 sharePlayAllowedStateChanged:(_Bool)arg2;	// IMP=0x0010000000058520
- (void)updateScreenEnabledForRemoteParticipants:(_Bool)arg1;	// IMP=0x001000000005829c
- (void)removedRemoteParticipantWithIdentifier:(unsigned long long)arg1 didSucceed:(_Bool)arg2;	// IMP=0x00100000000580d7
- (void)session:(id)arg1 screenCaptureDidStop:(_Bool)arg2 withError:(id)arg3;	// IMP=0x0010000000057f09
- (void)session:(id)arg1 screenCaptureDidStart:(_Bool)arg2 withError:(id)arg3;	// IMP=0x0010000000057dd3
- (void)sessionLocalParticipantDidStopReacting:(id)arg1;	// IMP=0x0010000000057c7b
- (void)session:(id)arg1 localParticipantDidReact:(id)arg2;	// IMP=0x0000000000057afd
- (void)remoteParticipantWithIdentifier:(unsigned long long)arg1 didReact:(id)arg2;	// IMP=0x0010000000057960
- (void)remoteParticipantWithIdentifier:(unsigned long long)arg1 cameraMixedWithScreenDidChange:(_Bool)arg2;	// IMP=0x00100000000577d0
- (void)remoteParticipantWithIdentifier:(unsigned long long)arg1 didChangeAudioPriority:(long long)arg2 videoPriority:(long long)arg3;	// IMP=0x001000000005762a
- (void)remoteParticipantWithIdentifier:(unsigned long long)arg1 updatedAudioPaused:(_Bool)arg2 streamToken:(long long)arg3;	// IMP=0x001000000005749a
- (void)addedRemoteParticipantWithIdentifier:(unsigned long long)arg1 updatedAudioEnabled:(_Bool)arg2 updatedVideoEnabled:(_Bool)arg3 streamToken:(long long)arg4 screenToken:(long long)arg5 captionsToken:(long long)arg6;	// IMP=0x00100000000571da
- (void)remoteParticipantWithIdentifier:(unsigned long long)arg1 updatedScreenEnabled:(_Bool)arg2 streamToken:(long long)arg3 screenToken:(long long)arg4 captionsToken:(long long)arg5;	// IMP=0x0010000000056c5c
- (void)remoteParticipantWithIdentifier:(unsigned long long)arg1 updatedVideoEnabled:(_Bool)arg2 streamToken:(long long)arg3 screenToken:(long long)arg4 captionsToken:(long long)arg5;	// IMP=0x0010000000056a7e
- (void)remoteParticipantWithIdentifier:(unsigned long long)arg1 updatedAudioEnabled:(_Bool)arg2 streamToken:(long long)arg3 screenToken:(long long)arg4 captionsToken:(long long)arg5;	// IMP=0x00100000000568b7
- (void)session:(id)arg1 screenShareAttributesUpdated:(id)arg2;	// IMP=0x00100000000567e6
- (void)session:(id)arg1 cameraMixedWithScreenDidChange:(_Bool)arg2;	// IMP=0x00100000000566d3
- (void)sessionShouldReconnect:(id)arg1;	// IMP=0x0010000000056439
- (void)session:(id)arg1 changedBytesOfDataUsed:(long long)arg2;	// IMP=0x0010000000056337
- (void)session:(id)arg1 requestedOneToOneModeEnabled:(_Bool)arg2 didSucceed:(_Bool)arg3 error:(id)arg4;	// IMP=0x0010000000056032
- (void)session:(id)arg1 changedLocalVideoPaused:(_Bool)arg2 didSucceed:(_Bool)arg3 error:(id)arg4;	// IMP=0x0010000000055ceb
- (void)session:(id)arg1 changedLocalAudioPaused:(_Bool)arg2 didSucceed:(_Bool)arg3 error:(id)arg4;	// IMP=0x00100000000559a4
- (void)session:(id)arg1 changedScreenEnabled:(_Bool)arg2 didSucceed:(_Bool)arg3 error:(id)arg4;	// IMP=0x001000000005535f
- (void)session:(id)arg1 changedLocalVideoEnabled:(_Bool)arg2 didSucceed:(_Bool)arg3 error:(id)arg4;	// IMP=0x0010000000054e18
- (void)session:(id)arg1 changedLocalAudioEnabled:(_Bool)arg2 didSucceed:(_Bool)arg3 error:(id)arg4;	// IMP=0x0010000000054ad1
- (void)serverDisconnectedForSession:(id)arg1;	// IMP=0x0010000000054853
- (void)session:(id)arg1 didStopWithError:(id)arg2;	// IMP=0x00100000000542ef
- (void)session:(id)arg1 didDetectError:(id)arg2;	// IMP=0x0010000000054050
- (void)session:(id)arg1 didStart:(_Bool)arg2 error:(id)arg3;	// IMP=0x0010000000053a39
- (void)executeSessionDidStart;	// IMP=0x001000000005389d
- (int)_errorToAVCProviderEndedReason:(id)arg1 defaultProviderReason:(int)arg2;	// IMP=0x001000000005364e
- (void)session:(id)arg1 didReceiveUnderlyingLinksStatus:(_Bool)arg2;	// IMP=0x0010000000053541
- (id)onlyAvailableSessionConversationParticipant:(id)arg1;	// IMP=0x0010000000053413
- (id)session:(id)arg1 conversationParticipantWithParticipantIdentifier:(unsigned long long)arg2;	// IMP=0x001000000005335a
- (void)session:(id)arg1 didReceiveServerErrorCode:(unsigned int)arg2;	// IMP=0x00100000000531f7
- (void)session:(id)arg1 didReceiveData:(id)arg2 dataType:(unsigned short)arg3 forParticipant:(id)arg4;	// IMP=0x00100000000530d0
- (void)session:(id)arg1 didReceiveDataBlob:(id)arg2 forParticipant:(id)arg3;	// IMP=0x001000000005276c
- (void)sessionDidReceiveKeyUpdate:(id)arg1;	// IMP=0x00100000000526f8
- (void)session:(id)arg1 didUnregisterPluginAllocationInfo:(id)arg2;	// IMP=0x0010000000052565
- (void)session:(id)arg1 didRegisterPluginAllocationInfo:(id)arg2;	// IMP=0x001000000005243e
- (void)session:(id)arg1 didReceiveKickedParticipantIDs:(id)arg2 withCode:(unsigned int)arg3 withType:(unsigned short)arg4 isTruncated:(_Bool)arg5;	// IMP=0x00100000000510ee
- (void)session:(id)arg1 didReceiveReport:(id)arg2;	// IMP=0x0010000000051031
- (void)session:(id)arg1 didReceiveLeftParticipantID:(unsigned long long)arg2 withContext:(id)arg3;	// IMP=0x0010000000050a73
- (void)session:(id)arg1 didReceiveJoinedParticipantID:(unsigned long long)arg2 withContext:(id)arg3;	// IMP=0x00100000000502c6
- (void)updateOneToOneModeForParticipantUpdateType:(unsigned short)arg1 participant:(id)arg2;	// IMP=0x001000000004fda8
- (void)setRemoteParticipantType:(unsigned short)arg1 participant:(id)arg2;	// IMP=0x001000000004fc41
- (void)_updateParticipantTypesForAddedParticipant:(id)arg1;	// IMP=0x001000000004fbe7
- (void)session:(id)arg1 didReceiveLocalParticipantType:(unsigned short)arg2 error:(id)arg3;	// IMP=0x001000000004f332
- (void)sessionDidTerminate:(id)arg1;	// IMP=0x001000000004f285
- (void)session:(id)arg1 receivedActiveLightweightParticipantDestinationsByIdentifier:(id)arg2;	// IMP=0x001000000004f175
- (void)session:(id)arg1 receivedActiveParticipantDestinationsByIdentifier:(id)arg2;	// IMP=0x001000000004e6a9
- (void)reviveOrInvalidateCachedConversationIfNecessary;	// IMP=0x001000000004df99
- (void)updateParticipantsWithDestinationIdentifiers:(id)arg1;	// IMP=0x001000000004dd53
- (void)session:(id)arg1 endedWithError:(id)arg2 reason:(unsigned int)arg3;	// IMP=0x001000000004d92f
- (void)session:(id)arg1 didLeaveGroupWithError:(id)arg2;	// IMP=0x001000000004d387
- (void)session:(id)arg1 didJoinGroup:(_Bool)arg2 participantIdentifiers:(id)arg3 error:(id)arg4;	// IMP=0x001000000004cf20
- (_Bool)isScreenSharingInitiationAvailable;	// IMP=0x001000000004cedc
- (void)_applyUpdateFromDataBlobForRemoteParticipant:(id)arg1 participantIdentifier:(unsigned long long)arg2;	// IMP=0x001000000004ccc6
- (void)postSharePlayActivityDidChangeNotificationIfNecessary:(id)arg1;	// IMP=0x001000000004cb8e
- (void)_generateHandoffReportIfNecessaryForUpdatedParticipantID:(unsigned long long)arg1 isAddParticipant:(_Bool)arg2;	// IMP=0x001000000004c2db
- (void)updateConversationParticipantToHaveMatchingSiriDisplayName:(id)arg1;	// IMP=0x001000000004bfe5
- (void)continueHandoffAudioRouteForIdentifier:(unsigned long long)arg1 participantLeft:(_Bool)arg2;	// IMP=0x001000000004bd5e
- (void)switchBackToOneToOneIfPossibleUsingDelay:(_Bool)arg1;	// IMP=0x001000000004aec3
- (void)switchBackToOneToOneIfPossible;	// IMP=0x001000000004aeaf
- (void)_registerPluginsIfNecessary;	// IMP=0x001000000004acf9
- (id)_stableExpanseIdentifier;	// IMP=0x001000000004a94e
- (void)_reportConversationFailedWithProviderEndedReason:(unsigned long long)arg1;	// IMP=0x001000000004a883
- (void)_reportConversationFailedWithFailureReason:(long long)arg1 providerEndedReason:(unsigned long long)arg2;	// IMP=0x001000000004a7b2
- (void)refreshActiveParticipantsList;	// IMP=0x001000000004a54d
- (void)_pruneRemoteParticipantsIfNecessary;	// IMP=0x0010000000049ee1
- (void)_cancelInFlightAVCBlobRecoveryIfNecessary;	// IMP=0x0010000000049b52
- (void)_removeMemberFromPendingMemberListForParticipant:(id)arg1;	// IMP=0x0010000000049958
- (void)_requestAVCBlobsIfNecessary;	// IMP=0x0010000000048e25
- (void)_showLetMeInUIIfNecessary;	// IMP=0x0010000000047cab
- (void)_endCallIfNecessary;	// IMP=0x001000000004766d
- (void)_cancelTimeoutForLeavingConversation;	// IMP=0x00100000000475af
- (void)_beginTimeoutForLeavingConversationWithReason:(id)arg1;	// IMP=0x0010000000047205
- (void)cleanUpIDSSessionState;	// IMP=0x0010000000047138
- (void)_cleanUpHandoffMetricsIfNecessary;	// IMP=0x0010000000046e46
- (void)_handleStateChanged:(long long)arg1 oldState:(long long)arg2;	// IMP=0x0010000000046dff
- (void)_cleanUpFromAVCSessionFailure;	// IMP=0x0010000000046ca1
- (void)_startAVCSessionIfNecessary;	// IMP=0x0010000000046808
- (void)_addParticipantsWaitingToBeAddedToAVCSession;	// IMP=0x0010000000046429
- (void)_addRemoteParticipantToAVCSessionIfPossible:(id)arg1;	// IMP=0x00100000000461f6
- (void)_startIDSSessionWithContext:(id)arg1;	// IMP=0x00100000000455d6
- (void)_emitRTCConnectionSetupEvent:(long long)arg1 participantIdentifier:(unsigned long long)arg2;	// IMP=0x0010000000045393
- (void)_emitRTCConnectionSetupEventForAddActiveParticipant:(id)arg1;	// IMP=0x001000000004528d
- (void)_cleanUpConversation;	// IMP=0x00100000000450c2
- (void)_stopAVCSession;	// IMP=0x0010000000044fa8
- (void)_restartIDSSessionIfNecessary;	// IMP=0x0010000000044dbc
- (id)_allMembers;	// IMP=0x0010000000044cd1
- (_Bool)_endScreenCallIfNecessary;	// IMP=0x0010000000044669
@property(readonly, nonatomic) _Bool allParticipantsSupportSharePlay;
- (void)setIDSAliasingSalt:(id)arg1 onContainer:(id)arg2;	// IMP=0x001000000004458b
- (void)addAliasesToConversationContainer:(id)arg1 forBundleIdentifier:(id)arg2;	// IMP=0x0010000000044383
- (id)localCSDConversationParticipant;	// IMP=0x00100000000441b2
@property(readonly, nonatomic) TUConversationParticipant *localParticipant;
- (id)remoteMemberForHandle:(id)arg1;	// IMP=0x0010000000043eb2
- (id)remoteParticipantForIdentifier:(unsigned long long)arg1;	// IMP=0x0010000000043d51
- (id)remoteParticipantForHandle:(id)arg1;	// IMP=0x00100000000439da
- (void)addRequiredCapabilities:(id)arg1 requiredLackOfCapabilities:(id)arg2;	// IMP=0x001000000004394f
@property(readonly, nonatomic) NSDictionary *capabilitySendMessageOptions;
- (_Bool)containsMemberWithHandle:(id)arg1;	// IMP=0x00100000000437af
- (id)memberWithHandle:(id)arg1;	// IMP=0x0010000000043422
- (void)updateLocalMember:(id)arg1;	// IMP=0x0010000000043411
- (void)updateLightweightMember:(id)arg1;	// IMP=0x0010000000043198
- (void)updateRemoteMember:(id)arg1;	// IMP=0x0010000000042f1f
- (_Bool)isRepresentedByRemoteMembers:(id)arg1 andLink:(id)arg2;	// IMP=0x0010000000042cca
- (id)reducedInfoMembers:(id)arg1;	// IMP=0x0010000000042a3f
- (void)setRemoteParticipantsDownlinkMuted:(_Bool)arg1;	// IMP=0x0010000000042875
- (void)_allowMember:(id)arg1;	// IMP=0x00100000000427d5
- (void)kickMember:(id)arg1;	// IMP=0x00100000000424ec
- (void)leaveUsingContext:(id)arg1;	// IMP=0x0010000000041a78
- (void)leaveWithReason:(unsigned long long)arg1;	// IMP=0x00100000000419ee
- (void)leave;	// IMP=0x00100000000419da
@property(readonly, nonatomic) _Bool supportsLeaveContext;
- (void)startAudio;	// IMP=0x0010000000041596
- (void)broadcastLocalParticipantData;	// IMP=0x0010000000041435
- (void)updateLocalParticipantInfo;	// IMP=0x00100000000413bf
- (void)joinUsingContext:(id)arg1;	// IMP=0x001000000003fe0f
- (id)setupNewAVCSession:(_Bool)arg1;	// IMP=0x001000000003f98b
- (void)destroyScreenCapturePickerIfNecessary;	// IMP=0x001000000003f985
- (void)createScreenCapturePickerIfNecessary;	// IMP=0x001000000003f97f
- (void)stopContentSharingSession;	// IMP=0x001000000003f6c6
- (void)resetContentSharingSessionContent;	// IMP=0x001000000003f6c0
- (void)createContentSharingSessionIfNecessary;	// IMP=0x001000000003f6ba
- (struct CGSize)localPortraitAspectRatio;	// IMP=0x001000000003f5c1
- (id)tuSystemActivitySessions;	// IMP=0x001000000003f571
@property(readonly, copy, nonatomic) NSSet *tuActivitySessions;
@property(readonly, copy, nonatomic) NSSet *activitySessions;
- (void)_launchApplicationForActivityIfNecessary:(id)arg1 shouldForeground:(_Bool)arg2;	// IMP=0x001000000003eb58
- (void)_launchApplicationForActivityIfNecessary:(id)arg1;	// IMP=0x001000000003eb1a
- (void)_launchApplicationsForActivitiesIfNecessary:(_Bool)arg1;	// IMP=0x001000000003e7cf
- (void)removeActivitySessionIfNecessary;	// IMP=0x001000000003e4b5
- (void)_launchApplicationsForActivitiesIfNecessary;	// IMP=0x001000000003e48e
- (_Bool)setStagedActivitySessionForActivitySession:(id)arg1;	// IMP=0x001000000003e1d6
- (id)createStagedActivitySessionForActivity:(id)arg1;	// IMP=0x001000000003de3a
- (void)resetActivitySessionSceneAssociationsForBundleID:(id)arg1;	// IMP=0x001000000003ddd1
- (void)setUsingAirplay:(_Bool)arg1 forActivitySessionUUID:(id)arg2;	// IMP=0x001000000003dd5c
- (id)createActivitySession:(id)arg1;	// IMP=0x001000000003d467
- (void)_launchApplicationDueToActivityCreation:(id)arg1;	// IMP=0x001000000003d23a
- (void)removeActivitySessionWithUUID:(id)arg1 usingTerminatingHandle:(id)arg2;	// IMP=0x001000000003d0b5
- (void)presentDismissalAlertForActivitySessionWithUUID:(id)arg1;	// IMP=0x001000000003ce9a
- (void)leaveActivitySessionWithUUID:(id)arg1;	// IMP=0x001000000003cd32
- (void)fulfillPendingScreenSharingRequestsForRemoteParticipant:(id)arg1;	// IMP=0x001000000003c82c
- (void)fulfillLocalScreenShareRequests;	// IMP=0x001000000003c3b8
- (void)removeScreenSharingRequest:(id)arg1;	// IMP=0x001000000003c292
- (void)addScreenSharingRequest:(id)arg1;	// IMP=0x001000000003c1a2
- (_Bool)setConversationLink:(id)arg1 allowUpdate:(_Bool)arg2;	// IMP=0x001000000003bd54
- (void)removePendingMembers:(id)arg1 triggeredLocally:(_Bool)arg2;	// IMP=0x001000000003b7e2
- (_Bool)shouldRespondToLetMeInRequestForMember:(id)arg1;	// IMP=0x001000000003b41a
- (void)addPendingMembers:(id)arg1 triggeredLocally:(_Bool)arg2;	// IMP=0x001000000003ae2c
- (void)updateMessagesGroupName:(id)arg1;	// IMP=0x001000000003add3
- (void)updateMemberValidationSource:(id)arg1 source:(long long)arg2;	// IMP=0x001000000003a72f
- (void)addRemoteMembers:(id)arg1 otherInvitedHandles:(id)arg2 invitationPreferences:(id)arg3 addingFromLetMeIn:(_Bool)arg4 triggeredLocally:(_Bool)arg5;	// IMP=0x0010000000038822
- (void)addRemoteMembers:(id)arg1 otherInvitedHandles:(id)arg2 triggeredLocally:(_Bool)arg3;	// IMP=0x0010000000038724
- (void)removeRemoteMembers:(id)arg1 triggeredLocally:(_Bool)arg2;	// IMP=0x0010000000037ad8
- (void)removeVirtualParticipant:(id)arg1;	// IMP=0x001000000003771d
- (void)addVirtualParticipant:(id)arg1;	// IMP=0x00100000000373d2
- (void)updateParticipantPresentationContexts:(id)arg1;	// IMP=0x001000000003705e
- (void)removeParticipantWithIdentifier:(unsigned long long)arg1 fromHandle:(id)arg2 withReason:(unsigned long long)arg3;	// IMP=0x0010000000035e1d
- (_Bool)allowsScreenSharing;	// IMP=0x0010000000035d4e
- (void)updateReportInfoForHandoffParticipant:(id)arg1;	// IMP=0x0010000000035c50
- (void)setParticipantAudioVideoMode:(unsigned long long)arg1 presentationMode:(unsigned long long)arg2 forParticipant:(id)arg3;	// IMP=0x0010000000035a16
- (void)removeParticipantsForMember:(id)arg1;	// IMP=0x00100000000356db
- (void)addActiveParticipant:(id)arg1;	// IMP=0x00100000000344b6
@property(copy, nonatomic) NSSet *memberIdentifiers; // @synthesize memberIdentifiers=_memberIdentifiers;
@property(nonatomic, getter=isFromStorage) _Bool fromStorage; // @synthesize fromStorage=_fromStorage;
- (void)updateLocalAspectRatios;	// IMP=0x00100000000342cc
- (void)setConversationGridDisplayMode:(unsigned long long)arg1;	// IMP=0x0010000000034249
@property(nonatomic) struct CGRect presentationRect;
- (void);	// IMP=0x0010000000034075
@property(nonatomic) int presentationState;
- (void)setSharePlayHandedOff:(_Bool)arg1;	// IMP=0x0010000000033c13
@property(nonatomic, getter=isOneToOneModeEnabled) _Bool oneToOneModeEnabled;
- (void)removeHighlightIdentifier:(id)arg1;	// IMP=0x00100000000336aa
- (void)addHighlightIdentifier:(id)arg1;	// IMP=0x00100000000335dd
@property(readonly, nonatomic, getter=isOneToOneHandoffOngoing) _Bool oneToOneHandoffOngoing;
- (long long)activeRemoteParticipantCountMinusEligibleAVLess;	// IMP=0x00100000000324a8
@property(nonatomic, getter=isVideo) _Bool video; // @synthesize video=_video;
- (void)registerMessagesGroupAssociation;	// IMP=0x001000000003218b
- (void)setLocalParticipantAudioVideoMode:(unsigned long long)arg1 presentationMode:(unsigned long long)arg2;	// IMP=0x0010000000031f1b
- (void)setLocalParticipantAudioVideoMode:(unsigned long long)arg1;	// IMP=0x0010000000031f01
@property(nonatomic, getter=isScreening) _Bool screening; // @synthesize screening=_screening;
@property(nonatomic, getter=isRelaying) _Bool relaying; // @synthesize relaying=_relaying;
@property(readonly, nonatomic, getter=isRedirectingAudio) _Bool redirectingAudio;
@property(nonatomic, getter=isAudioPaused) _Bool audioPaused;
@property(nonatomic, getter=isVideoPaused) _Bool videoPaused;
- (void)addScreenSharingType:(unsigned long long)arg1;	// IMP=0x0010000000031255
- (void)setScreenEnabled:(_Bool)arg1 attributes:(id)arg2;	// IMP=0x001000000003104e
@property(nonatomic, getter=isVideoEnabled) _Bool videoEnabled;
@property(readonly, nonatomic, getter=isScreenEnabled) _Bool screenEnabled;
@property(nonatomic, getter=isAudioEnabled) _Bool audioEnabled;
@property(readonly, nonatomic) _Bool isUnderlyingLinksConnected;
@property(nonatomic, getter=isUplinkMuted) _Bool uplinkMuted;
@property(readonly, copy, nonatomic) NSSet *memberHandlesEligibleForLinkApproval;
@property(readonly, nonatomic) NSSet *virtualParticipants;
- (_Bool)_expanseEnabled;	// IMP=0x0010000000030144
- (id)localParticipantDataToSendToDestinationIDs:(id)arg1;	// IMP=0x0010000000030057
- (id)localParticipantData;	// IMP=0x001000000002fdfb
- (id)localConversationParticipantWithDataToSendToDestinationIDs:(id)arg1;	// IMP=0x001000000002fca1
- (id)localConversationParticipantWithData;	// IMP=0x001000000002fa45
- (id)localParticipantCapabilities;	// IMP=0x001000000002f802
@property(readonly, nonatomic, getter=isAudioReady) _Bool audioReady;
- (long long)maxVideoDecodesAllowed;	// IMP=0x001000000002f4d2
@property(readonly, nonatomic) unsigned long long localParticipantIdentifier;
- (long long)avcLocalCaptionsToken;	// IMP=0x001000000002f3e0
@property(readonly, nonatomic) long long avcSessionToken;
- (id)avcSessionIdentifier;	// IMP=0x001000000002f2e2
@property(readonly, copy, nonatomic) TUConversation *tuConversation;
@property(readonly, copy, nonatomic) NSSet *screenSharingRequests;
@property(readonly, nonatomic) _Bool isAnyOtherAccountDeviceActive;
@property(readonly, copy, nonatomic) NSSet *activeLightweightParticipants;
@property(readonly, copy, nonatomic) NSSet *activeRemoteParticipants;
- (id)activeParticipants;	// IMP=0x001000000002e14b
- (_Bool)usesAudioSession;	// IMP=0x001000000002e143
@property(readonly, copy) NSString *description;
@property(readonly, nonatomic) TUVideoDeviceController *videoDeviceController; // @synthesize videoDeviceController=_videoDeviceController;
- (id)initWithQueue:(id)arg1 UUID:(id)arg2 groupUUID:(id)arg3 groupSession:(id)arg4 messagesGroupUUID:(id)arg5 locallyCreated:(_Bool)arg6 localMember:(id)arg7 initiator:(id)arg8 remoteMembers:(id)arg9 pendingMembers:(id)arg10 otherInvitedHandles:(id)arg11 lightweightMembers:(id)arg12 remotePushTokens:(id)arg13 activity:(id)arg14 link:(id)arg15 report:(id)arg16 fromStorage:(_Bool)arg17 avMode:(unsigned long long)arg18 presentationMode:(unsigned long long)arg19 applicationController:(id)arg20 featureFlags:(id)arg21 systemStateObserver:(id)arg22 applicationPolicyManager:(id)arg23 screenSharingRequest:(id)arg24 testConfiguration:(id)arg25 isOldMessage:(_Bool)arg26;	// IMP=0x001000000002b872
- (id)initWithQueue:(id)arg1 UUID:(id)arg2 groupUUID:(id)arg3 groupSession:(id)arg4 messagesGroupUUID:(id)arg5 locallyCreated:(_Bool)arg6 localMember:(id)arg7 initiator:(id)arg8 remoteMembers:(id)arg9 pendingMembers:(id)arg10 otherInvitedHandles:(id)arg11 lightweightMembers:(id)arg12 remotePushTokens:(id)arg13 activity:(id)arg14 link:(id)arg15 report:(id)arg16 fromStorage:(_Bool)arg17 avMode:(unsigned long long)arg18 presentationMode:(unsigned long long)arg19 applicationController:(id)arg20 featureFlags:(id)arg21 systemStateObserver:(id)arg22 applicationPolicyManager:(id)arg23 screenSharingRequest:(id)arg24 testConfiguration:(id)arg25;	// IMP=0x001000000002b7c2
- (id)initWithQueue:(id)arg1 UUID:(id)arg2 groupUUID:(id)arg3 groupSession:(id)arg4 messagesGroupUUID:(id)arg5 locallyCreated:(_Bool)arg6 localMember:(id)arg7 initiator:(id)arg8 remoteMembers:(id)arg9 pendingMembers:(id)arg10 otherInvitedHandles:(id)arg11 lightweightMembers:(id)arg12 activity:(id)arg13 link:(id)arg14 report:(id)arg15 fromStorage:(_Bool)arg16 avMode:(unsigned long long)arg17 presentationMode:(unsigned long long)arg18 applicationController:(id)arg19;	// IMP=0x001000000002b561
@property(nonatomic, readonly) CSDConversationParticipant *localCSDParticipant;

// Remaining properties
@property(readonly, nonatomic) _Bool allowScreenSharing;
@property(readonly, nonatomic) _Bool allowScreenSharingInitiation;
@property(readonly, nonatomic) _Bool allowSharePlay;
@property(readonly, copy) NSString *debugDescription;
// Preceding property had unknown attributes: ?
// Original attribute string: T@"NSString",?,R,C

@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

