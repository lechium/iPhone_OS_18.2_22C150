//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <objc/NSObject.h>

@class CSDAnsweringMachineController, CSDAudioArbitrationController, CSDAudioController, CSDCallController, CSDCallFilterController, CSDCallHistoryManager, CSDCallHistoryManagerXPCServer, CSDCallProviderManager, CSDCallProviderManagerXPCServer, CSDCallRecordingController, CSDCarPlayManager, CSDClientManager, CSDProviderCallDataSource, CSDRecentsController, CSDRelayCallDataSource, CSDRelayCallDelegate, CSDRouteController, CSDSpeechAssetManager, CSDVoIPApplicationController, IMNicknameProvider, MISSING_TYPE, NSArray, NSMutableDictionary, NSNumber, NSString, NSXPCListenerEndpoint, TUCallCenter, TUHardwareControlsBroadcaster;
@protocol CSDApplicationInstallationObserver, CSDCallContainer, CSDConversationServerBag, CSDProcessObserverProtocol, CSDRelayMessagingController, OS_dispatch_queue, TUFeatureFlags;

@interface CSDCallStateController : NSObject
{
    CSDCallHistoryManager *_callHistoryManager;	// 8 = 0x8
    CSDCallProviderManager *_callProviderManager;	// 16 = 0x10
    CSDCallController *_callController;	// 24 = 0x18
    CSDVoIPApplicationController *_voipApplicationController;	// 32 = 0x20
    id <CSDRelayMessagingController> _relayMessagingController;	// 40 = 0x28
    CSDAnsweringMachineController *_answeringMachineController;	// 48 = 0x30
    CSDCallRecordingController *_callRecordingController;	// 56 = 0x38
    CSDRecentsController *_recentsController;	// 64 = 0x40
    CSDAudioController *_audioController;	// 72 = 0x48
    CSDAudioArbitrationController *_audioArbitrationController;	// 80 = 0x50
    CSDRouteController *_localRouteController;	// 88 = 0x58
    CSDRouteController *_pairedHostDeviceRouteController;	// 96 = 0x60
    NSObject<OS_dispatch_queue> *_queue;	// 104 = 0x68
    id <CSDConversationServerBag> _serverBag;	// 112 = 0x70
    NSString *_currentlyTrackedA2DPRouteIdentifier;	// 120 = 0x78
    CSDCallHistoryManagerXPCServer *_callHistoryManagerXPCServer;	// 128 = 0x80
    CSDCallProviderManagerXPCServer *_callProviderManagerXPCServer;	// 136 = 0x88
    CSDRelayCallDataSource *_relayCallDataSource;	// 144 = 0x90
    CSDRelayCallDelegate *_relayCallDelegate;	// 152 = 0x98
    CSDClientManager *_clientManager;	// 160 = 0xa0
    TUHardwareControlsBroadcaster *_hardwareControlsBroadcaster;	// 168 = 0xa8
    id <CSDProcessObserverProtocol> _processObserver;	// 176 = 0xb0
    id <CSDApplicationInstallationObserver> _applicationInstallationObserver;	// 184 = 0xb8
    IMNicknameProvider *_nicknameProvider;	// 192 = 0xc0
    NSArray *_currentUpdatesForScreening;	// 200 = 0xc8
    NSMutableDictionary *_pendingCallInfoDict;	// 208 = 0xd0
    CSDCarPlayManager *_carPlayManager;	// 216 = 0xd8
    CSDSpeechAssetManager *_speechAssetManager;	// 224 = 0xe0
    NSXPCListenerEndpoint *_uiXPCEndpoint;	// 232 = 0xe8
    id <TUFeatureFlags> _featureFlags;	// 240 = 0xf0
    CDUnknownBlockType _clientInvalidationHandler;	// 248 = 0xf8
    CSDProviderCallDataSource *_providerCallDataSource;	// 256 = 0x100
    NSNumber *_shouldHandleSecureMicrophoneEvents;	// 264 = 0x108
}

+ (id)automaticNameAndPhotoQueue;	// IMP=0x00200000001a8262
+ (void)sanitizeJoinConversationRequest:(id)arg1;	// IMP=0x00100000001980c8
- (void).cxx_destruct;	// IMP=0x00200000001a9e2a
@property(retain, nonatomic) NSNumber *shouldHandleSecureMicrophoneEvents; // @synthesize shouldHandleSecureMicrophoneEvents=_shouldHandleSecureMicrophoneEvents;
@property(readonly, nonatomic) CSDProviderCallDataSource *providerCallDataSource; // @synthesize providerCallDataSource=_providerCallDataSource;
@property(copy, nonatomic) CDUnknownBlockType clientInvalidationHandler; // @synthesize clientInvalidationHandler=_clientInvalidationHandler;
@property(readonly, nonatomic) id <TUFeatureFlags> featureFlags; // @synthesize featureFlags=_featureFlags;
@property(retain, nonatomic) NSXPCListenerEndpoint *uiXPCEndpoint; // @synthesize uiXPCEndpoint=_uiXPCEndpoint;
@property(readonly, nonatomic) CSDSpeechAssetManager *speechAssetManager; // @synthesize speechAssetManager=_speechAssetManager;
@property(readonly, nonatomic) CSDCarPlayManager *carPlayManager; // @synthesize carPlayManager=_carPlayManager;
@property(retain, nonatomic) NSMutableDictionary *pendingCallInfoDict; // @synthesize pendingCallInfoDict=_pendingCallInfoDict;
@property(retain, nonatomic) NSArray *currentUpdatesForScreening; // @synthesize currentUpdatesForScreening=_currentUpdatesForScreening;
@property(retain, nonatomic) IMNicknameProvider *nicknameProvider; // @synthesize nicknameProvider=_nicknameProvider;
@property(readonly, nonatomic) id <CSDApplicationInstallationObserver> applicationInstallationObserver; // @synthesize applicationInstallationObserver=_applicationInstallationObserver;
@property(readonly, nonatomic) id <CSDProcessObserverProtocol> processObserver; // @synthesize processObserver=_processObserver;
@property(readonly, nonatomic) TUHardwareControlsBroadcaster *hardwareControlsBroadcaster; // @synthesize hardwareControlsBroadcaster=_hardwareControlsBroadcaster;
@property(readonly, nonatomic) CSDClientManager *clientManager; // @synthesize clientManager=_clientManager;
@property(readonly, nonatomic) CSDRelayCallDelegate *relayCallDelegate; // @synthesize relayCallDelegate=_relayCallDelegate;
@property(readonly, nonatomic) CSDRelayCallDataSource *relayCallDataSource; // @synthesize relayCallDataSource=_relayCallDataSource;
@property(readonly, nonatomic) CSDCallProviderManagerXPCServer *callProviderManagerXPCServer; // @synthesize callProviderManagerXPCServer=_callProviderManagerXPCServer;
@property(readonly, nonatomic) CSDCallHistoryManagerXPCServer *callHistoryManagerXPCServer; // @synthesize callHistoryManagerXPCServer=_callHistoryManagerXPCServer;
@property(copy, nonatomic) NSString *currentlyTrackedA2DPRouteIdentifier; // @synthesize currentlyTrackedA2DPRouteIdentifier=_currentlyTrackedA2DPRouteIdentifier;
@property(readonly, nonatomic) id <CSDConversationServerBag> serverBag; // @synthesize serverBag=_serverBag;
@property(readonly, nonatomic) NSObject<OS_dispatch_queue> *queue; // @synthesize queue=_queue;
@property(readonly, nonatomic) CSDRouteController *pairedHostDeviceRouteController; // @synthesize pairedHostDeviceRouteController=_pairedHostDeviceRouteController;
@property(readonly, nonatomic) CSDRouteController *localRouteController; // @synthesize localRouteController=_localRouteController;
@property(retain, nonatomic) CSDAudioArbitrationController *audioArbitrationController; // @synthesize audioArbitrationController=_audioArbitrationController;
@property(retain, nonatomic) CSDAudioController *audioController; // @synthesize audioController=_audioController;
@property(readonly, nonatomic) CSDRecentsController *recentsController; // @synthesize recentsController=_recentsController;
@property(retain, nonatomic) CSDCallRecordingController *callRecordingController; // @synthesize callRecordingController=_callRecordingController;
@property(retain, nonatomic) CSDAnsweringMachineController *answeringMachineController; // @synthesize answeringMachineController=_answeringMachineController;
@property(retain, nonatomic) id <CSDRelayMessagingController> relayMessagingController; // @synthesize relayMessagingController=_relayMessagingController;
@property(retain, nonatomic) CSDVoIPApplicationController *voipApplicationController; // @synthesize voipApplicationController=_voipApplicationController;
@property(readonly, nonatomic) CSDCallController *callController; // @synthesize callController=_callController;
@property(readonly, nonatomic) CSDCallProviderManager *callProviderManager; // @synthesize callProviderManager=_callProviderManager;
@property(readonly, nonatomic) CSDCallHistoryManager *callHistoryManager; // @synthesize callHistoryManager=_callHistoryManager;
- (_Bool)hasCustomGreetingFor:(id)arg1;	// IMP=0x00100000001a9b8c
- (_Bool)isInCallUIActive;	// IMP=0x00100000001a99ed
- (void)updateAudioArbitration;	// IMP=0x00100000001a99e7
- (_Bool)_hasAlreadyDeniedSendingNameAndPhotoToHandles:(id)arg1;	// IMP=0x00100000001a964d
- (_Bool)_sharingAudienceAllowsAutoSendNameAndPhoto;	// IMP=0x00100000001a9645
- (_Bool)_nameAndPhotoSharingEnabled;	// IMP=0x00100000001a95fa
- (id)_contactForHandle:(id)arg1 contactStore:(id)arg2;	// IMP=0x00100000001a95e5
- (_Bool)shouldAutomaticallySendNameAndPhotoToHandles:(id)arg1 isDefaultProvider:(_Bool)arg2;	// IMP=0x00100000001a8ed5
- (_Bool)shouldAutomaticallySendNameAndPhotoToHandles:(id)arg1 conversationProvider:(id)arg2;	// IMP=0x00100000001a8e1d
- (_Bool)shouldAutomaticallySendNameAndPhotoToHandles:(id)arg1 callProvider:(id)arg2;	// IMP=0x00100000001a8d65
- (void)sendNameAndPhotoToHandles:(id)arg1 fromID:(id)arg2;	// IMP=0x00100000001a8aea
- (void)sendNameAndPhotoUsingJoinRequest:(id)arg1;	// IMP=0x00100000001a8a76
- (void)sendNameAndPhotoUsingDialRequest:(id)arg1;	// IMP=0x00100000001a86bd
- (void)sendAutomaticNameAndPhotoUsingJoinRequestIfPossible:(id)arg1;	// IMP=0x00100000001a8517
- (void)sendAutomaticNameAndPhotoUsingDialRequestIfPossible:(id)arg1;	// IMP=0x00100000001a82e3
- (id)fetchPreferredFaceTimeAccountID;	// IMP=0x00100000001a81e6
- (void)didChangeFaceTimeCallingAvailability;	// IMP=0x00100000001a808b
- (void)didChangeRelayCallingCapabilities;	// IMP=0x00100000001a8015
- (void)providersChangedForProviderManager:(id)arg1;	// IMP=0x00100000001a7fac
- (void)callHistoryManager:(id)arg1 recentCallRequestedFor:(id)arg2 withStartDate:(id)arg3 avMode:(unsigned long long)arg4;	// IMP=0x00100000001a7f20
- (oneway void)defaultGreeting:(CDUnknownBlockType)arg1;	// IMP=0x00100000001a7e13
- (oneway void)customSandboxedURLGreetingForAccountUUID:(id)arg1 withCompletion:(CDUnknownBlockType)arg2;	// IMP=0x00100000001a7ce8
- (oneway void)deleteCustomGreetingForAccountUUID:(id)arg1;	// IMP=0x00100000001a7c2f
- (oneway void)saveCustomSandboxedURLGreeting:(id)arg1 forAccountUUID:(id)arg2;	// IMP=0x00100000001a7b39
- (oneway void)reportLocalPreviewStoppedForCallWithUniqueProxyIdentifier:(id)arg1;	// IMP=0x00100000001a79ff
- (oneway void)requestInitialState:(CDUnknownBlockType)arg1;	// IMP=0x00100000001a78d9
- (_Bool)isTrackingVoIPCallForBundleIdentifier:(id)arg1;	// IMP=0x00100000001a75b8
- (id)currentCallsForClient:(id)arg1;	// IMP=0x00100000001a74f4
- (id);	// IMP=0x00100000001a745f
- (id)currentProxyCalls;	// IMP=0x00100000001a7243
@property(readonly, nonatomic) _Bool isClientRecordingApplicationInstalled;
@property(readonly, nonatomic) _Bool multipleCallsActiveOrHeld;
- (void)propertiesChangedForCall:(id)arg1;	// IMP=0x00100000001a70aa
- (void)messagingConnectionCouldNotEstablishLinkForCalls:(id)arg1 didStartConnecting:(_Bool)arg2;	// IMP=0x00100000001a6f6e
- (void)messagingConnectionFailedForCalls:(id)arg1 didStartConnecting:(_Bool)arg2;	// IMP=0x00100000001a6e73
- (void)messagingConnectionEndedForCalls:(id)arg1 didStartConnecting:(_Bool)arg2;	// IMP=0x00100000001a6d07
- (oneway void)setClientCapabilities:(id)arg1;	// IMP=0x00100000001a6c02
- (oneway void)filterStatusForAddresses:(id)arg1 forBundleIdentifier:(id)arg2 reply:(CDUnknownBlockType)arg3;	// IMP=0x00100000001a69fb
- (oneway void)isUnknownAddress:(id)arg1 normalizedAddress:(id)arg2 forBundleIdentifier:(id)arg3 reply:(CDUnknownBlockType)arg4;	// IMP=0x00100000001a67df
- (oneway void)shouldRestrictAddresses:(id)arg1 forBundleIdentifier:(id)arg2 performSynchronously:(_Bool)arg3 reply:(CDUnknownBlockType)arg4;	// IMP=0x00100000001a66e4
- (oneway void)willRestrictAddresses:(id)arg1 forBundleIdentifier:(id)arg2 reply:(CDUnknownBlockType)arg3;	// IMP=0x00100000001a64dd
- (oneway void)policyForAddresses:(id)arg1 forBundleIdentifier:(id)arg2 reply:(CDUnknownBlockType)arg3;	// IMP=0x00100000001a63dd
- (oneway void)containsRestrictedHandle:(id)arg1 forBundleIdentifier:(id)arg2 performSynchronously:(_Bool)arg3 reply:(CDUnknownBlockType)arg4;	// IMP=0x00100000001a61f2
- (oneway void)pickPairedHostDeviceRouteWithUniqueIdentifier:(id)arg1 shouldWaitUntilAvailable:(_Bool)arg2;	// IMP=0x00100000001a6026
- (oneway void)pickLocalRouteWithUniqueIdentifier:(id)arg1 shouldWaitUntilAvailable:(_Bool)arg2;	// IMP=0x00100000001a5e5a
- (oneway void)pairedHostDeviceRoutesByUniqueIdentifier:(CDUnknownBlockType)arg1;	// IMP=0x00100000001a5d00
- (oneway void)localRoutesByUniqueIdentifier:(CDUnknownBlockType)arg1;	// IMP=0x00100000001a5ba6
- (oneway void)setCurrentAudioOutputDeviceToDeviceWithUID:(id)arg1;	// IMP=0x00100000001a59c5
- (oneway void)setCurrentAudioInputDeviceToDeviceWithUID:(id)arg1;	// IMP=0x00100000001a57e4
- (oneway void)joinConversationWithRequest:(id)arg1;	// IMP=0x00100000001a564b
- (oneway void)sendUserScoreToRTCReporting:(id)arg1 withScore:(int)arg2;	// IMP=0x00100000001a5554
- (oneway void)activateInCallUIWithActivityContinuationIdentifier:(id)arg1;	// IMP=0x00100000001a5012
- (oneway void)shouldAllowRingingCallStatusIndicator:(_Bool)arg1;	// IMP=0x00100000001a4dd8
- (oneway void)shouldSuppressInCallStatusBar:(_Bool)arg1;	// IMP=0x00100000001a4b96
- (oneway void)setBluetoothAudioFormatForCallWithUniqueProxyIdentifier:(id)arg1 bluetoothAudioFormat:(long long)arg2;	// IMP=0x00100000001a492a
- (oneway void)setSharingScreen:(_Bool)arg1 attributes:(id)arg2 forCallWithUniqueProxyIdentifier:(id)arg3;	// IMP=0x00100000001a46e9
- (oneway void)setScreenShareAttributesForCallWithUniqueProxyIdentifier:(id)arg1 attributes:(id)arg2;	// IMP=0x00100000001a44be
- (oneway void)setRemoteVideoPresentationStateForCallWithUniqueProxyIdentifier:(id)arg1 presentationState:(int)arg2;	// IMP=0x00100000001a42c3
- (oneway void)setRemoteVideoPresentationSizeForCallWithUniqueProxyIdentifier:(id)arg1 size:(struct CGSize)arg2;	// IMP=0x00100000001a408a
- (oneway void)enteredBackgroundForAllCalls;	// IMP=0x00100000001a3f6d
- (oneway void)willEnterBackgroundForAllCalls;	// IMP=0x00100000001a3e44
- (oneway void)enteredForegroundForCallWithUniqueProxyIdentifier:(id)arg1;	// IMP=0x00100000001a3c06
- (oneway void)updateCallWithProxy:(id)arg1;	// IMP=0x00100000001a3a75
- (oneway void)sendHardPauseDigitsForCallWithUniqueProxyIdentifier:(id)arg1;	// IMP=0x00100000001a3898
- (oneway void)pullHostedCallsFromPairedHostDevice;	// IMP=0x00100000001a376f
- (oneway void)pushHostedCallsToDestination:(id)arg1;	// IMP=0x00100000001a35de
- (oneway void)setEmergencyMediaItems:(id)arg1 forCallWithUniqueProxyIdentifier:(id)arg2;	// IMP=0x00100000001a32dd
- (oneway void)setHasEmergencyVideoStream:(_Bool)arg1 forCallWithUniqueProxyIdentifier:(id)arg2;	// IMP=0x00100000001a3017
- (oneway void)setSharingScreen:(_Bool)arg1 forCallWithUniqueProxyIdentifier:(id)arg2;	// IMP=0x00100000001a2d51
- (oneway void)setMixesVoiceWithMedia:(_Bool)arg1 forCallWithUniqueProxyIdentifier:(id)arg2;	// IMP=0x00100000001a2a8b
- (oneway void)setIsSendingVideo:(_Bool)arg1 forCallWithUniqueProxyIdentifier:(id)arg2;	// IMP=0x00100000001a277a
- (oneway void)setDownlinkMuted:(_Bool)arg1 forCallWithUniqueProxyIdentifier:(id)arg2;	// IMP=0x00100000001a24b4
- (oneway void)setUplinkMuted:(_Bool)arg1 forCallWithUniqueProxyIdentifier:(id)arg2;	// IMP=0x00100000001a21ea
- (oneway void)sendMMIOrUSSDCodeWithRequest:(id)arg1;	// IMP=0x00100000001a2059
- (oneway void)pullCallFromClientUsingHandoffActivityUserInfo:(id)arg1 reply:(CDUnknownBlockType)arg2;	// IMP=0x00100000001a1d41
- (oneway void)pushRelayingCallsToHostWithSourceIdentifier:(id)arg1;	// IMP=0x00100000001a1bb0
- (oneway void)pullRelayingGFTCallsFromClientIfNecessary;	// IMP=0x00100000001a1a77
- (oneway void)pullRelayingCallsFromClient;	// IMP=0x00100000001a1944
- (oneway void)setLiveVoicemailUnavailableReason:(long long)arg1 forCallWithUniqueProxyIdentifier:(id)arg2;	// IMP=0x00100000001a1729
- (oneway void)setTTYType:(int)arg1 forCallWithUniqueProxyIdentifier:(id)arg2;	// IMP=0x00100000001a152a
- (oneway void)disconnectAllCalls;	// IMP=0x00100000001a13fc
- (oneway void)disconnectCurrentCallAndActivateHeld;	// IMP=0x00100000001a12d3
- (oneway void)playDTMFToneForCallWithUniqueProxyIdentifier:(id)arg1 key:(unsigned char)arg2;	// IMP=0x00100000001a1009
- (oneway void)swapCalls;	// IMP=0x00100000001a0ee0
- (oneway void)ungroupCallWithUniqueProxyIdentifier:(id)arg1;	// IMP=0x00100000001a0c32
- (oneway void)groupCallWithUniqueProxyIdentifier:(id)arg1 withOtherCallWithUniqueProxyIdentifier:(id)arg2;	// IMP=0x00100000001a0859
- (oneway void)disconnectCallWithUniqueProxyIdentifier:(id)arg1;	// IMP=0x00100000001a0583
- (oneway void)requestVideoUpgradeForCallWithUniqueProxyIdentifier:(id)arg1;	// IMP=0x001000000019ff8c
- (oneway void)unholdCallWithUniqueProxyIdentifier:(id)arg1;	// IMP=0x001000000019fcde
- (oneway void)holdCallWithUniqueProxyIdentifier:(id)arg1;	// IMP=0x001000000019fa30
- (oneway void)answerCallWithRequest:(id)arg1;	// IMP=0x001000000019f5f6
- (void)_dial:(id)arg1 displayContext:(id)arg2 completion:(CDUnknownBlockType)arg3;	// IMP=0x001000000019f50c
- (oneway void)dialWithRequest:(id)arg1 displayContext:(id)arg2;	// IMP=0x001000000019f32e
- (oneway void)dialWithRequest:(id)arg1 reply:(CDUnknownBlockType)arg2;	// IMP=0x001000000019efa2
- (void)screenUpdate:(id)arg1 withProvider:(id)arg2 callSource:(id)arg3 callUUID:(id)arg4;	// IMP=0x001000000019ee00
- (oneway void)fetchAnonymousXPCEndpoint:(CDUnknownBlockType)arg1;	// IMP=0x001000000019ed21
- (oneway void)registerAnonymousXPCEndpoint:(id)arg1;	// IMP=0x001000000019ea20
- (oneway void)performRecordingRequest:(id)arg1 completion:(CDUnknownBlockType)arg2;	// IMP=0x001000000019e668
- (oneway void)screenWithRequest:(id)arg1;	// IMP=0x001000000019e103
- (oneway void)fetchCurrentCallUpdates:(CDUnknownBlockType)arg1;	// IMP=0x001000000019de6b
- (void)_launchICSForScreeningIfNeeded;	// IMP=0x001000000019dcc6
- (void)_handleMessagingConnectionEndForCalls:(id)arg1 withDisconnectedReason:(int)arg2 didStartConnecting:(_Bool)arg3;	// IMP=0x001000000019d96c
- (void)performUpdateCallWithProxy:(id)arg1;	// IMP=0x001000000019d8b8
- (void)performPullHostedCallsFromPairedHostDevice;	// IMP=0x001000000019d64f
- (void)performPushHostedCallsToDestination:(id)arg1;	// IMP=0x001000000019d3fc
- (void)performPushRelayingCallsToHostWithSourceIdentifier:(id)arg1;	// IMP=0x001000000019d393
- (void)performPullCallFromClientUsingHandoffActivityUserInfo:(id)arg1 completion:(CDUnknownBlockType)arg2;	// IMP=0x001000000019d290
- (void)performSetUplinkMuted:(_Bool)arg1 forCall:(id)arg2;	// IMP=0x001000000019d022
- (void)performSetLiveVoicemailUnavailableReason:(long long)arg1 forCall:(id)arg2;	// IMP=0x001000000019d006
- (void)performSetTTYType:(int)arg1 forCall:(id)arg2;	// IMP=0x001000000019ce25
- (void)performPlayDTMFToneForCall:(id)arg1 key:(unsigned char)arg2;	// IMP=0x001000000019cda1
- (void)performSendMMIOrUSSDCodeWithRequest:(id)arg1;	// IMP=0x001000000019cd38
- (void)performPullRelayingCallsFromClientAndUpdateEndpoint:(_Bool)arg1 updateExpectedDestination:(_Bool)arg2 onlyIfNeedsEndpointConversationRelaySupport:(_Bool)arg3;	// IMP=0x001000000019ca2a
- (void)performPullRelayingCallsFromClientAndUpdateEndpoint:(_Bool)arg1 updateExpectedDestination:(_Bool)arg2;	// IMP=0x001000000019ca15
- (void)performDisconnectAllCallsWithReason:(int)arg1;	// IMP=0x001000000019c723
- (void)performDisconnectCurrentCallAndActivateHeld;	// IMP=0x001000000019bb5d
- (void)performDisconnectCall:(id)arg1;	// IMP=0x001000000019b79f
- (void)performAnswerCallAsAudioDowngrade:(id)arg1 withRequest:(id)arg2;	// IMP=0x001000000019b719
- (void)performAnswerCallAsVideoUpgrade:(id)arg1 withRequest:(id)arg2;	// IMP=0x001000000019b693
- (void)performHoldActiveAndAnswerCall:(id)arg1 withRequest:(id)arg2;	// IMP=0x001000000019ae2b
- (void)performEndHeldAndAnswerCall:(id)arg1 withRequest:(id)arg2;	// IMP=0x001000000019a627
- (void)performEndActiveAndAnswerCall:(id)arg1 withRequest:(id)arg2;	// IMP=0x0010000000199e64
- (id)callWithUniqueProxyIdentifier:(id)arg1 fromCallsToAnswer:(id)arg2;	// IMP=0x0010000000199c93
- (void)performAnswerCall:(id)arg1 withRequest:(id)arg2;	// IMP=0x0010000000199a2a
- (void)performSwapCalls;	// IMP=0x0010000000199404
- (void)performUngroupCall:(id)arg1;	// IMP=0x0010000000199056
- (void)performGroupCall:(id)arg1 withCall:(id)arg2;	// IMP=0x0010000000198c5f
- (void)performUnholdCall:(id)arg1;	// IMP=0x0010000000198a70
- (void)performHoldCall:(id)arg1;	// IMP=0x0010000000198881
- (id)performJoinConversation:(id)arg1;	// IMP=0x001000000019870b
- (id)performDialCall:(id)arg1 displayContext:(id)arg2;	// IMP=0x0010000000197dec
- (void)setCallDelegatesIfNeeded:(id)arg1;	// IMP=0x0010000000197b85
- (id)outgoingCallFromJoinRequest:(id)arg1;	// IMP=0x0010000000197aa2
- (id)outgoingCallFromDialRequest:(id)arg1;	// IMP=0x0010000000197a09
- (void)_updateBluetoothAudioFormatIfNecessaryDueToMVMChange:(_Bool)arg1;	// IMP=0x00100000001972f7
- (void)_handleDisconnectedCallStatusChangeForHostedCall:(id)arg1;	// IMP=0x00100000001971b8
- (void)_updateRoutesForDisconnectedCall;	// IMP=0x0010000000197137
- (void)_handleDisconnectedCallStatusChangeForVoicemailCall;	// IMP=0x0010000000197071
- (void)_handleHeldCallStatusChangeForHostedCall:(id)arg1;	// IMP=0x0010000000196ffd
- (void)_handleCallRemoteParticipantHandlesChangedNotification:(id)arg1;	// IMP=0x0010000000196ebe
- (void)_handleActiveCallStatusChangeForHostedCall:(id)arg1;	// IMP=0x0010000000196dd9
- (void)_handleConnectedCallStatusChangeForHostedCall:(id)arg1;	// IMP=0x0010000000196cc2
- (void)_handleConnectingCallStatusChangeForHostedCall:(id)arg1;	// IMP=0x0010000000196aef
- (void)_handleSendingCallStatusChangeForHostedCall:(id)arg1;	// IMP=0x0010000000196a52
- (void)_handleGroupUUIDChangeForHostedCall:(id)arg1;	// IMP=0x001000000019699f
- (void)_handleRingingCallStatusChangeForHostedCall:(id)arg1;	// IMP=0x00100000001966c1
- (_Bool)_nonRingingCallExistsOnThisDevice;	// IMP=0x0010000000196447
- (void)_handlePreferredRouteChangedNotification:(id)arg1;	// IMP=0x0010000000196013
- (void)_handleCSDRelayPairedDeviceConnectedNotification:(id)arg1;	// IMP=0x0010000000195dae
- (void)_handleCSDRelayIDSActiveAccountsChanged:(id)arg1;	// IMP=0x0010000000195c53
- (void)_handleInvitationSentNotification:(id)arg1;	// IMP=0x0010000000195b11
- (void)_handleFaceTimeAvailabilityChangedNotification:(id)arg1;	// IMP=0x00100000001959c9
- (void)_handleCallIsUsingBasebandChangedNotification:(id)arg1;	// IMP=0x00100000001957f8
- (void)_handleHardPauseStateChangedNotification:(id)arg1;	// IMP=0x0010000000195699
- (void)_handleResetCallStateNotification:(id)arg1;	// IMP=0x001000000019558f
- (void)_handleCallModelChangedNotification:(id)arg1;	// IMP=0x001000000019544d
- (void)_handleCallShouldSuppressRingtoneChangedNotification:(id)arg1;	// IMP=0x0010000000195291
- (void)_handleCallWantsHoldMusicChangedNotification:(id)arg1;	// IMP=0x001000000019513b
- (void)_handleNeedsManualInCallSoundsChangedNotification:(id)arg1;	// IMP=0x0010000000194ff9
- (void)_handleCallConnectedNotification:(id)arg1;	// IMP=0x0010000000194ed5
- (void)_handleCallStartedConnectingNotification:(id)arg1;	// IMP=0x0010000000194d8d
- (void)_handleCallStartedOutgoingNotification:(id)arg1;	// IMP=0x0010000000194bf4
- (void)_handleCallStatusChangedNotification:(id)arg1;	// IMP=0x0010000000194861
- (void)_handleGroupUUIDChangedNotification:(id)arg1;	// IMP=0x001000000019473d
- (void)_handleSupportsDTMFUpdatesChangedNotification:(id)arg1;	// IMP=0x00100000001945c8
- (void)_handleSupportsEmergencyFallbackChangedNotification:(id)arg1;	// IMP=0x0010000000194453
- (void)_handleFailureExpectedChangedNotification:(id)arg1;	// IMP=0x00100000001942de
- (void)_handleMixesVoiceWithMediaChangedNotification:(id)arg1;	// IMP=0x00100000001941be
- (void)_handleTUCallTTYTypeChangedNotification:(id)arg1;	// IMP=0x001000000019403a
- (void)_handleTUCallSupportsTTYWithVoiceChangedNotification:(id)arg1;	// IMP=0x0010000000193ec5
- (void)_handleUpdateRemoteUplinkMutedChangedNotification:(id)arg1;	// IMP=0x0010000000193d83
- (void)_handleCallDisplayContextChangedNotification:(id)arg1;	// IMP=0x0010000000193c41
- (void)_sendClientsReceivedCallDTMFUpdate:(id)arg1 forCall:(id)arg2;	// IMP=0x00100000001939fb
- (void)handleReceivedCallDTMFUpdate:(id)arg1 forCall:(id)arg2;	// IMP=0x0010000000193955
- (void)sendClientsNotificationName:(id)arg1 forCall:(id)arg2 userInfo:(id)arg3;	// IMP=0x00100000001936cd
- (void)sendClientsNotificationName:(id)arg1 forCall:(id)arg2;	// IMP=0x00100000001936b8
- (void)sendClientsNotificationName:(id)arg1;	// IMP=0x00100000001936a1
- (void)resetClientCallProvisionalStates;	// IMP=0x00100000001935a4
- (void)updateClientsWithMeterLevel:(float)arg1 inDirection:(int)arg2 forCalls:(id)arg3;	// IMP=0x00100000001932fc
- (void)updateClientsWithFrequency:(id)arg1 inDirection:(int)arg2 forCalls:(id)arg3;	// IMP=0x0010000000192fe8
- (_Bool)isCallEligible:(id)arg1 forClient:(id)arg2;	// IMP=0x0010000000192d99
- (_Bool)shouldSendCall:(id)arg1 forClient:(id)arg2;	// IMP=0x0010000000192b03
- (_Bool)shouldFilterClient:(id)arg1;	// IMP=0x0010000000192aa1
- (id)eligibleCallsByFilteringCalls:(id)arg1 forClient:(id)arg2;	// IMP=0x00100000001928ba
- (void)updateClientsWithCall:(id)arg1;	// IMP=0x0010000000191fc1
- (void)_endProxyCallsForConnectingVideoCall;	// IMP=0x0010000000191d6f
- (_Bool)_shouldLaunchInCallApplicationForProviderOfCall:(id)arg1;	// IMP=0x0010000000191c73
- (void)_launchInCallApplicationForCall:(id)arg1 withURL:(id)arg2;	// IMP=0x0010000000191933
- (void)_launchInCallApplicationForAnsweringCallIfNecessary:(id)arg1;	// IMP=0x001000000019192d
- (void)_launchInCallApplicationForExistingCall;	// IMP=0x0010000000191756
- (void)_launchInCallApplicationForOutgoingCallIfNecessary:(id)arg1;	// IMP=0x0010000000191533
- (void)_launchInCallApplicationForOutgoingConversationIfNecessary:(id)arg1;	// IMP=0x001000000019152d
- (void)_launchInCallApplicationForIncomingCallIfNecessary:(id)arg1;	// IMP=0x00100000001913d4
- (void)_answerIncomingCallAsConversation:(id)arg1;	// IMP=0x00100000001911fb
- (void)_answerIncomingCall:(id)arg1 withBehavior:(long long)arg2;	// IMP=0x00100000001910a4
- (void)_handleCarPlayControlEventNotification:(id)arg1;	// IMP=0x0010000000190827
- (void)_handleAudioSessionInterruptionNotification:(id)arg1;	// IMP=0x0010000000190597
- (void)_handleLocaleChange:(id)arg1;	// IMP=0x0010000000190259
- (_Bool)shouldHandleCarPlayControlEvents;	// IMP=0x00100000001901a7
- (MISSING_TYPE *)_requestCallStateFromHost;	// IMP=0x00100000001901a1
- (void)_handleRelayCallingChanged;	// IMP=0x001000000018fc1c
@property(readonly, nonatomic) _Bool shouldRelayToOtherDevices;
@property(readonly, nonatomic) CSDCallFilterController *callFilterController;
@property(readonly, nonatomic) id <CSDCallContainer> callContainer;
@property(readonly, nonatomic) TUCallCenter *callCenter;
- (void)registerForSecureMicEvents;	// IMP=0x001000000018f826
- (void)dealloc;	// IMP=0x001000000018f743
- (void)invalidate;	// IMP=0x001000000018f19a
- (id)initWithQueue:(id)arg1 featureFlags:(id)arg2 serverBag:(id)arg3 chManager:(id)arg4;	// IMP=0x001000000018da40
- (id)init;	// IMP=0x001000000018d1ae
- (id)initWithQueue:(id)arg1 chManager:(id)arg2;	// IMP=0x001000000018d10e

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
// Preceding property had unknown attributes: ?
// Original attribute string: T@"NSString",?,R,C

@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

