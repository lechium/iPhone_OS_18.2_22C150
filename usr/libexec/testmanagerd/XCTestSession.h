//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <objc/NSObject.h>

@class NSError, NSString, NSUUID, NSXPCConnection, RCPEventStreamRecorder, XCTCapabilities, XCTDInternalTelemetryLogger, XCTDSignpostListener, XCTScreenshotRequest;
@protocol OS_dispatch_queue, OS_os_transaction, XCAXManager, XCTDAutomationModeInterface, XCTDAutomationServicesProviding, XCTDDiagnosticsProviding, XCTDProcessManagementServicesProviding, XCTDScreenRecordingProviding, XCTDScreenshotProviding, XCTDTargetBootstrapSessionProviding, XCTestSessionDelegate;

@interface XCTestSession : NSObject
{
    _Bool _valid;	// 8 = 0x8
    _Bool _hasTestingEntitlement;	// 9 = 0x9
    _Bool _hasInternalClientEntitlement;	// 10 = 0xa
    _Bool _recapIsRunning;	// 11 = 0xb
    NSXPCConnection *_connection;	// 16 = 0x10
    id <XCTDAutomationModeInterface> _automationModeInterface;	// 24 = 0x18
    id <XCTDScreenshotProviding> _screenshotProvider;	// 32 = 0x20
    id <XCTDScreenRecordingProviding> _screenRecordingProvider;	// 40 = 0x28
    id <XCTDDiagnosticsProviding> _diagnosticsProvider;	// 48 = 0x30
    id <XCTDProcessManagementServicesProviding> _processManagementServices;	// 56 = 0x38
    id <XCTDAutomationServicesProviding> _automationServices;	// 64 = 0x40
    id <XCTDTargetBootstrapSessionProviding> _targetBootstrapSessionProvider;	// 72 = 0x48
    id <XCTestSessionDelegate> _delegate;	// 80 = 0x50
    CDUnknownBlockType _disconnectionHandler;	// 88 = 0x58
    XCTCapabilities *_remoteInterfaceCapabilities;	// 96 = 0x60
    NSString *_clientBundleID;	// 104 = 0x68
    NSObject<OS_dispatch_queue> *_queue;	// 112 = 0x70
    NSObject<OS_os_transaction> *_osTransaction;	// 120 = 0x78
    XCTDSignpostListener *_signpostListener;	// 128 = 0x80
    CDUnknownBlockType _automationServicesFactory;	// 136 = 0x88
    NSError *_automationServicesError;	// 144 = 0x90
    XCTDInternalTelemetryLogger *_internalTelemetryLogger;	// 152 = 0x98
    RCPEventStreamRecorder *_recapEventRecorder;	// 160 = 0xa0
    NSUUID *_currentScreenRecordingUUID;	// 168 = 0xa8
}

+ (_Bool)supportsHIDEventRecording;	// IMP=0x002000000003b34f
+ (_Bool)supportsPostingTelemetryData;	// IMP=0x001000000003b195
+ (_Bool)_isCurrentIdiomIPad;	// IMP=0x00100000000355eb
+ (_Bool)isOperatingSystemSupportingDelayedAttachmentTransfer;	// IMP=0x0010000000035573
+ (id)capabilitiesBuilder;	// IMP=0x0010000000035072
- (void).cxx_destruct;	// IMP=0x001000000003be00
@property(retain, nonatomic) NSUUID *currentScreenRecordingUUID; // @synthesize currentScreenRecordingUUID=_currentScreenRecordingUUID;
@property _Bool recapIsRunning; // @synthesize recapIsRunning=_recapIsRunning;
@property(retain) RCPEventStreamRecorder *recapEventRecorder; // @synthesize recapEventRecorder=_recapEventRecorder;
@property(readonly) XCTDInternalTelemetryLogger *internalTelemetryLogger; // @synthesize internalTelemetryLogger=_internalTelemetryLogger;
@property(retain) NSError *automationServicesError; // @synthesize automationServicesError=_automationServicesError;
@property(readonly) CDUnknownBlockType automationServicesFactory; // @synthesize automationServicesFactory=_automationServicesFactory;
@property(readonly) XCTDSignpostListener *signpostListener; // @synthesize signpostListener=_signpostListener;
@property(retain) NSObject<OS_os_transaction> *osTransaction; // @synthesize osTransaction=_osTransaction;
@property(retain) NSObject<OS_dispatch_queue> *queue; // @synthesize queue=_queue;
@property(retain) NSString *clientBundleID; // @synthesize clientBundleID=_clientBundleID;
@property(retain) XCTCapabilities *remoteInterfaceCapabilities; // @synthesize remoteInterfaceCapabilities=_remoteInterfaceCapabilities;
@property(readonly) _Bool hasInternalClientEntitlement; // @synthesize hasInternalClientEntitlement=_hasInternalClientEntitlement;
@property(readonly) _Bool hasTestingEntitlement; // @synthesize hasTestingEntitlement=_hasTestingEntitlement;
@property(copy) CDUnknownBlockType disconnectionHandler; // @synthesize disconnectionHandler=_disconnectionHandler;
@property(getter=isValid) _Bool valid; // @synthesize valid=_valid;
@property __weak id <XCTestSessionDelegate> delegate; // @synthesize delegate=_delegate;
@property(readonly) id <XCTDTargetBootstrapSessionProviding> targetBootstrapSessionProvider; // @synthesize targetBootstrapSessionProvider=_targetBootstrapSessionProvider;
@property(retain) id <XCTDAutomationServicesProviding> automationServices; // @synthesize automationServices=_automationServices;
@property(readonly) id <XCTDProcessManagementServicesProviding> processManagementServices; // @synthesize processManagementServices=_processManagementServices;
@property(readonly) id <XCTDDiagnosticsProviding> diagnosticsProvider; // @synthesize diagnosticsProvider=_diagnosticsProvider;
@property(readonly) id <XCTDScreenRecordingProviding> screenRecordingProvider; // @synthesize screenRecordingProvider=_screenRecordingProvider;
@property(readonly) id <XCTDScreenshotProviding> screenshotProvider; // @synthesize screenshotProvider=_screenshotProvider;
@property(readonly) id <XCTDAutomationModeInterface> automationModeInterface; // @synthesize automationModeInterface=_automationModeInterface;
@property(retain) NSXPCConnection *connection; // @synthesize connection=_connection;
- (void)_XCT_acquireUserPresenceAssertionWithReply:(CDUnknownBlockType)arg1;	// IMP=0x001000000003bb7b
- (void)_XCT_clearUserPresenceAssertionWithReply:(CDUnknownBlockType)arg1;	// IMP=0x001000000003bb6b
- (void)_XCT_stopScreenRecordingWithUUID:(id)arg1 withReply:(CDUnknownBlockType)arg2;	// IMP=0x001000000003b9e9
- (void)_XCT_startScreenRecordingWithRequest:(id)arg1 withReply:(CDUnknownBlockType)arg2;	// IMP=0x001000000003b81a
- (void)_XCT_playBackHIDEventRecordingFromData:(id)arg1 reply:(CDUnknownBlockType)arg2;	// IMP=0x001000000003b69f
- (void)_XCT_stopHIDEventRecordingWithReply:(CDUnknownBlockType)arg1;	// IMP=0x001000000003b586
- (void)_XCT_startHIDEventRecordingWithReply:(CDUnknownBlockType)arg1;	// IMP=0x001000000003b368
- (void)_XCT_postTelemetryData:(id)arg1 reply:(CDUnknownBlockType)arg2;	// IMP=0x001000000003b1a6
- (void)_XCT_requestCurrentKeyboardModifierFlagsWithReply:(CDUnknownBlockType)arg1;	// IMP=0x001000000003b004
- (void)_XCT_resetAuthorizationStatusForBundleIdentifier:(id)arg1 resourceIdentifier:(id)arg2 reply:(CDUnknownBlockType)arg3;	// IMP=0x001000000003aec0
- (void)_XCT_injectVoiceRecognitionAudioInputPaths:(id)arg1 completion:(CDUnknownBlockType)arg2;	// IMP=0x001000000003ad9d
- (void)_XCT_injectAssistantRecognitionStrings:(id)arg1 completion:(CDUnknownBlockType)arg2;	// IMP=0x001000000003ac7a
- (void)_XCT_startSiriUIRequestWithAudioFileURL:(id)arg1 completion:(CDUnknownBlockType)arg2;	// IMP=0x001000000003ab57
- (void)_XCT_startSiriUIRequestWithText:(id)arg1 completion:(CDUnknownBlockType)arg2;	// IMP=0x001000000003aa34
- (void)_XCT_requestSiriEnabledStatus:(CDUnknownBlockType)arg1;	// IMP=0x001000000003a953
- (void)_XCT_getInterfaceOrientationWithCompletion:(CDUnknownBlockType)arg1;	// IMP=0x001000000003a83b
- (void)_XCT_sendString:(id)arg1 maximumFrequency:(unsigned long long)arg2 completion:(CDUnknownBlockType)arg3;	// IMP=0x001000000003a762
- (void)_XCT_performDeviceEvent:(id)arg1 completion:(CDUnknownBlockType)arg2;	// IMP=0x001000000003a612
- (void)_XCT_synthesizeEvent:(id)arg1 implicitConfirmationInterval:(double)arg2 completion:(CDUnknownBlockType)arg3;	// IMP=0x001000000003a4a6
- (void)_XCT_synthesizeEvent:(id)arg1 completion:(CDUnknownBlockType)arg2;	// IMP=0x001000000003a356
- (void)_XCT_requestPressureEventsSupported:(CDUnknownBlockType)arg1;	// IMP=0x001000000003a293
- (void)_XCT_hasHardwareButton:(id)arg1 completion:(CDUnknownBlockType)arg2;	// IMP=0x001000000003a16a
- (void)_XCT_requestProcessSpecifierForPID:(int)arg1 reply:(CDUnknownBlockType)arg2;	// IMP=0x0010000000039f76
- (void)_XCT_requestBundleIDForPID:(int)arg1 reply:(CDUnknownBlockType)arg2;	// IMP=0x0010000000039def
- (void)_XCT_startMonitoringApplicationWithBundleID:(id)arg1 path:(id)arg2;	// IMP=0x0010000000039d46
- (void)_XCT_startMonitoringApplicationWithBundleID:(id)arg1;	// IMP=0x0010000000039d32
- (void)_XCT_openURL:(id)arg1 usingApplication:(id)arg2 completion:(CDUnknownBlockType)arg3;	// IMP=0x0010000000039c25
- (void)_XCT_openDefaultApplicationForURL:(id)arg1 completion:(CDUnknownBlockType)arg2;	// IMP=0x0010000000039b3b
- (void)_XCT_terminateApplicationWithBundleID:(id)arg1 completion:(CDUnknownBlockType)arg2;	// IMP=0x0010000000039b24
- (void)_XCT_terminateApplicationWithBundleID:(id)arg1 pid:(int)arg2 completion:(CDUnknownBlockType)arg3;	// IMP=0x00100000000399d8
- (void)_XCT_launchApplicationWithBundleID:(id)arg1 path:(id)arg2 arguments:(id)arg3 environment:(id)arg4 completion:(CDUnknownBlockType)arg5;	// IMP=0x0010000000039836
- (void)_XCT_launchApplicationWithBundleID:(id)arg1 arguments:(id)arg2 environment:(id)arg3 completion:(CDUnknownBlockType)arg4;	// IMP=0x001000000003980c
- (void)applicationDidUpdateState:(id)arg1;	// IMP=0x001000000003942f
- (void)orientationManagerDidUpdateInterfaceOrientation:(long long)arg1;	// IMP=0x0010000000039245
- (void)orientationManagerDidUpdateDeviceOrientation:(long long)arg1;	// IMP=0x001000000003905b
- (void)_XCT_getDeviceOrientationWithCompletion:(CDUnknownBlockType)arg1;	// IMP=0x0010000000038eef
- (void)_XCT_updateDeviceOrientation:(long long)arg1 completion:(CDUnknownBlockType)arg2;	// IMP=0x0010000000038dd5
- (void)_XCT_enableFauxCollectionViewCells:(CDUnknownBlockType)arg1;	// IMP=0x0010000000038d17
- (void)_XCT_setLocalizableStringsDataGatheringEnabled:(_Bool)arg1 reply:(CDUnknownBlockType)arg2;	// IMP=0x0010000000038c4f
- (void)_XCT_requestElementAtPoint:(struct CGPoint)arg1 reply:(CDUnknownBlockType)arg2;	// IMP=0x0010000000038b3c
- (void)_XCT_fetchParameterizedAttribute:(id)arg1 forElement:(id)arg2 parameter:(id)arg3 reply:(CDUnknownBlockType)arg4;	// IMP=0x00100000000389db
- (void)_XCT_fetchParameterizedAttributeForElement:(id)arg1 attributes:(id)arg2 parameter:(id)arg3 reply:(CDUnknownBlockType)arg4;	// IMP=0x0010000000038886
- (void)_XCT_setAttribute:(id)arg1 value:(id)arg2 element:(id)arg3 reply:(CDUnknownBlockType)arg4;	// IMP=0x0010000000038753
- (void)_XCT_fetchAttributes:(id)arg1 forElement:(id)arg2 reply:(CDUnknownBlockType)arg3;	// IMP=0x00100000000385f6
- (void)_XCT_runAccessibilityAuditForElement:(id)arg1 withConfiguration:(id)arg2 reply:(CDUnknownBlockType)arg3;	// IMP=0x0010000000038499
- (_Bool)ensureUITestingIsReadyWithError:(id *)arg1;	// IMP=0x001000000003847f
- (void)_XCT_fetchSnapshotForElement:(id)arg1 attributes:(id)arg2 parameters:(id)arg3 reply:(CDUnknownBlockType)arg4;	// IMP=0x001000000003809d
- (void)_XCT_requestSnapshotForElement:(id)arg1 attributes:(id)arg2 parameters:(id)arg3 reply:(CDUnknownBlockType)arg4;	// IMP=0x0010000000037f44
- (void)_XCT_snapshotForElement:(id)arg1 attributes:(id)arg2 parameters:(id)arg3 reply:(CDUnknownBlockType)arg4;	// IMP=0x0010000000037ed0
- (void)_XCT_unregisterForAccessibilityNotification:(int)arg1 withRegistrationToken:(id)arg2 reply:(CDUnknownBlockType)arg3;	// IMP=0x0010000000037dee
- (void)_XCT_registerForAccessibilityNotification:(int)arg1 reply:(CDUnknownBlockType)arg2;	// IMP=0x00100000000377bc
- (void)_XCT_performAccessibilityAction:(int)arg1 onElement:(id)arg2 withValue:(id)arg3 reply:(CDUnknownBlockType)arg4;	// IMP=0x00100000000376c8
- (void)_XCT_setAXTimeout:(double)arg1 reply:(CDUnknownBlockType)arg2;	// IMP=0x0010000000037602
- (void)_XCT_loadAccessibilityWithTimeout:(double)arg1 reply:(CDUnknownBlockType)arg2;	// IMP=0x00100000000374e1
- (void)_XCT_unloadAccessibility:(CDUnknownBlockType)arg1;	// IMP=0x001000000003746d
- (void)_XCT_fetchAttributesForElement:(id)arg1 attributes:(id)arg2 reply:(CDUnknownBlockType)arg3;	// IMP=0x00100000000373f9
- (_Bool)ensureUITestingIsReadyWithTimeout:(double)arg1 error:(id *)arg2;	// IMP=0x001000000003709d
- (void)_XCT_setSimulatedLocation:(id)arg1 reply:(CDUnknownBlockType)arg2;	// IMP=0x0010000000036f34
- (void)_XCT_getSimulatedLocationWithReply:(CDUnknownBlockType)arg1;	// IMP=0x0010000000036e0d
- (void)_XCT_clearSimulatedLocationWithReply:(CDUnknownBlockType)arg1;	// IMP=0x0010000000036d04
- (void)_XCT_getAppearanceModeWithReply:(CDUnknownBlockType)arg1;	// IMP=0x0010000000036bc7
- (void)_XCT_updateAppearanceMode:(long long)arg1 completion:(CDUnknownBlockType)arg2;	// IMP=0x0010000000036a68
- (void)_XCT_requestBackgroundAssertionForPID:(int)arg1 reply:(CDUnknownBlockType)arg2;	// IMP=0x00100000000369d6
- (void)_XCT_unregisterForSignpostsWithToken:(id)arg1;	// IMP=0x001000000003696d
- (void)_XCT_registerForSignpostsFromSubsystem:(id)arg1 category:(id)arg2 intervalTimeout:(double)arg3 reply:(CDUnknownBlockType)arg4;	// IMP=0x0010000000036760
- (void)_XCT_requestTailspinWithRequest:(id)arg1 completion:(CDUnknownBlockType)arg2;	// IMP=0x0010000000036569
- (void)_XCT_requestSpindumpWithSpecification:(id)arg1 completion:(CDUnknownBlockType)arg2;	// IMP=0x0010000000036372
- (void)_XCT_requestScreenshotAttachment:(id)arg1 withReply:(CDUnknownBlockType)arg2;	// IMP=0x00100000000362c1
- (void)_XCT_requestScreenshot:(id)arg1 withReply:(CDUnknownBlockType)arg2;	// IMP=0x0010000000036210
- (void)_XCT_requestScreenshotOfScreenWithID:(unsigned int)arg1 withRect:(struct CGRect)arg2 uti:(id)arg3 compressionQuality:(double)arg4 withReply:(CDUnknownBlockType)arg5;	// IMP=0x001000000003619c
- (void)_XCT_requestScreenshotWithReply:(CDUnknownBlockType)arg1;	// IMP=0x0010000000036128
- (void)_XCT_requestDTServiceHubConnectionWithReply:(CDUnknownBlockType)arg1;	// IMP=0x0010000000035fe5
- (void)_XCT_requestUnsupportedBundleIdentifiersForAutomationSessions:(CDUnknownBlockType)arg1;	// IMP=0x0010000000035de7
- (void)_XCT_requestEndpointForTestTargetWithPID:(int)arg1 preferredBackendPath:(id)arg2 reply:(CDUnknownBlockType)arg3;	// IMP=0x0010000000035b29
- (void)_XCT_requestSerializedTransportWrapperForIDESessionWithIdentifier:(id)arg1 reply:(CDUnknownBlockType)arg2;	// IMP=0x001000000003595d
- (void)_XCT_enableAutomationModeWithReply:(CDUnknownBlockType)arg1;	// IMP=0x001000000003576b
- (void)_XCT_exchangeCapabilities:(id)arg1 reply:(CDUnknownBlockType)arg2;	// IMP=0x001000000003562f
@property(readonly, nonatomic) id <XCAXManager> axManager;
- (id)gesturePerformer;	// IMP=0x0010000000034fd2
- (id)systemConfiguration;	// IMP=0x0010000000034f82
- (id)orientationManager;	// IMP=0x0010000000034f32
- (id)remoteObjectProxy;	// IMP=0x0010000000034d85
- (_Bool)isAuthorizedInternalClientWithProcessID:(int)arg1;	// IMP=0x0010000000034d35
@property(readonly, nonatomic) _Bool allowsUITestControl;
@property(readonly) int processIdentifier;
- (void)takeAssertionForAndMonitorConnectionProcessWithIdleTimerAssertion:(_Bool)arg1;	// IMP=0x001000000003494f
@property(readonly, copy) NSString *description;
- (id)initWithNSXPCConnection:(id)arg1 delegate:(id)arg2 automationModeInterface:(id)arg3 diagnosticsProvider:(id)arg4 screenshotProvider:(id)arg5 screenRecordingProvider:(id)arg6 processManagementServices:(id)arg7 targetBootstrapSessionProvider:(id)arg8 automationServicesFactory:(CDUnknownBlockType)arg9;	// IMP=0x0010000000034156
- (id)initWithNSXPCConnection:(id)arg1 delegate:(id)arg2 diagnosticsProvider:(id)arg3 processManagementServices:(id)arg4 targetBootstrapSessionProvider:(id)arg5;	// IMP=0x0010000000033f93
- (id)initWithNSXPCConnection:(id)arg1 delegate:(id)arg2 diagnosticsProvider:(id)arg3 targetBootstrapSessionProvider:(id)arg4;	// IMP=0x0010000000033ece
- (void)invalidate;	// IMP=0x001000000003391f
- (void)dealloc;	// IMP=0x00100000000337f3
- (void)_loadAccessibilityWithTimeout:(double)arg1 reply:(void (^)(_Bool, NSError *))arg2;	// IMP=0x00100000000a0730
- (void)_XCT_resetAuthorizationStatusOfProtectedResourceWithIdentifier:(NSString *)arg1 bundleIdentifier:(NSString *)arg2 auditToken:(CDStruct_6ad76789)arg3 completion:(void (^)(NSError *))arg4;	// IMP=0x00100000000a1450
- (void)_XCT_requestScreenshotAttachment:(XCTScreenshotRequest *)arg1 completion:(void (^)(XCTAttachmentFutureMetadata *, NSError *))arg2;	// IMP=0x00100000000a2680
- (void)_XCT_requestScreenshot:(XCTScreenshotRequest *)arg1 completion:(void (^)(XCTImage *, NSError *))arg2;	// IMP=0x00100000000a1fb0

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
// Preceding property had unknown attributes: ?
// Original attribute string: T@"NSString",?,R,C

@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

