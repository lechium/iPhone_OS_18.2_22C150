//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <objc/NSObject.h>

@class NSLock, NSMutableArray, NSMutableDictionary, SCRCThread, SCRCThreadKey, VOTElement;
@protocol OS_dispatch_queue, VOTElementFetchDelegateProtocol;

@interface VOTElementFetcher : NSObject
{
    SCRCThread *_fillerThread;	// 8 = 0x8
    SCRCThreadKey *_fillerThreadKey;	// 16 = 0x10
    NSLock *_cacheLock;	// 24 = 0x18
    NSMutableArray *_elementCache;	// 32 = 0x20
    VOTElement *_currentElement;	// 40 = 0x28
    unsigned long long _canceledSearchGeneration;	// 48 = 0x30
    unsigned long long _currentSearchGeneration;	// 56 = 0x38
    NSObject<OS_dispatch_queue> *_searchGenerationQueue;	// 64 = 0x40
    unsigned long long _canceledCountGeneration;	// 72 = 0x48
    unsigned long long _currentCountGeneration;	// 80 = 0x50
    NSObject<OS_dispatch_queue> *_countGenerationQueue;	// 88 = 0x58
    unsigned long long _cacheSize;	// 96 = 0x60
    long long _cacheBufferEdge;	// 104 = 0x68
    _Bool _retrievingAllElements;	// 112 = 0x70
    NSMutableDictionary *_opaqueElementCache;	// 120 = 0x78
    _Bool _shouldPerformSearchSynchronously;	// 128 = 0x80
    _Bool _triggerSignpostCollection;	// 129 = 0x81
    id <VOTElementFetchDelegateProtocol> _delegate;	// 136 = 0x88
}

- (void).cxx_destruct;	// IMP=0x0020000000130a1b
@property(nonatomic) _Bool triggerSignpostCollection; // @synthesize triggerSignpostCollection=_triggerSignpostCollection;
@property(nonatomic) _Bool shouldPerformSearchSynchronously; // @synthesize shouldPerformSearchSynchronously=_shouldPerformSearchSynchronously;
@property(nonatomic) __weak id <VOTElementFetchDelegateProtocol> delegate; // @synthesize delegate=_delegate;
- (void)fillCacheWithElements:(id)arg1;	// IMP=0x00100000001308be
- (id)_debugElementCache;	// IMP=0x001000000013086b
- (void)retrieveElementsWithElement:(id)arg1 groupNavigationStyle:(_Bool)arg2;	// IMP=0x00100000001307a8
- (void)_retrieveElementsWithElement:(id)arg1 groupNavigationStyle:(id)arg2;	// IMP=0x001000000012ff4b
- (void)_retrieveAllElements;	// IMP=0x001000000012ff45
- (void)_informDelegateOfRetrieveElements;	// IMP=0x001000000012fe86
- (void)didFinishBatchPeeking;	// IMP=0x001000000012fe5d
- (void)searchForElementInDirection:(long long)arg1 fromElement:(id)arg2 matchBlock:(CDUnknownBlockType)arg3 rangeMatch:(CDUnknownBlockType)arg4 searchType:(long long)arg5 generation:(unsigned long long)arg6 startingRange:(struct _NSRange)arg7 groupNavigationStyle:(_Bool)arg8;	// IMP=0x001000000012fe0e
- (void)searchForElementInDirection:(long long)arg1 fromElement:(id)arg2 matchBlock:(CDUnknownBlockType)arg3 rangeMatch:(CDUnknownBlockType)arg4 searchType:(long long)arg5 generation:(unsigned long long)arg6 startingRange:(struct _NSRange)arg7 groupNavigationStyle:(_Bool)arg8 peeking:(_Bool)arg9;	// IMP=0x001000000012fdba
- (void)searchForElementInDirection:(long long)arg1 fromElement:(id)arg2 needsForceCacheUpdate:(_Bool)arg3 matchBlock:(CDUnknownBlockType)arg4 rangeMatch:(CDUnknownBlockType)arg5 searchType:(long long)arg6 generation:(unsigned long long)arg7 startingRange:(struct _NSRange)arg8 groupNavigationStyle:(_Bool)arg9 peeking:(_Bool)arg10;	// IMP=0x001000000012f56b
- (void)countElementsMatchingBlock:(CDUnknownBlockType)arg1;	// IMP=0x001000000012f407
- (void)cancelPreviousSearch;	// IMP=0x001000000012f360
- (void)_searchForElementWithParameters:(id)arg1 searchFromOpaqueElementsInRemoteParent:(_Bool)arg2;	// IMP=0x001000000012c36b
- (void)_searchForElementWithParameters:(id)arg1;	// IMP=0x001000000012c357
- (_Bool)_wasCanceledWithSearchGeneration:(unsigned long long)arg1;	// IMP=0x001000000012c2a7
- (id)_hitTestedElementForOriginalElement:(id)arg1 hitTestPoint:(struct CGPoint)arg2 opaqueParent:(id)arg3;	// IMP=0x001000000012c188
- (id)_handleOpaqueSearchForElementInDirection:(long long)arg1 opaqueParent:(id)arg2 searchType:(long long)arg3 range:(struct _NSRange *)arg4 matchBlock:(CDUnknownBlockType)arg5 resetContentOffsetInOpaqueParent:(_Bool *)arg6 peeking:(_Bool)arg7;	// IMP=0x001000000012bdd3
- (void)_countElementsMatchingBlock:(CDUnknownBlockType)arg1 generation:(id)arg2;	// IMP=0x001000000012baf3
- (_Bool)_wasCanceledWithCountGeneration:(unsigned long long)arg1;	// IMP=0x001000000012ba43
- (void)cancelPreviousCount;	// IMP=0x001000000012b9e6
- (void)forceUpdate;	// IMP=0x001000000012b970
- (void)_forceUpdate;	// IMP=0x001000000012b92f
- (void)updateCacheWithElement:(id)arg1;	// IMP=0x001000000012b8b0
- (void)_updateCacheWithElement:(id)arg1;	// IMP=0x001000000012acfb
- (void)_initializeThread;	// IMP=0x001000000012ac77
- (void)dealloc;	// IMP=0x001000000012ac39
- (void)invalidate;	// IMP=0x001000000012aba6
- (id)init;	// IMP=0x001000000012aa42

@end

