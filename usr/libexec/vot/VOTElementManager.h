//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <objc/NSObject.h>

@class AVFlashlight, AXCameraSceneDescriber, AXDragManager, AXIndexMap, MISSING_TYPE, NSArray, NSData, NSDictionary, NSLock, NSMutableArray, NSMutableDictionary, NSMutableSet, NSMutableString, NSNumber, NSSet, NSString, NSURL, SCRCTargetSelectorTimer, SCRCThread, SCRCThreadKey, VOTDragOutputManager, VOTElement, VOTElementFetcher, VOTElementRotor, VOTElementUniqueIdentification, VOTEvent, VOTExplorerElementManager, VOTOutputRequest, VOTRotor, VOTTVGestureRepeater, VOTTVSpeechRequestManager, VOTTextMovementManager, VOTUpdateFocusContext, _VOTTextMarkerRange;
@protocol VOTElementUpdateProtocol;

@interface VOTElementManager : NSObject
{
    AXIndexMap *_commands;	// 8 = 0x8
    VOTElement *_lastValidElement;	// 16 = 0x10
    NSArray *_currentApplications;	// 24 = 0x18
    VOTElement *_touchContainer;	// 32 = 0x20
    long long _touchContainersTouchedCount;	// 40 = 0x28
    VOTElement *_autofillCurrentElement;	// 48 = 0x30
    long long _readWordCyclingCount;	// 56 = 0x38
    VOTElement *_currentElement;	// 64 = 0x40
    VOTElement *_previousElement;	// 72 = 0x48
    VOTElement *_lastApplication;	// 80 = 0x50
    VOTElement *_anyThreadCurrentElement;	// 88 = 0x58
    struct os_unfair_lock_s;	// 96 = 0x60
    VOTElement *_currentOpaqueParent;	// 104 = 0x68
    VOTElementFetcher *_fetchManager;	// 112 = 0x70
    NSMutableString *_elementTypingBuffer;	// 120 = 0x78
    struct _NSRange _elementSelectionRangeBufferInternal;	// 128 = 0x80
    struct _NSRange _elementSelectionRangeBufferForValueChange;	// 144 = 0x90
    struct _NSRange _elementSelectionRangeBufferForSelectionChange;	// 160 = 0xa0
    NSString *_webSelectionText;	// 176 = 0xb0
    unsigned long long _elementMathIndex;	// 184 = 0xb8
    NSArray *_elementMathSegments;	// 192 = 0xc0
    unsigned long long _elementMathSegmentGranularity;	// 200 = 0xc8
    struct _NSRange _highlightedCharacterRange;	// 208 = 0xd0
    _Bool _textRangeBeingDisplayed;	// 224 = 0xe0
    VOTElement *_firstResponderElement;	// 232 = 0xe8
    VOTElement *_previousTouchTypingKey;	// 240 = 0xf0
    double _previousTableOrCollectionViewRowTime;	// 248 = 0xf8
    double _lastAdjustValueTime;	// 256 = 0x100
    double _lastLiveRegionUpdate;	// 264 = 0x108
    double _lastPopupTime;	// 272 = 0x110
    double _lastTextInsertionAnnouncementTime;	// 280 = 0x118
    double _lastItemSelectionFromTouch;	// 288 = 0x120
    double _lastSentBannerTimerReset;	// 296 = 0x128
    SCRCTargetSelectorTimer *_updateLayoutTimer;	// 304 = 0x130
    SCRCTargetSelectorTimer *_containerFrameDrawingTimer;	// 312 = 0x138
    SCRCTargetSelectorTimer *_visualRotorFadeTimer;	// 320 = 0x140
    SCRCTargetSelectorTimer *_webPageLoadingSoundTimer;	// 328 = 0x148
    SCRCTargetSelectorTimer *_invalidStatusChangedTimer;	// 336 = 0x150
    SCRCTargetSelectorTimer *_appSuspensionSoundTimer;	// 344 = 0x158
    SCRCTargetSelectorTimer *_simulatedPressOutputTimer;	// 352 = 0x160
    SCRCTargetSelectorTimer *_simulatedForceLiftTimer;	// 360 = 0x168
    SCRCTargetSelectorTimer *_updateAppFromTimer;	// 368 = 0x170
    SCRCTargetSelectorTimer *_updateWithNativeFocusTimer;	// 376 = 0x178
    SCRCTargetSelectorTimer *_reachabilityWaitForTrackingTimer;	// 384 = 0x180
    SCRCTargetSelectorTimer *_pendingBrailleHomeButtonPress;	// 392 = 0x188
    SCRCTargetSelectorTimer *_elementMonitorTimer;	// 400 = 0x190
    NSMutableDictionary *_elementMonitorCache;	// 408 = 0x198
    SCRCTargetSelectorTimer *_pointerSpeakElementTimer;	// 416 = 0x1a0
    VOTElement *_lastSpeakUnderPointerElement;	// 424 = 0x1a8
    SCRCTargetSelectorTimer *_keyboardAlternativeModeActivationTimer;	// 432 = 0x1b0
    SCRCTargetSelectorTimer *_alternativeKeyDismissalTimer;	// 440 = 0x1b8
    _Bool _keyboardAlternativesVisible;	// 448 = 0x1c0
    struct CGPoint _keyboardAlternativeVisibleTrackingPoint;	// 456 = 0x1c8
    struct CGPoint _keyboardAlternativeVisibleStartPoint;	// 472 = 0x1d8
    NSString *_lastScrollStatus;	// 488 = 0x1e8
    struct CGPoint _fingerLocation;	// 496 = 0x1f0
    struct CGPoint _lastValidElementLocation;	// 512 = 0x200
    VOTElementRotor *_elementRotor;	// 528 = 0x210
    VOTRotor *_speechRotor;	// 536 = 0x218
    NSMutableArray *_cachedLaunchIcons;	// 544 = 0x220
    long long _selectedTextStartLocation;	// 552 = 0x228
    long long _selectedTextOperation;	// 560 = 0x230
    NSMutableDictionary *_lastSeenFontProperties;	// 568 = 0x238
    NSDictionary *_lastSeenLineAndColumn;	// 576 = 0x240
    long long _lastSeenApplicationOrientation;	// 584 = 0x248
    NSData *_textMarker;	// 592 = 0x250
    _VOTTextMarkerRange *_textMarkerRange;	// 600 = 0x258
    NSArray *_lineArray;	// 608 = 0x260
    long long _lineArrayPosition;	// 616 = 0x268
    struct CGRect _lineFrame;	// 624 = 0x270
    NSMutableDictionary *_flowFromElements;	// 656 = 0x290
    NSString *_bookLineString;	// 664 = 0x298
    _Bool _bookUpdatedCurrentLine;	// 672 = 0x2a0
    long long _bookLineNumber;	// 680 = 0x2a8
    struct _NSRange _bookLineRange;	// 688 = 0x2b0
    long long _bookCursorPosition;	// 704 = 0x2c0
    NSString *_bookPageScrollString;	// 712 = 0x2c8
    VOTElement *_bookSubelement;	// 720 = 0x2d0
    long long _bookLastContentMovementDirection;	// 728 = 0x2d8
    long long _bookLastContentMovementUnit;	// 736 = 0x2e0
    _Bool _bookDidTurnPage;	// 744 = 0x2e8
    NSArray *_realTimeElementsCache;	// 752 = 0x2f0
    VOTOutputRequest *_bookPageContentOutputRequest;	// 760 = 0x2f8
    VOTOutputRequest *_readAllOutputRequest;	// 768 = 0x300
    VOTOutputRequest *_announcementRequest;	// 776 = 0x308
    int _announcementPid;	// 784 = 0x310
    NSString *_announcementOriginalString;	// 792 = 0x318
    VOTElement *_elementBeforeAlert;	// 800 = 0x320
    VOTElement *_elementBeforePopup;	// 808 = 0x328
    VOTElement *_elementBeforeStatusBarMovement;	// 816 = 0x330
    VOTElement *_elementBeforeScreenChange;	// 824 = 0x338
    VOTElement *_webFormControlBeforeInteraction;	// 832 = 0x340
    double _lastWebKeyboardDismissTime;	// 840 = 0x348
    NSDictionary *_keyboardKeyCommands;	// 848 = 0x350
    struct CGPoint _passthroughFinish;	// 856 = 0x358
    struct CGPoint _passthroughOffset;	// 872 = 0x368
    struct CGPoint _passthroughStart;	// 888 = 0x378
    NSMutableSet *_directInteractionElements;	// 904 = 0x388
    NSString *_continuousPathSuggestion;	// 912 = 0x390
    SCRCTargetSelectorTimer *_continuousPathIdleTimer;	// 920 = 0x398
    double _webPageLoadingProgress;	// 928 = 0x3a0
    long long _cursorBorderHitCount;	// 936 = 0x3a8
    NSString *_lastTitleElemenTitle;	// 944 = 0x3b0
    NSLock *_trackingLock;	// 952 = 0x3b8
    VOTEvent *_mostRecentTrackingEvent;	// 960 = 0x3c0
    VOTElementUniqueIdentification *_labeledElementIdentification;	// 968 = 0x3c8
    VOTElement *_cachedLabelElement;	// 976 = 0x3d0
    long long _customActionIndex;	// 984 = 0x3d8
    NSString *_customActionIdentifier;	// 992 = 0x3e0
    NSDictionary *_currentPublicCustomRotorItemResult;	// 1000 = 0x3e8
    NSString *_audiographActionIdentifier;	// 1008 = 0x3f0
    long long _customContentIndex;	// 1016 = 0x3f8
    NSArray *_allElements;	// 1024 = 0x400
    VOTElement *_previousItemChooserElement;	// 1032 = 0x408
    struct SCRCMathAverageValue _roadTravelAngle;	// 1040 = 0x410
    VOTElement *_upcomingRoadElement;	// 1480 = 0x5c8
    struct CGPoint _firstRoadTravelPoint;	// 1488 = 0x5d0
    struct CGPoint _lastRoadTravelPoint;	// 1504 = 0x5e0
    struct CGPoint _intersectionTravelPoint;	// 1520 = 0x5f0
    _Bool _playingMapSound;	// 1536 = 0x600
    _Bool _shouldContinueRoadTracking;	// 1537 = 0x601
    SCRCTargetSelectorTimer *_switchRoadsAtIntersectionTimer;	// 1544 = 0x608
    VOTOutputRequest *_switchRoadsOutputRequest;	// 1552 = 0x610
    VOTOutputRequest *_endOfRoadApproachingRequest;	// 1560 = 0x618
    VOTOutputRequest *_startTrackingRoadRequest;	// 1568 = 0x620
    double _switchedToRoadTime;	// 1576 = 0x628
    _Bool _approachingEndOfRoad;	// 1584 = 0x630
    struct CGPoint _explorationStartPoint;	// 1592 = 0x638
    NSString *_webSearchText;	// 1608 = 0x648
    int _countOutputBlockGeneration;	// 1616 = 0x650
    NSMutableDictionary *_focusedElementsByElementCommunityIdentifier;	// 1624 = 0x658
    SCRCThread *_elementManagerThread;	// 1632 = 0x660
    SCRCThread *_systemEventThread;	// 1640 = 0x668
    AVFlashlight *_flashlightDevice;	// 1648 = 0x670
    _Bool _flashlightNotificationsEnabled;	// 1656 = 0x678
    _Bool _flashlightOnStatus;	// 1657 = 0x679
    unsigned long long _flashlightStatusGeneration;	// 1664 = 0x680
    unsigned long long _flashlightNotificationGeneration;	// 1672 = 0x688
    SCRCTargetSelectorTimer *_flashlightSystemTimer;	// 1680 = 0x690
    SCRCThreadKey *;	// 1688 = 0x698
    NSArray *_jindoAppBundleIdentifiers;	// 1696 = 0x6a0
    struct {
        _Bool lastEventWasIdle;
        _Bool elementCenterSoundPlaying;
        _Bool inStatusBar;
        _Bool focusIsOnElement;
        _Bool tapShouldHandleAutofill;
        _Bool tapShouldHandleTextOperation;
        _Bool usePenumbraForKeyboardKeys;
        _Bool shouldSpeakNextLayoutChange;
        _Bool visualRotorDisplayed;
        _Bool touchingOnNothing;
        _Bool isReadingAll;
        _Bool isReadingAllBook;
        _Bool userInitiatedBooksScroll;
        _Bool previousScrollWasBookContentMovement;
        _Bool performedFlickNavigation;
        _Bool performedKeyboardNavigation;
        _Bool performedRotorTextNavigation;
        _Bool performedSearch;
        _Bool performedElementUpdateForSelectionChange;
        _Bool inPassthroughMode;
        _Bool didTouchTypingOutputStart;
        _Bool inSearchTextMode;
        _Bool itemChooserVisible;
        _Bool shouldSpeakSameLineTouched;
        _Bool currentElementAllowsDirectTouch;
        _Bool shouldTurnTrackingIntoDirectTouch;
        _Bool shouldUpdateRotorForElement;
        _Bool avoidAnnouncingDirectTouchArea;
        _Bool wasSendingToNativeSlide;
        _Bool preventCustomRotorItemIndexReset;
        _Bool shouldTriggerAlternativeKeyActivation;
        _Bool setReachabilityIsActiveWhileFingerDown;
        _Bool watchDisplayDidTurnOn;
        _Bool inKeyboardTextSelectionMode;
        _Bool continuousPathActivationDesired;
        _Bool continuousPathKeyboardBegan;
        _Bool isContinuousPathOutsideBounds;
        _Bool isMonitoringElements;
        long long lastElementMovement;
        _Bool lastScrollWasFromBraillePanning;
    } _flags;	// 1704 = 0x6a8
    double _lastAnnouncementNotificationTime;	// 1760 = 0x6e0
    double _lastLockScreenAlertSpokenTime;	// 1768 = 0x6e8
    struct _NSRange _keyboardTextSelectionStartRange;	// 1776 = 0x6f0
    _Bool _inTextProcessingRotorMode;	// 1792 = 0x700
    long long _lastUserTextSelectionDirection;	// 1800 = 0x708
    VOTElement *_currentSubElement;	// 1808 = 0x710
    long long _misspelledWordReplacementCycleIndex;	// 1816 = 0x718
    double _performedTextSelectionOperation;	// 1824 = 0x720
    _Bool _didPeekEvent;	// 1832 = 0x728
    _Bool _isInPreview;	// 1833 = 0x729
    NSMutableArray *_touchEventElements;	// 1840 = 0x730
    unsigned long long _lastTableRow;	// 1848 = 0x738
    _Bool _systemIsSleeping;	// 1856 = 0x740
    unsigned long long _elementSearchGeneration;	// 1864 = 0x748
    long long _elementUnitIndex;	// 1872 = 0x750
    struct _NSRange _elementUnitOutputRange;	// 1880 = 0x758
    SCRCTargetSelectorTimer *_elementUpdatesFrequentlyTimer;	// 1896 = 0x768
    NSString *_cachedFrequentUpdateText;	// 1904 = 0x770
    unsigned long long _lastSeenLineStartPositionForFontProperties;	// 1912 = 0x778
    _Bool _inUnitTestingMode;	// 1920 = 0x780
    _Bool _speakNonfocusableElementsAfterDelay;	// 1921 = 0x781
    _Bool _shouldSilenceAnnouncements;	// 1922 = 0x782
    _Bool _explorerElementsNeedUpdate;	// 1923 = 0x783
    _Bool _shouldReadExplorerElementsAfterSpeechFinished;	// 1924 = 0x784
    SCRCTargetSelectorTimer *_readExplorerElementsAfterSpeechFinishedTimer;	// 1928 = 0x788
    SCRCTargetSelectorTimer *_updateVisualsTimer;	// 1936 = 0x790
    SCRCTargetSelectorTimer *_updatePreferredTVInteractionModeTimer;	// 1944 = 0x798
    _Bool _isShowingVoiceOverEnabledWarningBanner;	// 1952 = 0x7a0
    double _lastUserEventNotificationTime;	// 1960 = 0x7a8
    NSString *_lastSpokenGuideElementHeaderText;	// 1968 = 0x7b0
    _Bool _systemNotificationInProgress;	// 1976 = 0x7b8
    _Bool _exploreFocusAffectsNativeFocus;	// 1977 = 0x7b9
    AXDragManager *_dragManager;	// 1984 = 0x7c0
    VOTDragOutputManager *_dragOutputManager;	// 1992 = 0x7c8
    NSNumber *_lastScreenChangeSourceIdentifier;	// 2000 = 0x7d0
    _Bool _lastHandledEventWasRotorMovement;	// 2008 = 0x7d8
    SCRCTargetSelectorTimer *_tvRotorInteractionTimer;	// 2016 = 0x7e0
    _Bool _tutorialListeningForGestureNotifications;	// 2024 = 0x7e8
    NSString *_tutorialPage;	// 2032 = 0x7f0
    NSMutableArray *_tutorialRestrictedCommands;	// 2040 = 0x7f8
    long long _tutorialActiveRestrictionType;	// 2048 = 0x800
    NSString *_tutorialRecognizedGesture;	// 2056 = 0x808
    NSMutableArray *_explorers;	// 2064 = 0x810
    NSLock *_explorersLock;	// 2072 = 0x818
    _Bool _didIgnoreLastFirstResponderChangeOnSelectionChange;	// 2080 = 0x820
    _Bool _unitTestingMode;	// 2081 = 0x821
    _Bool _tvIsInteractingWithRotor;	// 2082 = 0x822
    _Bool _screenCurtainIsTemporarilyDisabled;	// 2083 = 0x823
    _Bool _didReceiveForceUpdateChangeToken;	// 2084 = 0x824
    _Bool _didCacheSideAppDividerElement;	// 2085 = 0x825
    _Bool _inTextSelection;	// 2086 = 0x826
    _Bool _selectingRightward;	// 2087 = 0x827
    _Bool _isUpdatingFocus;	// 2088 = 0x828
    _Bool _needsUpdateFocus;	// 2089 = 0x829
    _Bool _waitingToRetryFocus;	// 2090 = 0x82a
    _Bool _isContinuitySessionActive;	// 2091 = 0x82b
    id <VOTElementUpdateProtocol> _updateDelegate;	// 2096 = 0x830
    double _timeSpentOnNothing;	// 2104 = 0x838
    double _lastNothingSoundTime;	// 2112 = 0x840
    double _lastAlertTime;	// 2120 = 0x848
    double _lastSelectionChangeTime;	// 2128 = 0x850
    double _lastScreenChangeNotificationTime;	// 2136 = 0x858
    double _lastPressOnMediaSessionElement;	// 2144 = 0x860
    double _touchTypingStartTime;	// 2152 = 0x868
    double _lastFirstResponderChangeTime;	// 2160 = 0x870
    double _lastTemporaryQuickNavDisableTime;	// 2168 = 0x878
    double _lastEventOccurredTime;	// 2176 = 0x880
    NSString *_lastEventCommand;	// 2184 = 0x888
    double _lastValueChangeTime;	// 2192 = 0x890
    double _lastWebPageLoadTime;	// 2200 = 0x898
    double _lastSearchForElementsTime;	// 2208 = 0x8a0
    unsigned long long _currentSimilarTraits;	// 2216 = 0x8a8
    VOTElement *_previousFirstResponder;	// 2224 = 0x8b0
    NSString *_previousFirstResponderValue;	// 2232 = 0x8b8
    NSMutableDictionary *_fingersFromTouchCommands;	// 2240 = 0x8c0
    unsigned long long _lastTextPressAction;	// 2248 = 0x8c8
    VOTElement *_nativeFocusElement;	// 2256 = 0x8d0
    VOTElement *_initialReadAllElement;	// 2264 = 0x8d8
    double _lastLayoutChangeNotificationTime;	// 2272 = 0x8e0
    CDUnknownBlockType _elementManagerHandledEventCallback;	// 2280 = 0x8e8
    CDUnknownBlockType _currentElementChangedCallback;	// 2288 = 0x8f0
    NSArray *_previouslySpokenImageCaptionResults;	// 2296 = 0x8f8
    double _lastCursorBorderHitTime;	// 2304 = 0x900
    double _lastActivationTime;	// 2312 = 0x908
    double _lastSilencedAlertTime;	// 2320 = 0x910
    double _lastScreenWakeViaPlayPause;	// 2328 = 0x918
    double _lastExternalUnlockTime;	// 2336 = 0x920
    double _lastFolderOperationTime;	// 2344 = 0x928
    double _lastHomeButtonPressTime;	// 2352 = 0x930
    double _lastBlockedRequestBySiriOrDictationTime;	// 2360 = 0x938
    double _lastUserElementTouchTime;	// 2368 = 0x940
    double _lastElementChangeTime;	// 2376 = 0x948
    VOTElement *_nextElementToFocus;	// 2384 = 0x950
    NSString *_nextStringToSpeakOnScreenChange;	// 2392 = 0x958
    NSMutableDictionary *_previousTableOrCollectionViewToMetadata;	// 2400 = 0x960
    NSMutableArray *_previousTableOrCollectionViewList;	// 2408 = 0x968
    VOTElement *_previousTableOrCollectionViewApplication;	// 2416 = 0x970
    VOTElement *_cachedSideAppDividerElement;	// 2424 = 0x978
    NSArray *_cachedAdditionalElementCommunities;	// 2432 = 0x980
    VOTElement *_mostRecentElementCommunity;	// 2440 = 0x988
    VOTElement *_firstTrackedAppInGesture;	// 2448 = 0x990
    NSString *_springBoardActionHandlerIdentifier;	// 2456 = 0x998
    VOTOutputRequest *_delayedNotificationAnnouncementRequest;	// 2464 = 0x9a0
    long long _lastElementChangeAction;	// 2472 = 0x9a8
    VOTElement *_lastTrackingUpdateAppsFailureApplication;	// 2480 = 0x9b0
    double _lastTrackingUpdateAppsFailureTime;	// 2488 = 0x9b8
    double _lastDuckingDisablementSessionStart;	// 2496 = 0x9c0
    double _lastPauseSpeechAndHapticsStart;	// 2504 = 0x9c8
    double _continuousPathTimeout;	// 2512 = 0x9d0
    NSDictionary *_previousContextDescriptors;	// 2520 = 0x9d8
    NSDictionary *_currentContextDescriptors;	// 2528 = 0x9e0
    VOTElement *_lastElementForAttemptToShowContextMenu;	// 2536 = 0x9e8
    double _lastAttemptToShowContextMenuTime;	// 2544 = 0x9f0
    VOTExplorerElementManager *_explorerElementManager;	// 2552 = 0x9f8
    VOTTVSpeechRequestManager *_tvSpeechRequestManager;	// 2560 = 0xa00
    VOTTVGestureRepeater *_tvGestureRepeater;	// 2568 = 0xa08
    long long _forceUpdateMask;	// 2576 = 0xa10
    long long _lastElementHeadingLevel;	// 2584 = 0xa18
    long long _lastElementBlockquoteLevel;	// 2592 = 0xa20
    NSLock *_tvAccessLock;	// 2600 = 0xa28
    VOTUpdateFocusContext *_updateFocusContext;	// 2608 = 0xa30
    long long _focusRetryAttempts;	// 2616 = 0xa38
    VOTElement *_lastContainerForCustomRotorHint;	// 2624 = 0xa40
    NSSet *_previousCustomRotorsForRotorHint;	// 2632 = 0xa48
    VOTTextMovementManager *_textSelectionMovementManager;	// 2640 = 0xa50
    VOTOutputRequest *;	// 2648 = 0xa58
    unsigned long long _elementGeneration;	// 2656 = 0xa60
    unsigned long long _webPageLoadedGenerationMark;	// 2664 = 0xa68
    NSURL *_webPageLoadURL;	// 2672 = 0xa70
    SCRCTargetSelectorTimer *_webPageElementFinder;	// 2680 = 0xa78
    NSMutableDictionary *_directTouchApps;	// 2688 = 0xa80
    NSString *_lastItemChooserSearchTerm;	// 2696 = 0xa88
    AXCameraSceneDescriber *_cameraSceneDescriber;	// 2704 = 0xa90
}

+ (void)_exitThread:(id)arg1;	// IMP=0x002000000006e380
+ (void)initialize;	// IMP=0x001000000006ca12
- (void).cxx_destruct;	// IMP=0x00200000000dc905
@property(retain, nonatomic) AXCameraSceneDescriber *cameraSceneDescriber; // @synthesize cameraSceneDescriber=_cameraSceneDescriber;
@property(nonatomic) _Bool isContinuitySessionActive; // @synthesize isContinuitySessionActive=_isContinuitySessionActive;
@property(retain, nonatomic) NSString *lastItemChooserSearchTerm; // @synthesize lastItemChooserSearchTerm=_lastItemChooserSearchTerm;
@property(retain, nonatomic) NSMutableDictionary *directTouchApps; // @synthesize directTouchApps=_directTouchApps;
@property(retain, nonatomic) SCRCTargetSelectorTimer *webPageElementFinder; // @synthesize webPageElementFinder=_webPageElementFinder;
@property(retain, nonatomic) NSURL *webPageLoadURL; // @synthesize webPageLoadURL=_webPageLoadURL;
@property(nonatomic) unsigned long long webPageLoadedGenerationMark; // @synthesize webPageLoadedGenerationMark=_webPageLoadedGenerationMark;
@property(nonatomic) unsigned long long elementGeneration; // @synthesize elementGeneration=_elementGeneration;
@property(retain, nonatomic) VOTOutputRequest *lastRequestBlockedBySiriOrDictation; // @synthesize lastRequestBlockedBySiriOrDictation=_lastRequestBlockedBySiriOrDictation;
@property(retain, nonatomic) VOTTextMovementManager *textSelectionMovementManager; // @synthesize textSelectionMovementManager=_textSelectionMovementManager;
@property(retain, nonatomic) NSSet *previousCustomRotorsForRotorHint; // @synthesize previousCustomRotorsForRotorHint=_previousCustomRotorsForRotorHint;
@property(retain, nonatomic) VOTElement *lastContainerForCustomRotorHint; // @synthesize lastContainerForCustomRotorHint=_lastContainerForCustomRotorHint;
@property(nonatomic) _Bool waitingToRetryFocus; // @synthesize waitingToRetryFocus=_waitingToRetryFocus;
@property(nonatomic) long long focusRetryAttempts; // @synthesize focusRetryAttempts=_focusRetryAttempts;
@property(retain, nonatomic) VOTUpdateFocusContext *updateFocusContext; // @synthesize updateFocusContext=_updateFocusContext;
@property(retain, nonatomic) NSLock *tvAccessLock; // @synthesize tvAccessLock=_tvAccessLock;
@property(nonatomic) long long lastElementBlockquoteLevel; // @synthesize lastElementBlockquoteLevel=_lastElementBlockquoteLevel;
@property(nonatomic) long long lastElementHeadingLevel; // @synthesize lastElementHeadingLevel=_lastElementHeadingLevel;
@property(nonatomic) long long forceUpdateMask; // @synthesize forceUpdateMask=_forceUpdateMask;
@property(nonatomic) _Bool needsUpdateFocus; // @synthesize needsUpdateFocus=_needsUpdateFocus;
@property(nonatomic) _Bool isUpdatingFocus; // @synthesize isUpdatingFocus=_isUpdatingFocus;
@property(retain, nonatomic) VOTTVGestureRepeater *tvGestureRepeater; // @synthesize tvGestureRepeater=_tvGestureRepeater;
@property(retain, nonatomic) VOTTVSpeechRequestManager *tvSpeechRequestManager; // @synthesize tvSpeechRequestManager=_tvSpeechRequestManager;
@property(retain, nonatomic) VOTExplorerElementManager *explorerElementManager; // @synthesize explorerElementManager=_explorerElementManager;
@property(nonatomic) double lastAttemptToShowContextMenuTime; // @synthesize lastAttemptToShowContextMenuTime=_lastAttemptToShowContextMenuTime;
@property(retain, nonatomic) VOTElement *lastElementForAttemptToShowContextMenu; // @synthesize lastElementForAttemptToShowContextMenu=_lastElementForAttemptToShowContextMenu;
@property(retain, nonatomic) NSDictionary *currentContextDescriptors; // @synthesize currentContextDescriptors=_currentContextDescriptors;
@property(retain, nonatomic) NSDictionary *previousContextDescriptors; // @synthesize previousContextDescriptors=_previousContextDescriptors;
@property(nonatomic) double continuousPathTimeout; // @synthesize continuousPathTimeout=_continuousPathTimeout;
@property(nonatomic) double lastPauseSpeechAndHapticsStart; // @synthesize lastPauseSpeechAndHapticsStart=_lastPauseSpeechAndHapticsStart;
@property(nonatomic) double lastDuckingDisablementSessionStart; // @synthesize lastDuckingDisablementSessionStart=_lastDuckingDisablementSessionStart;
@property(nonatomic) double lastTrackingUpdateAppsFailureTime; // @synthesize lastTrackingUpdateAppsFailureTime=_lastTrackingUpdateAppsFailureTime;
@property(retain, nonatomic) VOTElement *lastTrackingUpdateAppsFailureApplication; // @synthesize lastTrackingUpdateAppsFailureApplication=_lastTrackingUpdateAppsFailureApplication;
@property(nonatomic) long long lastElementChangeAction; // @synthesize lastElementChangeAction=_lastElementChangeAction;
@property(retain, nonatomic) VOTOutputRequest *delayedNotificationAnnouncementRequest; // @synthesize delayedNotificationAnnouncementRequest=_delayedNotificationAnnouncementRequest;
@property(nonatomic) _Bool selectingRightward; // @synthesize selectingRightward=_selectingRightward;
@property(nonatomic) _Bool inTextSelection; // @synthesize inTextSelection=_inTextSelection;
@property(copy, nonatomic) NSString *springBoardActionHandlerIdentifier; // @synthesize springBoardActionHandlerIdentifier=_springBoardActionHandlerIdentifier;
@property(retain, nonatomic) VOTElement *firstTrackedAppInGesture; // @synthesize firstTrackedAppInGesture=_firstTrackedAppInGesture;
@property(retain, nonatomic) VOTElement *mostRecentElementCommunity; // @synthesize mostRecentElementCommunity=_mostRecentElementCommunity;
@property(retain, nonatomic) NSArray *cachedAdditionalElementCommunities; // @synthesize cachedAdditionalElementCommunities=_cachedAdditionalElementCommunities;
@property(retain, nonatomic) VOTElement *cachedSideAppDividerElement; // @synthesize cachedSideAppDividerElement=_cachedSideAppDividerElement;
@property(nonatomic) _Bool didCacheSideAppDividerElement; // @synthesize didCacheSideAppDividerElement=_didCacheSideAppDividerElement;
@property(retain, nonatomic) VOTElement *previousTableOrCollectionViewApplication; // @synthesize previousTableOrCollectionViewApplication=_previousTableOrCollectionViewApplication;
@property(retain, nonatomic) NSMutableArray *previousTableOrCollectionViewList; // @synthesize previousTableOrCollectionViewList=_previousTableOrCollectionViewList;
@property(retain, nonatomic) NSMutableDictionary *previousTableOrCollectionViewToMetadata; // @synthesize previousTableOrCollectionViewToMetadata=_previousTableOrCollectionViewToMetadata;
@property(nonatomic) _Bool didReceiveForceUpdateChangeToken; // @synthesize didReceiveForceUpdateChangeToken=_didReceiveForceUpdateChangeToken;
@property(nonatomic) _Bool screenCurtainIsTemporarilyDisabled; // @synthesize screenCurtainIsTemporarilyDisabled=_screenCurtainIsTemporarilyDisabled;
@property(retain, nonatomic) NSString *nextStringToSpeakOnScreenChange; // @synthesize nextStringToSpeakOnScreenChange=_nextStringToSpeakOnScreenChange;
@property(retain, nonatomic) VOTElement *nextElementToFocus; // @synthesize nextElementToFocus=_nextElementToFocus;
@property(nonatomic) double lastElementChangeTime; // @synthesize lastElementChangeTime=_lastElementChangeTime;
@property(nonatomic) double lastUserElementTouchTime; // @synthesize lastUserElementTouchTime=_lastUserElementTouchTime;
@property(nonatomic) double lastBlockedRequestBySiriOrDictationTime; // @synthesize lastBlockedRequestBySiriOrDictationTime=_lastBlockedRequestBySiriOrDictationTime;
@property(nonatomic) double lastHomeButtonPressTime; // @synthesize lastHomeButtonPressTime=_lastHomeButtonPressTime;
@property(nonatomic) double lastFolderOperationTime; // @synthesize lastFolderOperationTime=_lastFolderOperationTime;
@property(nonatomic) double lastExternalUnlockTime; // @synthesize lastExternalUnlockTime=_lastExternalUnlockTime;
@property(nonatomic) double lastScreenWakeViaPlayPause; // @synthesize lastScreenWakeViaPlayPause=_lastScreenWakeViaPlayPause;
@property(nonatomic) double lastSilencedAlertTime; // @synthesize lastSilencedAlertTime=_lastSilencedAlertTime;
@property(nonatomic) double lastActivationTime; // @synthesize lastActivationTime=_lastActivationTime;
@property(nonatomic) double lastCursorBorderHitTime; // @synthesize lastCursorBorderHitTime=_lastCursorBorderHitTime;
@property(retain, nonatomic) NSArray *previouslySpokenImageCaptionResults; // @synthesize previouslySpokenImageCaptionResults=_previouslySpokenImageCaptionResults;
@property(nonatomic) _Bool tvIsInteractingWithRotor; // @synthesize tvIsInteractingWithRotor=_tvIsInteractingWithRotor;
@property(copy, nonatomic) CDUnknownBlockType currentElementChangedCallback; // @synthesize currentElementChangedCallback=_currentElementChangedCallback;
@property(copy, nonatomic) CDUnknownBlockType elementManagerHandledEventCallback; // @synthesize elementManagerHandledEventCallback=_elementManagerHandledEventCallback;
@property(nonatomic) _Bool unitTestingMode; // @synthesize unitTestingMode=_unitTestingMode;
@property(nonatomic) double lastLayoutChangeNotificationTime; // @synthesize lastLayoutChangeNotificationTime=_lastLayoutChangeNotificationTime;
@property(retain, nonatomic) VOTElement *initialReadAllElement; // @synthesize initialReadAllElement=_initialReadAllElement;
@property(retain, nonatomic) NSString *tutorialRecognizedGesture; // @synthesize tutorialRecognizedGesture=_tutorialRecognizedGesture;
@property(nonatomic) long long tutorialActiveRestrictionType; // @synthesize tutorialActiveRestrictionType=_tutorialActiveRestrictionType;
@property(retain, nonatomic) NSMutableArray *tutorialRestrictedCommands; // @synthesize tutorialRestrictedCommands=_tutorialRestrictedCommands;
@property(retain, nonatomic) NSString *tutorialPage; // @synthesize tutorialPage=_tutorialPage;
@property(nonatomic) _Bool tutorialListeningForGestureNotifications; // @synthesize tutorialListeningForGestureNotifications=_tutorialListeningForGestureNotifications;
@property(retain, nonatomic) VOTElement *nativeFocusElement; // @synthesize nativeFocusElement=_nativeFocusElement;
@property(nonatomic) unsigned long long lastTextPressAction; // @synthesize lastTextPressAction=_lastTextPressAction;
@property(nonatomic) _Bool didIgnoreLastFirstResponderChangeOnSelectionChange; // @synthesize didIgnoreLastFirstResponderChangeOnSelectionChange=_didIgnoreLastFirstResponderChangeOnSelectionChange;
@property(retain, nonatomic) NSMutableDictionary *fingersFromTouchCommands; // @synthesize fingersFromTouchCommands=_fingersFromTouchCommands;
@property(copy, nonatomic) NSString *previousFirstResponderValue; // @synthesize previousFirstResponderValue=_previousFirstResponderValue;
@property(retain, nonatomic) VOTElement *previousFirstResponder; // @synthesize previousFirstResponder=_previousFirstResponder;
@property(nonatomic) unsigned long long currentSimilarTraits; // @synthesize currentSimilarTraits=_currentSimilarTraits;
@property(nonatomic) double lastSearchForElementsTime; // @synthesize lastSearchForElementsTime=_lastSearchForElementsTime;
@property(nonatomic) double lastWebPageLoadTime; // @synthesize lastWebPageLoadTime=_lastWebPageLoadTime;
@property(nonatomic) double lastValueChangeTime; // @synthesize lastValueChangeTime=_lastValueChangeTime;
@property(retain, nonatomic) NSString *lastEventCommand; // @synthesize lastEventCommand=_lastEventCommand;
@property(nonatomic) double lastEventOccurredTime; // @synthesize lastEventOccurredTime=_lastEventOccurredTime;
@property(nonatomic) double lastTemporaryQuickNavDisableTime; // @synthesize lastTemporaryQuickNavDisableTime=_lastTemporaryQuickNavDisableTime;
@property(nonatomic) double lastFirstResponderChangeTime; // @synthesize lastFirstResponderChangeTime=_lastFirstResponderChangeTime;
@property(nonatomic) double touchTypingStartTime; // @synthesize touchTypingStartTime=_touchTypingStartTime;
@property(nonatomic) double lastPressOnMediaSessionElement; // @synthesize lastPressOnMediaSessionElement=_lastPressOnMediaSessionElement;
@property(nonatomic) double lastScreenChangeNotificationTime; // @synthesize lastScreenChangeNotificationTime=_lastScreenChangeNotificationTime;
@property(nonatomic) double lastSelectionChangeTime; // @synthesize lastSelectionChangeTime=_lastSelectionChangeTime;
@property(nonatomic) double lastAlertTime; // @synthesize lastAlertTime=_lastAlertTime;
@property(nonatomic) double lastNothingSoundTime; // @synthesize lastNothingSoundTime=_lastNothingSoundTime;
@property(nonatomic) double timeSpentOnNothing; // @synthesize timeSpentOnNothing=_timeSpentOnNothing;
@property(nonatomic) __weak id <VOTElementUpdateProtocol> updateDelegate; // @synthesize updateDelegate=_updateDelegate;
@property(retain, nonatomic) VOTElement *touchContainer; // @synthesize touchContainer=_touchContainer;
- (void)fillCacheWithElements:(id)arg1;	// IMP=0x00100000000dbe16
- (void)_setFetchManager:(id)arg1;	// IMP=0x00100000000dbda3
- (id)_fetchManager;	// IMP=0x00100000000dbd95
- (id)_lastSeenFontProperties;	// IMP=0x00100000000dbd84
- (void)outputManager:(id)arg1 willProcessNextRequest:(id)arg2;	// IMP=0x00100000000dbd7e
- (void)outputManagerDidFinishProcessingQueuedRequests:(id)arg1;	// IMP=0x00100000000dbd78
- (long long)actionsRotorAddBehaviorForElementRotor:(id)arg1;	// IMP=0x00100000000dbd5b
- (long long)tvInteractionModeForElementRotor:(id)arg1;	// IMP=0x00100000000dbd3f
- (void)rotor:(id)arg1 didChangeFrom:(long long)arg2 to:(long long)arg3 userInitiated:(_Bool)arg4;	// IMP=0x00100000000dbc2f
- (id)elementRotor;	// IMP=0x00100000000dbc1e
- (void)moveToElementMatchingRotorType:(long long)arg1 inDirection:(long long)arg2;	// IMP=0x00100000000dbc04
- (void)_sendBrailleAlert:(id)arg1;	// IMP=0x00100000000dbb59
- (_Bool)_needsPhoneticBrailleForLanauge:(id)arg1;	// IMP=0x00100000000dba9a
- (void)resetFrequentUpdateTextCache;	// IMP=0x00100000000dba7a
- (void)_elementUpdatesFrequently;	// IMP=0x00100000000db654
- (double)_realTimeAdjustableUpdateFrequency:(id)arg1;	// IMP=0x00100000000db5b5
- (_Bool)_elementMonitoringOutputElement:(id)arg1 userMonitored:(_Bool)arg2;	// IMP=0x00100000000db1c9
- (_Bool)stringIsTextAttachment:(id)arg1;	// IMP=0x00100000000db10b
- (id)_textAttachmentElementForString:(id)arg1 inRange:(struct _NSRange)arg2;	// IMP=0x00100000000db03e
- (void)outputTextSegmentForRange:(struct _NSRange)arg1 string:(id)arg2 element:(id)arg3 usePhonetics:(_Bool)arg4 segment:(long long)arg5;	// IMP=0x00100000000da94e
- (id)_listItemLabelForAXAttributedString:(id)arg1;	// IMP=0x00100000000da893
- (void)updateIndexesForOutputRange:(struct _NSRange)arg1 segment:(long long)arg2 direction:(long long)arg3 outputStringLength:(unsigned long long)arg4;	// IMP=0x00100000000da85c
- (struct _NSRange)outputRangeForTextSegmentUnit:(long long)arg1 direction:(long long)arg2 string:(id)arg3 element:(id)arg4;	// IMP=0x00100000000da1eb
- (void)outputNextTextSegmentUnit:(long long)arg1 direction:(long long)arg2 string:(id)arg3 element:(id)arg4;	// IMP=0x00100000000da0f7
- (struct _NSRange)_outputRangeForCharacterSegment:(id)arg1 direction:(long long)arg2;	// IMP=0x00100000000da00b
- (void)gestureRepeater:(id)arg1 repeaterEventDidFire:(long long)arg2;	// IMP=0x00100000000d9f78
- (void)gestureRepeaterWillSendFirstRepeaterEvent:(id)arg1;	// IMP=0x00100000000d9f00
- (void)_sendUserEventOccurredIfNeeded;	// IMP=0x00100000000d9e59
- (void)explorerElementManager:(id)arg1 didFinishReadAll:(_Bool)arg2;	// IMP=0x00100000000d9d8b
- (void)explorerElementManager:(id)arg1 willReadElement:(id)arg2;	// IMP=0x00100000000d9d05
- (_Bool)explorerElementManagerShouldBeInUnitTestingMode:(id)arg1;	// IMP=0x00100000000d9cf3
- (void)explorerElementManager:(id)arg1 didSetExplorerElementFocus:(id)arg2;	// IMP=0x00100000000d9ce2
- (void)willBeginReadAll:(id)arg1;	// IMP=0x00100000000d9cd5
- (void)_updateExplorerElementsIfNeeded;	// IMP=0x00100000000d9a78
- (void)__interruptSpeachAndPlayBorderHitSound;	// IMP=0x00100000000d997c
- (void)_interruptSpeachAndPlayBorderHitSound;	// IMP=0x00100000000d994d
- (void)__sendOutputRequest:(id)arg1;	// IMP=0x00100000000d98bf
- (void)_speakMessages:(id)arg1 cannotBeInterrupted:(_Bool)arg2 pitch:(long long)arg3 announcement:(_Bool)arg4 brailleOnly:(_Bool)arg5;	// IMP=0x00100000000d947c
- (void)_speakMessages:(id)arg1 cannotBeInterrupted:(_Bool)arg2 pitch:(long long)arg3;	// IMP=0x00100000000d9457
- (void)_speak:(id)arg1 cannotBeInterrupted:(_Bool)arg2 pitch:(long long)arg3 announcement:(_Bool)arg4 brailleOnly:(_Bool)arg5;	// IMP=0x00100000000d937f
- (void)_speak:(id)arg1 cannotBeInterrupted:(_Bool)arg2 pitch:(long long)arg3;	// IMP=0x00100000000d935a
- (void)_speak:(id)arg1 cannotBeInterrupted:(_Bool)arg2 announcement:(_Bool)arg3 brailleOnly:(_Bool)arg4;	// IMP=0x00100000000d9332
- (void)_speak:(id)arg1 cannotBeInterrupted:(_Bool)arg2;	// IMP=0x00100000000d930a
- (void)__tvOS_handleValueChangedWithType:(id)arg1 oldValue:(id)arg2 newValue:(id)arg3 insertedTextOrNil:(id)arg4 isSecureText:(_Bool)arg5;	// IMP=0x00100000000d8df0
- (void)_readExplorerElementsAfterSpeechFinishedTimerFired;	// IMP=0x00100000000d8c81
- (void)__tvOS_handleUpdatePreferredTVInteractionModeTimer;	// IMP=0x00100000000d8bd1
- (void)__handleUpdateVisualsTimer;	// IMP=0x00100000000d8b61
- (void)__updateVoiceOverEnabledWarningBannerVisibility;	// IMP=0x00100000000d8b5b
- (void)_performTouchPadTapAtLocation:(struct CGPoint)arg1;	// IMP=0x00100000000d8b55
- (id)__targetElementForFocusElement:(id)arg1 mustBeAccessibilityElement:(_Bool)arg2;	// IMP=0x00100000000d8a37
- (id)__consumeAppTransitionForAnnouncingIfNeeded:(id)arg1;	// IMP=0x00100000000d8867
- (_Bool)_bundleIdentifierIsHostedByPineBoard:(id)arg1;	// IMP=0x00100000000d87af
- (void)_tvOS_updateWithNativeFocus;	// IMP=0x00100000000d79da
- (void)_tvOS_retryUpdateWithNativeFocus;	// IMP=0x00100000000d786e
- (id)_focusElementForFocusUpdate:(id)arg1;	// IMP=0x00100000000d7707
- (void)_tvOS_handleUpdateWithNativeFocusFromTimer;	// IMP=0x00100000000d7682
- (void)_tvOS_updateWithNativeFocus:(id)arg1 withDelay:(double)arg2;	// IMP=0x00100000000d749f
- (void)_tvOS_updateWithNativeFocus:(id)arg1 withDelayNumber:(id)arg2;	// IMP=0x00100000000d7441
- (_Bool)_didFocusUpdateOriginateFromFocusedApp:(id)arg1;	// IMP=0x00100000000d7187
- (void)__updateElementVisuals;	// IMP=0x00100000000d7049
- (void)__tvOS_toggleExploreFocusAffectsNativeFocusPreference;	// IMP=0x00100000000d6f0f
- (void)__tvOS_toggleSilenceAnnouncementsUserPreference;	// IMP=0x00100000000d6dd5
- (long long)_tvOS_userPreferredNonDirectTouchInteractionMode;	// IMP=0x00100000000d6dca
- (void)__tvOS_toggleSpeakNonfocusableElementsAfterDelayUserPreference;	// IMP=0x00100000000d6c90
- (void)__tvOS_toggleAudioDescriptions;	// IMP=0x00100000000d6af3
- (void)__sendHIDEvents:(id)arg1 postEventDelays:(id)arg2;	// IMP=0x00100000000d683c
- (void)__sendTVRemoteCommand:(unsigned long long)arg1;	// IMP=0x00100000000d637a
- (_Bool)_sendTVRemoteCommandOverrideForAXCommand:(long long)arg1;	// IMP=0x00100000000d62d7
- (void)__handleTVSelectButtonClicked;	// IMP=0x00100000000d5fbb
- (void)__handleTVMenuButtonClicked;	// IMP=0x00100000000d5ea7
- (_Bool)handleTVSelectButtonClicked;	// IMP=0x00100000000d5e9f
- (_Bool)handleTVMenuButtonClicked;	// IMP=0x00100000000d5e2b
- (_Bool)_isDictationInProgressForCurrentApp;	// IMP=0x00100000000d5d8d
@property(nonatomic) _Bool exploreFocusAffectsNativeFocus;
@property(nonatomic) _Bool shouldSilenceAnnouncements;
@property(nonatomic) _Bool speakNonfocusableElementsAfterDelay;
- (id)focusedApplication:(id)arg1;	// IMP=0x00100000000d57a3
- (void)_handleDescribeCameraScene:(id)arg1;	// IMP=0x00100000000d54b5
- (void)_setLastSeenDeviceOrientation:(long long)arg1;	// IMP=0x00100000000d54a8
- (void)_handlePerformEjectButtonPress:(id)arg1;	// IMP=0x00100000000d548c
- (void)_handlePerformVolumeDownButtonPress:(id)arg1;	// IMP=0x00100000000d5470
- (void)_handlePerformVolumeUpButtonPress:(id)arg1;	// IMP=0x00100000000d5454
- (_Bool)shouldAllowSpeaking;	// IMP=0x00100000000d5428
- (_Bool)_processWatchSpecificOverrides:(id)arg1;	// IMP=0x00100000000d53ac
- (void)_handleKeyboardCommandEvent:(id)arg1;	// IMP=0x00100000000d47c0
- (void)_activateBrailleScreenInputIfNeededForElement:(id)arg1;	// IMP=0x00100000000d4681
- (void)_speakBrailleAutoAdvanceSpeed;	// IMP=0x00100000000d45da
- (id)_brailleAutoAdvanceSpeedString;	// IMP=0x00100000000d450d
- (double)_brailleAutoAdvanceStepFactor;	// IMP=0x00100000000d44dc
- (void)_handleBrailleIncreaseAutoAdvanceSpeed:(id)arg1;	// IMP=0x00100000000d4347
- (void)_handleBrailleDecreaseAutoAdvanceSpeed:(id)arg1;	// IMP=0x00100000000d41b2
- (void)_handleBrailleEnableAutoAdvance:(id)arg1;	// IMP=0x00100000000d40a3
- (void)_handleBrailleWordWrapToggleEvent:(id)arg1;	// IMP=0x00100000000d3f80
- (void)_handleBrailleRefreshEvent:(id)arg1;	// IMP=0x00100000000d3e7b
- (void)_handleBrailleEvent:(id)arg1;	// IMP=0x00100000000d3e0e
- (void)_handleBSINextRotor:(id)arg1;	// IMP=0x00100000000d3dae
- (void)_handleBSIPreviousRotor:(id)arg1;	// IMP=0x00100000000d3d4e
- (void)_handleTogglePerkinsKeyboardInput:(id)arg1;	// IMP=0x00100000000d3c21
- (void)_handleReconnectBrailleDisplays:(id)arg1;	// IMP=0x00100000000d3aa7
- (void)_handleDeactivateBrailleScreenInput:(id)arg1;	// IMP=0x00100000000d3855
- (void)_handleActivateBrailleScreenInputCommand:(id)arg1;	// IMP=0x00100000000d37bd
- (void)_handleActivateBrailleScreenInput:(id)arg1;	// IMP=0x00100000000d3679
- (void)_deactivateGesturedTextInputIfNeeded:(id)arg1;	// IMP=0x00100000000d35e7
- (void)deactivateGesturedTextInputIfNeeded:(_Bool)arg1;	// IMP=0x00100000000d3570
- (void)_sendBSIActiveStateOffNotificationAndNotify;	// IMP=0x00100000000d355a
- (void)_sendBSIStateChangedNotification:(_Bool)arg1 usage:(long long)arg2;	// IMP=0x00100000000d32b3
- (void)removeElementExplorer:(id)arg1;	// IMP=0x00100000000d323a
- (id)_getNewElementExplorer;	// IMP=0x00100000000d3199
- (void)_fetchElementsFrom:(id)arg1 inDirection:(id)arg2 count:(id)arg3 scroll:(id)arg4 block:(CDUnknownBlockType)arg5;	// IMP=0x00100000000d3085
- (void)fetchElementsFrom:(id)arg1 inDirection:(long long)arg2 count:(unsigned long long)arg3 scroll:(_Bool)arg4 block:(CDUnknownBlockType)arg5;	// IMP=0x00100000000d2f47
- (void)_handleQuickNavFeedback:(_Bool)arg1;	// IMP=0x00100000000d2c34
- (void)_handleAnnounceQuickNav:(id)arg1;	// IMP=0x00100000000d2b61
- (void)_handleToggleQuickNav:(id)arg1;	// IMP=0x00100000000d2a54
- (void)_handleToggleSingleLetterQuickNav:(id)arg1;	// IMP=0x00100000000d2722
- (void)_handleToggleVoiceOverModifierKeyLock:(id)arg1;	// IMP=0x00100000000d262e
- (void)_handleSiriFinishedListening:(id)arg1;	// IMP=0x00100000000d2610
- (void)_handleSiriStartedListening:(id)arg1;	// IMP=0x00100000000d25b1
- (void)_handleSiriFinishedTalking:(id)arg1;	// IMP=0x00100000000d250f
- (void)_handleSiriStartedTalking:(id)arg1;	// IMP=0x00100000000d24ee
- (void)updateRunningApplications;	// IMP=0x00100000000d2486
- (void)_handleHomeButtonPress;	// IMP=0x00100000000d211f
- (void)handleHomeButtonPress;	// IMP=0x00100000000d20b6
- (void)handlePlayPauseButtonPress;	// IMP=0x00100000000d2087
- (void)_handlePlayPauseButtonPress;	// IMP=0x00100000000d2052
- (_Bool)_shouldSuppressSpeechForPlayPause;	// IMP=0x00100000000d2013
- (void)handleStateReset;	// IMP=0x00100000000d1fe4
- (void)_handleStateReset;	// IMP=0x00100000000d1f7e
- (void)_handleDecreaseVolume:(id)arg1;	// IMP=0x00100000000d1f0e
- (void)_handleIncreaseVolume:(id)arg1;	// IMP=0x00100000000d1ea5
- (void)_formatRequestForBrailleAlertConditional:(id)arg1;	// IMP=0x00100000000d1e98
- (void)_handleVolumeChange:(float)arg1;	// IMP=0x00100000000d1c16
- (void)_handleRotateOrientation:(id)arg1;	// IMP=0x00100000000d1ba6
- (_Bool);	// IMP=0x00100000000d1b0c
- (_Bool)allowsSystemControlEventForPosition:(int)arg1;	// IMP=0x00100000000d1a39
- (void)_handleSiriShortcutEvent:(id)arg1;	// IMP=0x00100000000d19bb
- (void)_handleSendCancelEvent:(id)arg1;	// IMP=0x00100000000d1953
- (void)_handleSystemCommandToggleQuickNote:(id)arg1;	// IMP=0x00100000000d190f
- (void)_handleSystemCommandSwitchToNextApp:(id)arg1;	// IMP=0x00100000000d18c6
- (void)_handleSystemCommandSwitchToPreviousApp:(id)arg1;	// IMP=0x00100000000d1880
- (void)_handleSystemCommandTakeScreenshot:(id)arg1;	// IMP=0x00100000000d183c
- (void)_handleSystemCommandToggleReachability:(id)arg1;	// IMP=0x00100000000d17f8
- (void)_handleSystemCommandActivateAccessibilityShortcut:(id)arg1;	// IMP=0x00100000000d17b4
- (void)_handleSystemCommandSpotlight:(id)arg1;	// IMP=0x00100000000d1770
- (void)_handleSystemCommandActivateLockButton:(id)arg1;	// IMP=0x00100000000d172c
- (void)_handleSystemCommandToggleAppSwitcher:(id)arg1;	// IMP=0x00100000000d16d2
- (void)_handleSystemCommandToggleDock:(id)arg1;	// IMP=0x00100000000d168e
- (void)_handleSystemCommandActivateSpeakScreen:(id)arg1;	// IMP=0x00100000000d167c
- (void)_handleSystemCommandControlCenter:(id)arg1;	// IMP=0x00100000000d1638
- (void)_handleSystemCommandNotificationCenter:(id)arg1;	// IMP=0x00100000000d15f4
- (void)_handleSystemControlActivation:(id)arg1;	// IMP=0x00100000000d1490
- (void)_handleScrollByPageNotification:(id)arg1;	// IMP=0x00100000000d0228
- (void)_handleAutoCorrectionMadeNotification:(id)arg1;	// IMP=0x00100000000cffdc
- (void)_handleKeyboardChangedNotification;	// IMP=0x00100000000cff2d
- (void)_handleAutoCorrectionDisplayNotification:(id)arg1;	// IMP=0x00100000000cfcec
- (id)continuousPathSuggestion;	// IMP=0x00100000000cfcdb
- (void)_handleUnmuteEligibleEventOccured;	// IMP=0x00100000000cfc97
- (void)_handleReleaseExclusiveAudioHardware;	// IMP=0x00100000000cfc79
- (void)_handleRequestExclusiveAudioHardware;	// IMP=0x00100000000cfbd4
- (void)_handleTemporaryScreenCurtainDisablement;	// IMP=0x00100000000cfab3
- (void)_handleStopSpeakingAndClearAllQueues;	// IMP=0x00100000000cfa29
- (void)_handleStopSpeakingAndClearQueue;	// IMP=0x00100000000cf99f
- (void)_handleStopSpeaking;	// IMP=0x00100000000cf913
- (void)_handleScreenOffSilently;	// IMP=0x00100000000cf8f0
- (void)_handleScreenOnSilently;	// IMP=0x00100000000cf8ca
- (void)_handleScreenOff;	// IMP=0x00100000000cf83b
- (void)_handleScreenOn;	// IMP=0x00100000000cf7e1
- (void)_handleDidReceiveVisionEngineResult:(id)arg1;	// IMP=0x00100000000cf429
- (void)_handleCaptionsDisplayedNotification:(id)arg1;	// IMP=0x00100000000cf30b
- (void)_captionsDisplayedWithTextRuns:(id)arg1;	// IMP=0x00100000000cf050
- (void)_handleVisualsUpdate:(id)arg1;	// IMP=0x00100000000cf03e
- (void)_handleWebPageLoaded:(id)arg1;	// IMP=0x00100000000ceba9
- (_Bool)_moveToWebItemDuringLoadIfNecessary;	// IMP=0x00100000000ce861
- (void)_webPageLoadingSound;	// IMP=0x00100000000ce77d
- (void)_webPageElementFinder;	// IMP=0x00100000000ce697
- (void)_clearWebLoadedSound;	// IMP=0x00100000000ce627
- (void)_handleScreenChange:(id)arg1 sound:(id)arg2;	// IMP=0x00100000000cdce0
- (_Bool)_shouldIgnoreNotificationForContinuityDisplay:(id)arg1 withElement:(struct __AXUIElement *)arg2;	// IMP=0x00100000000cdb35
- (void)_updateForContinuityStateChange;	// IMP=0x00100000000cd9d0
- (_Bool)_shouldIgnoreElementMovementNotification:(id)arg1;	// IMP=0x00100000000cd9c8
- (void)_updateMLElementAutorefresh;	// IMP=0x00100000000cd59a
- (void)_updateDisplayWithCurrentElement;	// IMP=0x00100000000cd546
- (void)_handleAlertReceived:(id)arg1 forApplication:(struct __AXUIElement *)arg2;	// IMP=0x00100000000cca8b
- (id)_retrieveDefaultElementForPosition:(struct CGPoint)arg1;	// IMP=0x00100000000cc72e
- (void)_systemNotificationInProgressForRequest:(id)arg1;	// IMP=0x00100000000cc6c4
- (id)_handleEditingStyleResolutionForAnnouncement:(id)arg1;	// IMP=0x00100000000cc3c6
- (void)_handleAnnouncementWithData:(id)arg1 pid:(int)arg2;	// IMP=0x00100000000c9d01
- (void)_handleAnnouncement:(id)arg1;	// IMP=0x00100000000c9cea
- (void)handleAnnouncement:(id)arg1;	// IMP=0x00100000000c9cab
- (void)_handleAnnouncementNotification:(id)arg1;	// IMP=0x00100000000c9b9b
- (void)_reupdateTextSelectionInformation;	// IMP=0x00100000000c9b5d
- (void)_handleInvalidTextInputNotification:(id)arg1;	// IMP=0x00100000000c9ae5
- (void)_handleInvalidStatusChanged:(id)arg1;	// IMP=0x00100000000c9a23
- (void)_handleSortDirectionChanged:(id)arg1;	// IMP=0x00100000000c99b4
- (void)_handleCurrentStateChanged:(id)arg1;	// IMP=0x00100000000c9945
- (void)_handleExpandedStatusChanged:(id)arg1;	// IMP=0x00100000000c98b9
- (void)__handleExpandedStatusChanged;	// IMP=0x00100000000c9565
- (void)_handleAppSuspendAnimationProgressNotification:(id)arg1;	// IMP=0x00100000000c9445
- (void)_appSuspensionSoundTimer;	// IMP=0x00100000000c9386
- (void)_handleKeyboardKeySelectedNotification:(id)arg1;	// IMP=0x00100000000c90aa
- (void)_handleElementMoved:(struct __AXUIElement *)arg1;	// IMP=0x00100000000c8ebb
- (void)_processSilentValueChange;	// IMP=0x00100000000c8df0
- (void)_processValueChangeWithFirstResponder:(id)arg1 existingFirstResponder:(_Bool)arg2 changeType:(id)arg3 changeOrigination:(long long)arg4 isQuiet:(_Bool)arg5;	// IMP=0x00100000000c699a
- (void)resetTextAndSelectionCaches;	// IMP=0x00100000000c694c
- (void)_handleTextReplacementOccurredNotification:(id)arg1;	// IMP=0x00100000000c6755
- (void)_handleValueChangedNotification:(id)arg1 associatedElement:(id)arg2;	// IMP=0x00100000000c6164
- (void)_handleNonEditableValueChange:(id)arg1;	// IMP=0x00100000000c6092
- (_Bool)_ignoreTextEditingNotificationsForPickerElementUsage;	// IMP=0x00100000000c5ee3
- (long long)typingFeedbackForKeyboardType;	// IMP=0x00100000000c5d9e
- (void)_cancelPreviousElementSearch;	// IMP=0x00100000000c5d81
- (void)_updateCurrentElementForTextInputSelectionChangeIfNeeded;	// IMP=0x00100000000c587a
- (struct _NSRange)_elementSelectionRange;	// IMP=0x00100000000c5866
- (void)_elementSelectionRangeDidChange:(struct _NSRange)arg1 reason:(long long)arg2;	// IMP=0x00100000000c5830
- (void)_handleSelectionChangedNotification:(id)arg1;	// IMP=0x00100000000c3785
- (_Bool)_isKeyboardLineMovement;	// IMP=0x00100000000c3431
- (void)_handleWebSelectionChangedNotification:(id)arg1;	// IMP=0x00100000000c2e8f
- (_Bool)_hasCurrentApplicationMatchingBlock:(CDUnknownBlockType)arg1;	// IMP=0x00100000000c2e5c
- (id)_currentApplicationMatchingBlock:(CDUnknownBlockType)arg1;	// IMP=0x00100000000c2e46
- (_Bool)_hasApplicationMatchingBlock:(CDUnknownBlockType)arg1 inApplications:(id)arg2;	// IMP=0x00100000000c2e13
- (id)_applicationMatchingBlock:(CDUnknownBlockType)arg1 inApplications:(id)arg2;	// IMP=0x00100000000c2cae
- (void)_outputWebLineWithMarkerRange:(id)arg1 withElement:(id)arg2;	// IMP=0x00100000000c2a2c
- (_Bool)_shouldSwitchToFirstResponder:(id)arg1;	// IMP=0x00100000000c28dc
- (void)_handleFirstResponderChangedNotification:(id)arg1;	// IMP=0x00100000000c21df
- (void)_handleNativeFocusItemChangedNotification:(id)arg1;	// IMP=0x00100000000c1fdf
- (id)_firstResponderFromCurrentApplications;	// IMP=0x00100000000c1e98
- (void)_handleMoveToElementNotification:(id)arg1;	// IMP=0x00100000000c17b6
- (void)_moveToElement:(id)arg1 shouldPlaySound:(_Bool)arg2 echoSameTouchContainer:(_Bool)arg3 shouldScroll:(_Bool)arg4 moveToElementNotification:(_Bool)arg5 shouldPlayTrackingSound:(_Bool)arg6;	// IMP=0x00100000000c1386
- (void)_moveToElement:(id)arg1 shouldPlaySound:(_Bool)arg2 echoSameTouchContainer:(_Bool)arg3 moveToElementNotification:(_Bool)arg4;	// IMP=0x00100000000c1363
- (void)_moveToElement:(id)arg1;	// IMP=0x00100000000c133a
- (void)moveToElement:(id)arg1;	// IMP=0x00100000000c1308
- (_Bool)_finishHandlingMoveToElementNotification:(id)arg1 shouldSyncNativeFocusElement:(id)arg2 shouldEchoSameTouchContainer:(id)arg3 shouldScrollToElement:(id)arg4 shouldPlayTrackingSound:(id)arg5 shouldRefocusIfSameElement:(id)arg6;	// IMP=0x00100000000c0e8d
- (id)_verifiedElementWithElement:(id)arg1 atPoint:(struct CGPoint)arg2;	// IMP=0x00100000000c0d9c
- (id)_verifiedElementWithElement:(id)arg1;	// IMP=0x00100000000c0866
- (_Bool)_shouldNotSpeakForIncomingCall;	// IMP=0x00100000000c067f
- (_Bool)_shouldAnnounceCustomRotorHintForElement:(id)arg1;	// IMP=0x00100000000c01d1
- (void)elementFetchFoundDirectTouchElements:(id)arg1;	// IMP=0x00100000000c0192
- (void)_elementFetchFoundDirectTouchElements:(id)arg1;	// IMP=0x00100000000c00d4
- (void)updateCurrentElementFrame;	// IMP=0x00100000000c0067
- (void)_updateCursorFrameForLineFrameMovement:(id)arg1;	// IMP=0x00100000000bff03
- (void)_updateCursorFrameForElementIfNeeded:(id)arg1;	// IMP=0x00100000000bfe8d
- (void)_updateCurrentElementFrame;	// IMP=0x00100000000bfe16
- (void)_updateFirstResponder;	// IMP=0x00100000000bfc8b
- (struct __AXUIElement *)_firstResponderAXUIElementRefFromCurrentApplications;	// IMP=0x00100000000bf9d5
- (void)setFirstResponder:(id)arg1;	// IMP=0x00100000000bf890
- (void)setCurrentElement:(id)arg1 shouldSetBrailleElement:(_Bool)arg2;	// IMP=0x00100000000bf77d
- (void)setCurrentElement:(id)arg1;	// IMP=0x00100000000bf766
- (void)_updateFirstResponderTypingBuffer;	// IMP=0x00100000000bf67b
- (void)_handleLayoutChange:(_Bool)arg1;	// IMP=0x00100000000bd2f4
- (void)_handleLayoutChangeFromTimer;	// IMP=0x00100000000bd2db
- (void)_handleElementChangedNotification:(id)arg1;	// IMP=0x00100000000bcff4
- (void)_handleSystemLockedOutputBehavior:(id)arg1 shouldSendRequest:(_Bool *)arg2 startElement:(id *)arg3;	// IMP=0x00100000000bcb15
- (id)_firstElementWithCurrentElement:(id)arg1 focusedApplications:(id)arg2;	// IMP=0x00100000000bc882
- (id)_getAutoSpeakWatchFaceElements:(id)arg1;	// IMP=0x00100000000bc7cd
- (void)_updateApplicationAndSpeak:(id)arg1;	// IMP=0x00100000000b8cf7
- (_Bool)_isWebAppStillOpen;	// IMP=0x00100000000b8c32
- (void)_testingSetApplications:(id)arg1;	// IMP=0x00100000000b8c21
- (_Bool)_addApplicationLabelsAndSummariesToRequest:(id)arg1 applicationNames:(id *)arg2 summaryElements:(id *)arg3;	// IMP=0x00100000000b846f
- (id)_stringForApplicationWithName:(id)arg1 inApplications:(id)arg2 withRole:(long long)arg3;	// IMP=0x00100000000b829d
- (id)_retrieveCachedFocusedElementForElementCommunity:(id)arg1;	// IMP=0x00100000000b800b
- (void)_cacheFocusedElement:(id)arg1 forElementCommunity:(id)arg2;	// IMP=0x00100000000b7f4e
- (id)_elementCommunityForElement:(id)arg1;	// IMP=0x00100000000b7e91
- (id)_firstElementForFocusFromElementCommunities:(id)arg1 currentElement:(id)arg2;	// IMP=0x00100000000b7b67
- (id)_firstResponderForApplications:(id)arg1;	// IMP=0x00100000000b7a0e
- (void)updateApplicationAndSpeak:(id)arg1;	// IMP=0x00100000000b799a
- (void)voiceOverDidRegisterWithSystem;	// IMP=0x00100000000b7954
- (void)_handleUpdateAppFromTimer;	// IMP=0x00100000000b789f
- (_Bool)_reDispatchUpdateAppFromTimerIfBundlesAreNotReady;	// IMP=0x00100000000b7620
- (id)_cachedLaunchIcon:(id)arg1;	// IMP=0x00100000000b738e
- (void)outputRequestFinished:(id)arg1;	// IMP=0x00100000000b734f
- (void)_outputRequestFinished:(id)arg1;	// IMP=0x00100000000b6b6b
- (double)_alternativeKeyActivateTime;	// IMP=0x00100000000b6af9
- (id)_updateTouchContainerForElement:(id)arg1 playSound:(_Bool)arg2;	// IMP=0x00100000000b6934
- (void)_echoDifferentElement:(id)arg1 forEvent:(id)arg2;	// IMP=0x00100000000b6919
- (void)_echoDifferentElement:(id)arg1 forEvent:(id)arg2 onlyOutputTouchContainerAndSounds:(_Bool)arg3 shouldPlayGuideWireSound:(_Bool)arg4 isProtectedApp:(_Bool)arg5;	// IMP=0x00100000000b68ef
- (void)_echoDifferentElement:(id)arg1 forEvent:(id)arg2 onlyOutputTouchContainerAndSounds:(_Bool)arg3 canSetAsCurrentElement:(_Bool)arg4 shouldPlayGuideWireSound:(_Bool)arg5 isProtectedApp:(_Bool)arg6 includeHint:(_Bool)arg7 boundaryHit:(_Bool)arg8;	// IMP=0x00100000000b542c
- (id)_getSpeakableContainerForContainer:(id)arg1;	// IMP=0x00100000000b52e9
- (void)_echoDifferentElement:(id)arg1 forEvent:(id)arg2 onlyOutputTouchContainerAndSounds:(_Bool)arg3 shouldPlayGuideWireSound:(_Bool)arg4;	// IMP=0x00100000000b52c7
- (_Bool)_addElementCommunityNameIfNeededToRequest:(id)arg1 oldElementCommunity:(id)arg2 newElementCommunity:(id)arg3;	// IMP=0x00100000000b5000
- (id)_echoDifferentTouchContainer:(id)arg1 forEvent:(id)arg2;	// IMP=0x00100000000b4dcd
- (void)_drawTouchContainerFrame;	// IMP=0x00100000000b4db4
- (void)_echoNoElementForEvent:(id)arg1;	// IMP=0x00100000000b4c65
- (void)_echoSameElement:(id)arg1 forEvent:(id)arg2;	// IMP=0x00100000000b4bf2
- (void)_handleMapSameElement:(id)arg1 forEvent:(id)arg2;	// IMP=0x00100000000b4487
- (void)_addFormattedStringToRequest:(id)arg1 formattedString:(id)arg2 withElement:(id)arg3;	// IMP=0x00100000000b42d1
- (void)_switchToOtherRoad;	// IMP=0x00100000000b4139
- (void)_processPassthroughAllowedWithEvent:(id)arg1 initialTouch:(_Bool)arg2;	// IMP=0x00100000000b3ea1
- (void)_finishPassthroughMode;	// IMP=0x00100000000b3e18
- (void)_echoStatusBarStatus:(id)arg1;	// IMP=0x00100000000b3d15
- (_Bool)_echoLineInElement:(id)arg1 forEvent:(id)arg2 forDifferentElement:(_Bool)arg3;	// IMP=0x00100000000b30e8
- (void)_setLastSeenLineAndColumn:(id)arg1;	// IMP=0x00100000000b30be
- (void)_outputDataDetectorIfPresent:(struct CGRect)arg1 element:(id)arg2 includeLinks:(_Bool)arg3;	// IMP=0x00100000000b302e
- (id)_checkDataDetectorIfPresent:(struct CGRect)arg1 element:(id)arg2 includeLinks:(_Bool)arg3;	// IMP=0x00100000000b2d73
- (_Bool)_shouldDismissKeyboardForMovingTooFarAlongYAxisWithEvent:(id)arg1;	// IMP=0x00100000000b2ca1
- (void)_handleTapAndHoldEventMonitor:(id)arg1;	// IMP=0x00100000000b2873
- (void)_reachabilityHandleTrackingStopped;	// IMP=0x00100000000b284b
- (void)handleReachabilityToggled;	// IMP=0x00100000000b27f5
- (void)_reachabilityWaitForTrackingTimeout;	// IMP=0x00100000000b27af
- (void)_continuousPathIdleTimer:(id)arg1;	// IMP=0x00100000000b2514
- (void)_handleKeyboardContinuousPathDidBegin:(id)arg1;	// IMP=0x00100000000b242e
- (void)_handleTracking:(id)arg1;	// IMP=0x00100000000b1691
- (id)_handleProtectedAppLogicForEvent:(id)arg1 element:(id)arg2 point:(struct CGPoint)arg3;	// IMP=0x00100000000b11dd
- (id)_currentMedusaApplications;	// IMP=0x00100000000b10d5
- (id)_copySideAppDividerElementIfApplicableForPoint:(struct CGPoint)arg1;	// IMP=0x00100000000b1059
- (id)_sideAppDividerElement;	// IMP=0x00100000000b0fa4
- (MISSING_TYPE *)_isPoint:withinRangeForDividerElement: /* Error: Ran out of types for this method. */;	// IMP=0x00100000000b0dbf
- (void)setDirectInteractionElement:(id)arg1;	// IMP=0x00100000000b0d80
- (void)_setDirectInteractionElement:(id)arg1;	// IMP=0x00100000000b0bfc
- (_Bool)_continueTrackingKeyboardKey:(id)arg1;	// IMP=0x00100000000b0ab0
- (_Bool)_continueTrackingRoadElementWithPoint:(struct CGPoint)arg1;	// IMP=0x00100000000b0a4e
- (void)_handleToggleSideApp:(id)arg1;	// IMP=0x00100000000b09cf
- (void)_handleToggleSideAppIfAvailableInGestures:(id)arg1;	// IMP=0x00100000000b0852
- (void)_handleNextKeyboardLanguage:(id)arg1;	// IMP=0x00100000000b0836
- (void)_handleOpenVoiceOverOptions:(id)arg1;	// IMP=0x00100000000b07b5
- (void)_handleSwitchToRightElementCommunity:(id)arg1;	// IMP=0x00100000000b071a
- (void)_handleSwitchToLeftElementCommunity:(id)arg1;	// IMP=0x00100000000b067f
- (void)_handleTopEdgePanLong:(id)arg1;	// IMP=0x00100000000b05a2
- (void)_handleTopEdgePanShort:(id)arg1;	// IMP=0x00100000000b0486
- (void)_handleBottomEdgePanExtraLong:(id)arg1;	// IMP=0x00100000000b038b
- (void)_handleBottomEdgePanLong:(id)arg1;	// IMP=0x00100000000b02b3
- (void)_handleBottomEdgePanShort:(id)arg1;	// IMP=0x00100000000b0228
- (void)_handleBottomEdgePanDown:(id)arg1;	// IMP=0x00100000000b019e
- (void)_handleEdgeSwipeBottom:(id)arg1;	// IMP=0x00100000000b0155
- (void)_handleEdgeSwipeTop:(id)arg1;	// IMP=0x00100000000b010c
- (void)_handleEdgeSwipeLeft:(id)arg1;	// IMP=0x00100000000b0106
- (void)_handleEdgeSwipeRight:(id)arg1;	// IMP=0x00100000000b0100
- (void)_handleSwitchToNextElementCommunity:(id)arg1;	// IMP=0x00100000000b00e9
- (void)_handleSwitchToPreviousElementCommunity:(id)arg1;	// IMP=0x00100000000b00cf
- (void)_handleSwitchToElementCommunityPrevious:(_Bool)arg1 event:(id)arg2;	// IMP=0x00100000000aff3b
- (id)_getNextFocusedElementInElementCommunityPrevious:(_Bool)arg1 shouldUseCache:(_Bool)arg2 shouldWrapAround:(_Bool)arg3;	// IMP=0x00100000000afc27
- (id)_allElementCommunitiesWithFocusedApplications:(id)arg1;	// IMP=0x00100000000afaaa
- (id)_dockElementForDisplay;	// IMP=0x00100000000af9c0
- (id)_additionalElementCommunities;	// IMP=0x00100000000af795
- (id)_elementToFocusWhenSwitchingToElementCommunity:(id)arg1;	// IMP=0x00100000000af64d
- (void)_endNativeSliding:(_Bool)arg1;	// IMP=0x00100000000af5a5
- (void)_addDescription:(id)arg1 toRequest:(id)arg2 withOptions:(unsigned long long)arg3 lastSeenContextDescriptors:(id)arg4;	// IMP=0x00100000000af242
- (void)_addDescription:(id)arg1 toRequest:(id)arg2 withOptions:(unsigned long long)arg3;	// IMP=0x00100000000af1b3
- (void)updateTitleElementLabels:(id)arg1;	// IMP=0x00100000000aece2
- (_Bool)shouldElement:(id)arg1 beCombined:(id)arg2 combineLinks:(_Bool)arg3;	// IMP=0x00100000000aeb45
- (_Bool)elementEligibleToFindTitleElement:(id)arg1;	// IMP=0x00100000000aeaa2
- (void)regionDescriptionForElement:(id)arg1 withCompletion:(CDUnknownBlockType)arg2;	// IMP=0x00100000000ae9fe
- (void)_handleOutputElementSummary:(id)arg1;	// IMP=0x00100000000adf0a
- (void)handleLaunchVoiceOverImageExplorer;	// IMP=0x00100000000ada00
- (_Bool)isValidElementForImageExploration;	// IMP=0x00100000000ad870
- (id)_imageExplorerCachedResults;	// IMP=0x00100000000ad7c2
- (void)_handleOutputComputerVisionAnalysisSummary:(id)arg1 explicitUserRequest:(_Bool)arg2;	// IMP=0x00100000000ad588
- (void)_handleOutputComputerVisionAnalysisSummary:(id)arg1;	// IMP=0x00100000000ad571
- (void)_visionEngine:(id)arg1 updatedResult:(id)arg2 forElement:(id)arg3 event:(id)arg4 visionOptions:(id)arg5;	// IMP=0x00100000000ad232
- (void)visionEngine:(id)arg1 updatedResult:(id)arg2 forElement:(id)arg3 event:(long long)arg4 visionOptions:(id)arg5;	// IMP=0x00100000000ad132
- (void)_handleOutputFocusedElementSummary:(id)arg1;	// IMP=0x00100000000acff7
- (void)_handleSelectedTextOutput:(id)arg1;	// IMP=0x00100000000ace72
- (void)_handleScrollToPoint:(id)arg1;	// IMP=0x00100000000acd91
- (void)_handleScrollDownPage:(id)arg1;	// IMP=0x00100000000acd00
- (void)_handleScrollByPage:(id)arg1;	// IMP=0x00100000000ac6ed
- (void)_handleScrollToBottom:(id)arg1;	// IMP=0x00100000000ac655
- (void)_handleScrollToTop:(id)arg1;	// IMP=0x00100000000ac5bd
- (id)_nearestElementWithMatch:(CDUnknownBlockType)arg1 startElement:(id)arg2;	// IMP=0x00100000000ac4cc
- (id)_nearestElementWithMatch:(CDUnknownBlockType)arg1 startElement:(id)arg2 forward:(_Bool)arg3 itemCheckCount:(long long)arg4;	// IMP=0x00100000000ac31a
- (id)_nearestElementWithMatch:(CDUnknownBlockType)arg1 startElement:(id)arg2 forward:(_Bool)arg3;	// IMP=0x00100000000ac302
- (id)_nearestScrollableElement:(id)arg1;	// IMP=0x00100000000ac2c4
- (id)_nearestWebElement:(id)arg1;	// IMP=0x00100000000ac286
- (void)_handleAppSwitch:(id)arg1;	// IMP=0x00100000000ac1f8
- (void)_handleSpeechRotorValueChange:(id)arg1;	// IMP=0x00100000000ac0c3
- (void)_handleSpeechRotorChange:(id)arg1;	// IMP=0x00100000000abf74
- (void)_handleUsePitchChange:(_Bool)arg1;	// IMP=0x00100000000abe8a
- (void)_handleAudioDuckingChange:(_Bool)arg1;	// IMP=0x00100000000abd25
- (void)_handleAudioDestination:(_Bool)arg1;	// IMP=0x00100000000abc25
- (void)_handleActivityRotorChange:(_Bool)arg1;	// IMP=0x00100000000ab837
- (void)_handleSpeechPhoneticsChange:(_Bool)arg1;	// IMP=0x00100000000ab6ef
- (id)_speechPhoneticsString;	// IMP=0x00100000000ab694
- (void)_handleTypingEchoChange:(_Bool)arg1;	// IMP=0x00100000000ab558
- (id)_typingEchoString;	// IMP=0x00100000000ab49d
- (void)_handleSpeechPunctuationChange:(_Bool)arg1;	// IMP=0x00100000000ab020
- (void)_handleSoundRotorChange:(_Bool)arg1;	// IMP=0x00100000000aaf17
- (void)_handleSpeechRateChange:(_Bool)arg1;	// IMP=0x00100000000aad63
- (void)_handleEscape:(id)arg1;	// IMP=0x00100000000aa559
- (void)_handleStartHelpMode:(id)arg1;	// IMP=0x00100000000aa3c6
- (_Bool)isOnElementManagerThread;	// IMP=0x00100000000aa3ad
- (id)currentApplications;	// IMP=0x00100000000aa322
- (id)currentElement;	// IMP=0x00100000000aa2e4
- (id)_valueForKeyPathOnElementManagerThread:(id)arg1;	// IMP=0x00100000000aa204
- (void)__retrieveValueForKeyPath:(id)arg1 intoPointedToLocation:(id)arg2 semaphore:(id)arg3;	// IMP=0x00100000000aa16c
- (struct CGRect)currentLineFrame;	// IMP=0x00100000000aa14e
- (id)_lastApplication;	// IMP=0x00100000000aa140
- (id)_currentElement;	// IMP=0x00100000000aa132
- (struct _NSRange)_highlightedCharacterRange;	// IMP=0x00100000000aa11e
- (_Bool)customRotorActionsEqual:(id)arg1 otherActions:(id)arg2 ignoreDragItems:(_Bool)arg3;	// IMP=0x00100000000aa10b
- (void)processExternalElementUpdate;	// IMP=0x00100000000aa0dc
- (void)_processExternalElementUpdate;	// IMP=0x00100000000aa010
- (void)processExternalScrollToVisible:(struct CGPoint)arg1;	// IMP=0x00100000000a9f91
- (void)_processExternalScrollToVisible:(id)arg1;	// IMP=0x00100000000a9d8b
- (_Bool)mlElement:(id)arg1 sharesLabel:(id)arg2;	// IMP=0x00100000000a9bcd
- (void)_updateSwipeFrames;	// IMP=0x00100000000a9859
- (void)_updateAnyThreadElementAccess;	// IMP=0x00100000000a9827
- (_Bool)_setCurrentElement:(id)arg1 isProtectedApp:(_Bool)arg2 shouldResetTextSelection:(_Bool)arg3 shouldResetCharacterRange:(_Bool)arg4 ignoreIsAccessibilityElementCheck:(_Bool)arg5 shouldSetBrailleElement:(_Bool)arg6;	// IMP=0x00100000000a8113
- (_Bool)_setCurrentElement:(id)arg1 isProtectedApp:(_Bool)arg2 shouldResetTextSelection:(_Bool)arg3 shouldResetCharacterRange:(_Bool)arg4 ignoreIsAccessibilityElementCheck:(_Bool)arg5;	// IMP=0x00100000000a80f5
- (_Bool)_setCurrentElement:(id)arg1 isProtectedApp:(_Bool)arg2;	// IMP=0x00100000000a80c7
- (_Bool)_setCurrentElement:(id)arg1 shouldSetBrailleElement:(id)arg2;	// IMP=0x00100000000a804c
- (_Bool)_setCurrentElement:(id)arg1;	// IMP=0x00100000000a8038
- (_Bool)_isElementValidForFirstResponder:(id)arg1;	// IMP=0x00100000000a7f9a
- (_Bool)_updateWithMostRecentElementCommunity:(id)arg1;	// IMP=0x00100000000a7ef8
- (void)_updateMostRecentElementCommunity;	// IMP=0x00100000000a7ea8
- (_Bool)_languageRotorItemsContainLanguage:(id)arg1;	// IMP=0x00100000000a7c58
- (void)_updateExternalAccessory:(id)arg1;	// IMP=0x00100000000a7c52
- (void)_resetQuickNavState;	// IMP=0x00100000000a7b23
- (void)_activateAlternativeKeyboardKey:(id)arg1;	// IMP=0x00100000000a7997
- (void)_dismissAlternativeKeyboardKeys;	// IMP=0x00100000000a785a
- (void)_handleElementMoveToStatusBar:(id)arg1;	// IMP=0x00100000000a732e
- (void)_handleContainerMovement:(id)arg1 direction:(long long)arg2;	// IMP=0x00100000000a6ecf
- (void)_handleGuideElementMovement:(id)arg1 direction:(long long)arg2;	// IMP=0x00100000000a6c17
- (void)_handleContainerMovement:(id)arg1;	// IMP=0x00100000000a6b7e
- (void)_handleIntraContainerMovement:(id)arg1;	// IMP=0x00100000000a6a3f
- (void)_handleImageDescriptionsToggle:(long long)arg1;	// IMP=0x00100000000a676a
- (void)_handleNavigationStyleMovement:(id)arg1 direction:(long long)arg2;	// IMP=0x00100000000a6645
- (CDStruct_a70f6672)_appInfoForCurrentElement;	// IMP=0x00100000000a650e
- (void)_handleMLElementModeWithDirection:(long long)arg1 verboseOutput:(_Bool)arg2;	// IMP=0x00100000000a60d8
- (void)_handleAutomaticAppAccessibilityToggle:(id)arg1;	// IMP=0x00100000000a60bc
- (void)_handleToggleLiveRegions:(long long)arg1;	// IMP=0x00100000000a5d46
- (void)_handleToggleLiveRegionCommand:(id)arg1;	// IMP=0x00100000000a5d2f
- (void)_handleAudiographAction:(long long)arg1 event:(id)arg2;	// IMP=0x00100000000a5bd9
- (id)availableAudiographActionsForElement:(id)arg1;	// IMP=0x00100000000a59d2
- (void)_handleCustomRotorAction:(id)arg1 direction:(long long)arg2;	// IMP=0x00100000000a5676
- (id)_customActionDefaultActionString;	// IMP=0x00100000000a554a
- (void)_handleCustomRotorContent:(id)arg1 direction:(long long)arg2;	// IMP=0x00100000000a5215
- (id)_currentCustomActionCategory;	// IMP=0x00100000000a518a
- (id)_currentCustomActions;	// IMP=0x00100000000a5068
- (id)_currentCachedCustomActionCategories;	// IMP=0x00100000000a4fdd
- (id)_customActionsAddingDragCancelActionIfNecessaryForActions:(id)arg1;	// IMP=0x00100000000a4f23
- (void)_handleValidatedCustomActionMovementThroughActions:(id)arg1 forEvent:(id)arg2 inDirection:(long long)arg3;	// IMP=0x00100000000a4c91
- (void)_moveFocusToUpdatedRange:(struct _NSRange)arg1 element:(id)arg2 searchType:(long long)arg3;	// IMP=0x00100000000a481f
- (void)_handlePublicCustomRotorMovement:(id)arg1 direction:(long long)arg2;	// IMP=0x00100000000a3d5c
- (_Bool)_customRotorTypeRequiresFirstElementProcessing:(id)arg1;	// IMP=0x00100000000a3d40
- (id)webCustomRotorDictionary:(id)arg1 direction:(long long)arg2 forElement:(id)arg3;	// IMP=0x00100000000a3ac2
- (void)_handleVerticalMovement:(id)arg1 direction:(long long)arg2;	// IMP=0x00100000000a3541
- (void)_handleShowEditingHUD:(id)arg1;	// IMP=0x00100000000a3475
- (void)_handleRealtimeElementMovement:(id)arg1;	// IMP=0x00100000000a3196
- (void)_handleElementMovement:(id)arg1;	// IMP=0x00100000000a2507
- (void)_handleMoveToElementBelow:(id)arg1;	// IMP=0x00100000000a24f0
- (void)_handleMoveToElementAbove:(id)arg1;	// IMP=0x00100000000a24d9
- (_Bool)_moveElementToFlowTo:(id)arg1;	// IMP=0x00100000000a225a
- (void)_setNearestElementMovingForward:(_Bool)arg1;	// IMP=0x00100000000a215e
- (id)_sonarElementInForwardDirection:(_Bool)arg1 limit:(long long)arg2;	// IMP=0x00100000000a213c
- (id)_sonarElementFromPoint:(struct CGPoint)arg1 inForwardDirection:(_Bool)arg2 limit:(long long)arg3;	// IMP=0x00100000000a1a84
- (_Bool)_prepareElementOutputHeaders:(id)arg1 currentElement:(id)arg2 request:(id)arg3;	// IMP=0x00100000000a1627
- (_Bool)speakTableHeadersForElement:(id)arg1;	// IMP=0x00100000000a1563
- (_Bool)speakTableRowAndColumnForElement:(id)arg1;	// IMP=0x00100000000a149f
- (_Bool)determineFullImageDescriptionsEnabled:(id)arg1;	// IMP=0x00100000000a1342
- (_Bool)determineSceneDetectionsEnabled:(id)arg1;	// IMP=0x00100000000a11e5
- (long long)modifierKeyChoiceForElement:(id)arg1;	// IMP=0x00100000000a1121
- (id)determineActivityForElement:(id)arg1;	// IMP=0x00100000000a0d4e
- (void)_outputSelectionDifference:(struct _NSRange)arg1 oldRange:(struct _NSRange)arg2 string:(id)arg3 language:(id)arg4;	// IMP=0x00100000000a030b
- (void)_outputSelectionDifference:(struct _NSRange)arg1 oldRange:(struct _NSRange)arg2 string:(id)arg3;	// IMP=0x00100000000a02ef
- (void)_handlePerformTextOperation:(id)arg1;	// IMP=0x001000000009ffe1
- (void)_handleNextTextOperationInDirection:(long long)arg1 withEvent:(id)arg2;	// IMP=0x001000000009f890
- (id)_currentResponder;	// IMP=0x001000000009f7d8
- (id)getCurrentElement;	// IMP=0x001000000009f7c6
- (void)refreshBraille;	// IMP=0x001000000009f771
- (void)_handleScreenUnlock;	// IMP=0x001000000009f754
- (void)_sendSystemNotificationForFlashlight;	// IMP=0x001000000009f3b3
- (void)_handleFlashlightNotification;	// IMP=0x001000000009f1a2
- (void)_updateFlashlightEnabledStatus;	// IMP=0x001000000009ef83
- (void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void *)arg4;	// IMP=0x001000000009ea3b
- (_Bool)_flashlightNotificationsEnabled;	// IMP=0x001000000009ea07
- (void)_handleScreenLock:(id)arg1;	// IMP=0x001000000009e5e1
- (void)_handlePressActionResultAtTime:(id)arg1;	// IMP=0x001000000009e36f
- (void)_simulatedPressOutputTimer:(id)arg1;	// IMP=0x001000000009de67
- (id)_currentElementAtCenterPointOfElement:(id)arg1;	// IMP=0x001000000009dd8a
- (void)_handleContextMenuStatusNotification:(id)arg1;	// IMP=0x001000000009dc87
- (void)_handleAudiographPlaybackStateNotification:(id)arg1;	// IMP=0x001000000009dc1b
- (void)_handleAudiographSelectedSeriesChangedNotification:(id)arg1;	// IMP=0x001000000009db4b
- (void)_handlePauseSpeechAndHapticsNotification:(id)arg1;	// IMP=0x001000000009d996
- (void)_handleDuckingDisabling:(id)arg1;	// IMP=0x001000000009d7f4
- (_Bool)_handleSimulatedLongPress:(id)arg1;	// IMP=0x001000000009d6b5
- (void)_reallySimulateLongPressForElement:(id)arg1;	// IMP=0x001000000009d3e4
- (void)_postBrailleHomeButtonPress;	// IMP=0x001000000009d3c8
- (void)_handlePerformHomeButtonPress:(id)arg1;	// IMP=0x001000000009d3ac
- (void)_handleToggleTypeToSiri:(id)arg1;	// IMP=0x000000000009d2b1
- (void)_handleStartSiri:(id)arg1;	// IMP=0x001000000009d26d
- (void)_handleToggleCaptionPanel:(id)arg1;	// IMP=0x001000000009d15e
- (void)_handleToggleSoundCurtain:(id)arg1;	// IMP=0x001000000009d04f
- (void)_handleToggleScreenCurtain:(id)arg1;	// IMP=0x001000000009d012
- (void)_handleToggleRotationCapability:(id)arg1;	// IMP=0x001000000009ce70
- (void)_handleToggleMute:(id)arg1;	// IMP=0x001000000009ce33
- (void)_simulatedForceTouchLift;	// IMP=0x001000000009cc47
- (_Bool)_canActivateTapticTime;	// IMP=0x001000000009cb17
- (void)_handleStingKeycordPress:(id)arg1;	// IMP=0x001000000009cb11
- (void)_handleStingPress:(id)arg1;	// IMP=0x001000000009cb0b
- (void)_handleActivateHomeButton:(id)arg1;	// IMP=0x001000000009cac7
- (void)_handleWatchWakeTripleTap:(id)arg1;	// IMP=0x001000000009c946
- (void)_handleWatchWakeDoubleTap:(id)arg1;	// IMP=0x001000000009c73a
- (void)_handleToggleSettingsHUD:(id)arg1;	// IMP=0x001000000009c4d3
- (void)_handleWatchWakeTap:(id)arg1;	// IMP=0x001000000009c3bf
- (void)_handleSimulatedForceTouchEvent:(id)arg1;	// IMP=0x001000000009c1d0
- (void)_sendAutomationTouchCommand:(unsigned int)arg1 location:(struct CGPoint)arg2;	// IMP=0x001000000009c11a
- (void)_handleAutomationGeneratedChordChangeEvent:(id)arg1;	// IMP=0x001000000009bde7
- (void)_handleAutomationGeneratedTouchCancelEvent:(id)arg1;	// IMP=0x001000000009bd42
- (void)_handleAutomationGeneratedTouchMoveEvent:(id)arg1;	// IMP=0x001000000009bc3f
- (void)_handleAutomationGeneratedTouchDownEvent:(id)arg1;	// IMP=0x001000000009baa7
- (void)_handleAutomationGeneratedTouchUpEvent:(id)arg1;	// IMP=0x001000000009b95b
- (void)_handleSimpleTap:(id)arg1;	// IMP=0x001000000009b3c5
- (_Bool)_shouldSendTapStraightToSystem;	// IMP=0x001000000009b3b5
- (void)_handlePerformAudiographAction:(id)arg1;	// IMP=0x001000000009aff0
- (void)_handlePerformCustomAction:(id)arg1;	// IMP=0x001000000009ab75
- (id)actionElement;	// IMP=0x001000000009ab63
- (void)_disableQuickNavStateTemporarily;	// IMP=0x001000000009aa95
- (void)_handlePerformPressAction:(id)arg1;	// IMP=0x0010000000099a32
- (void)_performPressOnElement:(id)arg1 withEvent:(id)arg2 centerPoint:(struct CGPoint)arg3;	// IMP=0x00100000000998b6
- (_Bool)_updateCursorAfterPressForElement:(id)arg1 currentElementRange:(struct _NSRange)arg2 request:(id)arg3 didHaveCursor:(_Bool)arg4 doesHaveCursor:(_Bool)arg5;	// IMP=0x0010000000099471
- (void)_updateLastFirstResponderChangedTime;	// IMP=0x001000000009944d
- (void)_updateCurrentWordContextForBook:(id)arg1;	// IMP=0x001000000009933d
- (_Bool)_useLineFrameBoundsForTouch:(id)arg1;	// IMP=0x00100000000992a4
- (void)_handleTripleTap:(id)arg1;	// IMP=0x00100000000990f6
- (void)_handleDoubleTap:(id)arg1;	// IMP=0x0010000000098e42
- (double)_pressActionResultDelay;	// IMP=0x0010000000098e34
- (void)_handleStartStopToggle:(id)arg1;	// IMP=0x001000000009859d
- (void)_handleToggleCrownNavigation:(id)arg1;	// IMP=0x0010000000098491
@property(readonly, nonatomic) _Bool shouldSnarfCrown;
- (void)showElementLabelPanel:(_Bool)arg1 currentLabel:(id)arg2;	// IMP=0x00100000000983cd
- (void)_handleLabelElement:(id)arg1;	// IMP=0x00100000000982dd
- (void)_handleMonitorElement:(id)arg1;	// IMP=0x0010000000097d28
- (void)_resetElementLabel;	// IMP=0x0010000000097cd0
- (void)_handleLabelElementAcceptedNotification:(id)arg1;	// IMP=0x0010000000097b61
- (void)_handleChangeAudioDuckingMode:(id)arg1;	// IMP=0x0010000000097b5b
- (_Bool)_savedDescriptionToPhoto:(id)arg1 description:(id)arg2 element:(id)arg3;	// IMP=0x0010000000097a00
- (void)_handleWebTextAvailableNotification:(id)arg1;	// IMP=0x0010000000097971
- (void)_handleWebSearchResult:(long long)arg1 withEvent:(id)arg2;	// IMP=0x0010000000097916
- (void)_handleWebTextMatchSelectedNotification:(id)arg1;	// IMP=0x0010000000097729
- (_Bool)_shouldMoveToLastWebFormControl;	// IMP=0x00100000000975ea
- (void)_handleWebFormControlInteractionEndNotification:(id)arg1;	// IMP=0x001000000009759c
- (void)_handleWebFormControlInteractionStartNotification:(id)arg1;	// IMP=0x00100000000974ea
- (void)_handleScreenWillWakeNotification:(id)arg1;	// IMP=0x0010000000097468
- (void)_handleRealtimeElementUpdate:(id)arg1;	// IMP=0x001000000009733e
- (void)_handleScreenWillChangeNotification:(id)arg1;	// IMP=0x0010000000097190
- (void)_handleFocusedElementContentChangeNotification:(id)arg1;	// IMP=0x0010000000097118
- (void)_handleBarcodeVisibilityNotification:(id)arg1;	// IMP=0x0010000000097001
- (void)_handleCameraCenteredNotification:(id)arg1;	// IMP=0x0010000000096fb6
- (void)_handleKBPopupVariantsNotification:(id)arg1;	// IMP=0x0010000000096e9c
- (void)_handleAdjustValue:(id)arg1 reverse:(_Bool)arg2;	// IMP=0x0010000000096ba9
- (void)_valueWait:(id)arg1 oldValue:(id)arg2 waitTime:(double)arg3 borderHitIfNoChange:(_Bool)arg4;	// IMP=0x001000000009683c
- (void)_valueWait:(id)arg1 oldValue:(id)arg2 waitTime:(double)arg3;	// IMP=0x0010000000096824
- (_Bool)_handleNextAutofill:(id)arg1 reverse:(_Bool)arg2;	// IMP=0x0010000000096454
- (void)_finishHandlingNextAutofillWithElement:(id)arg1;	// IMP=0x001000000009639a
- (void)_handlePerformTapAutofill:(id)arg1;	// IMP=0x00100000000961db
- (void)_handleOutputTextStyle:(id)arg1;	// IMP=0x0010000000095fcb
- (void)_handleSearchRotorSetMathPosition:(id)arg1;	// IMP=0x0010000000095d9c
- (id)_currentRotorSelection;	// IMP=0x0010000000095c15
- (void)_handleMathGranularMovement:(long long)arg1 event:(id)arg2;	// IMP=0x0010000000095a7e
- (id)_treePositionForMathSegment:(id)arg1;	// IMP=0x0010000000095a1d
- (void)_handleUpdatedMathElementIndex;	// IMP=0x001000000009594e
- (void)_refreshMathSegmentsIfNeeded;	// IMP=0x0010000000095937
- (void)_refreshMathSegmentsIfNeededWithPreferredDirection:(long long)arg1;	// IMP=0x00100000000955bb
- (unsigned long long)_currentMathGranularityLevel;	// IMP=0x001000000009558c
- (void)_resetMathGranularMovementState;	// IMP=0x0010000000095554
- (void)_outputNavigationDirectionMode:(long long)arg1;	// IMP=0x0010000000095504
- (id)_navigationDirectionModeString:(long long)arg1;	// IMP=0x0010000000095483
- (long long)_newNavigationDirectionModeForRotorDirection:(long long)arg1;	// IMP=0x0010000000095423
- (void)_handleNavigationDirectionChangeWithDirection:(long long)arg1;	// IMP=0x0010000000095359
- (void)_handleTrackingDetailMovement:(_Bool)arg1 event:(id)arg2;	// IMP=0x0010000000095299
- (void)_handleZoomMovement:(long long)arg1 event:(id)arg2;	// IMP=0x00100000000950db
- (CDStruct_912cb5d2)_handleUserCharacterSelection:(CDStruct_912cb5d2)arg1 inString:(id)arg2 rightward:(_Bool)arg3;	// IMP=0x0010000000094e59
- (struct _NSRange)_characterRangeWithFaultTolerance:(long long)arg1 forward:(_Bool)arg2 element:(id)arg3;	// IMP=0x0010000000094dd1
- (CDStruct_912cb5d2)_handleUserAllSelection:(CDStruct_912cb5d2)arg1 inString:(id)arg2 rightward:(_Bool)arg3;	// IMP=0x0010000000094d5d
- (CDStruct_912cb5d2)_handleUserPageSelection:(CDStruct_912cb5d2)arg1 inString:(id)arg2 rightward:(_Bool)arg3;	// IMP=0x0010000000094cbd
- (CDStruct_912cb5d2)_handleUserLineSelectionInElement:(id)arg1 currentRange:(CDStruct_912cb5d2)arg2 rightward:(_Bool)arg3;	// IMP=0x0010000000094a66
- (struct _NSRange)_lineRangeWithFaultTolerance:(long long)arg1 forward:(_Bool)arg2 element:(id)arg3;	// IMP=0x0010000000094a00
- (CDStruct_912cb5d2)_handleUserWordSelectionInElement:(id)arg1 currentRange:(CDStruct_912cb5d2)arg2 rightward:(_Bool)arg3;	// IMP=0x001000000009481c
- (void)_handleUserSelection:(id)arg1;	// IMP=0x0010000000093fbf
- (void)updateCursorFrameAfterLift;	// IMP=0x0010000000093f90
- (void)_updateCursorFrameAfterLift;	// IMP=0x0010000000093ed6
- (void)_handleStartStopTextSelection:(id)arg1;	// IMP=0x0010000000093da5
- (void)_handleMisspelledWordRotorAction:(_Bool)arg1;	// IMP=0x00100000000939d5
- (void)_processMisspelledWordTextReplacement;	// IMP=0x0010000000093772
- (void)_handleTextRotorSelectionAction:(_Bool)arg1;	// IMP=0x0010000000093706
- (void)_handleWebSelection:(id)arg1;	// IMP=0x0010000000093351
- (void)_outputNextTextSegmentUnit:(long long)arg1 direction:(long long)arg2;	// IMP=0x0010000000092d31
- (void)_handleOutputCharacterPhonetically:(id)arg1;	// IMP=0x0010000000092bb5
- (void)_handleOutputRowHeader:(id)arg1;	// IMP=0x0010000000092b9e
- (void)_handleOutputColumnHeader:(id)arg1;	// IMP=0x0010000000092b8a
- (void)_handleOutputColumnOrRowHeader:(id)arg1 row:(_Bool)arg2;	// IMP=0x0010000000092935
- (void)_handleOutputColumnContents:(id)arg1;	// IMP=0x0010000000092921
- (void)_handleOutputRowContents:(id)arg1;	// IMP=0x001000000009290a
- (void)_handleOutputTableRowColumnInfo:(id)arg1;	// IMP=0x00100000000927e8
- (void)_handleOutputCellRowColumnInfo:(id)arg1;	// IMP=0x00100000000926c4
- (void)_handleOutputColumnOrRowContents:(id)arg1 row:(_Bool)arg2;	// IMP=0x0010000000092461
- (void)_handleOutputCharacter:(id)arg1;	// IMP=0x001000000009235b
- (id)_retrieveCurrentCharacterFromEditableElement;	// IMP=0x001000000009223d
- (void)_handleRowMovement:(id)arg1 direction:(long long)arg2;	// IMP=0x0010000000091fdc
- (void)_handleGenericTextSegmentMovement:(id)arg1 direction:(long long)arg2 granulary:(long long)arg3;	// IMP=0x0010000000091e1c
- (void)_handleTextWordMovement:(id)arg1;	// IMP=0x0010000000091ac8
- (void)_handleTextDocumentMovement:(id)arg1;	// IMP=0x0010000000091953
- (void)_handleRotorTextSelectionMovement:(id)arg1 direction:(long long)arg2;	// IMP=0x001000000009186a
- (void)_handleAdjustTextSelectionSegmentType:(id)arg1;	// IMP=0x00100000000917d1
- (void)_handleParagraphMovement:(id)arg1;	// IMP=0x0010000000091732
- (void)_handleSentenceMovement:(id)arg1;	// IMP=0x0010000000091693
- (void)_handleLineMovement:(id)arg1;	// IMP=0x00100000000915f4
- (void)_handleLineMovementInWeb:(id)arg1 direction:(long long)arg2 existingRequest:(id)arg3;	// IMP=0x0010000000090118
- (void)_finishHandlingLineMovementInWeb:(id)arg1 direction:(id)arg2 withCurrentElement:(id)arg3 markerArray:(id)arg4 textObjects:(id)arg5 existingRequest:(id)arg6;	// IMP=0x001000000008fe53
- (void)_handleWordMovement:(id)arg1 direction:(long long)arg2;	// IMP=0x001000000008fcff
- (void)_handleLetterMovement:(id)arg1 direction:(long long)arg2;	// IMP=0x001000000008fb93
- (void)_handleWordMovement:(id)arg1;	// IMP=0x001000000008faec
- (void)_handleCharacterMovement:(id)arg1;	// IMP=0x001000000008fa45
- (void)_moveCursorForElement:(id)arg1 direction:(long long)arg2 unit:(long long)arg3;	// IMP=0x001000000008f2c3
- (void)_handleCursorMovementByTextSegment:(id)arg1;	// IMP=0x001000000008f1c2
- (void)_handleReadWord:(id)arg1;	// IMP=0x001000000008ed0f
- (id)_phoneticStringForLetter:(id)arg1 language:(id)arg2;	// IMP=0x001000000008ec08
- (void)_handleReadLine:(id)arg1;	// IMP=0x001000000008ea01
- (void)_handleOutputLineCount:(id)arg1;	// IMP=0x001000000008e809
- (void)_handleReadItemHint:(id)arg1;	// IMP=0x001000000008e6d1
- (void)_handleReadURL:(id)arg1;	// IMP=0x001000000008e578
- (id)_computeChangedFontAttributes:(id)arg1 storedAttributes:(id)arg2 haveMisspellCheck:(_Bool)arg3;	// IMP=0x001000000008d136
- (id)_orderedMonitoredFontAttributes;	// IMP=0x001000000008cff6
- (id)_fontDisplayNameForFontName:(id)arg1;	// IMP=0x001000000008cf54
- (id)_localizedTypingModeStringForCurrentMode;	// IMP=0x001000000008cf02
- (void)_handleRotorTypingModeMovement:(long long)arg1 withEvent:(id)arg2;	// IMP=0x001000000008ce35
- (void)_handleRotorContinusPathChange:(long long)arg1 withEvent:(id)arg2;	// IMP=0x001000000008cd31
- (long long)_adjustedRotorIndex:(long long)arg1 inDirection:(long long)arg2 rotorItems:(id)arg3 validationBlock:(CDUnknownBlockType)arg4;	// IMP=0x001000000008cc33
- (void)_handleRotor2DBrailleDisplayMode:(long long)arg1 withEvent:(id)arg2;	// IMP=0x001000000008cad0
- (id)_localizedStringForCurrentBrailleTextMode;	// IMP=0x001000000008ca5b
- (void)_handleRotor2DBrailleInvert:(long long)arg1 withEvent:(id)arg2;	// IMP=0x001000000008c8dd
- (void)_handleBraille2DInvert:(id)arg1;	// IMP=0x001000000008c8c3
- (void)_handleRotor2DBraillePanVertical:(long long)arg1 withEvent:(id)arg2;	// IMP=0x001000000008c658
- (void)_handleRotor2DBraillePanHorizontal:(long long)arg1 withEvent:(id)arg2;	// IMP=0x001000000008c3f4
- (void)_handleRotor2DBrailleEdgeIntensity:(long long)arg1 withEvent:(id)arg2;	// IMP=0x001000000008bfc1
- (void)_handleRotor2DBrailleZoom:(long long)arg1 withEvent:(id)arg2;	// IMP=0x001000000008bb8e
- (void)_forceVisionRefresh;	// IMP=0x001000000008ba85
- (double)_brailleMaxOrigin;	// IMP=0x001000000008b9de
- (void)_handleRotorBrailleAutoAdvanceMovement:(long long)arg1 withEvent:(id)arg2;	// IMP=0x001000000008b9b7
- (void)_handleRotorBrailleInputLanguageMovement:(long long)arg1 withEvent:(id)arg2;	// IMP=0x001000000008b81b
- (void)_handleRotorBrailleLanguageMovement:(long long)arg1 withEvent:(id)arg2;	// IMP=0x001000000008b67f
- (void)_handleRotorVoiceMovement:(long long)arg1 withEvent:(id)arg2;	// IMP=0x001000000008af53
- (void)_resetRotorTextNavigation;	// IMP=0x001000000008af46
- (void)_resetOtherTapInputModes;	// IMP=0x001000000008aed1
- (void)_resetSearchType;	// IMP=0x001000000008aebb
- (void)_resetReadAllRequest;	// IMP=0x001000000008ae9b
- (void)handleSearchRotorDown:(id)arg1;	// IMP=0x001000000008ae84
- (void)handleSearchRotorUp:(id)arg1;	// IMP=0x001000000008ae6a
- (void)_handleSpeakScreen:(id)arg1;	// IMP=0x001000000008ab60
- (void)_handleSingleLetterSearch:(id)arg1;	// IMP=0x001000000008a8e0
- (void)_handleSearchRotorMovementWithoutRotorUpdateInDirectionUp:(_Bool)arg1 event:(id)arg2;	// IMP=0x001000000008a39a
- (void)_handleDirectElementSearch:(id)arg1;	// IMP=0x00100000000899e0
- (void)_handleColumnMovement:(id)arg1;	// IMP=0x0010000000089869
- (void)_handleSearchRotorMovement:(_Bool)arg1 event:(id)arg2;	// IMP=0x00100000000897f4
- (void)_handleElementSearch:(id)arg1 rotorType:(long long)arg2 direction:(long long)arg3;	// IMP=0x00100000000896bc
- (CDUnknownBlockType)_copyRangeMatchBlockForRotorType:(long long)arg1;	// IMP=0x0010000000089551
- (void)_customPublicRotorMatchForType:(id)arg1 range:(struct _NSRange *)arg2 element:(id *)arg3 direction:(long long)arg4 lastSearchUUID:(id *)arg5;	// IMP=0x00100000000892c8
- (CDUnknownBlockType)_copyMatchBlockForRotorType:(long long)arg1 searchType:(long long *)arg2;	// IMP=0x0010000000088e43
- (CDUnknownBlockType);	// IMP=0x0010000000088e00
- (CDUnknownBlockType)_copyMatchBlockCheckbox;	// IMP=0x0010000000088dbd
- (CDUnknownBlockType)_copyMatchBlockRadioButton;	// IMP=0x0010000000088d7a
- (CDUnknownBlockType)_copyMatchBlockTextField;	// IMP=0x0010000000088d37
- (CDUnknownBlockType)_copyMatchBlockDifferent;	// IMP=0x0010000000088c05
- (CDUnknownBlockType)_copyMatchBlockSimilar;	// IMP=0x0010000000088ad6
- (CDUnknownBlockType)_copyMatchBlockSameHeading;	// IMP=0x00100000000889a7
- (CDUnknownBlockType)_copyMatchBlockSameBlockquote;	// IMP=0x00100000000888bc
- (CDUnknownBlockType)_copyMatchBlockBlockquote;	// IMP=0x0010000000088891
- (unsigned long long)filterTraitsByPriority:(unsigned long long)arg1;	// IMP=0x00100000000887ed
- (CDUnknownBlockType)_copyMatchBlockButton;	// IMP=0x0010000000088727
- (CDUnknownBlockType)_copyMatchBlockInternalLink;	// IMP=0x0010000000088695
- (CDUnknownBlockType)_copyMatchBlockLandmarkStart;	// IMP=0x00100000000885e0
- (CDUnknownBlockType)_copyMatchBlockArticleStart;	// IMP=0x001000000008852b
- (CDUnknownBlockType)_copyMatchBlockTableStart;	// IMP=0x0010000000088476
- (CDUnknownBlockType)_copyMatchBlockFrameStart;	// IMP=0x00100000000883c1
- (CDUnknownBlockType)_copyMatchBlockListStart;	// IMP=0x0010000000088260
- (CDUnknownBlockType)_copyMatchBlockFormElement;	// IMP=0x00100000000881db
- (CDUnknownBlockType)_copyMatchBlockStaticText;	// IMP=0x001000000008800e
- (CDUnknownBlockType)_copyMatchBlockLink;	// IMP=0x0010000000087fcb
- (CDUnknownBlockType)_copyMatchBlockNonVisitedLink;	// IMP=0x0010000000087f45
- (CDUnknownBlockType)_copyMatchBlockForHeadingLevel:(long long)arg1 searchType:(long long *)arg2;	// IMP=0x0010000000087dc1
- (CDUnknownBlockType)_copyMatchBlockHeader;	// IMP=0x0010000000087d46
- (CDUnknownBlockType)_copyMatchBlockVisitedLink;	// IMP=0x0010000000087cf9
- (CDUnknownBlockType)_copyMatchBlockImage;	// IMP=0x0010000000087cb6
- (CDUnknownBlockType)_copyMatchBlockAnyElement;	// IMP=0x0010000000087773
- (CDUnknownBlockType)_copyMatchBlockForTextAttribute:(long long)arg1 searchType:(long long *)arg2;	// IMP=0x0010000000087737
- (CDUnknownBlockType)_copyMatchBlockSearchText;	// IMP=0x00100000000875a0
- (void)_elementFetchFoundElement:(id)arg1;	// IMP=0x00100000000868ac
- (_Bool)_isShowingTodayViewForPhone;	// IMP=0x0010000000086805
- (void)_echoSearchTypeNotFound:(long long)arg1;	// IMP=0x0010000000086714
- (void)_echoSearchNavigationElement:(id)arg1 forRangeAdjustment:(_Bool)arg2;	// IMP=0x001000000008653d
- (void)_echoFlickNavigationElement:(id)arg1;	// IMP=0x00100000000861ed
- (_Bool)_shouldIncludeContainerInDescriptionForCurrentElement:(id)arg1 previousElement:(id)arg2;	// IMP=0x0010000000085f89
- (_Bool)_chartElementDidChangeForElement:(id)arg1 oldElement:(id)arg2;	// IMP=0x0010000000085e3b
- (_Bool)_touchContainerDidChangeForElement:(id)arg1 oldElement:(id)arg2;	// IMP=0x0010000000085ce4
- (void)_updateContextDescriptors;	// IMP=0x0010000000085a1e
- (void)moveDragSessionToContextPoint:(struct CGPoint)arg1 inContext:(unsigned int)arg2;	// IMP=0x0010000000085a18
- (void)moveDragToPoint:(struct CGPoint)arg1;	// IMP=0x00100000000859df
- (void)dropDrag;	// IMP=0x00100000000859a6
- (void)cancelDrag;	// IMP=0x00100000000858fe
- (_Bool)dragSessionActive;	// IMP=0x00100000000858e5
- (void)waitForDragStartFromPid:(int)arg1 completionHandler:(CDUnknownBlockType)arg2;	// IMP=0x00100000000858cc
- (id)dragOutputManager;	// IMP=0x00100000000858bb
- (void)_layoutChangeForDragSessionStart;	// IMP=0x00100000000858a4
- (void)_dragStarted;	// IMP=0x00100000000857be
- (void)didStartDragForDragManager:(id)arg1;	// IMP=0x001000000008578f
- (void)_dragTerminated;	// IMP=0x00100000000856c3
- (void)didTerminateDragForDragManager:(id)arg1;	// IMP=0x0010000000085678
- (void)_dragChangedToStatus:(id)arg1;	// IMP=0x001000000008565f
- (void)dragManager:(id)arg1 didChangeDragToStatus:(id)arg2;	// IMP=0x0010000000085620
- (void)_dragEnded;	// IMP=0x0010000000085607
- (void)dragManager:(id)arg1 didEndDragOperation:(unsigned long long)arg2;	// IMP=0x00100000000855d8
- (void)_dragMoved;	// IMP=0x00100000000855bf
- (void)dragManager:(id)arg1 didMoveDragToPoint:(struct CGPoint)arg2;	// IMP=0x0010000000085590
- (void)elementFetchFound:(id)arg1;	// IMP=0x00100000000852b4
- (void)_handleSearchRotorRight:(id)arg1;	// IMP=0x001000000008529a
- (void)_handleSearchRotorLeft:(id)arg1;	// IMP=0x0010000000085280
- (void)_handleSearchRotorDirection:(long long)arg1 event:(id)arg2 notifyUser:(_Bool)arg3;	// IMP=0x0010000000084ece
- (void)_handleSearchRotorDirection:(long long)arg1 event:(id)arg2;	// IMP=0x0010000000084e12
- (void)_outputRotorTypeCount;	// IMP=0x0010000000084cc9
- (void)setCurrentElementToWebEditableAncestor;	// IMP=0x0010000000084c39
- (id)webEditableAncestor:(id)arg1;	// IMP=0x0010000000084b3c
- (_Bool)_rotorTypeSupportsCounting:(long long)arg1;	// IMP=0x0010000000084b1c
- (void)elementsCounted:(long long)arg1;	// IMP=0x0010000000084538
- (int)cancelElementCountOutput;	// IMP=0x0010000000084523
- (_Bool)forceRotorOffGesturedTextInputIfNeeded:(_Bool)arg1;	// IMP=0x0010000000084472
- (void)_setElementRotorToType:(long long)arg1 saveToPreferences:(_Bool)arg2 userInitiated:(_Bool)arg3;	// IMP=0x0010000000084419
- (void)_setElementRotorToNumberType:(id)arg1 saveToNumberPreferences:(id)arg2 numberUserInitiated:(id)arg3;	// IMP=0x0010000000084374
- (void)setElementRotorToType:(long long)arg1 saveToPreferences:(_Bool)arg2 userInitiated:(_Bool)arg3;	// IMP=0x0010000000084268
- (_Bool)_inMisspelledWordRotor;	// IMP=0x001000000008424f
- (void)setRotor:(id)arg1 toType:(long long)arg2 saveToPreferences:(_Bool)arg3 userInitiated:(_Bool)arg4;	// IMP=0x0010000000084231
- (void)setCurrentTextSelectionSegmentType:(long long)arg1;	// IMP=0x00100000000841e5
- (long long)currentRotorType;	// IMP=0x00100000000841cc
- (void)_appendCurrentRotorValue:(id)arg1 forRotor:(id)arg2;	// IMP=0x00100000000830a3
- (double)rotorRate;	// IMP=0x0010000000082f5f
- (void)_handleSearchRotorEcho:(id)arg1;	// IMP=0x0010000000082eca
- (void)_updateRotorForCurrentElement;	// IMP=0x0010000000082e56
- (void)_updateRotorForCurrentElement:(id)arg1 completion:(CDUnknownBlockType)arg2;	// IMP=0x0010000000082c41
- (void)updateRotorForCurrentElement:(_Bool)arg1 completion:(CDUnknownBlockType)arg2;	// IMP=0x0010000000082b8f
- (void)_handleStartTextSearch:(id)arg1;	// IMP=0x0010000000082a16
- (void)_handleOngoingTextSearch:(id)arg1;	// IMP=0x00100000000828e5
- (_Bool)isItemChooserVisible;	// IMP=0x00100000000828d9
- (void)_handleItemChooserSelection:(id)arg1;	// IMP=0x0010000000082707
- (void)_didDismissItemChooser;	// IMP=0x00100000000826fa
- (void)_closeItemChooser;	// IMP=0x0010000000082683
- (void)_handleItemChooserSelectionMade:(id)arg1;	// IMP=0x001000000008223d
- (void)_handleMoveToNativeFocusedElement:(id)arg1;	// IMP=0x00100000000821d8
- (void)_handleMoveToLinkedUI:(id)arg1;	// IMP=0x0010000000081d70
- (long long)_customActionIndex;	// IMP=0x0010000000081d63
- (id)_customActionIdentifier;	// IMP=0x0010000000081d52
- (void)didSearchForOpaqueElement;	// IMP=0x0010000000081d40
- (void)elementsRetrieved:(id)arg1 finished:(_Bool)arg2;	// IMP=0x0010000000081cf2
- (void)_elementsRetrieved:(id)arg1 finished:(id)arg2;	// IMP=0x0010000000081c5c
- (void)_showItemChooser:(id)arg1;	// IMP=0x0010000000080daf
- (void)_resetItemChooserCache;	// IMP=0x0010000000080d84
- (void)systemServerDied;	// IMP=0x0010000000080d55
- (void)_systemServerDied;	// IMP=0x0010000000080d21
- (void)_resetDirectInteractionCache;	// IMP=0x0010000000080c8e
- (_Bool)inDirectTouchMode;	// IMP=0x0010000000080b79
- (_Bool)shouldTurnTrackingIntoDirectTouch;	// IMP=0x0010000000080b6d
- (void)setShouldTurnTrackingIntoDirectTouch:(_Bool)arg1;	// IMP=0x0010000000080b61
- (_Bool)avoidAnnouncingDirectTouchArea;	// IMP=0x0010000000080b55
- (_Bool)currentElementAllowsDirectTouch;	// IMP=0x0010000000080b49
- (void)_handleDirectTouchExplorationMode:(id)arg1 direction:(long long)arg2;	// IMP=0x0010000000080904
- (void)_handleHintsSettingMode:(id)arg1 direction:(long long)arg2;	// IMP=0x00100000000807f5
- (void)_handleDescribedMediaMode:(id)arg1 direction:(long long)arg2;	// IMP=0x00100000000806ba
- (void)_handleLaunchDetectionMode:(id)arg1;	// IMP=0x00100000000805ff
- (void)_handleDescribeImage:(id)arg1;	// IMP=0x00100000000804f5
- (void)_outputCurrentElementRotor;	// IMP=0x001000000008046c
- (void)_handleSearchTextEvent:(id)arg1;	// IMP=0x00100000000800c4
- (void)_endTextSearchMode;	// IMP=0x001000000007ffdb
- (void)_handleCancelSpeaking:(id)arg1;	// IMP=0x001000000007ff95
- (void)_handleToggleSpeaking:(id)arg1;	// IMP=0x001000000007fc94
- (void)_handlePauseSpeaking:(id)arg1;	// IMP=0x001000000007fbc9
- (void)_handleContinueSpeaking:(id)arg1;	// IMP=0x001000000007fae4
- (void)_handleReadFromTop:(id)arg1;	// IMP=0x001000000007f1ed
- (void)_handleCopySpeechToClipboard:(id)arg1;	// IMP=0x001000000007edc1
- (void)_handleReadAll:(id)arg1;	// IMP=0x001000000007ec3a
- (void)_handleReadScreenSummary:(id)arg1;	// IMP=0x001000000007eb44
- (void)_continueReadAllWithElement:(id)arg1 setCurrentElement:(_Bool *)arg2;	// IMP=0x001000000007e5e2
- (_Bool)_prepareStitchedWebReadAll:(id)arg1 request:(id)arg2 setCurrentElement:(_Bool *)arg3;	// IMP=0x001000000007daec
- (void)_handleReadAllNextElement;	// IMP=0x001000000007da1c
- (void)_stopReadAll;	// IMP=0x001000000007d9ad
- (void)_handleReadAllBookContent:(id)arg1 fromTop:(_Bool)arg2;	// IMP=0x001000000007d37e
- (_Bool)isReadingAll;	// IMP=0x001000000007d363
- (void)_startReadingBookForNewPage;	// IMP=0x001000000007d05a
- (_Bool)_handleBookNavigateOverPageBoundary:(long long)arg1 unit:(long long)arg2;	// IMP=0x001000000007cfa8
- (void)_handleBookPageFlipAndContinue;	// IMP=0x001000000007cec4
- (_Bool)_handleMoreBookContentElements;	// IMP=0x001000000007cb99
- (void)_echoLineInBookElement:(id)arg1 forEvent:(id)arg2;	// IMP=0x001000000007b715
- (_Bool)_bookContentElementInteraction:(struct CGPoint)arg1 element:(id)arg2;	// IMP=0x001000000007b5c7
- (id)_currentTextLineInBookElement:(_Bool)arg1;	// IMP=0x001000000007b385
- (id)_convertTextMarkerArrayToString:(id)arg1 addInContentExtras:(_Bool)arg2;	// IMP=0x001000000007ac8c
- (_Bool)_handleMovementForElementFollowingElement:(id)arg1 direction:(long long)arg2 unit:(long long)arg3 mode:(long long)arg4;	// IMP=0x001000000007ab21
- (void)_handleBookContentMovement:(id)arg1 direction:(long long)arg2 unit:(long long)arg3 generateOutput:(_Bool)arg4;	// IMP=0x0010000000079de6
- (void)_handleSetupForEndOfPageNavigationTest:(CDUnknownBlockType)arg1;	// IMP=0x0010000000079dbf
- (void)_handleCurrentContentReadingLineUpdated:(id)arg1;	// IMP=0x0010000000079c8b
- (struct _NSRange)_rangeOfLine:(id)arg1 inBookContent:(id)arg2;	// IMP=0x0010000000079ae3
- (void)_setSelectedTextRange:(struct _NSRange)arg1 onElement:(id)arg2 refreshBraille:(_Bool)arg3 isVoiceOverSelectionMovement:(_Bool)arg4;	// IMP=0x0010000000079a48
- (void)_setSelectedTextRange:(struct _NSRange)arg1 onElement:(id)arg2 refreshBraille:(_Bool)arg3;	// IMP=0x0010000000079a26
- (void)_handleIdle:(id)arg1;	// IMP=0x00100000000797f4
- (void)_tvOS_handleIdleAndTrackingEvents:(id)arg1;	// IMP=0x00100000000797ee
- (void)_cleanupMapInteractionOnIdle;	// IMP=0x001000000007973d
- (void)_performTouchTypingKeyPress:(id)arg1;	// IMP=0x0010000000079512
- (_Bool)_isTouchTypingEventTooCloseToEdge:(id)arg1;	// IMP=0x0010000000079443
- (void)_setPreviousTouchTypingKey:(id)arg1;	// IMP=0x00100000000793f9
- (void)_setElementUnitIndexesToEndOfElement:(id)arg1;	// IMP=0x00100000000790d4
- (void)_resetElementUnitIndexes;	// IMP=0x001000000007905e
- (_Bool)rotorEnabled;	// IMP=0x0010000000079056
- (void)hideVisualRotor;	// IMP=0x0010000000078fe0
- (void)_hideVisualRotor;	// IMP=0x0010000000078ebd
- (void)_showVisualRotor:(id)arg1 direction:(_Bool)arg2;	// IMP=0x0010000000078cbd
- (double)keyboardKeyPenumbra:(id)arg1;	// IMP=0x0010000000078c5a
- (void)sendRequest:(id)arg1;	// IMP=0x00100000000789e3
- (id)_notificationData:(id)arg1 consumingToken:(id)arg2;	// IMP=0x00100000000788ea
- (_Bool)_notificationData:(id)arg1 containsToken:(id)arg2;	// IMP=0x00100000000787be
- (void)_handleLiveContinuousToneEndNotification:(id)arg1;	// IMP=0x001000000007877a
- (void)_handleLiveContinuousToneUpdateNotification:(id)arg1;	// IMP=0x00100000000786ce
- (void)_handleLiveContinuousToneBeginNotification:(id)arg1;	// IMP=0x00100000000785dd
- (void)handleNotification:(int)arg1 withData:(id)arg2 forElement:(struct __AXUIElement *)arg3;	// IMP=0x00100000000777f6
- (void)_updateStateForNotificationData:(id)arg1;	// IMP=0x0010000000076f7f
- (_Bool)_handleMoveOut:(id)arg1;	// IMP=0x0010000000076e8b
- (_Bool)_handleMoveIn:(id)arg1;	// IMP=0x0010000000076d85
- (void)_handleElementInteraction:(id)arg1;	// IMP=0x0010000000076c77
- (void)_moveDetectionModeRotor:(id)arg1;	// IMP=0x0010000000076c3f
- (void)_notificationThreadCancel;	// IMP=0x0010000000076c39
- (void)_updateJindoApplicationCache;	// IMP=0x0010000000076bcb
- (void)_updateJindoNotificationHandler;	// IMP=0x0010000000076b99
- (void)_pausedSpeechInterrupted:(id)arg1;	// IMP=0x0010000000076b2a
- (void)_handleEvent:(id)arg1;	// IMP=0x0010000000076379
- (MISSING_TYPE *)directTouchModeHandledEvent: /* Error: Ran out of types for this method. */;	// IMP=0x0010000000076371
- (void)_updateContinuousPathTimeout;	// IMP=0x0010000000076281
- (void)_updateAutomationAccessibilityApps;	// IMP=0x0010000000075f6e
- (void)_monitorElements;	// IMP=0x001000000007575f
- (id)_monitoredElementCachedText:(id)arg1;	// IMP=0x00100000000756c6
- (id)_similarMonitoredElement:(id)arg1;	// IMP=0x0010000000075410
- (void)handleEvent:(id)arg1;	// IMP=0x0010000000074e07
- (void)tutorialSetRecognizedGesture:(id)arg1;	// IMP=0x0010000000074bb0
- (_Bool)shouldTutorialIgnoreCommand:(id)arg1;	// IMP=0x0010000000074acc
- (_Bool)commandPermittedForTutorialPage:(id)arg1;	// IMP=0x0010000000074ac4
- (_Bool)isTutorialActive;	// IMP=0x00100000000749aa
- (_Bool)eventIsSystemEvent:(id)arg1;	// IMP=0x00100000000747d4
- (void)_updateNavigationModeForClassicRemote;	// IMP=0x00100000000747ce
- (void)updateNavigationModeForClassicRemote;	// IMP=0x001000000007479f
- (void)_initializeCommands;	// IMP=0x001000000006edd0
- (void)_speakElementFromPointerEvent:(id)arg1;	// IMP=0x001000000006ed52
- (void)_pointerDidMoveToGlobalPoint:(id)arg1;	// IMP=0x001000000006ec3d
- (void)pointerDidMoveToGlobalPoint:(struct CGPoint)arg1;	// IMP=0x001000000006eb69
- (void)_migratePerAppDirectTouchBehavior;	// IMP=0x001000000006e490
- (void)_initializeSystemEventThread;	// IMP=0x001000000006e43b
- (void)_initializeElementManagerThread;	// IMP=0x001000000006e3b7
- (void)dealloc;	// IMP=0x001000000006df90
- (id)init;	// IMP=0x001000000006cc93
- (void)_cleanupStateForUnitTesting;	// IMP=0x001000000006c9eb

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
// Preceding property had unknown attributes: ?
// Original attribute string: T@"NSString",?,R,C

@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

