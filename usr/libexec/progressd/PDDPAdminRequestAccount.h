//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <ProtocolBuffer/PBCodable.h>

@class NSMutableArray, NSString, PDDPDate, PDDPPerson;

@interface PDDPAdminRequestAccount : PBCodable
{
    NSString *_adminRequestAccountId;	// 8 = 0x8
    NSMutableArray *_conflictingPersonIds;	// 16 = 0x10
    PDDPDate *_dateCreated;	// 24 = 0x18
    PDDPDate *_dateLastModified;	// 32 = 0x20
    NSString *_parentRequestId;	// 40 = 0x28
    PDDPPerson *_person;	// 48 = 0x30
    NSMutableArray *_requestedLocationIds;	// 56 = 0x38
    NSString *_requestedRoleId;	// 64 = 0x40
    int _requestedRoleType;	// 72 = 0x48
    NSString *_temporaryPassword;	// 80 = 0x50
    NSString *_verificationCode;	// 88 = 0x58
    struct {
        unsigned int requestedRoleType:1;
    } _has;	// 96 = 0x60
}

+ (Class)conflictingPersonIdsType;	// IMP=0x0020000000166cde
+ (Class)requestedLocationIdsType;	// IMP=0x0010000000166be2
- (void).cxx_destruct;	// IMP=0x0020000000168736
@property(retain, nonatomic) NSMutableArray *conflictingPersonIds; // @synthesize conflictingPersonIds=_conflictingPersonIds;
@property(retain, nonatomic) NSString *verificationCode; // @synthesize verificationCode=_verificationCode;
@property(retain, nonatomic) NSString *temporaryPassword; // @synthesize temporaryPassword=_temporaryPassword;
@property(retain, nonatomic) NSMutableArray *requestedLocationIds; // @synthesize requestedLocationIds=_requestedLocationIds;
@property(retain, nonatomic) NSString *requestedRoleId; // @synthesize requestedRoleId=_requestedRoleId;
@property(retain, nonatomic) PDDPPerson *person; // @synthesize person=_person;
@property(retain, nonatomic) PDDPDate *dateLastModified; // @synthesize dateLastModified=_dateLastModified;
@property(retain, nonatomic) PDDPDate *dateCreated; // @synthesize dateCreated=_dateCreated;
@property(retain, nonatomic) NSString *parentRequestId; // @synthesize parentRequestId=_parentRequestId;
@property(retain, nonatomic) NSString *adminRequestAccountId; // @synthesize adminRequestAccountId=_adminRequestAccountId;
- (void)mergeFrom:(id)arg1;	// IMP=0x0010000000168219
- (unsigned long long)hash;	// IMP=0x00100000001680bc
- (_Bool)isEqual:(id)arg1;	// IMP=0x0010000000167e72
- (id)copyWithZone:(struct _NSZone *)arg1;	// IMP=0x0010000000167a05
- (void)copyTo:(id)arg1;	// IMP=0x001000000016778d
- (void)writeTo:(id)arg1;	// IMP=0x0010000000167469
- (_Bool)readFrom:(id)arg1;	// IMP=0x001000000016745c
- (id)dictionaryRepresentation;	// IMP=0x0010000000166d9e
- (id)description;	// IMP=0x0010000000166cef
- (id)conflictingPersonIdsAtIndex:(unsigned long long)arg1;	// IMP=0x0010000000166cc1
- (unsigned long long)conflictingPersonIdsCount;	// IMP=0x0010000000166ca4
- (void)addConflictingPersonIds:(id)arg1;	// IMP=0x0010000000166c3a
- (void)clearConflictingPersonIds;	// IMP=0x0010000000166c1d
@property(readonly, nonatomic) _Bool hasVerificationCode;
// Error: Property attributes should begin with the type ('T') attribute, property name: hasTemporaryPassword
// Property attributes: (null)

- (id)requestedLocationIdsAtIndex:(unsigned long long)arg1;	// IMP=0x0010000000166bc5
- (unsigned long long)requestedLocationIdsCount;	// IMP=0x0010000000166ba8
- (void)addRequestedLocationIds:(id)arg1;	// IMP=0x0010000000166b3e
- (void)clearRequestedLocationIds;	// IMP=0x0010000000166b21
@property(readonly, nonatomic) _Bool hasRequestedRoleId;
- (int)StringAsRequestedRoleType:(id)arg1;	// IMP=0x00100000001669f2
- (id)requestedRoleTypeAsString:(int)arg1;	// IMP=0x00100000001669a9
@property(nonatomic) _Bool hasRequestedRoleType;
@property(nonatomic) int requestedRoleType; // @synthesize requestedRoleType=_requestedRoleType;
@property(readonly, nonatomic) _Bool hasPerson;
@property(readonly, nonatomic) _Bool hasDateLastModified;
@property(readonly, nonatomic) _Bool hasDateCreated;
@property(readonly, nonatomic) _Bool hasParentRequestId;
@property(readonly, nonatomic) _Bool hasAdminRequestAccountId;

@end

