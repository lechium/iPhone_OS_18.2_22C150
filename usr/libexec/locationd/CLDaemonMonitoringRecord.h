//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <CoreLocation/CLMonitoringRecord.h>

@class CLCondition, CLMonitoringEvent, NSString;

@interface CLDaemonMonitoringRecord : CLMonitoringRecord
{
    _Bool _conditionLimitExceeded;	// 8 = 0x8
    _Bool _persistenceUnavailable;	// 9 = 0x9
    _Bool _conditionUnsupported;	// 10 = 0xa
    CLCondition *_daemonCondition;	// 16 = 0x10
    CLMonitoringEvent *_daemonEvent;	// 24 = 0x18
    NSString *_recordIdentifier;	// 32 = 0x20
}

+ (_Bool)supportsSecureCoding;	// IMP=0x00200000005ac5c3
@property(nonatomic) _Bool conditionUnsupported; // @synthesize conditionUnsupported=_conditionUnsupported;
@property(nonatomic) _Bool persistenceUnavailable; // @synthesize persistenceUnavailable=_persistenceUnavailable;
@property(nonatomic) _Bool conditionLimitExceeded; // @synthesize conditionLimitExceeded=_conditionLimitExceeded;
@property(retain, nonatomic) NSString *recordIdentifier; // @synthesize recordIdentifier=_recordIdentifier;
@property(retain, nonatomic) CLMonitoringEvent *daemonEvent; // @synthesize daemonEvent=_daemonEvent;
@property(retain, nonatomic) CLCondition *daemonCondition; // @synthesize daemonCondition=_daemonCondition;
@property(readonly) unsigned long long serviceTypeMask;
- (unsigned long long)diagnosticMaskIfMonitoringIsNonFunctional;	// IMP=0x00100000005acdf2
- (_Bool)isMonitoring;	// IMP=0x00100000005acdc7
- (id)description;	// IMP=0x00100000005accfb
- (id)debugDescription;	// IMP=0x00100000005acc9c
- (id)getMonitoringRecordToNotifyClient;	// IMP=0x00100000005acc1c
- (void)updateDaemonEvent:(id)arg1;	// IMP=0x00100000005acc0a
- (void)updateClientEvent:(id)arg1;	// IMP=0x00100000005acbdb
- (_Bool)shouldSendEvent;	// IMP=0x00100000005acb66
@property(readonly) CLCondition *clientCondition;
@property(readonly) CLMonitoringEvent *clientEvent;
@property(readonly) unsigned long long daemonState;
@property(readonly) unsigned long long clientState;
- (void)resetDaemonPartOfCondition;	// IMP=0x00100000005acaa0
- (void)setupDaemonPartOfConditionWithAuthContext:(id)arg1 clientKeyPath:(id)arg2 universe:(id)arg3 identifier:(id)arg4 stopMonitoring:(_Bool)arg5 callbackHandler:(CDUnknownBlockType)arg6;	// IMP=0x00100000005ac799
- (id)initWithCoder:(id)arg1;	// IMP=0x00100000005ac6a5
- (void)encodeWithCoder:(id)arg1;	// IMP=0x00100000005ac5cb
- (void)dealloc;	// IMP=0x00100000005ac546
- (id)initWithClientMonitoringRecord:(id)arg1 clientKeyPath:(id)arg2 authorizationContext:(id)arg3 universe:(id)arg4 identifier:(id)arg5 initForStopMonitoring:(_Bool)arg6 callbackHandler:(CDUnknownBlockType)arg7;	// IMP=0x00100000005ac450

@end

