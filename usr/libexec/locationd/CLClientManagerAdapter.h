//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

@class MISSING_TYPE, NSString;

@interface CLClientManagerAdapter
{
}

+ (id)getSilo;	// IMP=0x0020000000559188
+ (void)performSyncOnSilo:(id)arg1 invoker:(CDUnknownBlockType)arg2;	// IMP=0x001000000055916f
+ (void)becameFatallyBlocked:(id)arg1 index:(unsigned long long)arg2;	// IMP=0x0010000000559112
- (void)getClientManagerInternalStateWithReply:(CDUnknownBlockType)arg1;	// IMP=0x0020000000561560
- (void)calculateCheeseCoverage:(id)arg1 interestInterval:(id)arg2 withOptions:(id)arg3 lookbackWindowStartDate:(id)arg4 withReply:(CDUnknownBlockType)arg5;	// IMP=0x00100000005614ee
- (void)handleLiveActivityUpdate:(id)arg1;	// IMP=0x00100000005614e8
- (void)triggerAnalyticsCollect;	// IMP=0x0010000000561490
- (void)triggerClearAppClipAuthorizationIfNecessary;	// IMP=0x001000000056113d
- (double)syncgetAndSetOrChangeAppClipAuthorizationTime:(double)arg1 forClient:(CDUnknownBlockType)arg2;	// IMP=0x0010000000560bfd
- (id)syncgetTemporaryAuthorizationStatusForClient:(CDUnknownBlockType)arg1;	// IMP=0x0010000000560565
- (void)setTemporaryAuthorizationStatusInfoForClient:(CDUnknownBlockType)arg1 data:(id)arg2;	// IMP=0x001000000055f2ff
- (void)handleProvisionalIntermediationForService:(unsigned long long)arg1 forClientKey:(id)arg2 at:(id)arg3 withReply:(CDUnknownBlockType)arg4;	// IMP=0x001000000055f16e
- (void)checkWeakPersistentClientWithIdentifier:(CDUnknownBlockType)arg1;	// IMP=0x001000000055f0f9
- (id)syncgetArchivedAuthorizationDecisions;	// IMP=0x001000000055f0df
- (id)syncgetApplyArchivedAuthorizationDecisionsAndDie:(id)arg1 unlessTokenMatches:(id)arg2;	// IMP=0x001000000055f0b6
- (_Bool)syncgetIsMapsANonSystemLocationClient;	// IMP=0x001000000055efad
- (_Bool)syncgetHasAuthorizedClients;	// IMP=0x001000000055eee6
- (void)setLocationButtonUseMode:(int)arg1 forClient:(CDUnknownBlockType)arg2;	// IMP=0x001000000055ede0
- (void)setIncidentalUseMode:(int)arg1 forClient:(CDUnknownBlockType)arg2;	// IMP=0x001000000055ecda
- (void)deleteInterestZoneWithId:(id)arg1 registeredForClientKey:(id)arg2 withReply:(CDUnknownBlockType)arg3;	// IMP=0x001000000055e760
- (void)setRelevance:(_Bool)arg1 forInterestZoneWithId:(id)arg2 registeredForClientKey:(id)arg3;	// IMP=0x001000000055e692
- (void)setRelevance:(_Bool)arg1 forInterestZoneWithId:(id)arg2 registeredForClientKey:(id)arg3 withReply:(CDUnknownBlockType)arg4;	// IMP=0x001000000055e149
- (void)registerPhenolicInterestZoneForClientKey:(id)arg1 withId:(id)arg2 phenolicLocation:(int)arg3 serviceMaskOperator:(int)arg4 provenanceType:(int)arg5 withReply:(CDUnknownBlockType)arg6;	// IMP=0x001000000055e040
- (void)registerCircularInterestZoneForClientKey:(id)arg1 withId:(id)arg2 latitude:(double)arg3 longitude:(double)arg4 serviceMaskOperator:(int)arg5 provenanceType:(int)arg6 radius:(double)arg7 withReply:(CDUnknownBlockType)arg8;	// IMP=0x001000000055d297
- (void)getIncidentalUseModeForClient:(CDUnknownBlockType)arg1 withReply:(CDUnknownBlockType)arg2;	// IMP=0x001000000055d18f
- (int)syncgetRegistrationResultToAuthorizationStatus:(int)arg1;	// IMP=0x001000000055cf5d
- (int)syncgetClientEffectiveRegistrationResultWithTransientAwareness:(CDUnknownBlockType)arg1;	// IMP=0x001000000055ce5f
- (void)fetchClientStaticRegistrationResult:(CDUnknownBlockType)arg1 withReply:(CDUnknownBlockType)arg2;	// IMP=0x001000000055cd4d
- (id)syncgetNonSystemLocationClientKey;	// IMP=0x001000000055caf9
- (id)syncgetNonSystemLocationClientKeys;	// IMP=0x001000000055c9f1
- (void)fetchLocationClientKeysWithReply:(CDUnknownBlockType)arg1;	// IMP=0x001000000055c9c1
- (id)syncgetLocationClientKeys;	// IMP=0x001000000055c8b9
- (id)syncgetCopyClients;	// IMP=0x001000000055be96
- (void)setAllowableAuthorizationMask:(unsigned long long)arg1 forClientKey:(id)arg2;	// IMP=0x001000000055b8c3
- (void)appsWithClientKeysAreInstalledOnAPairedDevice:(id)arg1;	// IMP=0x001000000055b777
- (void)checkAppInstallationStatus;	// IMP=0x001000000055b75d
- (_Bool)syncgetSetLocationServicesEnabledStatically:(_Bool)arg1 withEventSource:(id)arg2;	// IMP=0x001000000055b6d2
- (void)setPurpose:(id)arg1 forClient:(CDUnknownBlockType)arg2;	// IMP=0x001000000055b574
- (void)setClient:(CDUnknownBlockType)arg1;	// IMP=0x001000000055b463
- (void)resetClients;	// IMP=0x001000000055b449
- (void)resetClient:(id)arg1;	// IMP=0x001000000055b3ff
- (MISSING_TYPE *)reportLocationUtilityEvent:atDate: /* Error: Ran out of types for this method. */;	// IMP=0x001000000055b3d3
- (void)sendMetricForFunctionCallsForClientKey:(id)arg1 info:(id)arg2;	// IMP=0x001000000055b37f
- (void)setLastLocationSettingsEventSource:(id)arg1;	// IMP=0x001000000055b2f7
- (void)setClientAuthorization:(CDUnknownBlockType)arg1 zoneIdentifier:(id)arg2 subIdentityIdentifier:(id)arg3 status:(int)arg4 correctiveCompensation:(int)arg5 mayIncreaseAuth:(_Bool)arg6 entity:(id)arg7;	// IMP=0x001000000055b178
- (void)setClientBackgroundIndicator:(CDUnknownBlockType)arg1 enabled:(_Bool)arg2 entity:(id)arg3;	// IMP=0x001000000055ae80
- (void)resetNotificationConsumedForIdentifier:(id)arg1;	// IMP=0x001000000055a909
- (void)performMigrationWithReply:(CDUnknownBlockType)arg1;	// IMP=0x001000000055a60f
- (void)appLaunchedByAppLifecycleManager:(id)arg1;	// IMP=0x001000000055a1ba
- (void)wakeUpLaunchdManagedClient:(id)arg1;	// IMP=0x001000000055a120
- (void)onCapabilityChange;	// IMP=0x001000000055a0bc
- (void)markReceivingLocationInformation:(CDUnknownBlockType)arg1;	// IMP=0x0010000000559fb7
- (void)reduceAccuracy:(id)arg1 withReply:(CDUnknownBlockType)arg2;	// IMP=0x0010000000559f16
- (void)inUseAssertionInvalidatedDueToWatchConnectivityForClientKey:(id)arg1;	// IMP=0x0010000000559ecc
- (void)takeInUseAssertionForClientKey:(id)arg1 reason:(id)arg2 assertionLevel:(int)arg3 withReply:(CDUnknownBlockType)arg4;	// IMP=0x0010000000559d13
- (void)markClientEmergencyEnablementTransition:(_Bool)arg1 shouldOverrideDeauthorization:(_Bool)arg2 forBeneficiary:(id)arg3;	// IMP=0x0010000000559c99
- (void)markClientEmergencyEnablementTransition:(_Bool)arg1;	// IMP=0x0010000000559c70
- (void)tearDownLocationAuthPrompt:(id)arg1;	// IMP=0x0010000000559c1f
- (void)markTemporaryPreciseAuthorizationGranted:(_Bool)arg1 forClientKey:(id)arg2;	// IMP=0x0010000000559bcf
- (void)markClientTemporaryAuthorizationGranted:(_Bool)arg1 forClientKey:(id)arg2 andAuditToken:(CDStruct_6ad76789)arg3 byLocationButton:(_Bool)arg4 voiceInteractionEnabled:(_Bool)arg5;	// IMP=0x0010000000559b68
- (void)updatePromptedLatitude:(double)arg1 longitude:(double)arg2;	// IMP=0x0010000000559b1f
- (void)updatePillButtonChoiceForOutstandingPrompt:(int)arg1;	// IMP=0x0010000000559afd
- (void)considerPromptingForTranscriptSession:(id)arg1 dictionary:(id)arg2 requestType:(int)arg3 withReply:(CDUnknownBlockType)arg4;	// IMP=0x0010000000559a99
- (void)setClients:(id)arg1 locationPushTo:(_Bool)arg2;	// IMP=0x001000000055996a
- (void)setClients:(id)arg1 significantLocationVisitTo:(_Bool)arg2;	// IMP=0x001000000055983d
- (void)setClients:(id)arg1 transcriptSessionChangeTo:(_Bool)arg2;	// IMP=0x0010000000559710
- (void)setClients:(id)arg1 significantLocationChangeTo:(_Bool)arg2;	// IMP=0x00100000005595e3
- (void)setClients:(id)arg1 regionOfType:(int)arg2 to:(_Bool)arg3;	// IMP=0x00100000005594bc
- (void)setProvisionalAuthorization:(id)arg1;	// IMP=0x001000000055935d
- (void)dingAllActiveTranscriptSubscriptions;	// IMP=0x001000000055933d
- (_Bool)syncgetDoSync:(CDUnknownBlockType)arg1;	// IMP=0x0010000000559315
- (void)doAsync:(CDUnknownBlockType)arg1 withReply:(CDUnknownBlockType)arg2;	// IMP=0x00100000005592e8
- (void)doAsync:(CDUnknownBlockType)arg1;	// IMP=0x00100000005592c0
- (void *)adaptee;	// IMP=0x001000000055928d
- (void)endService;	// IMP=0x0010000000559272
- (void)beginService;	// IMP=0x0010000000559221
- (id)init;	// IMP=0x00100000005591e4

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
// Preceding property had unknown attributes: ?
// Original attribute string: T@"NSString",?,R,C

@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;
@property(nonatomic) _Bool valid;

@end

