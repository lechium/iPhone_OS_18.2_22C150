//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <objc/NSObject.h>

@class CLFenceAnalyticsManager, NSArray;
@protocol CLIntersiloUniverse;

@interface CLFenceStateChangeAnalytics : NSObject
{
    int _requestCount;	// 8 = 0x8
    NSArray *_binsForDistances;	// 16 = 0x10
    NSArray *_binsForFenceRadius;	// 24 = 0x18
    NSArray *_binsForSteps;	// 32 = 0x20
    NSArray *_binsForTimeIntervals;	// 40 = 0x28
    id <CLIntersiloUniverse> _universe;	// 48 = 0x30
    CLFenceAnalyticsManager *_fenceAnalyticsManager;	// 56 = 0x38
}

@property(retain, nonatomic) CLFenceAnalyticsManager *fenceAnalyticsManager; // @synthesize fenceAnalyticsManager=_fenceAnalyticsManager;
@property(retain, nonatomic) id <CLIntersiloUniverse> universe; // @synthesize universe=_universe;
-     // Error parsing type: v1712@0:8{NotificationData={Fence={basic_string<char, std::char_traits<char>, std::allocator<char>>={__compressed_pair<std::basic_string<char>::__rep, std::allocator<char>>={__rep=(?={__short={?=b1b7}[0c][23c]}{__long={?=b1b63}Q*}{__raw=[3Q]})}}}{basic_string<char, std::char_traits<char>, std::allocator<char>>={__compressed_pair<std::basic_string<char>::__rep, std::allocator<char>>={__rep=(?={__short={?=b1b7}[0c][23c]}{__long={?=b1b63}Q*}{__raw=[3Q]})}}}{basic_string<char, std::char_traits<char>, std::allocator<char>>={__compressed_pair<std::basic_string<char>::__rep, std::allocator<char>>={__rep=(?={__short={?=b1b7}[0c][23c]}{__long={?=b1b63}Q*}{__raw=[3Q]})}}}ddddddddiiidQiiBiiB{basic_string<char, std::char_traits<char>, std::allocator<char>>={__compressed_pair<std::basic_string<char>::__rep, std::allocator<char>>={__rep=(?={__short={?=b1b7}[0c][23c]}{__long={?=b1b63}Q*}{__raw=[3Q]})}}}{CLStrongPtr<NSUUID *>=@}{vector<CLClientLocationCoordinate, std::allocator<CLClientLocationCoordinate>>=^{?}^{?}{__compressed_pair<CLClientLocationCoordinate *, std::allocator<CLClientLocationCoordinate>>=^{?}}}}{Fence={basic_string<char, std::char_traits<char>, std::allocator<char>>={__compressed_pair<std::basic_string<char>::__rep, std::allocator<char>>={__rep=(?={__short={?=b1b7}[0c][23c]}{__long={?=b1b63}Q*}{__raw=[3Q]})}}}{basic_string<char, std::char_traits<char>, std::allocator<char>>={__compressed_pair<std::basic_string<char>::__rep, std::allocator<char>>={__rep=(?={__short={?=b1b7}[0c][23c]}{__long={?=b1b63}Q*}{__raw=[3Q]})}}}{basic_string<char, std::char_traits<char>, std::allocator<char>>={__compressed_pair<std::basic_string<char>::__rep, std::allocator<char>>={__rep=(?={__short={?=b1b7}[0c][23c]}{__long={?=b1b63}Q*}{__raw=[3Q]})}}}ddddddddiiidQiiBiiB{basic_string<char, std::char_traits<char>, std::allocator<char>>={__compressed_pair<std::basic_string<char>::__rep, std::allocator<char>>={__rep=(?={__short={?=b1b7}[0c][23c]}{__long={?=b1b63}Q*}{__raw=[3Q]})}}}{CLStrongPtr<NSUUID *>=@}{vector<CLClientLocationCoordinate, std::allocator<CLClientLocationCoordinate>>=^{?}^{?}{__compressed_pair<CLClientLocationCoordinate *, std::allocator<CLClientLocationCoordinate>>=^{?}}}}{CLDaemonLocation=ii{?=dd}ddddddddddidi{?=dd}diIiiidB}id{FenceMonitorAnalytics=i{CLFenceAnalyticsGeofenceEventTimes=Bdddddddddddddd}d{CLDaemonLocation=ii{?=dd}ddddddddddidi{?=dd}diIiiidB}{CLDaemonLocation=ii{?=dd}ddddddddddidi{?=dd}diIiiidB}{CLDaemonLocation=ii{?=dd}ddddddddddidi{?=dd}diIiiidB}iiiddddddd{CLMotionActivity=iiiiiidBfdBidi{FsmTransitionData=CCCS} dii{?=b1b1b1b1b1}iidQi}{CLMotionActivity=iiiiiidBfdBidi{FsmTransitionData=CCCS} dii{?=b1b1b1b1b1}iidQi}}}16, name: submitAllMetricsFromNotification:
-     // Error parsing type: v1712@0:8{NotificationData={Fence={basic_string<char, std::char_traits<char>, std::allocator<char>>={__compressed_pair<std::basic_string<char>::__rep, std::allocator<char>>={__rep=(?={__short={?=b1b7}[0c][23c]}{__long={?=b1b63}Q*}{__raw=[3Q]})}}}{basic_string<char, std::char_traits<char>, std::allocator<char>>={__compressed_pair<std::basic_string<char>::__rep, std::allocator<char>>={__rep=(?={__short={?=b1b7}[0c][23c]}{__long={?=b1b63}Q*}{__raw=[3Q]})}}}{basic_string<char, std::char_traits<char>, std::allocator<char>>={__compressed_pair<std::basic_string<char>::__rep, std::allocator<char>>={__rep=(?={__short={?=b1b7}[0c][23c]}{__long={?=b1b63}Q*}{__raw=[3Q]})}}}ddddddddiiidQiiBiiB{basic_string<char, std::char_traits<char>, std::allocator<char>>={__compressed_pair<std::basic_string<char>::__rep, std::allocator<char>>={__rep=(?={__short={?=b1b7}[0c][23c]}{__long={?=b1b63}Q*}{__raw=[3Q]})}}}{CLStrongPtr<NSUUID *>=@}{vector<CLClientLocationCoordinate, std::allocator<CLClientLocationCoordinate>>=^{?}^{?}{__compressed_pair<CLClientLocationCoordinate *, std::allocator<CLClientLocationCoordinate>>=^{?}}}}{Fence={basic_string<char, std::char_traits<char>, std::allocator<char>>={__compressed_pair<std::basic_string<char>::__rep, std::allocator<char>>={__rep=(?={__short={?=b1b7}[0c][23c]}{__long={?=b1b63}Q*}{__raw=[3Q]})}}}{basic_string<char, std::char_traits<char>, std::allocator<char>>={__compressed_pair<std::basic_string<char>::__rep, std::allocator<char>>={__rep=(?={__short={?=b1b7}[0c][23c]}{__long={?=b1b63}Q*}{__raw=[3Q]})}}}{basic_string<char, std::char_traits<char>, std::allocator<char>>={__compressed_pair<std::basic_string<char>::__rep, std::allocator<char>>={__rep=(?={__short={?=b1b7}[0c][23c]}{__long={?=b1b63}Q*}{__raw=[3Q]})}}}ddddddddiiidQiiBiiB{basic_string<char, std::char_traits<char>, std::allocator<char>>={__compressed_pair<std::basic_string<char>::__rep, std::allocator<char>>={__rep=(?={__short={?=b1b7}[0c][23c]}{__long={?=b1b63}Q*}{__raw=[3Q]})}}}{CLStrongPtr<NSUUID *>=@}{vector<CLClientLocationCoordinate, std::allocator<CLClientLocationCoordinate>>=^{?}^{?}{__compressed_pair<CLClientLocationCoordinate *, std::allocator<CLClientLocationCoordinate>>=^{?}}}}{CLDaemonLocation=ii{?=dd}ddddddddddidi{?=dd}diIiiidB}id{FenceMonitorAnalytics=i{CLFenceAnalyticsGeofenceEventTimes=Bdddddddddddddd}d{CLDaemonLocation=ii{?=dd}ddddddddddidi{?=dd}diIiiidB}{CLDaemonLocation=ii{?=dd}ddddddddddidi{?=dd}diIiiidB}{CLDaemonLocation=ii{?=dd}ddddddddddidi{?=dd}diIiiidB}iiiddddddd{CLMotionActivity=iiiiiidBfdBidi{FsmTransitionData=CCCS} dii{?=b1b1b1b1b1}iidQi}{CLMotionActivity=iiiiiidBfdBidi{FsmTransitionData=CCCS} dii{?=b1b1b1b1b1}iidQi}}}16, name: evaluatePossibleFalseExitFromNotification:
-     // Error parsing type: v1720@0:8{NotificationData={Fence={basic_string<char, std::char_traits<char>, std::allocator<char>>={__compressed_pair<std::basic_string<char>::__rep, std::allocator<char>>={__rep=(?={__short={?=b1b7}[0c][23c]}{__long={?=b1b63}Q*}{__raw=[3Q]})}}}{basic_string<char, std::char_traits<char>, std::allocator<char>>={__compressed_pair<std::basic_string<char>::__rep, std::allocator<char>>={__rep=(?={__short={?=b1b7}[0c][23c]}{__long={?=b1b63}Q*}{__raw=[3Q]})}}}{basic_string<char, std::char_traits<char>, std::allocator<char>>={__compressed_pair<std::basic_string<char>::__rep, std::allocator<char>>={__rep=(?={__short={?=b1b7}[0c][23c]}{__long={?=b1b63}Q*}{__raw=[3Q]})}}}ddddddddiiidQiiBiiB{basic_string<char, std::char_traits<char>, std::allocator<char>>={__compressed_pair<std::basic_string<char>::__rep, std::allocator<char>>={__rep=(?={__short={?=b1b7}[0c][23c]}{__long={?=b1b63}Q*}{__raw=[3Q]})}}}{CLStrongPtr<NSUUID *>=@}{vector<CLClientLocationCoordinate, std::allocator<CLClientLocationCoordinate>>=^{?}^{?}{__compressed_pair<CLClientLocationCoordinate *, std::allocator<CLClientLocationCoordinate>>=^{?}}}}{Fence={basic_string<char, std::char_traits<char>, std::allocator<char>>={__compressed_pair<std::basic_string<char>::__rep, std::allocator<char>>={__rep=(?={__short={?=b1b7}[0c][23c]}{__long={?=b1b63}Q*}{__raw=[3Q]})}}}{basic_string<char, std::char_traits<char>, std::allocator<char>>={__compressed_pair<std::basic_string<char>::__rep, std::allocator<char>>={__rep=(?={__short={?=b1b7}[0c][23c]}{__long={?=b1b63}Q*}{__raw=[3Q]})}}}{basic_string<char, std::char_traits<char>, std::allocator<char>>={__compressed_pair<std::basic_string<char>::__rep, std::allocator<char>>={__rep=(?={__short={?=b1b7}[0c][23c]}{__long={?=b1b63}Q*}{__raw=[3Q]})}}}ddddddddiiidQiiBiiB{basic_string<char, std::char_traits<char>, std::allocator<char>>={__compressed_pair<std::basic_string<char>::__rep, std::allocator<char>>={__rep=(?={__short={?=b1b7}[0c][23c]}{__long={?=b1b63}Q*}{__raw=[3Q]})}}}{CLStrongPtr<NSUUID *>=@}{vector<CLClientLocationCoordinate, std::allocator<CLClientLocationCoordinate>>=^{?}^{?}{__compressed_pair<CLClientLocationCoordinate *, std::allocator<CLClientLocationCoordinate>>=^{?}}}}{CLDaemonLocation=ii{?=dd}ddddddddddidi{?=dd}diIiiidB}id{FenceMonitorAnalytics=i{CLFenceAnalyticsGeofenceEventTimes=Bdddddddddddddd}d{CLDaemonLocation=ii{?=dd}ddddddddddidi{?=dd}diIiiidB}{CLDaemonLocation=ii{?=dd}ddddddddddidi{?=dd}diIiiidB}{CLDaemonLocation=ii{?=dd}ddddddddddidi{?=dd}diIiiidB}iiiddddddd{CLMotionActivity=iiiiiidBfdBidi{FsmTransitionData=CCCS} dii{?=b1b1b1b1b1}iidQi}{CLMotionActivity=iiiiiidBfdBidi{FsmTransitionData=CCCS} dii{?=b1b1b1b1b1}iidQi}}}16@?1712, name: conditionsSatisfiedForFalseExitFromNotification:handler:
- (void)promptPossibleFalseExitDetectionUI;	// IMP=0x0010000000d15bea
- (id)createMetricsDict:(id)arg1 isInternal:(_Bool)arg2;	// IMP=0x0010000000d14c1f
-     // Error parsing type: v1724@0:8{NotificationData={Fence={basic_string<char, std::char_traits<char>, std::allocator<char>>={__compressed_pair<std::basic_string<char>::__rep, std::allocator<char>>={__rep=(?={__short={?=b1b7}[0c][23c]}{__long={?=b1b63}Q*}{__raw=[3Q]})}}}{basic_string<char, std::char_traits<char>, std::allocator<char>>={__compressed_pair<std::basic_string<char>::__rep, std::allocator<char>>={__rep=(?={__short={?=b1b7}[0c][23c]}{__long={?=b1b63}Q*}{__raw=[3Q]})}}}{basic_string<char, std::char_traits<char>, std::allocator<char>>={__compressed_pair<std::basic_string<char>::__rep, std::allocator<char>>={__rep=(?={__short={?=b1b7}[0c][23c]}{__long={?=b1b63}Q*}{__raw=[3Q]})}}}ddddddddiiidQiiBiiB{basic_string<char, std::char_traits<char>, std::allocator<char>>={__compressed_pair<std::basic_string<char>::__rep, std::allocator<char>>={__rep=(?={__short={?=b1b7}[0c][23c]}{__long={?=b1b63}Q*}{__raw=[3Q]})}}}{CLStrongPtr<NSUUID *>=@}{vector<CLClientLocationCoordinate, std::allocator<CLClientLocationCoordinate>>=^{?}^{?}{__compressed_pair<CLClientLocationCoordinate *, std::allocator<CLClientLocationCoordinate>>=^{?}}}}{Fence={basic_string<char, std::char_traits<char>, std::allocator<char>>={__compressed_pair<std::basic_string<char>::__rep, std::allocator<char>>={__rep=(?={__short={?=b1b7}[0c][23c]}{__long={?=b1b63}Q*}{__raw=[3Q]})}}}{basic_string<char, std::char_traits<char>, std::allocator<char>>={__compressed_pair<std::basic_string<char>::__rep, std::allocator<char>>={__rep=(?={__short={?=b1b7}[0c][23c]}{__long={?=b1b63}Q*}{__raw=[3Q]})}}}{basic_string<char, std::char_traits<char>, std::allocator<char>>={__compressed_pair<std::basic_string<char>::__rep, std::allocator<char>>={__rep=(?={__short={?=b1b7}[0c][23c]}{__long={?=b1b63}Q*}{__raw=[3Q]})}}}ddddddddiiidQiiBiiB{basic_string<char, std::char_traits<char>, std::allocator<char>>={__compressed_pair<std::basic_string<char>::__rep, std::allocator<char>>={__rep=(?={__short={?=b1b7}[0c][23c]}{__long={?=b1b63}Q*}{__raw=[3Q]})}}}{CLStrongPtr<NSUUID *>=@}{vector<CLClientLocationCoordinate, std::allocator<CLClientLocationCoordinate>>=^{?}^{?}{__compressed_pair<CLClientLocationCoordinate *, std::allocator<CLClientLocationCoordinate>>=^{?}}}}{CLDaemonLocation=ii{?=dd}ddddddddddidi{?=dd}diIiiidB}id{FenceMonitorAnalytics=i{CLFenceAnalyticsGeofenceEventTimes=Bdddddddddddddd}d{CLDaemonLocation=ii{?=dd}ddddddddddidi{?=dd}diIiiidB}{CLDaemonLocation=ii{?=dd}ddddddddddidi{?=dd}diIiiidB}{CLDaemonLocation=ii{?=dd}ddddddddddidi{?=dd}diIiiidB}iiiddddddd{CLMotionActivity=iiiiiidBfdBidi{FsmTransitionData=CCCS} dii{?=b1b1b1b1b1}iidQi}{CLMotionActivity=iiiiiidBfdBidi{FsmTransitionData=CCCS} dii{?=b1b1b1b1b1}iidQi}}}16B1712@?1716, name: extractAnalyticsFromNotification:isInternal:handler:
- (unsigned long long)binForTimeInterval:(double)arg1;	// IMP=0x0010000000d11ac3
- (unsigned long long)binForSteps:(int)arg1;	// IMP=0x0010000000d11a6a
- (unsigned long long)binForFenceRadius:(double)arg1;	// IMP=0x0010000000d11a11
- (unsigned long long)binForDistance:(double)arg1;	// IMP=0x0010000000d119b8
- (void)dealloc;	// IMP=0x0010000000d11952
- (id)initWithUniverse:(id)arg1 fenceAnalyticsManager:(id)arg2;	// IMP=0x0010000000d1189e

@end

