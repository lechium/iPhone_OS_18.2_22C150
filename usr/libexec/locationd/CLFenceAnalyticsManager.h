//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <LocationSupport/CLIntersiloService.h>

@class CLFenceStateChangeAnalytics, NSMutableDictionary, NSString;
@protocol CLFenceManagerProtocol, CLMotionStateProtocol, CLRoutineMonitorServiceProtocol;

@interface CLFenceAnalyticsManager : CLIntersiloService
{
    shared_ptr_a3117978 _stepCountDb;	// 8 = 0x8
    id <CLMotionStateProtocol> _motionStateProxy;	// 24 = 0x18
    id <CLFenceManagerProtocol> _fenceManagerProxy;	// 32 = 0x20
    struct unique_ptr<CLFenceManager_Type::Client, std::default_delete<CLFenceManager_Type::Client>> _fenceMonitorClient;	// 40 = 0x28
    _Bool _isSimulatingLocation;	// 48 = 0x30
    id <CLRoutineMonitorServiceProtocol> _routineMonitor;	// 56 = 0x38
    CLFenceStateChangeAnalytics *_stateChangeAnalytics;	// 64 = 0x40
    NSMutableDictionary *_historicalFenceStates;	// 72 = 0x48
}

+ (id)regionForFence:(struct Fence)arg1;	// IMP=0x00200000005eb01b
+ (id)getSilo;	// IMP=0x00100000005ea578
+ (void)performSyncOnSilo:(id)arg1 invoker:(CDUnknownBlockType)arg2;	// IMP=0x00100000005ea55f
+ (void)becameFatallyBlocked:(id)arg1 index:(unsigned long long)arg2;	// IMP=0x00100000005ea502
+ (_Bool)isSupported;	// IMP=0x00100000005ea4b7
- (id).cxx_construct;	// IMP=0x00200000005ec130
- (void).cxx_destruct;	// IMP=0x00100000005ec0f4
@property(retain, nonatomic) NSMutableDictionary *historicalFenceStates; // @synthesize historicalFenceStates=_historicalFenceStates;
@property(nonatomic) _Bool isSimulatingLocation; // @synthesize isSimulatingLocation=_isSimulatingLocation;
@property(retain, nonatomic) CLFenceStateChangeAnalytics *stateChangeAnalytics; // @synthesize stateChangeAnalytics=_stateChangeAnalytics;
@property(retain, nonatomic) id <CLRoutineMonitorServiceProtocol> routineMonitor; // @synthesize routineMonitor=_routineMonitor;
-     // Error parsing type: v1716@0:8i16{NotificationData={Fence={basic_string<char, std::char_traits<char>, std::allocator<char>>={__compressed_pair<std::basic_string<char>::__rep, std::allocator<char>>={__rep=(?={__short={?=b1b7}[0c][23c]}{__long={?=b1b63}Q*}{__raw=[3Q]})}}}{basic_string<char, std::char_traits<char>, std::allocator<char>>={__compressed_pair<std::basic_string<char>::__rep, std::allocator<char>>={__rep=(?={__short={?=b1b7}[0c][23c]}{__long={?=b1b63}Q*}{__raw=[3Q]})}}}{basic_string<char, std::char_traits<char>, std::allocator<char>>={__compressed_pair<std::basic_string<char>::__rep, std::allocator<char>>={__rep=(?={__short={?=b1b7}[0c][23c]}{__long={?=b1b63}Q*}{__raw=[3Q]})}}}ddddddddiiidQiiBiiB{basic_string<char, std::char_traits<char>, std::allocator<char>>={__compressed_pair<std::basic_string<char>::__rep, std::allocator<char>>={__rep=(?={__short={?=b1b7}[0c][23c]}{__long={?=b1b63}Q*}{__raw=[3Q]})}}}{CLStrongPtr<NSUUID *>=@}{vector<CLClientLocationCoordinate, std::allocator<CLClientLocationCoordinate>>=^{?}^{?}{__compressed_pair<CLClientLocationCoordinate *, std::allocator<CLClientLocationCoordinate>>=^{?}}}}{Fence={basic_string<char, std::char_traits<char>, std::allocator<char>>={__compressed_pair<std::basic_string<char>::__rep, std::allocator<char>>={__rep=(?={__short={?=b1b7}[0c][23c]}{__long={?=b1b63}Q*}{__raw=[3Q]})}}}{basic_string<char, std::char_traits<char>, std::allocator<char>>={__compressed_pair<std::basic_string<char>::__rep, std::allocator<char>>={__rep=(?={__short={?=b1b7}[0c][23c]}{__long={?=b1b63}Q*}{__raw=[3Q]})}}}{basic_string<char, std::char_traits<char>, std::allocator<char>>={__compressed_pair<std::basic_string<char>::__rep, std::allocator<char>>={__rep=(?={__short={?=b1b7}[0c][23c]}{__long={?=b1b63}Q*}{__raw=[3Q]})}}}ddddddddiiidQiiBiiB{basic_string<char, std::char_traits<char>, std::allocator<char>>={__compressed_pair<std::basic_string<char>::__rep, std::allocator<char>>={__rep=(?={__short={?=b1b7}[0c][23c]}{__long={?=b1b63}Q*}{__raw=[3Q]})}}}{CLStrongPtr<NSUUID *>=@}{vector<CLClientLocationCoordinate, std::allocator<CLClientLocationCoordinate>>=^{?}^{?}{__compressed_pair<CLClientLocationCoordinate *, std::allocator<CLClientLocationCoordinate>>=^{?}}}}{CLDaemonLocation=ii{?=dd}ddddddddddidi{?=dd}diIiiidB}id{FenceMonitorAnalytics=i{CLFenceAnalyticsGeofenceEventTimes=Bdddddddddddddd}d{CLDaemonLocation=ii{?=dd}ddddddddddidi{?=dd}diIiiidB}{CLDaemonLocation=ii{?=dd}ddddddddddidi{?=dd}diIiiidB}{CLDaemonLocation=ii{?=dd}ddddddddddidi{?=dd}diIiiidB}iiiddddddd{CLMotionActivity=iiiiiidBfdBidi{FsmTransitionData=CCCS} dii{?=b1b1b1b1b1}iidQi}{CLMotionActivity=iiiiiidBfdBidi{FsmTransitionData=CCCS} dii{?=b1b1b1b1b1}iidQi}}}20, name: onMonitorNotification:data:
- (id)historicalFenceStateForFenceName:(id)arg1;	// IMP=0x00100000005eb8c6
- (id)historicalFenceStateForFence:(struct Fence)arg1;	// IMP=0x00100000005eb859
- (void)fetchLocationSystemStateWithHandler:(CDUnknownBlockType)arg1;	// IMP=0x00100000005eb733
- (void)updateTimeToInitialStateChangeForFence:(struct Fence)arg1 previousStatus:(int)arg2 timeOfStateChange:(double)arg3;	// IMP=0x00100000005eb69c
-     // Error parsing type: B1712@0:8{NotificationData={Fence={basic_string<char, std::char_traits<char>, std::allocator<char>>={__compressed_pair<std::basic_string<char>::__rep, std::allocator<char>>={__rep=(?={__short={?=b1b7}[0c][23c]}{__long={?=b1b63}Q*}{__raw=[3Q]})}}}{basic_string<char, std::char_traits<char>, std::allocator<char>>={__compressed_pair<std::basic_string<char>::__rep, std::allocator<char>>={__rep=(?={__short={?=b1b7}[0c][23c]}{__long={?=b1b63}Q*}{__raw=[3Q]})}}}{basic_string<char, std::char_traits<char>, std::allocator<char>>={__compressed_pair<std::basic_string<char>::__rep, std::allocator<char>>={__rep=(?={__short={?=b1b7}[0c][23c]}{__long={?=b1b63}Q*}{__raw=[3Q]})}}}ddddddddiiidQiiBiiB{basic_string<char, std::char_traits<char>, std::allocator<char>>={__compressed_pair<std::basic_string<char>::__rep, std::allocator<char>>={__rep=(?={__short={?=b1b7}[0c][23c]}{__long={?=b1b63}Q*}{__raw=[3Q]})}}}{CLStrongPtr<NSUUID *>=@}{vector<CLClientLocationCoordinate, std::allocator<CLClientLocationCoordinate>>=^{?}^{?}{__compressed_pair<CLClientLocationCoordinate *, std::allocator<CLClientLocationCoordinate>>=^{?}}}}{Fence={basic_string<char, std::char_traits<char>, std::allocator<char>>={__compressed_pair<std::basic_string<char>::__rep, std::allocator<char>>={__rep=(?={__short={?=b1b7}[0c][23c]}{__long={?=b1b63}Q*}{__raw=[3Q]})}}}{basic_string<char, std::char_traits<char>, std::allocator<char>>={__compressed_pair<std::basic_string<char>::__rep, std::allocator<char>>={__rep=(?={__short={?=b1b7}[0c][23c]}{__long={?=b1b63}Q*}{__raw=[3Q]})}}}{basic_string<char, std::char_traits<char>, std::allocator<char>>={__compressed_pair<std::basic_string<char>::__rep, std::allocator<char>>={__rep=(?={__short={?=b1b7}[0c][23c]}{__long={?=b1b63}Q*}{__raw=[3Q]})}}}ddddddddiiidQiiBiiB{basic_string<char, std::char_traits<char>, std::allocator<char>>={__compressed_pair<std::basic_string<char>::__rep, std::allocator<char>>={__rep=(?={__short={?=b1b7}[0c][23c]}{__long={?=b1b63}Q*}{__raw=[3Q]})}}}{CLStrongPtr<NSUUID *>=@}{vector<CLClientLocationCoordinate, std::allocator<CLClientLocationCoordinate>>=^{?}^{?}{__compressed_pair<CLClientLocationCoordinate *, std::allocator<CLClientLocationCoordinate>>=^{?}}}}{CLDaemonLocation=ii{?=dd}ddddddddddidi{?=dd}diIiiidB}id{FenceMonitorAnalytics=i{CLFenceAnalyticsGeofenceEventTimes=Bdddddddddddddd}d{CLDaemonLocation=ii{?=dd}ddddddddddidi{?=dd}diIiiidB}{CLDaemonLocation=ii{?=dd}ddddddddddidi{?=dd}diIiiidB}{CLDaemonLocation=ii{?=dd}ddddddddddidi{?=dd}diIiiidB}iiiddddddd{CLMotionActivity=iiiiiidBfdBidi{FsmTransitionData=CCCS} dii{?=b1b1b1b1b1}iidQi}{CLMotionActivity=iiiiiidBfdBidi{FsmTransitionData=CCCS} dii{?=b1b1b1b1b1}iidQi}}}16, name: updateHistoricalFenceStateWithNotificationData:
- (void)fetchLocationOfInterestForRegion:(id)arg1 handler:(CDUnknownBlockType)arg2;	// IMP=0x00100000005eb227
- (void)fetchLocationOfInterestForFence:(struct Fence)arg1 handler:(CDUnknownBlockType)arg2;	// IMP=0x00100000005eb0c7
- (struct CLStepDistance)fetchStepCountInInterval:(id)arg1;	// IMP=0x00100000005eaf80
- (void)fetchDominantMotionActivityInInterval:(id)arg1 handler:(CDUnknownBlockType)arg2;	// IMP=0x00100000005eae18
- (void)fetchMotionActivitiesInInterval:(id)arg1 handler:(CDUnknownBlockType)arg2;	// IMP=0x00100000005eac81
- (id)queue;	// IMP=0x00100000005eac4a
- (void)endService;	// IMP=0x00100000005eabb4
- (void)beginService;	// IMP=0x00100000005ea611
- (id)init;	// IMP=0x00100000005ea5d4

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
// Preceding property had unknown attributes: ?
// Original attribute string: T@"NSString",?,R,C

@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;
@property(nonatomic) _Bool valid;

@end

