//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <objc/NSObject.h>

@class CNPublishingSubject;
@protocol CNCancelable, CNScheduler;

@interface CNAnalyzeDatabaseService : NSObject
{
    CNPublishingSubject *_coalescer;	// 8 = 0x8
    id <CNCancelable> _coalescingToken;	// 16 = 0x10
    CNPublishingSubject *_analyzer;	// 24 = 0x18
    id <CNCancelable> _analyzingToken;	// 32 = 0x20
    id <CNScheduler> _lowPriorityWorkQueue;	// 40 = 0x28
    id <CNScheduler> _highPriorityWorkQueue;	// 48 = 0x30
}

+ (id)makeWorkQueueUsingSchedulerProvider:(id)arg1 withName:(id)arg2 qualityOfService:(unsigned long long)arg3;	// IMP=0x002000000000b6c8
+ (id)sharedInstance;	// IMP=0x001000000000b42a
+ (id)log;	// IMP=0x001000000000b3ce
- (void).cxx_destruct;	// IMP=0x002000000000be03
@property(readonly, nonatomic) id <CNScheduler> highPriorityWorkQueue; // @synthesize highPriorityWorkQueue=_highPriorityWorkQueue;
@property(readonly, nonatomic) id <CNScheduler> lowPriorityWorkQueue; // @synthesize lowPriorityWorkQueue=_lowPriorityWorkQueue;
@property(retain, nonatomic) id <CNCancelable> analyzingToken; // @synthesize analyzingToken=_analyzingToken;
@property(retain, nonatomic) CNPublishingSubject *analyzer; // @synthesize analyzer=_analyzer;
@property(retain, nonatomic) id <CNCancelable> coalescingToken; // @synthesize coalescingToken=_coalescingToken;
@property(retain, nonatomic) CNPublishingSubject *coalescer; // @synthesize coalescer=_coalescer;
- (void)handleAnalyzingEvent:(id)arg1;	// IMP=0x001000000000bb79
- (void)handleCoalescedShouldAnalyzeEvent:(id)arg1;	// IMP=0x001000000000b8f5
- (void)handleNotificationName:(id)arg1;	// IMP=0x001000000000b79e
- (id)interestedNotifications;	// IMP=0x001000000000b72c
- (id)init;	// IMP=0x001000000000b4af

@end

