//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <objc/NSObject.h>

@class CKOperation, CKOperationGroup, CKRecordID, CPLBackgroundActivity, CPLCKRecordFetchCache, CPLFingerprintContext, CPLSyncSession, CPLTransportScopeMapping, MISSING_TYPE, NSArray, NSDictionary, NSError, NSMutableArray, NSMutableDictionary, NSMutableSet, NSProgress, NSString, NSURL;
@protocol CPLCloudKitTaskController, CPLCloudKitTransportTaskGate, CPLEngineStoreUserIdentifier, CPLEngineTransportGroup, OS_dispatch_queue;

@interface CPLCloudKitTransportTask : NSObject
{
    NSMutableArray *_currentOperations;	// 8 = 0x8
    NSMutableArray *_lastOperationRequestUUIDs;	// 16 = 0x10
    NSMutableDictionary *_cachedScopes;	// 24 = 0x18
    NSMutableDictionary *_cacheScopeIdentifiersPerZoneID;	// 32 = 0x20
    NSObject<OS_dispatch_queue> *_queue;	// 40 = 0x28
    NSObject<OS_dispatch_queue> *_synchronousWorkQueue;	// 48 = 0x30
    _Bool _mustCallTaskDidFinish;	// 56 = 0x38
    unsigned long long _nonCKOperationCount;	// 64 = 0x40
    _Bool _foregroundHasBeenChanged;	// 72 = 0x48
    _Bool _hasProgress;	// 73 = 0x49
    NSProgress *_progress;	// 80 = 0x50
    NSObject<OS_dispatch_queue> *_progressQueue;	// 88 = 0x58
    NSMutableSet *_associatedMetrics;	// 96 = 0x60
    id _activityRequest;	// 104 = 0x68
    NSError *_acquireError;	// 112 = 0x70
    CPLBackgroundActivity *_activity;	// 120 = 0x78
    _Bool _cancelled;	// 128 = 0x80
    NSURL *_temporaryFolderURL;	// 136 = 0x88
    NSProgress *_callbackOperationProgress;	// 144 = 0x90
    id _activityEligibilityChangeHandler;	// 152 = 0x98
    _Bool _highPriorityBackground;	// 160 = 0xa0
    _Bool _forcedTask;	// 161 = 0xa1
    _Bool _backgroundTask;	// 162 = 0xa2
    _Bool _allowsFetchCache;	// 163 = 0xa3
    _Bool _foreground;	// 164 = 0xa4
    _Bool _allowsCellular;	// 165 = 0xa5
    _Bool _boostable;	// 166 = 0xa6
    _Bool _isUpload;	// 167 = 0xa7
    _Bool _isMetadata;	// 168 = 0xa8
    _Bool _hasBackgroundActivity;	// 169 = 0xa9
    id <CPLEngineStoreUserIdentifier> _transportUserIdentifier;	// 176 = 0xb0
    id <CPLEngineTransportGroup> _transportGroup;	// 184 = 0xb8
    id trackingContext;	// 192 = 0xc0
    id <CPLCloudKitTaskController> _controller;	// 200 = 0xc8
    id <CPLCloudKitTransportTaskGate> _gate;	// 208 = 0xd0
    CPLSyncSession *_session;	// 216 = 0xd8
    CPLCKRecordFetchCache *_fetchCache;	// 224 = 0xe0
    MISSING_TYPE *_sourceBundleIdentifier;	// 232 = 0xe8
    double _timeoutIntervalForRequest;	// 240 = 0xf0
    double _timeoutIntervalForResource;	// 248 = 0xf8
    NSString *_idleDescription;	// 256 = 0x100
    CPLTransportScopeMapping *_transportScopeMapping;	// 264 = 0x108
}

+ (_Bool)allowsCellularForDownloadOperationOfSize:(unsigned long long)arg1 isForeground:(_Bool)arg2 isHighPriority:(_Bool)arg3;	// IMP=0x002000000006c3f9
+ (_Bool)allowsCellularForDownloadOperationOfResource:(id)arg1 isForeground:(_Bool)arg2 isHighPriority:(_Bool)arg3;	// IMP=0x001000000006c384
+ (void)initialize;	// IMP=0x0010000000065c7f
+ (id)reverseMappingForMoveSteps;	// IMP=0x001000000003c8dd
+ (id)mappingForMoveSteps;	// IMP=0x001000000003c7dd
+ (void)setMoveStepFaultInjector:(CDUnknownBlockType)arg1;	// IMP=0x001000000003c7b4
+ (CDUnknownBlockType)moveStepFaultInjector;	// IMP=0x001000000003c79b
+ (id)copiedRecordFromSourceRecord:(id)arg1 sourceDatabaseScope:(long long)arg2 toRecordID:(id)arg3 helper:(id)arg4 action:(id)arg5 error:(id *)arg6;	// IMP=0x001000000003890d
- (void).cxx_destruct;	// IMP=0x002000000006d9b5
@property(retain, nonatomic) CPLTransportScopeMapping *transportScopeMapping; // @synthesize transportScopeMapping=_transportScopeMapping;
@property _Bool hasBackgroundActivity; // @synthesize hasBackgroundActivity=_hasBackgroundActivity;
@property(copy) NSString *idleDescription; // @synthesize idleDescription=_idleDescription;
@property(nonatomic) _Bool isMetadata; // @synthesize isMetadata=_isMetadata;
@property(nonatomic) _Bool isUpload; // @synthesize isUpload=_isUpload;
@property(readonly, nonatomic) double timeoutIntervalForResource; // @synthesize timeoutIntervalForResource=_timeoutIntervalForResource;
@property(readonly, nonatomic) double timeoutIntervalForRequest; // @synthesize timeoutIntervalForRequest=_timeoutIntervalForRequest;
@property(nonatomic, getter=isBoostable) _Bool boostable; // @synthesize boostable=_boostable;
@property(nonatomic) _Bool allowsCellular; // @synthesize allowsCellular=_allowsCellular;
@property(copy, nonatomic) NSString *sourceBundleIdentifier; // @synthesize sourceBundleIdentifier=_sourceBundleIdentifier;
@property(retain, nonatomic) CPLCKRecordFetchCache *fetchCache; // @synthesize fetchCache=_fetchCache;
@property(readonly, nonatomic) CPLSyncSession *session; // @synthesize session=_session;
@property(retain, nonatomic) id <CPLCloudKitTransportTaskGate> gate; // @synthesize gate=_gate;
@property(readonly, nonatomic) id <CPLCloudKitTaskController> controller; // @synthesize controller=_controller;
@property(retain, nonatomic) id trackingContext; // @synthesize trackingContext;
@property(nonatomic) _Bool allowsFetchCache; // @synthesize allowsFetchCache=_allowsFetchCache;
@property(nonatomic, getter=isBackgroundTask) _Bool backgroundTask; // @synthesize backgroundTask=_backgroundTask;
@property(nonatomic, getter=isForcedTask) _Bool forcedTask; // @synthesize forcedTask=_forcedTask;
@property(nonatomic, getter=isHighPriorityBackground) _Bool highPriorityBackground; // @synthesize highPriorityBackground=_highPriorityBackground;
@property(retain, nonatomic) id <CPLEngineTransportGroup> transportGroup; // @synthesize transportGroup=_transportGroup;
@property(retain, nonatomic) id <CPLEngineStoreUserIdentifier> transportUserIdentifier; // @synthesize transportUserIdentifier=_transportUserIdentifier;
- (id)rejectedScopedIdentifierForRejectedCKRecordID:(id)arg1;	// IMP=0x001000000006d7a2
- (id)scopedIdentifierForCKRecordID:(id)arg1;	// IMP=0x001000000006d6fa
- (id)scopeIdentifierFromZoneID:(id)arg1;	// IMP=0x001000000006d681
- (id)_scopeIdentifierFromZoneID:(id)arg1;	// IMP=0x001000000006d50b
- (id)zoneIDFromScopeIdentifier:(id)arg1;	// IMP=0x001000000006d46e
@property(copy, nonatomic) NSDictionary *transportScopes;
- (id)cloudKitScopeForScopeIdentifier:(id)arg1;	// IMP=0x001000000006d21c
- (MISSING_TYPE *)enumerateAllZonesWithBlock:completionHandler: /* Error: Ran out of types for this method. */;	// IMP=0x001000000006d06e
- (void)_enumerateAllZonesForSharedDatabase:(_Bool)arg1 block:(CDUnknownBlockType)arg2 completionHandler:(CDUnknownBlockType)arg3;	// IMP=0x001000000006cb0b
- (void)fetchUserRecordIDFetchWithCompletionHandler:(CDUnknownBlockType)arg1;	// IMP=0x001000000006c63d
- (void)getUserRecordIDFetchIfNecessaryWithCompletionHandler:(CDUnknownBlockType)arg1;	// IMP=0x001000000006c411
- (id)_networkBehaviorForConfiguration:(id)arg1;	// IMP=0x001000000006c357
- (id)_stringForQoS:(long long)arg1;	// IMP=0x001000000006c330
- (id)baseConfigurationForTask;	// IMP=0x001000000006bfc3
- (void)setupConfigurationForOperation:(id)arg1;	// IMP=0x001000000006bd03
- (_Bool)_operationsShouldBeDiscretionary;	// IMP=0x001000000006bc0f
- (void)runOperations;	// IMP=0x001000000006bb55
- (void)processErrorIfNeeded:(id)arg1;	// IMP=0x001000000006bb39
- (void)popTaskOperation;	// IMP=0x001000000006bb1c
- (void)pushTaskOperation;	// IMP=0x001000000006baff
- (void)taskDidFinish;	// IMP=0x001000000006b6be
- (id)operationDidFinish:(id)arg1 error:(id)arg2;	// IMP=0x001000000006b122
- (void)updateContextWithBlock:(CDUnknownBlockType)arg1 forOperation:(id)arg2;	// IMP=0x001000000006b05e
- (void)updateProgress:(double)arg1 forOperation:(id)arg2;	// IMP=0x001000000006afb5
- (void)updateOneBatchForOperation:(id)arg1;	// IMP=0x001000000006af16
- (void)associateMetric:(id)arg1;	// IMP=0x001000000006ae87
- (_Bool)deleteTemporaryFolderWithError:(id *)arg1;	// IMP=0x001000000006adb3
- (void)getTemporaryFolderWithCompletionHandler:(CDUnknownBlockType)arg1;	// IMP=0x001000000006a99d
- (void)acquireHelperWithIdentifier:(id)arg1 completionHandler:(CDUnknownBlockType)arg2;	// IMP=0x001000000006a5d7
@property(readonly, nonatomic) NSArray *lastOperationRequestUUIDs;
- (void)executeSynchronousWork:(CDUnknownBlockType)arg1 onItems:(id)arg2 description:(id)arg3 completionHandler:(CDUnknownBlockType)arg4;	// IMP=0x001000000006a2f0
- (void)executeSynchronousWork:(CDUnknownBlockType)arg1 description:(id)arg2 completionHandler:(CDUnknownBlockType)arg3;	// IMP=0x00100000000698bb
- (void)dispatchSynchronousWork:(CDUnknownBlockType)arg1;	// IMP=0x001000000006978a
@property(readonly, nonatomic) NSObject<OS_dispatch_queue> *synchronousWorkQueue;
- (id)callbackOperationDidFinishWithError:(id)arg1;	// IMP=0x001000000006950c
- (void)dispatchCallbackOperation:(id)arg1 progress:(id)arg2;	// IMP=0x001000000006910c
- (void)_cancelCallbackProgress;	// IMP=0x001000000006904b
- (id)operationDidFinishWithError:(id)arg1;	// IMP=0x0010000000068e12
- (void)updateContextWithBlock:(CDUnknownBlockType)arg1;	// IMP=0x0010000000068bc1
- (void)updateProgress:(double)arg1;	// IMP=0x001000000006897c
- (void)updateOneBatch;	// IMP=0x001000000006876f
- (void)launchOperation:(id)arg1 type:(long long)arg2 withContext:(id)arg3 sourceBundleIdentifiers:(id)arg4;	// IMP=0x0010000000067c2f
- (void)launchOperation:(id)arg1 type:(long long)arg2 withContext:(id)arg3;	// IMP=0x0010000000067afc
@property(readonly, nonatomic) CKOperation *currentOperation;
- (_Bool)shouldRunOperationsWithError:(id *)arg1;	// IMP=0x00100000000676f7
- (void)dispatchAfter:(double)arg1 block:(CDUnknownBlockType)arg2;	// IMP=0x00100000000675a6
- (void)dispatchAsync:(CDUnknownBlockType)arg1;	// IMP=0x0010000000067409
- (CDUnknownBlockType)blockWithAdaptedQOS:(CDUnknownBlockType)arg1;	// IMP=0x001000000006737f
- (void)cancelIfBlocked;	// IMP=0x001000000006711f
- (void)_cancelAllOperationsIfBlocked;	// IMP=0x0010000000066d6f
- (void)cancel;	// IMP=0x0010000000066825
- (void)runWithinSyncSession:(id)arg1;	// IMP=0x0010000000066813
- (void)runWithNoSyncSession;	// IMP=0x00100000000667ff
- (void)_runWithSyncSession:(id)arg1;	// IMP=0x00100000000662ba
- (void)_acquireActivityAndLaunchOperation;	// IMP=0x0010000000065fe9
- (void)_reallyStartOperation;	// IMP=0x0010000000065f8f
@property(nonatomic) _Bool foreground; // @synthesize foreground=_foreground;
@property(readonly, nonatomic) CKOperationGroup *operationGroup;
@property(readonly, nonatomic) CKRecordID *currentUserID;
@property(readonly, nonatomic) NSString *mainScopeIdentifier;
- (id)initWithController:(id)arg1;	// IMP=0x0010000000065d20
@property(readonly) CPLFingerprintContext *fingerprintContext;
- (id)finalizedDestinationCKRecordFromProposedCKRecord:(id)arg1 error:(id *)arg2;	// IMP=0x001000000003cb1f
- (id)recordNameInDestinationCKRecordFromRecordName:(id)arg1 error:(id *)arg2;	// IMP=0x001000000003cb09
- (_Bool)shouldCopyCKRecordKeyToDestinationCKRecord:(id)arg1;	// IMP=0x001000000003cb01
- (id)baseDestinationCKRecordForSourceCKRecord:(id)arg1 destinationCKRecordID:(id)arg2 error:(id *)arg3;	// IMP=0x001000000003ca5f
- (void)prepareCopyForCKRecordID:(id)arg1 fromCKRecord:(id)arg2;	// IMP=0x001000000003ca59
- (_Bool)shouldCopyForCKRecordID:(id)arg1 fromCKRecord:(id)arg2;	// IMP=0x001000000003ca51
- (void)moveRecordsWithIDs:(id)arg1 followRemapping:(_Bool)arg2 sourceType:(long long)arg3 destinationRecordIDs:(id)arg4 destinationType:(long long)arg5 helper:(id)arg6 finalizeMoveChanges:(CDUnknownBlockType)arg7 completionHandler:(CDUnknownBlockType)arg8;	// IMP=0x001000000003c179
- (void)moveRecordsWithIDs:(id)arg1 followRemapping:(_Bool)arg2 sourceType:(long long)arg3 destinationRecordIDs:(id)arg4 destinationType:(long long)arg5 helper:(id)arg6 completionHandler:(CDUnknownBlockType)arg7;	// IMP=0x001000000003c12b
- (id)_moveChangesFromSourceRecords:(id)arg1 recordIDs:(id)arg2 sourceType:(long long)arg3 destinationRecordIDs:(id)arg4 helper:(id)arg5 sourceRecordIDs:(id *)arg6 operationContext:(id)arg7 error:(id *)arg8;	// IMP=0x001000000003b700
- (void)_applyMoveChanges:(id)arg1 sourceType:(long long)arg2 destinationType:(long long)arg3 helper:(id)arg4 operationContext:(id)arg5 completionHandler:(CDUnknownBlockType)arg6;	// IMP=0x001000000003ab69
- (void)copyRecordsWithIDs:(id)arg1 sourceType:(long long)arg2 destinationRecordIDs:(id)arg3 destinationType:(long long)arg4 completionHandler:(CDUnknownBlockType)arg5;	// IMP=0x001000000003aaa1
- (void)copyRecordsWithIDs:(id)arg1 followRemapping:(_Bool)arg2 sourceType:(long long)arg3 destinationRecordIDs:(id)arg4 destinationType:(long long)arg5 helper:(id)arg6 completionHandler:(CDUnknownBlockType)arg7;	// IMP=0x001000000003a492
- (void)uploadDestinationRecords:(id)arg1 destinationType:(long long)arg2 scopeProvider:(id)arg3 completionHandler:(CDUnknownBlockType)arg4;	// IMP=0x001000000003a46b
- (void)_uploadDestinationRecords:(id)arg1 destinationType:(long long)arg2 scopeProvider:(id)arg3 operationContext:(id)arg4 uploadAction:(id)arg5 completionHandler:(CDUnknownBlockType)arg6;	// IMP=0x0010000000039a83
- (id)_destinationRecordsFromSourceRecords:(id)arg1 recordIDs:(id)arg2 sourceType:(long long)arg3 destinationRecordIDs:(id)arg4 helper:(id)arg5 sourceRecordIDs:(id *)arg6 operationContext:(id)arg7 action:(id)arg8 error:(id *)arg9;	// IMP=0x00100000000394dc
- (void)fetchRecordsFollowRemappingWithIDs:(id)arg1 wantsAllRecords:(_Bool)arg2 type:(long long)arg3 completionHandler:(CDUnknownBlockType)arg4;	// IMP=0x00100000000852d4
- (id)_recordWithRecordID:(id)arg1 usingRealRecords:(id)arg2 remappedRecordIDs:(id)arg3 wantsAllRecords:(_Bool)arg4;	// IMP=0x0010000000084e89
- (void)_fetchRecordsFollowRemappingWithIDs:(id)arg1 alreadyFetchRecordIDs:(id)arg2 remappedRecordIDs:(id)arg3 realRecords:(id)arg4 type:(long long)arg5 storeRequestUUIDsIn:(id)arg6 completionHandler:(CDUnknownBlockType)arg7;	// IMP=0x001000000008497e
- (void)fetchZoneForScope:(id)arg1 completionHandler:(CDUnknownBlockType)arg2;	// IMP=0x001000000008469e
- (void)_fetchZoneForZoneID:(id)arg1 operationType:(long long)arg2 completionHandler:(CDUnknownBlockType)arg3;	// IMP=0x0010000000084130
- (void)fetchPlaceholderRecordsForScopedIdentifiers:(id)arg1 targetMapping:(id)arg2 completionHandler:(CDUnknownBlockType)arg3;	// IMP=0x0010000000083b4a
- (void)fetchUnknownTargetsInMapping:(id)arg1 completionHandler:(CDUnknownBlockType)arg2;	// IMP=0x00100000000838e5
- (void)fetchFullRecordsForScopedIdentifiers:(id)arg1 targetMapping:(id)arg2 completionHandler:(CDUnknownBlockType)arg3;	// IMP=0x00100000000836e4
- (void)_fetchRecordsForRemainingScopedIdentifiers:(id)arg1 alreadyFetchedScopedIdentifiers:(id)arg2 userRecordID:(id)arg3 foundCPLRecords:(id)arg4 foundCKRecords:(id)arg5 targetMapping:(id)arg6 completionHandler:(CDUnknownBlockType)arg7;	// IMP=0x0010000000082f62
- (_Bool)_mergeFoundCKRecords:(id)arg1 updateFoundCPLRecords:(id)arg2 remainingScopedIdentifiers:(id)arg3 fetchedScopedIdentifiers:(id)arg4 userRecordID:(id)arg5 targetMapping:(id)arg6 error:(id *)arg7;	// IMP=0x001000000008131d
- (void)_mergePrivateRecord:(id)arg1 withSharedRecord:(id)arg2 merger:(id)arg3;	// IMP=0x0010000000081213
- (id)_sharedRecordToPrivateRecord:(id)arg1 scopedIdentifier:(id)arg2;	// IMP=0x0010000000081119
- (id)_interpretedSharedChangeFromCKRecord:(id)arg1 scopedIdentifier:(id)arg2 userRecordID:(id)arg3;	// IMP=0x0010000000081039
- (id)_interpretedChangeFromCKRecord:(id)arg1 scopedIdentifier:(id)arg2 userRecordID:(id)arg3;	// IMP=0x0010000000080c33
- (void)fetchRecordWithScopedIdentifiers:(id)arg1 completionHandler:(CDUnknownBlockType)arg2;	// IMP=0x0010000000080c1c
- (void)_fetchRecordWithScopedIdentifiers:(id)arg1 followRemapping:(_Bool)arg2 completionHandler:(CDUnknownBlockType)arg3;	// IMP=0x0010000000080612
- (void)_fetchNextOperationType:(id)arg1 followRemapping:(_Bool)arg2 recordIDMapping:(id)arg3 inResult:(id)arg4 storeRequestUUIDsIn:(id)arg5 completionHandler:(CDUnknownBlockType)arg6;	// IMP=0x00100000000801e6
- (void)fetchRecordWithNames:(id)arg1 inScope:(id)arg2 completionHandler:(CDUnknownBlockType)arg3;	// IMP=0x00100000000801cc
- (void)fetchRecordsWithIDs:(id)arg1 fetchResources:(_Bool)arg2 inScope:(id)arg3 completionHandler:(CDUnknownBlockType)arg4;	// IMP=0x00100000000800a7
- (void)fetchRecordWithNames:(id)arg1 fetchResources:(_Bool)arg2 inScope:(id)arg3 completionHandler:(CDUnknownBlockType)arg4;	// IMP=0x001000000007fb6c
- (void)fetchRecordsWithIDs:(id)arg1 fetchResources:(_Bool)arg2 wantsAllRecords:(_Bool)arg3 type:(long long)arg4 completionHandler:(CDUnknownBlockType)arg5;	// IMP=0x001000000007fb48
- (void)fetchRecordsWithIDs:(id)arg1 fetchResources:(_Bool)arg2 desiredKeys:(id)arg3 wantsAllRecords:(_Bool)arg4 type:(long long)arg5 perFoundRecordBlock:(CDUnknownBlockType)arg6 completionHandler:(CDUnknownBlockType)arg7;	// IMP=0x001000000007ea35
- (void)fetchRecordsWithIDs:(id)arg1 fetchResources:(_Bool)arg2 desiredKeys:(id)arg3 wantsAllRecords:(_Bool)arg4 type:(long long)arg5 completionHandler:(CDUnknownBlockType)arg6;	// IMP=0x001000000007ea12
- (void)uploadRecords:(id)arg1 cloudKitScope:(id)arg2 scopeProvider:(id)arg3 completionHandler:(CDUnknownBlockType)arg4;	// IMP=0x001000000009f977
- (void)updateRecords:(id)arg1 cloudKitScope:(id)arg2 completionHandler:(CDUnknownBlockType)arg3;	// IMP=0x001000000009f4b6
- (void)updatePrivatePropertiesOnAssetsWithScopedIdentifiers:(id)arg1 desiredKeys:(id)arg2 destinationZoneIdentification:(id)arg3 sharedZoneIdentification:(id)arg4 targetMapping:(id)arg5 knownRecords:(id)arg6 shouldUpdateRecord:(CDUnknownBlockType)arg7 updateBlock:(CDUnknownBlockType)arg8 completionHandler:(CDUnknownBlockType)arg9;	// IMP=0x001000000009e14a
- (id)_errorForUpdateError:(id)arg1 scopeProvider:(id)arg2;	// IMP=0x001000000009dfb5
- (void)_createSparsePrivateRecordsIfNecessary:(id)arg1 recordClass:(Class)arg2 userRecordID:(id)arg3 completionHandler:(CDUnknownBlockType)arg4;	// IMP=0x001000000009d6a6

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
// Preceding property had unknown attributes: ?
// Original attribute string: T@"NSString",?,R,C

@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

