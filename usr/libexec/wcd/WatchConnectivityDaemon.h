//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <objc/NSObject.h>

@class IDSDevice, IDSService, NSMutableArray, NSMutableDictionary, NSSet, NSString, NSXPCListener, WCDFirstUnlockManager, WCDPairedSyncManager, WCDPrivateClient;
@protocol CLManagerInterface;

@interface WatchConnectivityDaemon : NSObject
{
    NSXPCListener *_xpcPrivateListener;	// 8 = 0x8
    WCDPrivateClient *_privateClient;	// 16 = 0x10
    WCDFirstUnlockManager *_firstUnlockManager;	// 24 = 0x18
    WCDPairedSyncManager *_pairedSyncManager;	// 32 = 0x20
    NSXPCListener *_xpcListener;	// 40 = 0x28
    NSMutableDictionary *_communicationIdentifierToClient;	// 48 = 0x30
    NSMutableDictionary *_sendIdentifierToHandler;	// 56 = 0x38
    NSMutableDictionary *_pendingMessageRequests;	// 64 = 0x40
    NSMutableArray *_readyBlocks;	// 72 = 0x48
    NSMutableDictionary *_coreLocationAssertions;	// 80 = 0x50
    NSMutableDictionary *_companionAppAssertions;	// 88 = 0x58
    NSSet *_counterpartClientCommunicationIdentifiers;	// 96 = 0x60
    id <CLManagerInterface> _locationManager;	// 104 = 0x68
    NSString *_idsServiceIdentifier;	// 112 = 0x70
    NSString *_idsInsecureServiceIdentifier;	// 120 = 0x78
    IDSService *_idsService;	// 128 = 0x80
    IDSService *_insecureIDSService;	// 136 = 0x88
}

+ (id)sharedDaemon;	// IMP=0x00200000000134c4
- (void).cxx_destruct;	// IMP=0x0020000000020ee5
@property(readonly) IDSService *insecureIDSService; // @synthesize insecureIDSService=_insecureIDSService;
@property(readonly) IDSService *idsService; // @synthesize idsService=_idsService;
@property(readonly) NSString *idsInsecureServiceIdentifier; // @synthesize idsInsecureServiceIdentifier=_idsInsecureServiceIdentifier;
@property(readonly) NSString *idsServiceIdentifier; // @synthesize idsServiceIdentifier=_idsServiceIdentifier;
@property(retain, nonatomic) id <CLManagerInterface> locationManager; // @synthesize locationManager=_locationManager;
- (id)createCLInUseTimerForIdentifier:(id)arg1;	// IMP=0x0010000000020cfc
- (void)releaseCLInUseAssertionForIdentifier:(id)arg1;	// IMP=0x0010000000020b92
- (void)setCLTransientAuthorization:(id)arg1 withCoreLocationData:(id)arg2;	// IMP=0x00100000000208a0
- (void)flushReadyBlocks;	// IMP=0x0010000000020763
- (void)service:(id)arg1 context:(id)arg2 performBlockWhenReady:(CDUnknownBlockType)arg3;	// IMP=0x001000000002060a
- (void)performBlockWhenReady:(CDUnknownBlockType)arg1;	// IMP=0x0010000000020542
- (void)persistAppContext:(id)arg1 applicationInfo:(id)arg2 pairingID:(id)arg3;	// IMP=0x00100000000201fc
- (void)storeComplicationUserInfoTransfer:(id)arg1 applicationInfo:(id)arg2 pairingID:(id)arg3;	// IMP=0x001000000001f9de
- (id)moveUserInfoToClientInbox:(id)arg1 applicationInfo:(id)arg2 pairingID:(id)arg3 userInfoIdentifier:(id)arg4;	// IMP=0x001000000001f29b
- (id)moveFileToClientInbox:(id)arg1 applicationInfo:(id)arg2 pairingID:(id)arg3 fileIdentifier:(id)arg4 userInfoData:(id)arg5 error:(id *)arg6;	// IMP=0x001000000001e789
- (void)notifyDuetOfPendingContentForCompanionAppID:(id)arg1 forComplication:(_Bool)arg2;	// IMP=0x001000000001e783
- (void)duetIdentifiersForCompanionAppID:(id)arg1 withCompletionHandler:(CDUnknownBlockType)arg2;	// IMP=0x001000000001e523
- (id)applicationInfoForCommunicationID:(id)arg1;	// IMP=0x001000000001e473
- (id)WCErrorForIDSError:(id)arg1;	// IMP=0x001000000001e0c4
- (id)pairingIDForIDSUniqueDeviceID:(id)arg1;	// IMP=0x001000000001de55
- (id)dataFromUUIDString:(id)arg1;	// IMP=0x001000000001dd85
- (const char *)descriptionFromPayloadSendType:(unsigned short)arg1;	// IMP=0x001000000001dd5d
- (void)updateClientWithValues:(id)arg1;	// IMP=0x001000000001dc94
- (void)updateAllClientsWithValues;	// IMP=0x001000000001db4e
- (id)createBackgroundAssertionTimerForIdentifier:(id)arg1;	// IMP=0x001000000001d942
- (void)handleAquiredAssertion:(id)arg1 identifier:(id)arg2;	// IMP=0x001000000001d63c
- (void)cleanUpProcessAssertionForIdentifier:(id)arg1;	// IMP=0x001000000001d46b
- (void)acquireBackgroundAssertionForIdentifier:(id)arg1;	// IMP=0x001000000001d1e4
- (void)launchCompanionAppID:(id)arg1 isInUse:(_Bool)arg2 coreLocationData:(id)arg3;	// IMP=0x001000000001cd68
@property(readonly) IDSDevice *activeIDSDevice;
- (void)service:(id)arg1 didSwitchActivePairedDevice:(id)arg2 acknowledgementBlock:(CDUnknownBlockType)arg3;	// IMP=0x001000000001cb4f
- (void)updateActiveDeviceConnectedForService:(id)arg1;	// IMP=0x001000000001cac8
- (void)service:(id)arg1 devicesChanged:(id)arg2;	// IMP=0x001000000001ca00
- (void)service:(id)arg1 connectedDevicesChanged:(id)arg2;	// IMP=0x001000000001c938
- (void)service:(id)arg1 account:(id)arg2 incomingResourceAtURL:(id)arg3 metadata:(id)arg4 fromID:(id)arg5 context:(id)arg6;	// IMP=0x001000000001c576
- (void)service:(id)arg1 account:(id)arg2 incomingUnhandledProtobuf:(id)arg3 fromID:(id)arg4 context:(id)arg5;	// IMP=0x001000000001b7ee
- (void)service:(id)arg1 account:(id)arg2 identifier:(id)arg3 didSendWithSuccess:(_Bool)arg4 error:(id)arg5 context:(id)arg6;	// IMP=0x001000000001b173
- (void)persistUserInfoTransferResult:(id)arg1 pairingID:(id)arg2 applicationInfo:(id)arg3 identifier:(id)arg4;	// IMP=0x001000000001abec
- (_Bool)userInfoExistsForPairingID:(id)arg1 identifier:(id)arg2 applicationInfo:(id)arg3;	// IMP=0x001000000001aa53
- (_Bool)notifyIfUserInfoTransferWithCommunicationID:(id)arg1 pairingID:(id)arg2 sendID:(id)arg3 success:(_Bool)arg4 error:(id)arg5;	// IMP=0x001000000001a784
- (id)complicationUserInfoPathInDataContainer:(id)arg1 pairingID:(id)arg2;	// IMP=0x001000000001a59e
- (void)handleIncomingUserInfoURL:(id)arg1 communicationID:(id)arg2 pairingID:(id)arg3 sendID:(id)arg4;	// IMP=0x001000000001a2d2
- (void)transferUserInfo:(id)arg1 withMetadata:(id)arg2 identifier:(id)arg3 clientID:(id)arg4 clientPairingID:(id)arg5 errorHandler:(CDUnknownBlockType)arg6;	// IMP=0x0010000000019c33
- (_Bool)errorIfPreconditionsNotSatisfiedWithClientPairingID:(id)arg1 error:(id *)arg2;	// IMP=0x0010000000019ae7
- (void)handleIncomingUserInfoTransferProto:(id)arg1 communicationID:(id)arg2 pairingID:(id)arg3 sendID:(id)arg4;	// IMP=0x00100000000197f7
- (_Bool)sendComplicationUserInfo:(id)arg1 clientID:(id)arg2 clientPairingID:(id)arg3 identifier:(id)arg4 errorHandler:(CDUnknownBlockType)arg5;	// IMP=0x00100000000192dd
- (_Bool)notifyIfFileTransferWithCommunicationID:(id)arg1 pairingID:(id)arg2 sendID:(id)arg3 success:(_Bool)arg4 error:(id)arg5;	// IMP=0x0010000000019101
- (void)persistFileTransferResult:(id)arg1 pairingID:(id)arg2 applicationInfo:(id)arg3 identifier:(id)arg4;	// IMP=0x0010000000018b7a
- (_Bool)fileTransferExistsForPairingID:(id)arg1 identifier:(id)arg2 applicationInfo:(id)arg3;	// IMP=0x00100000000189e1
- (void)handleIncomingFileURL:(id)arg1 communicationID:(id)arg2 pairingID:(id)arg3 sendID:(id)arg4 metadata:(id)arg5;	// IMP=0x001000000001860e
- (void)cancelSendWithIdentifier:(id)arg1;	// IMP=0x00100000000184de
- (_Bool)copyFile:(int)arg1 to:(int)arg2;	// IMP=0x0010000000018408
- (void)transferFile:(id)arg1 withMetadata:(id)arg2 identifier:(id)arg3 forClient:(id)arg4 destFilePath:(id)arg5 errorHandler:(CDUnknownBlockType)arg6;	// IMP=0x0010000000017875
- (void)updateApplicationContext:(id)arg1 clientID:(id)arg2 clientPairingID:(id)arg3 errorHandler:(CDUnknownBlockType)arg4;	// IMP=0x0010000000017426
- (void)dequeuePendingMessagesForCommunicationID:(id)arg1;	// IMP=0x00100000000170e5
- (void)handleIncomingRequest:(id)arg1 withCommunicationID:(id)arg2 isInUse:(_Bool)arg3 coreLocationData:(id)arg4;	// IMP=0x0010000000016dd3
- (void)sendMessage:(id)arg1 withIdentifier:(id)arg2 isResponse:(_Bool)arg3 clientID:(id)arg4 clientPairingID:(id)arg5 errorHandler:(CDUnknownBlockType)arg6;	// IMP=0x00100000000166a1
- (void)handlePairedSyncComplicationsStartedAck:(id)arg1 identifier:(id)arg2;	// IMP=0x001000000001661b
- (void)sendPairedSyncForComplicationsStartedAckWithIdentifier:(id)arg1 success:(_Bool)arg2;	// IMP=0x0010000000016598
- (void)privateClientConnectTimerFired;	// IMP=0x0010000000016592
- (void)forgetClientConnectTimer;	// IMP=0x001000000001658c
- (void)handlePairedSyncComplicationsStartedWithIdentifier:(id)arg1;	// IMP=0x0010000000016586
- (void)sendPairedSyncForComplicationsStartedWithIdentifier:(id)arg1;	// IMP=0x0010000000016233
- (void)sendFirstUnlockAck:(id)arg1;	// IMP=0x0010000000015f7a
- (void)sendFirstUnlockRequest:(id)arg1;	// IMP=0x0010000000015cc1
- (void)sendFirstUnlockState:(id)arg1;	// IMP=0x0010000000015a08
- (void)dequeuePendingComplicationPings;	// IMP=0x0010000000015a02
- (void)handleComplicationPingForCommunicationIdentifier:(id)arg1;	// IMP=0x00100000000159fc
- (void)addCounterpartClientCommunicationIdentifier:(id)arg1;	// IMP=0x00100000000158f7
- (void)handleInstalledAppsChangedMessage;	// IMP=0x00100000000158f1
- (void)sendInstalledAppsChangedMessage;	// IMP=0x00100000000155de
- (void)handleDaemonClientsInformation:(id)arg1;	// IMP=0x00100000000153ba
- (void)sendDaemonClientsInformation;	// IMP=0x0010000000015377
- (void)handleCounterpartDaemonDidStart;	// IMP=0x0010000000015334
- (void)sendDaemonDidStart;	// IMP=0x0010000000015067
- (void)systemObserverUpdatingInstalledApps;	// IMP=0x0010000000014fef
- (void)systemObserverAppDidTerminateForBundleID:(id)arg1;	// IMP=0x0010000000014ef6
- (void)systemObserverInstalledApplicationsChanged;	// IMP=0x0010000000014d65
- (void)systemObserverActiveDeviceSwitchStarted;	// IMP=0x0010000000014d4b
- (void)systemObserverInitialSetUpComplete;	// IMP=0x0010000000014d1d
- (void)clientReachabilityDidChange:(id)arg1;	// IMP=0x0010000000014c8d
- (void)clientXPCConnectionDidDisconnect:(id)arg1;	// IMP=0x0010000000014aed
- (void)dequeueContentForClient:(id)arg1;	// IMP=0x00100000000149ff
- (_Bool)privateListenerShouldAcceptNewConnection:(id)arg1;	// IMP=0x0010000000014836
- (id)createNewClientObjectWithCommunicationID:(id)arg1 connection:(id)arg2;	// IMP=0x00100000000146d6
- (_Bool)listenerShouldAcceptNewConnection:(id)arg1;	// IMP=0x0010000000014447
- (_Bool)listener:(id)arg1 shouldAcceptNewConnection:(id)arg2;	// IMP=0x00100000000143a8
- (void)loadPersistedClients;	// IMP=0x0010000000013d1c
@property(readonly) NSString *state;
- (id)init;	// IMP=0x0010000000013549

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
// Preceding property had unknown attributes: ?
// Original attribute string: T@"NSString",?,R,C

@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

