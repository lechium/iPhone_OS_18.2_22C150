//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

@class NSArray, NSMutableArray, NSString, NSTimer, SBSSystemApertureLayoutMonitor, SCATElementManager, SCATGestureArrowView, SCATGestureDrawingElementManager, SCATGestureFingersElement, SCATMenu, SCATPointPicker;
@protocol SCATElement, SCATGestureProviderDelegate;

@interface SCATGestureProvider
{
    SCATMenu *_menu;	// 8 = 0x8
    NSTimer *_tellMeWhenGestureTimer;	// 16 = 0x10
    SCATPointPicker *_lineGesturePointPicker;	// 24 = 0x18
    SCATGestureDrawingElementManager *_drawingElementManager;	// 32 = 0x20
    NSMutableArray *_continuousGesturePoints;	// 40 = 0x28
    NSMutableArray *_continuousGestureTimes;	// 48 = 0x30
    NSString *_continuousGestureName;	// 56 = 0x38
    _Bool _showsFingers;	// 64 = 0x40
    unsigned long long _numberOfFingersForGestures;	// 72 = 0x48
    _Bool _isReversingContinuousGesture;	// 80 = 0x50
    _Bool _needsScanning;	// 81 = 0x51
    double _currentForce;	// 88 = 0x58
    double _targetForce;	// 96 = 0x60
    double _currentY;	// 104 = 0x68
    long long _currentOrbGestureMode;	// 112 = 0x70
    SCATGestureFingersElement *_elementForFingers;	// 120 = 0x78
    SBSSystemApertureLayoutMonitor *_layoutMonitor;	// 128 = 0x80
    struct CGRect _foreheadRect;	// 136 = 0x88
    _Bool _hidden;	// 168 = 0xa8
    _Bool _isPinching;	// 169 = 0xa9
    _Bool _shouldAllowFingersForContinuousGesture;	// 170 = 0xaa
    unsigned int _startingDisplayIDForGestures;	// 172 = 0xac
    id <SCATGestureProviderDelegate> _delegate;	// 176 = 0xb0
    SCATElementManager *_currentSwitchController;	// 184 = 0xb8
    SCATGestureArrowView *_arrowView;	// 192 = 0xc0
    NSArray *_panFingerPositions;	// 200 = 0xc8
    NSArray *_pinchFingerOriginalPositions;	// 208 = 0xd0
    double _pinchRadius;	// 216 = 0xd8
    double _pinchAngle;	// 224 = 0xe0
    unsigned long long _lineGestureState;	// 232 = 0xe8
    unsigned long long _lineGestureType;	// 240 = 0xf0
    double _alphaForFingers;	// 248 = 0xf8
    struct CGPoint _startingScreenPointForGestures;	// 256 = 0x100
    struct CGPoint _pinchFulcrum;	// 272 = 0x110
    struct CGPoint _endPointForLineGesture;	// 288 = 0x120
    struct CGPoint _currentHoldPoint;	// 304 = 0x130
}

- (void).cxx_destruct;	// IMP=0x00200000000940f5
@property(nonatomic) struct CGPoint currentHoldPoint; // @synthesize currentHoldPoint=_currentHoldPoint;
@property(nonatomic) double alphaForFingers; // @synthesize alphaForFingers=_alphaForFingers;
@property(nonatomic) _Bool shouldAllowFingersForContinuousGesture; // @synthesize shouldAllowFingersForContinuousGesture=_shouldAllowFingersForContinuousGesture;
@property(nonatomic) struct CGPoint endPointForLineGesture; // @synthesize endPointForLineGesture=_endPointForLineGesture;
@property(nonatomic) unsigned long long lineGestureType; // @synthesize lineGestureType=_lineGestureType;
@property(nonatomic) unsigned long long lineGestureState; // @synthesize lineGestureState=_lineGestureState;
@property(nonatomic) double pinchAngle; // @synthesize pinchAngle=_pinchAngle;
@property(nonatomic) double pinchRadius; // @synthesize pinchRadius=_pinchRadius;
@property(nonatomic) struct CGPoint pinchFulcrum; // @synthesize pinchFulcrum=_pinchFulcrum;
@property(retain, nonatomic) NSArray *pinchFingerOriginalPositions; // @synthesize pinchFingerOriginalPositions=_pinchFingerOriginalPositions;
@property(nonatomic) _Bool isPinching; // @synthesize isPinching=_isPinching;
@property(retain, nonatomic) NSArray *panFingerPositions; // @synthesize panFingerPositions=_panFingerPositions;
@property(nonatomic) unsigned int startingDisplayIDForGestures; // @synthesize startingDisplayIDForGestures=_startingDisplayIDForGestures;
@property(retain, nonatomic) SCATGestureArrowView *arrowView; // @synthesize arrowView=_arrowView;
@property(retain, nonatomic) SCATElementManager *currentSwitchController; // @synthesize currentSwitchController=_currentSwitchController;
@property(nonatomic) struct CGPoint startingScreenPointForGestures; // @synthesize startingScreenPointForGestures=_startingScreenPointForGestures;
@property(nonatomic, getter=isHidden) _Bool hidden; // @synthesize hidden=_hidden;
@property(nonatomic) __weak id <SCATGestureProviderDelegate> delegate; // @synthesize delegate=_delegate;
- (void)systemApertureLayoutDidChange:(id)arg1;	// IMP=0x0010000000093ce4
- (void)didActivateFingersElement:(id)arg1;	// IMP=0x0010000000093cc5
- (void)fingersElement:(id)arg1 didBecomeFocused:(_Bool)arg2;	// IMP=0x0010000000093c9d
- (void)driver:(id)arg1 willUnfocusFromContext:(id)arg2;	// IMP=0x0010000000093beb
- (void);	// IMP=0x0010000000093b1e
- (void)driver:(id)arg1 willFocusOnContext:(id)arg2;	// IMP=0x0010000000093a6c
- (_Bool)handleInputAction:(id)arg1 withElement:(id)arg2;	// IMP=0x00100000000939dc
- (_Bool)allowsDwellScanningToAbortAfterTimeout;	// IMP=0x0010000000093998
- (_Bool)allowsDwellSelection;	// IMP=0x0010000000093954
- (_Bool)shouldKeepScannerAwake;	// IMP=0x0010000000093910
- (void)scannerWillMakeManagerInactive:(id)arg1 activeElementManager:(id)arg2;	// IMP=0x0010000000093885
- (void)scannerWillMakeManagerActive:(id)arg1 forDisplayID:(unsigned int)arg2;	// IMP=0x0010000000093810
- (void)scannerWillMakeManagerActive:(id)arg1;	// IMP=0x00100000000937a7
- (id)elementBefore:(id)arg1 didWrap:(_Bool *)arg2 options:(int *)arg3;	// IMP=0x001000000009371b
- (id)elementAfter:(id)arg1 didWrap:(_Bool *)arg2 options:(int *)arg3;	// IMP=0x001000000009368f
- (id)lastElementWithOptions:(int *)arg1;	// IMP=0x0010000000093630
- (id)firstElementWithOptions:(int *)arg1;	// IMP=0x00100000000935d1
- (_Bool)canBeActiveElementManager;	// IMP=0x00100000000935c1
- (void)_resignSwitchControllerPrivileges;	// IMP=0x001000000009357a
- (void)_requestSwitchControllerPrivileges;	// IMP=0x0010000000093533
- (void)drawingViewController:(id)arg1 shouldResetScanningFromElement:(id)arg2;	// IMP=0x00100000000933ea
- (void)exitDrawingViewController:(id)arg1;	// IMP=0x00100000000933a4
- (_Bool)drawingViewController:(id)arg1 moveFingersToPoints:(id)arg2;	// IMP=0x001000000009330e
- (void)touchUpForDrawingViewController:(id)arg1;	// IMP=0x00100000000932d7
- (void)touchDownForDrawingViewController:(id)arg1;	// IMP=0x0010000000093255
- (_Bool)pointPicker:(id)arg1 pauseForNumberOfCycles:(unsigned long long)arg2;	// IMP=0x001000000009324d
- (void)pointPicker:(id)arg1 didFinishDwellingOnPoint:(struct CGPoint)arg2;	// IMP=0x0010000000093247
- (void)pointPickerDidFinishSweeping:(id)arg1;	// IMP=0x0010000000093241
- (void)pointPicker:(id)arg1 didSweepOutOfFocusContext:(id)arg2 isRefiningPoint:(_Bool)arg3;	// IMP=0x001000000009323b
- (void)pointPicker:(id)arg1 didSweepIntoFocusContext:(id)arg2 isRefiningPoint:(_Bool)arg3;	// IMP=0x0010000000093235
- (void)pointPicker:(id)arg1 didPickPoint:(struct CGPoint)arg2;	// IMP=0x0010000000093223
- (void)menuDidUpdateTipObject:(id)arg1;	// IMP=0x0010000000093211
- (void)menuDidFinishTransition:(id)arg1;	// IMP=0x00100000000931da
- (void)menuDidDisappear:(id)arg1;	// IMP=0x0010000000093134
- (void)menuWillDisappear:(id)arg1;	// IMP=0x001000000009311a
- (void)menuDidAppear:(id)arg1;	// IMP=0x00100000000930a3
- (void)menuWillAppear:(id)arg1;	// IMP=0x001000000009300b
- (void)performHoldAtPoint:(struct CGPoint)arg1 isDown:(_Bool)arg2;	// IMP=0x0010000000092cd2
- (void)replayGesture:(id)arg1;	// IMP=0x0010000000092beb
- (id)gesturesSheet;	// IMP=0x0010000000092b46
- (void)performTap;	// IMP=0x0010000000092b16
- (void)performTapAndHold;	// IMP=0x0010000000092a1f
- (void)didChooseCreateInCustomGestureItemsViewController:(id)arg1;	// IMP=0x00100000000929b0
- (void)didChooseAddRecentInCustomGestureItemsViewController:(id)arg1;	// IMP=0x001000000009293d
- (void)customGestureItemsViewController:(id)arg1 didChooseGesture:(id)arg2;	// IMP=0x00100000000927bc
- (id)_repositionedGestureFromOriginalGesture:(id)arg1;	// IMP=0x00100000000926f6
- (id)contextForCustomGestureItemsViewController:(id)arg1;	// IMP=0x00100000000926a7
- (void)fingerItemsViewController:(id)arg1 didChooseNumberOfFingers:(unsigned long long)arg2;	// IMP=0x001000000009266e
- (void)didCancelGesture:(id)arg1;	// IMP=0x001000000009265c
- (void)didRequestRedoGesture:(id)arg1;	// IMP=0x001000000009262b
- (void)didConfirmGesture:(id)arg1;	// IMP=0x00100000000925fd
- (id)nameForConfirmationButton:(id)arg1;	// IMP=0x00100000000925c1
- (struct CGRect)rectToClearForStop:(id)arg1;	// IMP=0x0010000000092551
- (void)didChooseStop:(id)arg1;	// IMP=0x0010000000092523
- (struct CGRect)rectToClearForPinchGesture:(id)arg1;	// IMP=0x0010000000092504
- (void)willPopPinchItemsViewController:(id)arg1;	// IMP=0x00100000000924f2
- (void)didPushPinchItemsViewController:(id)arg1;	// IMP=0x00100000000924e0
- (void)didChooseRotateCounterclockwise:(id)arg1;	// IMP=0x00100000000924bd
- (void)didChooseRotateClockwise:(id)arg1;	// IMP=0x001000000009249a
- (void)didChoosePinchOut:(id)arg1;	// IMP=0x0010000000092477
- (void)didChoosePinchIn:(id)arg1;	// IMP=0x0010000000092454
- (void)_didChoosePinchItemWithName:(id)arg1 selector:(SEL)arg2;	// IMP=0x00100000000921f2
- (void)didChoosePanDown:(id)arg1;	// IMP=0x00100000000921cf
- (void)didChoosePanUp:(id)arg1;	// IMP=0x00100000000921ac
- (void)didChoosePanRight:(id)arg1;	// IMP=0x0010000000092189
- (void)didChoosePanLeft:(id)arg1;	// IMP=0x0010000000092166
- (void)_didChoosePanWithName:(id)arg1 selector:(SEL)arg2;	// IMP=0x0010000000092024
- (void)didChooseForceTouchGesture:(id)arg1;	// IMP=0x0010000000091ff6
- (void)didChooseArbitraryFlick:(id)arg1;	// IMP=0x0010000000091fdf
- (void)didChooseFlickRight:(id)arg1;	// IMP=0x0010000000091fc0
- (void)didChooseFlickLeft:(id)arg1;	// IMP=0x0010000000091f9c
- (void)didChooseFlickUp:(id)arg1;	// IMP=0x0010000000091f78
- (void)didChooseFlickDown:(id)arg1;	// IMP=0x0010000000091f54
- (void)_didChooseFlickWithAngle:(double)arg1 name:(id)arg2;	// IMP=0x0010000000091f26
- (unsigned long long)numberOfFingers;	// IMP=0x0010000000091f15
- (void)didChooseDrawingGesture:(id)arg1;	// IMP=0x0010000000091dec
- (void)didChooseFingers:(id)arg1;	// IMP=0x0010000000091d35
- (void)didChooseDoubleTapGesture:(id)arg1;	// IMP=0x0010000000091cb9
- (void)didChooseHoldAndDragGesture:(id)arg1;	// IMP=0x0010000000091ca2
- (void)didChooseDragGesture:(id)arg1;	// IMP=0x0010000000091c8e
- (void)didChoosePinchGesture:(id)arg1;	// IMP=0x0010000000091c20
- (void)didChoosePanGesture:(id)arg1;	// IMP=0x0010000000091bb2
- (void)didChooseFlickGesture:(id)arg1;	// IMP=0x0010000000091b44
- (void)didChooseFavorites:(id)arg1;	// IMP=0x0010000000091ad4
- (void)_startConfirmingLineGestureWithEndpoint:(struct CGPoint)arg1;	// IMP=0x00100000000918e7
- (void)_startPickingEndPointForLineGesture:(unsigned long long)arg1;	// IMP=0x00100000000916ea
- (id)_promptForLineGesture:(unsigned long long)arg1;	// IMP=0x00100000000916b8
- (void)_clearLineGestureState;	// IMP=0x00100000000915fa
- (struct CGRect)rectToClearForFingersWithGestureSheet:(_Bool)arg1;	// IMP=0x00100000000914d2
- (struct CGRect)_rectToClearForPinchGesture;	// IMP=0x00100000000913cb
- (struct CGRect)_rectForFingers:(id)arg1;	// IMP=0x001000000009134e
- (void)_updateShowsFingers;	// IMP=0x001000000009128f
- (void)_setShowsFingers:(_Bool)arg1;	// IMP=0x001000000009121c
- (unsigned long long)_numberOfFingers;	// IMP=0x00100000000911e0
- (unsigned long long)_numberOfFingersWithGestureSheet:(_Bool)arg1;	// IMP=0x001000000009117d
- (void)_setNumberOfFingersForGestures:(unsigned long long)arg1;	// IMP=0x00100000000910d2
- (void)_clearArrowView;	// IMP=0x0010000000091078
- (void)_startTellMeWhenTimerWithSelector:(SEL)arg1 interval:(double)arg2;	// IMP=0x0010000000090f7f
- (void)_startTellMeWhenTimerWithSelector:(SEL)arg1;	// IMP=0x0010000000090f6a
- (void)_clearTellMeWhenTimer;	// IMP=0x0010000000090f32
- (void)_updateVisibleFingers;	// IMP=0x0010000000090bd0
- (void)_endPinchMode;	// IMP=0x0010000000090b57
- (void)_startPinchMode;	// IMP=0x0010000000090a7a
- (void)_finishLineGesture;	// IMP=0x001000000009078a
- (void)_panDown;	// IMP=0x001000000009076d
- (void)_panUp;	// IMP=0x0010000000090750
- (void)_panRight;	// IMP=0x0010000000090733
- (void)_panLeft;	// IMP=0x0010000000090716
- (void)_panByDelta:(struct CGSize)arg1;	// IMP=0x00100000000904e7
- (id)_panPositionsAdjustedByDelta:(struct CGSize)arg1;	// IMP=0x00100000000902b0
- (void)_rotateCounterclockwise;	// IMP=0x0010000000090293
- (void)_rotateClockwise;	// IMP=0x0010000000090276
- (void)_pinchIn;	// IMP=0x0010000000090259
- (void)_pinchOut;	// IMP=0x001000000009023c
- (void)_updatePinchPositionsWithAttemptedRadiusDelta:(double)arg1 angleDelta:(double)arg2;	// IMP=0x001000000008feee
- (double)_pinchAngleAdjustedByDelta:(double)arg1;	// IMP=0x001000000008feaa
- (double)_pinchRadiusAdjustedByDelta:(double)arg1;	// IMP=0x001000000008fe66
- (id)_pinchPositionsWithRadius:(double)arg1 angle:(double)arg2;	// IMP=0x001000000008fd10
- (void)_performForceTouchGesture;	// IMP=0x001000000008fc75
- (void)_performFlickGestureWithAngle:(double)arg1 name:(id)arg2;	// IMP=0x001000000008fb8a
- (void)_performTapGestureForDoubleTap:(_Bool)arg1;	// IMP=0x001000000008fab0
- (void)_performGesture:(id)arg1;	// IMP=0x001000000008f98d
- (void)_saveRecentGesture:(id)arg1;	// IMP=0x001000000008f83a
- (void)_handleCompletedContinuousGesture;	// IMP=0x001000000008f6f8
- (void)_addPointsToContinuousGestureData:(id)arg1;	// IMP=0x001000000008f533
- (void)_initializeContinuousGestureDataWithName:(id)arg1 points:(id)arg2;	// IMP=0x001000000008f226
- (void)_prepareToBeginContinuousGesture;	// IMP=0x001000000008f1f9
- (void)_resetContinuousGestureData;	// IMP=0x001000000008f1a0
- (_Bool)_isPerformingContinuousGesture;	// IMP=0x001000000008f18b
- (id)_startingPointsAsStrings;	// IMP=0x001000000008f035
- (struct CGPoint)_startingPointForGestures;	// IMP=0x001000000008ef33
- (void)_updateStartingPointForGesturesWithScreenPoint:(id)arg1 forDisplayID:(unsigned int)arg2;	// IMP=0x001000000008ee13
- (void)_updateStartingPointForGesturesWithScreenPoint:(id)arg1;	// IMP=0x001000000008edfc
- (id)_fingerController;	// IMP=0x001000000008ed69
- (id)identifier;	// IMP=0x001000000008ed41
@property(readonly, nonatomic) id <SCATElement> elementForFingers;
- (void)orientationDidChange:(id)arg1;	// IMP=0x001000000008eae8
- (void)dealloc;	// IMP=0x001000000008ea7a
- (id)initWithMenu:(id)arg1;	// IMP=0x001000000008e877

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
// Preceding property had unknown attributes: ?
// Original attribute string: T@"NSString",?,R,C

@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

