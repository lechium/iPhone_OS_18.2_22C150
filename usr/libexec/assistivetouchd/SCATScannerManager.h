//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <objc/NSObject.h>

@class AXDispatchTimer, AXOutputManager, AXSSInterDeviceCommunicator, AXSwitchRecipe, AXUpdateElementVisualsCoalescer, HNDAccessibilityManager, HNDScannerAutoscroller, NSArray, NSMutableSet, NSString, SCATActionHandler, SCATActionItem, SCATAlternateKeysManager, SCATAutomaticDriver, SCATCandidateBarManager, SCATCursorManager, SCATDriver, SCATDwellDriver, SCATElementManager, SCATElementNavigationController, SCATFocusContext, SCATGestureProvider, SCATInputController, SCATManualDriver, SCATMenu, SCATPointPicker, SCATScrollViewPickerManager;
@protocol OS_dispatch_queue, SCATElement, SCATScannerManagerDelegate;

@interface SCATScannerManager : NSObject
{
    _Bool _isLoaded;	// 8 = 0x8
    _Bool _shouldUseCameraPointPicker;	// 9 = 0x9
    _Bool _forceDisableScreenLock;	// 10 = 0xa
    _Bool _didSetFocusContextForResume;	// 11 = 0xb
    _Bool _didPauseForReasonsToDisableScanning;	// 12 = 0xc
    unsigned int _lockedToDisplayID;	// 16 = 0x10
    AXOutputManager *_outputManager;	// 24 = 0x18
    SCATCursorManager *_cursorManager;	// 32 = 0x20
    AXDispatchTimer *_beginScanningTimer;	// 40 = 0x28
    HNDScannerAutoscroller *_autoscroller;	// 48 = 0x30
    SCATInputController *_inputController;	// 56 = 0x38
    SCATGestureProvider *_gestureProvider;	// 64 = 0x40
    SCATMenu *_menu;	// 72 = 0x48
    SCATPointPicker *_pointPicker;	// 80 = 0x50
    SCATElementNavigationController *_elementNavController;	// 88 = 0x58
    SCATManualDriver *_manualScanningDriver;	// 96 = 0x60
    SCATAutomaticDriver *_autoScanningDriver;	// 104 = 0x68
    SCATDriver *_activeScannerDriver;	// 112 = 0x70
    SCATElementManager *_activeElementManager;	// 120 = 0x78
    id <SCATScannerManagerDelegate> _delegate;	// 128 = 0x80
    SCATActionHandler *_selectActionHandler;	// 136 = 0x88
    SCATActionHandler *_selectAndResumeAutoscanningActionHandler;	// 144 = 0x90
    HNDAccessibilityManager *_testAxManager;	// 152 = 0x98
    NSArray *_recentSpeechOutputStrings;	// 160 = 0xa0
    SCATAlternateKeysManager *_alternateKeysManager;	// 168 = 0xa8
    SCATScrollViewPickerManager *_scrollViewPickerManager;	// 176 = 0xb0
    SCATCandidateBarManager *_candidateBarManager;	// 184 = 0xb8
    SCATDwellDriver *_dwellScanningDriver;	// 192 = 0xc0
    AXUpdateElementVisualsCoalescer *_updateElementVisualsCoalescer;	// 200 = 0xc8
    SCATActionHandler *_activateActionHandler;	// 208 = 0xd0
    SCATFocusContext *_focusContextForResume;	// 216 = 0xd8
    NSMutableSet *_reasonsToDisableScanning;	// 224 = 0xe0
    AXSwitchRecipe *_currentRecipe;	// 232 = 0xe8
    long long _itemMenuState;	// 240 = 0xf0
    SCATActionItem *_currentAction;	// 248 = 0xf8
    AXSSInterDeviceCommunicator *_interDeviceCommunicator;	// 256 = 0x100
    NSObject<OS_dispatch_queue> *_managedConfigurationQueue;	// 264 = 0x108
    NSMutableSet *_scannerObservers;	// 272 = 0x110
    id <SCATElement> _cachedPickerElement;	// 280 = 0x118
}

+ (void)updateElementCacheScheme;	// IMP=0x00200000000eb9bd
+ (id)sharedManager;	// IMP=0x00100000000eb968
- (void).cxx_destruct;	// IMP=0x00200000000f8a07
@property(retain, nonatomic) id <SCATElement> cachedPickerElement; // @synthesize cachedPickerElement=_cachedPickerElement;
@property(retain, nonatomic) NSMutableSet *scannerObservers; // @synthesize scannerObservers=_scannerObservers;
@property(nonatomic) unsigned int lockedToDisplayID; // @synthesize lockedToDisplayID=_lockedToDisplayID;
@property(retain, nonatomic) NSObject<OS_dispatch_queue> *managedConfigurationQueue; // @synthesize managedConfigurationQueue=_managedConfigurationQueue;
@property(retain, nonatomic) AXSSInterDeviceCommunicator *interDeviceCommunicator; // @synthesize interDeviceCommunicator=_interDeviceCommunicator;
@property(retain, nonatomic) SCATActionItem *currentAction; // @synthesize currentAction=_currentAction;
@property(nonatomic) long long itemMenuState; // @synthesize itemMenuState=_itemMenuState;
@property(retain, nonatomic) AXSwitchRecipe *currentRecipe; // @synthesize currentRecipe=_currentRecipe;
@property(nonatomic) _Bool didPauseForReasonsToDisableScanning; // @synthesize didPauseForReasonsToDisableScanning=_didPauseForReasonsToDisableScanning;
@property(retain, nonatomic) NSMutableSet *reasonsToDisableScanning; // @synthesize reasonsToDisableScanning=_reasonsToDisableScanning;
@property(nonatomic) _Bool didSetFocusContextForResume; // @synthesize didSetFocusContextForResume=_didSetFocusContextForResume;
@property(retain, nonatomic) SCATFocusContext *focusContextForResume; // @synthesize focusContextForResume=_focusContextForResume;
@property(nonatomic) _Bool forceDisableScreenLock; // @synthesize forceDisableScreenLock=_forceDisableScreenLock;
@property(retain, nonatomic) SCATActionHandler *activateActionHandler; // @synthesize activateActionHandler=_activateActionHandler;
@property(retain, nonatomic) AXUpdateElementVisualsCoalescer *updateElementVisualsCoalescer; // @synthesize updateElementVisualsCoalescer=_updateElementVisualsCoalescer;
@property(retain, nonatomic) SCATDwellDriver *dwellScanningDriver; // @synthesize dwellScanningDriver=_dwellScanningDriver;
@property(retain, nonatomic) SCATCandidateBarManager *candidateBarManager; // @synthesize candidateBarManager=_candidateBarManager;
@property(retain, nonatomic) SCATScrollViewPickerManager *scrollViewPickerManager; // @synthesize scrollViewPickerManager=_scrollViewPickerManager;
@property(retain, nonatomic) SCATAlternateKeysManager *alternateKeysManager; // @synthesize alternateKeysManager=_alternateKeysManager;
@property(retain, nonatomic) NSArray *recentSpeechOutputStrings; // @synthesize recentSpeechOutputStrings=_recentSpeechOutputStrings;
@property(retain, nonatomic) HNDAccessibilityManager *testAxManager; // @synthesize testAxManager=_testAxManager;
@property(readonly, nonatomic) _Bool shouldUseCameraPointPicker; // @synthesize shouldUseCameraPointPicker=_shouldUseCameraPointPicker;
@property(retain, nonatomic) SCATActionHandler *selectAndResumeAutoscanningActionHandler; // @synthesize selectAndResumeAutoscanningActionHandler=_selectAndResumeAutoscanningActionHandler;
@property(retain, nonatomic) SCATActionHandler *selectActionHandler; // @synthesize selectActionHandler=_selectActionHandler;
@property(nonatomic) __weak id <SCATScannerManagerDelegate> delegate; // @synthesize delegate=_delegate;
@property(retain, nonatomic) SCATElementManager *activeElementManager; // @synthesize activeElementManager=_activeElementManager;
@property(retain, nonatomic) SCATDriver *activeScannerDriver; // @synthesize activeScannerDriver=_activeScannerDriver;
@property(retain, nonatomic) SCATAutomaticDriver *autoScanningDriver; // @synthesize autoScanningDriver=_autoScanningDriver;
@property(retain, nonatomic) SCATManualDriver *manualScanningDriver; // @synthesize manualScanningDriver=_manualScanningDriver;
@property(retain, nonatomic) SCATElementNavigationController *elementNavController; // @synthesize elementNavController=_elementNavController;
@property(retain, nonatomic) SCATPointPicker *pointPicker; // @synthesize pointPicker=_pointPicker;
@property(retain, nonatomic) SCATMenu *menu; // @synthesize menu=_menu;
@property(retain, nonatomic) SCATGestureProvider *gestureProvider; // @synthesize gestureProvider=_gestureProvider;
@property(retain, nonatomic) SCATInputController *inputController; // @synthesize inputController=_inputController;
@property(retain, nonatomic) HNDScannerAutoscroller *autoscroller; // @synthesize autoscroller=_autoscroller;
@property(retain, nonatomic) AXDispatchTimer *beginScanningTimer; // @synthesize beginScanningTimer=_beginScanningTimer;
@property(retain, nonatomic) SCATCursorManager *cursorManager; // @synthesize cursorManager=_cursorManager;
@property(retain, nonatomic) AXOutputManager *outputManager; // @synthesize outputManager=_outputManager;
- (struct CGPoint)_startingPointForGesturesForPointPicker:(id)arg1;	// IMP=0x00100000000f85f2
- (void)_notifyObserversScannerDidPause;	// IMP=0x00100000000f8498
- (void)_notifyObserversScannerDidBecomeInactive;	// IMP=0x00100000000f833e
- (void)_notifyObserversScannerDidBecomeActive;	// IMP=0x00100000000f81e4
- (void)_notifyObserversScannerWillUnfocusFromContext:(id)arg1;	// IMP=0x00100000000f8052
- (void)_notifyObserversScannerDidFocusOnContext:(id)arg1 oldContext:(id)arg2;	// IMP=0x00100000000f7ead
- (void)_notifyObserversScannerWillFocusOnContext:(id)arg1;	// IMP=0x00100000000f7d2c
- (void)removeObserver:(id)arg1;	// IMP=0x00100000000f7cc3
- (void)addObserver:(id)arg1;	// IMP=0x00100000000f7c5a
- (void)showUIContext:(_Bool)arg1;	// IMP=0x00100000000f7a90
- (void)hideUIContext:(_Bool)arg1;	// IMP=0x00100000000f789e
- (_Bool)isUIContextHidden;	// IMP=0x00100000000f77c1
- (id)scatBackCursorUIContextForDisplayID:(unsigned int)arg1;	// IMP=0x00100000000f773c
- (id)scatFrontCursorUIContextForDisplayID:(unsigned int)arg1;	// IMP=0x00100000000f76b7
- (id)scatUIContextForDisplayID:(unsigned int)arg1;	// IMP=0x00100000000f7632
- (id)scatFrontCursorUIContext;	// IMP=0x00100000000f75a3
- (id)scatBackCursorUIContext;	// IMP=0x00100000000f7514
- (id)scatUIContext;	// IMP=0x00100000000f7485
- (void)presentPostScanningMenuForElementNavigationController:(id)arg1;	// IMP=0x00100000000f7444
- (_Bool)candidateBarManager:(id)arg1 hasValidTypingCandidates:(id)arg2;	// IMP=0x00100000000f73d6
- (id)_typingCandidates;	// IMP=0x00100000000f7329
- (void)alternateKeysManager:(id)arg1 didSelectAlternateKey:(id)arg2;	// IMP=0x00100000000f7277
- (id)focusContextForActionHandler:(id)arg1;	// IMP=0x00100000000f720e
- (void)actionHandlerDidCancelPendingAction:(id)arg1;	// IMP=0x00100000000f71fa
- (void)actionHandlerDidFireAction:(id)arg1;	// IMP=0x00100000000f6d77
- (_Bool)actionHandler:(id)arg1 shouldActImmediatelyOnActionCount:(unsigned long long)arg2;	// IMP=0x00100000000f6ce3
- (id)_focusContextAtPoint:(struct CGPoint)arg1;	// IMP=0x00100000000f6bf3
- (long long)_dwellSwitchAssignedAction;	// IMP=0x00100000000f6beb
- (void)pointPicker:(id)arg1 didFinishDwellingOnPoint:(struct CGPoint)arg2;	// IMP=0x00100000000f6b76
- (_Bool)pointPicker:(id)arg1 pauseForNumberOfCycles:(unsigned long long)arg2;	// IMP=0x00100000000f6b25
- (void)pointPickerDidFinishSweeping:(id)arg1;	// IMP=0x00100000000f6b1f
- (void)pointPicker:(id)arg1 didSweepOutOfFocusContext:(id)arg2 isRefiningPoint:(_Bool)arg3;	// IMP=0x00100000000f6ad8
- (void)pointPicker:(id)arg1 didSweepIntoFocusContext:(id)arg2 isRefiningPoint:(_Bool)arg3;	// IMP=0x00100000000f6a02
- (void)pointPicker:(id)arg1 didPickPoint:(struct CGPoint)arg2;	// IMP=0x00100000000f66c0
- (void)didChooseCreateCustomGestureFromGestureProvider:(id)arg1;	// IMP=0x00100000000f6610
- (void)gestureProvider:(id)arg1 shouldResetScanningFromElement:(id)arg2;	// IMP=0x00100000000f6536
- (id)contentViewForGestureProvider:(id)arg1;	// IMP=0x00100000000f6506
- (void)gestureProvider:(id)arg1 didShowFingers:(_Bool)arg2;	// IMP=0x00100000000f6500
- (void)shouldEndScanningGestureProvider:(id)arg1;	// IMP=0x00100000000f64c7
- (void)shouldStartScanningGestureProvider:(id)arg1;	// IMP=0x00100000000f648e
- (void)menuDidUpdateTipObject:(id)arg1;	// IMP=0x00100000000f6488
- (void)menuDidFinishTransition:(id)arg1;	// IMP=0x00100000000f6435
- (void)menuWillBeginTransition:(id)arg1;	// IMP=0x00100000000f63f1
- (void)menuDidDisappear:(id)arg1;	// IMP=0x00100000000f616e
- (void)menuDidAppear:(id)arg1;	// IMP=0x00100000000f6168
- (void)menuWillAppear:(id)arg1;	// IMP=0x00100000000f6162
- (void)menu:(id)arg1 playSoundEffect:(int)arg2;	// IMP=0x00100000000f60f6
- (void)menu:(id)arg1 speakAnnouncement:(id)arg2 completionBlock:(CDUnknownBlockType)arg3;	// IMP=0x00100000000f6050
- (void)menu:(id)arg1 showSysdiagnoseDisplayString:(id)arg2;	// IMP=0x00100000000f603b
- (id)interDeviceCommunicatorForMenu:(id)arg1;	// IMP=0x00100000000f6029
- (void)returnControlToForwarderDevice:(id)arg1;	// IMP=0x00100000000f5fec
- (_Bool)canReturnControlToForwarderDevice:(id)arg1;	// IMP=0x00100000000f5fa8
- (void)searchForControllableDevicesWithMenu:(id)arg1;	// IMP=0x00100000000f5f6b
- (_Bool)canSearchForControllableDevicesWithMenu:(id)arg1;	// IMP=0x00100000000f5f27
- (void)menu:(id)arg1 showScrollViewPickerForScrollViews:(id)arg2 elementsToScroll:(id)arg3 scrollAction:(int)arg4;	// IMP=0x00100000000f5de5
- (_Bool)shouldShowAppWideScrollActionsInMenu:(id)arg1;	// IMP=0x00100000000f5dd3
- (void)menu:(id)arg1 setItemMenuState:(long long)arg2;	// IMP=0x00100000000f5dbe
- (long long)itemMenuStateForMenu:(id)arg1;	// IMP=0x00100000000f5dac
- (_Bool)shouldAddItemSpecificMenuOptionsToMenu:(id)arg1;	// IMP=0x00100000000f5d9a
- (_Bool)_isPostScanningMenu:(id)arg1;	// IMP=0x00100000000f5d64
- (void)menu:(id)arg1 activateRecipe:(id)arg2;	// IMP=0x00100000000f5d4f
- (id)exitActionElementForFingersInMenu:(id)arg1;	// IMP=0x00100000000f5cff
- (void)didPressScreenChangingButtonInMenu:(id)arg1;	// IMP=0x00100000000f5cb3
- (id)gesturesSheetForMenu:(id)arg1;	// IMP=0x00100000000f5c63
- (struct CGRect)menu:(id)arg1 rectToClearForFingersWithGestureSheet:(_Bool)arg2;	// IMP=0x00100000000f5bf7
- (void)menu:(id)arg1 showTypingCandidates:(id)arg2;	// IMP=0x00100000000f5b8e
- (void)menu:(id)arg1 showAlternateKeysForKey:(id)arg2;	// IMP=0x00100000000f5b25
- (void)inputController:(id)arg1 didReceivePoint:(struct CGPoint)arg2;	// IMP=0x00100000000f5acc
- (void)performSysdiagnoseForInputController:(id)arg1;	// IMP=0x00100000000f5ac6
- (id)userInterfaceClientForInputController:(id)arg1;	// IMP=0x00100000000f5a45
- (void)inputController:(id)arg1 didReceiveRecipeHoldAtPoint:(struct CGPoint)arg2 isDown:(_Bool)arg3;	// IMP=0x00100000000f59d4
- (void)inputController:(id)arg1 didReceiveRecipeActionForMappingAtIndex:(unsigned long long)arg2 isLongPressAction:(_Bool)arg3;	// IMP=0x00100000000f55c5
- (void)inputController:(id)arg1 didReceiveAction:(id)arg2;	// IMP=0x00100000000f492a
- (void)didEndLongPressForInputController:(id)arg1;	// IMP=0x00100000000f4866
- (void)didBeginLongPressForInputController:(id)arg1;	// IMP=0x00100000000f47d8
- (void)accessibilityManagerShouldResumeScanning:(id)arg1;	// IMP=0x00100000000f47bf
- (void)accessibilityManagerShouldPauseScanning:(id)arg1;	// IMP=0x00100000000f47a6
- (void)_updateElementVisuals;	// IMP=0x00100000000f4601
- (void)accessibilityManager:(id)arg1 mediaDidBegin:(struct __CFData *)arg2;	// IMP=0x00100000000f45ef
- (void)_waitForApplication:(id)arg1;	// IMP=0x00100000000f4143
- (void)accessibilityManager:(id)arg1 applicationWasActivated:(id)arg2;	// IMP=0x00100000000f3fcf
- (void)accessibilityManager:(id)arg1 updateElementVisuals:(id)arg2;	// IMP=0x00100000000f3f92
- (void)accessibilityManager:(id)arg1 nativeFocusElementDidChange:(id)arg2;	// IMP=0x00100000000f3e19
- (void)accessibilityManager:(id)arg1 didFetchElementsForEvent:(long long)arg2 foundNewElements:(_Bool)arg3;	// IMP=0x00100000000f3a38
- (void)_updateMenuAfterElementFetchFoundNewElements:(_Bool)arg1;	// IMP=0x00100000000f37a6
- (void)handleStopSpeaking:(id)arg1;	// IMP=0x00100000000f3711
- (void)handleScreenChange:(id)arg1;	// IMP=0x00100000000f3639
- (void)handleAlertDidAppear:(id)arg1;	// IMP=0x00100000000f356e
- (void)handleAnnouncement:(id)arg1;	// IMP=0x00100000000f3472
- (int)_validatedSelectBehaviorForCurrentSelectBehavior:(int)arg1 replacementElement:(id)arg2;	// IMP=0x00100000000f3440
- (void)accessibilityManager:(id)arg1 willFetchElementsForEvent:(long long)arg2;	// IMP=0x00100000000f343a
- (void)accessibilityManager:(id)arg1 didScheduleFetchEvent:(long long)arg2;	// IMP=0x00100000000f3434
- (void)accessibilityManager:(id)arg1 screenWillChange:(struct __CFData *)arg2;	// IMP=0x00100000000f33e8
- (void)accessibilityManager:(id)arg1 didReceiveEvent:(long long)arg2 data:(id)arg3;	// IMP=0x00100000000f3137
- (_Bool)cursorManagerShouldHideMenuCursor:(id)arg1;	// IMP=0x00100000000f30f3
- (void)actionHandlerForUI:(id)arg1 willPerformDelayedActionOnContext:(id)arg2 withCount:(unsigned long long)arg3;	// IMP=0x00100000000f2f9f
- (void)actionHandlerForUIWillFireAction:(id)arg1;	// IMP=0x00100000000f2eb1
- (void)actionHandlerForUIDidCancelPendingAction:(id)arg1;	// IMP=0x00100000000f2dc3
- (unsigned long long)minimumPointPickerNumberOfCyclesForDriver:(id)arg1;	// IMP=0x00100000000f2daa
- (void)driver:(id)arg1 indicateDwellScanningWillAbort:(_Bool)arg2;	// IMP=0x00100000000f2cf8
- (void)driverDidBecomeActive:(id)arg1 didChange:(_Bool)arg2;	// IMP=0x00100000000f2c47
- (void)driverDidBecomeInactive:(id)arg1;	// IMP=0x00100000000f2bf2
- (void)driverDidPause:(id)arg1;	// IMP=0x00100000000f2b9d
- (void)driver:(id)arg1 willUnfocusFromContext:(id)arg2;	// IMP=0x00100000000f2b88
- (void)driver:(id)arg1 didFocusOnContext:(id)arg2 oldContext:(id)arg3;	// IMP=0x00100000000f29ca
- (void)driver:(id)arg1 willFocusOnContext:(id)arg2;	// IMP=0x00100000000f29b5
- (void)_driver:(id)arg1 outputAudioForContext:(id)arg2;	// IMP=0x00100000000f25b1
- (id)activeElementManagerForDriver:(id)arg1;	// IMP=0x00100000000f259f
- (void)highlightAsPotentialReceiverForDeviceWithName:(id)arg1;	// IMP=0x00100000000f2435
- (void)_disableUserInterfaceClientForPotentialReceiver;	// IMP=0x00100000000f23bd
- (void)didBecomeIdle;	// IMP=0x00100000000f2380
- (void)didDisconnectAsReceiver;	// IMP=0x00100000000f22e9
- (void)didDisconnectAsForwarderFromDeviceWithName:(id)arg1;	// IMP=0x00100000000f21e1
- (void)didConnectAsReceiverWithSettings:(id)arg1;	// IMP=0x00100000000f2045
- (void)didConnectAsForwarderToDeviceWithName:(id)arg1;	// IMP=0x00100000000f1f43
- (_Bool)canAdvertise;	// IMP=0x00100000000f1ca6
- (void)_handleVisualIntelligence;	// IMP=0x00100000000f1c62
- (void)_handleCameraButtonDoubleLightPress;	// IMP=0x00100000000f1c1e
- (void)_handleCameraButtonLightPress;	// IMP=0x00100000000f1bda
- (void)_handleCameraButton;	// IMP=0x00100000000f1b96
- (void)_handleEscapeAction;	// IMP=0x00100000000f1a78
- (void)_handleVolumeUpAction;	// IMP=0x00100000000f1a34
- (void)_handleTripleClickAction;	// IMP=0x00100000000f19f0
- (void)_handleDictationAction;	// IMP=0x00100000000f1981
- (void)_handleForceTouchAction;	// IMP=0x00100000000f1775
- (void)_handleVolumeDownAction;	// IMP=0x00100000000f1731
- (void)_handleSiriAction;	// IMP=0x00100000000f16ed
- (void)_handleControlCenterAction;	// IMP=0x00100000000f16a9
- (void)_handleNotificationCenterAction;	// IMP=0x00100000000f1665
- (void)_handleHomeAction;	// IMP=0x00100000000f1613
- (void)_handleAppSwitcherAction;	// IMP=0x00100000000f15cf
- (void)_setCurrentRecipe:(id)arg1 shouldShowAlert:(_Bool)arg2;	// IMP=0x00100000000f1209
- (void)_applyLaunchRecipeUUID;	// IMP=0x00100000000f0f82
- (void)_exitRecipeOnTimeout;	// IMP=0x00100000000f0f04
- (void)_resetRecipeTimeoutIfApplicable;	// IMP=0x00100000000f0d8d
- (void)resumeAutoscanning;	// IMP=0x00100000000f0d7b
- (void)_showSimpleBannerWithText:(id)arg1;	// IMP=0x00100000000f0cc7
- (void)_updateScanningStyle;	// IMP=0x00100000000f0c47
- (_Bool)shouldBypassShowingMenuForElement:(id)arg1;	// IMP=0x00100000000f0b9b
- (void)selectElementAtPoint:(struct CGPoint)arg1;	// IMP=0x00100000000f0b13
- (void)selectElement:(id)arg1;	// IMP=0x00100000000f0ae2
- (_Bool)activateElement:(id)arg1;	// IMP=0x00100000000f07f5
- (void)useFocusContextOnResume:(id)arg1;	// IMP=0x00100000000f07c2
- (_Bool)_shouldIgnoreAllScannerControlMessages;	// IMP=0x00100000000f077a
- (void)removeReasonToDisableScanning:(id)arg1;	// IMP=0x00100000000f04af
- (void)addReasonToDisableScanning:(id)arg1;	// IMP=0x00100000000f006e
- (void)pauseScanningWithScreenLockDisabled:(_Bool)arg1;	// IMP=0x00100000000effa7
- (void)pauseScanning;	// IMP=0x00100000000eff93
- (void)endScanning;	// IMP=0x00100000000efefd
- (void)resumeScanning;	// IMP=0x00100000000efd59
- (void)_beginOrContinueScanningWithFocusContext:(id)arg1 shouldBegin:(_Bool)arg2 foundNewElements:(_Bool)arg3;	// IMP=0x00100000000ef973
- (void)continueScanningWithFocusContext:(id)arg1 foundNewElements:(_Bool)arg2;	// IMP=0x00100000000ef95c
- (void)beginScanningWithFocusContext:(id)arg1;	// IMP=0x00100000000ef942
@property(readonly, nonatomic) _Bool isInactive;
@property(readonly, nonatomic) _Bool isPaused;
@property(readonly, nonatomic) _Bool isActive;
- (void)clearRecentSpeech;	// IMP=0x00100000000ef839
- (id)axManager;	// IMP=0x00100000000ef771
- (void)switchCurrentDisplayContext;	// IMP=0x00100000000ef55b
- (_Bool)isExternalDisplayConnected;	// IMP=0x00100000000ef4e1
- (unsigned int)currentDisplayID;	// IMP=0x00100000000ef1a2
@property(readonly, nonatomic) id <SCATElement> currentElement;
@property(readonly, nonatomic) SCATFocusContext *currentFocusContext;
- (_Bool)isSystemSleeping;	// IMP=0x00100000000ef0b7
@property(readonly, nonatomic) _Bool isLandscape;
@property(readonly, nonatomic) unsigned long long immediateSelectActionCount;
@property(readonly, nonatomic) _Bool isUsingPointMode;
- (_Bool)isSwitchWithSource:(id)arg1;	// IMP=0x00100000000eeee7
@property(readonly, nonatomic) _Bool isSpeechEnabled;
@property(readonly, nonatomic) _Bool areSoundEffectsEnabled;
@property(readonly, nonatomic) long long scanningMode;
@property(readonly, nonatomic) _Bool isGroupingEnabled;
@property(readonly, nonatomic) _Bool isAutoscanEnabled;
- (void)_updateAudioSessionState;	// IMP=0x00100000000eebc2
- (void)_deactivateAudioSession;	// IMP=0x00100000000eeb3d
- (_Bool)_isScannerControlledByDriver:(id)arg1;	// IMP=0x00100000000eeacf
- (void)_updateActiveElementManager:(CDUnknownBlockType)arg1;	// IMP=0x00100000000eea64
- (void)_updateActiveElementManager;	// IMP=0x00100000000eea50
- (id)_primaryElementManagerForScannerState;	// IMP=0x00100000000ee701
- (id)_elementManagerForScannerState;	// IMP=0x00100000000ee596
- (void)setActiveElementManager:(id)arg1 completion:(CDUnknownBlockType)arg2;	// IMP=0x00100000000ee147
- (id)_driverForScannerState;	// IMP=0x00100000000ee094
@property(readonly, nonatomic) _Bool isControllingOtherDevice;
@property(readonly, nonatomic) _Bool isHandlingInterDeviceCommunication;
@property(readonly, nonatomic) _Bool isLoaded;
- (void)_scanningModePreferenceDidChange;	// IMP=0x00100000000edcb4
- (void)_overrideScanningModeAtStartupIfNecessary;	// IMP=0x00100000000edc1f
@property(readonly, copy) NSString *description;
- (void)unloadScanner;	// IMP=0x00100000000ed51f
- (void)loadScanner;	// IMP=0x00100000000ec1aa
- (void)_performAccessibilityValidations;	// IMP=0x00100000000ec1a4
- (void)handleUSBMFiDeviceConnected;	// IMP=0x00100000000ebf1f
- (void)_setUSBRMPreferenceDisabled;	// IMP=0x00100000000ebec0
- (_Bool)_userHasDisabledUSBRM;	// IMP=0x00100000000ebe67
- (_Bool)waitingForSecureIntent;	// IMP=0x00100000000ebe1c
- (void)performDrop;	// IMP=0x00100000000ebdab
- (void)moveDragSessionToFixedSpaceScreenPoint:(struct CGPoint)arg1;	// IMP=0x00100000000ebd23
- (void)cancelDrag;	// IMP=0x00100000000ebcb2
- (_Bool)isDragActive;	// IMP=0x00100000000ebc3d
- (void)waitForDragStartFromPid:(int)arg1 completion:(CDUnknownBlockType)arg2;	// IMP=0x00100000000ebba7
- (void)dealloc;	// IMP=0x00100000000ebb4e
- (id)init;	// IMP=0x00100000000eba2f

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
// Preceding property had unknown attributes: ?
// Original attribute string: T@"NSString",?,R,C

@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

