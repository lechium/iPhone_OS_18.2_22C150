//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <objc/NSObject.h>

@class AXAccessQueue, AXDispatchTimer, AXSSInterDeviceCommunicator, AXSwitchRecipe, AXUIClient, MISSING_TYPE, NSMutableSet, NSString, SBSSystemApertureRestrictionService, SCATATVRemoteInputSource, SCATAccessibilityEventInputSource, SCATCameraInputSource, SCATGamepadInputSource, SCATHeadTracker, SCATInterDeviceInputSource, SCATKeyboardInputSource, SCATMFIInputSource, SCATMIDIInputSource, SCATRemoteControlInputSource, SCATScreenInputSource;
@protocol BSInvalidatable, SCATInputControllerDelegate;

@interface SCATInputController : NSObject
{
    _Bool _valid;	// 8 = 0x8
    _Bool _isInputHoldEnabled;	// 9 = 0x9
    _Bool _isInputRepeatEnabled;	// 10 = 0xa
    _Bool _isInputCoalesceEnabled;	// 11 = 0xb
    _Bool _hasInitializedInputSources;	// 12 = 0xc
    AXSwitchRecipe *_recipe;	// 16 = 0x10
    SCATKeyboardInputSource *_keyboardInputSource;	// 24 = 0x18
    id <SCATInputControllerDelegate> _delegate;	// 32 = 0x20
    AXAccessQueue *_queue;	// 40 = 0x28
    SCATCameraInputSource *_cameraInputSource;	// 48 = 0x30
    SCATMFIInputSource *_mfiInputSource;	// 56 = 0x38
    SCATScreenInputSource *_screenInputSource;	// 64 = 0x40
    SCATATVRemoteInputSource *_atvRemoteInputSource;	// 72 = 0x48
    SCATMIDIInputSource *_midiInputSource;	// 80 = 0x50
    SCATGamepadInputSource *_gamepadInputSource;	// 88 = 0x58
    SCATRemoteControlInputSource *_remoteControlInputSource;	// 96 = 0x60
    SCATHeadTracker *_headGestureSource;	// 104 = 0x68
    AXSSInterDeviceCommunicator *_interDeviceCommunicator;	// 112 = 0x70
    SCATInterDeviceInputSource *_interDeviceInputSource;	// 120 = 0x78
    SCATAccessibilityEventInputSource *_accessibilityEventInputSource;	// 128 = 0x80
    double _timeIntervalBeforeSendAction;	// 136 = 0x88
    double _timeIntervalBeforeSendLongPressAction;	// 144 = 0x90
    double _timeIntervalBeforeSendRepeatAction;	// 152 = 0x98
    double _timeIntervalBetweenDidSendActions;	// 160 = 0xa0
    double _timeIntervalSinceDidSendAction;	// 168 = 0xa8
    AXDispatchTimer *_inputHoldTimer;	// 176 = 0xb0
    AXDispatchTimer *_inputRepeatTimer;	// 184 = 0xb8
    AXDispatchTimer *_inputLongPressTimer;	// 192 = 0xc0
    NSMutableSet *_availableDevices;	// 200 = 0xc8
    SBSSystemApertureRestrictionService *_restrictionService;	// 208 = 0xd0
    id <BSInvalidatable> _systemApertureInvalidatable;	// 216 = 0xd8
}

- (void).cxx_destruct;	// IMP=0x00200000000793b6
@property(retain, nonatomic) id <BSInvalidatable> systemApertureInvalidatable; // @synthesize systemApertureInvalidatable=_systemApertureInvalidatable;
@property(retain, nonatomic) SBSSystemApertureRestrictionService *restrictionService; // @synthesize restrictionService=_restrictionService;
@property(retain, nonatomic) NSMutableSet *availableDevices; // @synthesize availableDevices=_availableDevices;
@property(nonatomic) _Bool hasInitializedInputSources; // @synthesize hasInitializedInputSources=_hasInitializedInputSources;
@property(retain, nonatomic) AXDispatchTimer *inputLongPressTimer; // @synthesize inputLongPressTimer=_inputLongPressTimer;
@property(retain, nonatomic) AXDispatchTimer *inputRepeatTimer; // @synthesize inputRepeatTimer=_inputRepeatTimer;
@property(retain, nonatomic) AXDispatchTimer *inputHoldTimer; // @synthesize inputHoldTimer=_inputHoldTimer;
@property(nonatomic) _Bool isInputCoalesceEnabled; // @synthesize isInputCoalesceEnabled=_isInputCoalesceEnabled;
@property(nonatomic) _Bool isInputRepeatEnabled; // @synthesize isInputRepeatEnabled=_isInputRepeatEnabled;
@property(nonatomic) _Bool isInputHoldEnabled; // @synthesize isInputHoldEnabled=_isInputHoldEnabled;
@property(nonatomic) double timeIntervalSinceDidSendAction; // @synthesize timeIntervalSinceDidSendAction=_timeIntervalSinceDidSendAction;
@property(nonatomic) double timeIntervalBetweenDidSendActions; // @synthesize timeIntervalBetweenDidSendActions=_timeIntervalBetweenDidSendActions;
@property(nonatomic) double timeIntervalBeforeSendRepeatAction; // @synthesize timeIntervalBeforeSendRepeatAction=_timeIntervalBeforeSendRepeatAction;
@property(nonatomic) double timeIntervalBeforeSendLongPressAction; // @synthesize timeIntervalBeforeSendLongPressAction=_timeIntervalBeforeSendLongPressAction;
@property(nonatomic) double timeIntervalBeforeSendAction; // @synthesize timeIntervalBeforeSendAction=_timeIntervalBeforeSendAction;
@property(retain, nonatomic) SCATAccessibilityEventInputSource *accessibilityEventInputSource; // @synthesize accessibilityEventInputSource=_accessibilityEventInputSource;
@property(retain, nonatomic) SCATInterDeviceInputSource *interDeviceInputSource; // @synthesize interDeviceInputSource=_interDeviceInputSource;
@property(readonly, nonatomic) AXSSInterDeviceCommunicator *interDeviceCommunicator; // @synthesize interDeviceCommunicator=_interDeviceCommunicator;
@property(retain, nonatomic) SCATHeadTracker *headGestureSource; // @synthesize headGestureSource=_headGestureSource;
@property(retain, nonatomic) SCATRemoteControlInputSource *remoteControlInputSource; // @synthesize remoteControlInputSource=_remoteControlInputSource;
@property(retain, nonatomic) SCATGamepadInputSource *gamepadInputSource; // @synthesize gamepadInputSource=_gamepadInputSource;
@property(retain, nonatomic) SCATMIDIInputSource *midiInputSource; // @synthesize midiInputSource=_midiInputSource;
@property(retain, nonatomic) SCATATVRemoteInputSource *atvRemoteInputSource; // @synthesize atvRemoteInputSource=_atvRemoteInputSource;
@property(retain, nonatomic) SCATScreenInputSource *screenInputSource; // @synthesize screenInputSource=_screenInputSource;
@property(retain, nonatomic) SCATMFIInputSource *mfiInputSource; // @synthesize mfiInputSource=_mfiInputSource;
@property(retain, nonatomic) SCATCameraInputSource *cameraInputSource; // @synthesize cameraInputSource=_cameraInputSource;
@property(retain, nonatomic) AXAccessQueue *queue; // @synthesize queue=_queue;
@property(nonatomic) __weak id <SCATInputControllerDelegate> delegate; // @synthesize delegate=_delegate;
@property(nonatomic, getter=isValid) _Bool valid; // @synthesize valid=_valid;
@property(retain, nonatomic) SCATKeyboardInputSource *keyboardInputSource; // @synthesize keyboardInputSource=_keyboardInputSource;
@property(retain, nonatomic) AXSwitchRecipe *recipe; // @synthesize recipe=_recipe;
- (void)performSysdiagnose;	// IMP=0x001000000007903c
- (void)didReceiveSwitchEvent:(id)arg1 forDeviceWithName:(id)arg2;	// IMP=0x0010000000078fb1
- (void)_invalidateAssertionForSystemApertureInert;	// IMP=0x0010000000078f18
- (void)_restrictSystemApertureLayoutToInert;	// IMP=0x0010000000078e77
- (void)_showState:(id)arg1 forSource:(unsigned long long)arg2;	// IMP=0x0010000000078d70
- (void)_showAlert:(id)arg1 forSource:(unsigned long long)arg2;	// IMP=0x0010000000078b5b
- (void)_hideStateForSource:(unsigned long long)arg1;	// IMP=0x0010000000078a7b
- (void)_hideAlertForSource:(unsigned long long)arg1;	// IMP=0x001000000007899b
- (void)_hideAlerts;	// IMP=0x0010000000078932
@property(readonly, nonatomic) AXUIClient *userInterfaceClient;
- (void)setDelegate:(id)arg1 queue:(id)arg2;	// IMP=0x0010000000078872
- (void)updateWhetherSwitchConfigurationHasScreenSwitch;	// IMP=0x0010000000078812
- (void)updateWhetherSwitchConfigurationRendersDeviceUnusable;	// IMP=0x00100000000786f0
- (_Bool)_isSwitchWithSource:(id)arg1 isEnabled:(id)arg2;	// IMP=0x00100000000784fa
- (_Bool)isEnabledSwitchWithSource:(id)arg1;	// IMP=0x00100000000784e1
- (_Bool)isSwitchWithSource:(id)arg1;	// IMP=0x00100000000784cd
@property(readonly, nonatomic) long long role;
- (id)_allSwitchesInUse;	// IMP=0x0010000000077fd7
- (void)_sharedInit;	// IMP=0x0010000000077622
- (id)initWithInterDeviceCommunicator:(id)arg1;	// IMP=0x001000000007758e
- (void)dealloc;	// IMP=0x00100000000771c2
- (void)_setupInputTimers;	// IMP=0x001000000007709b
- (void)_removeInputTimers;	// IMP=0x0010000000076fed
- (_Bool)_switchConfigurationHasScreenSwitch;	// IMP=0x0010000000076fd1
- (_Bool)_switchConfigurationRendersDeviceUnusable;	// IMP=0x0010000000076278
- (void)_updateInputSources;	// IMP=0x00100000000761c3
- (void)_updateRemoteControlInputSource;	// IMP=0x00100000000760bb
- (void)_updateAccessibilityEventInputSource;	// IMP=0x0010000000075ed6
- (void)_updateSCNeedsMicrophoneOnLockScreen;	// IMP=0x0010000000075e5a
- (void)_updateInterDeviceInputSource;	// IMP=0x0010000000075d41
- (void)_updateHeadGesturesInputSource;	// IMP=0x0010000000075be6
- (void)_updateGamepadInputSource;	// IMP=0x0010000000075aae
- (void)_updateScreenInputSource;	// IMP=0x0010000000075960
- (MISSING_TYPE *)_updateMFIInputSource;	// IMP=0x0010000000075878
- (void)_updateMIDIInputSource;	// IMP=0x001000000007568f
- (void)_updateKeyboardInputSource;	// IMP=0x0010000000075554
- (void)_updateATVRemoteInputSource;	// IMP=0x001000000007554e
- (void)_removeInputSources;	// IMP=0x001000000007506b
- (void)_removeInputSource:(id)arg1;	// IMP=0x001000000007501c
- (void)_configureMFIAccessoryIfNecessary:(id)arg1;	// IMP=0x0010000000074bf9
- (void)remoteControlInputSource:(id)arg1 didReceiveActionWithIdentifier:(id)arg2 start:(_Bool)arg3 ignoreInputHold:(_Bool)arg4;	// IMP=0x0010000000074bde
- (void)accessibilityEventInputSource:(id)arg1 didReceiveActionWithIdentifier:(id)arg2 start:(_Bool)arg3 ignoreInputHold:(_Bool)arg4;	// IMP=0x0010000000074bc3
- (void)interDeviceInputSource:(id)arg1 didReceiveActionWithIdentifier:(id)arg2 start:(_Bool)arg3 ignoreInputHold:(_Bool)arg4;	// IMP=0x0010000000074ba8
- (void)screenInputSource:(id)arg1 didReceiveActionWithIdentifier:(id)arg2 start:(_Bool)arg3 ignoreInputHold:(_Bool)arg4;	// IMP=0x0010000000074b8d
- (void)hardwareInputSource:(id)arg1 didUpdateAvailability:(_Bool)arg2 withDetail:(unsigned long long)arg3;	// IMP=0x0010000000074898
- (void)hardwareInputSource:(id)arg1 didReceiveActionWithIdentifier:(id)arg2 start:(_Bool)arg3 ignoreInputHold:(_Bool)arg4;	// IMP=0x001000000007487d
- (void)headTrackerInputSource:(id)arg1 didUpdateState:(CDStruct_c305b3b4)arg2;	// IMP=0x0010000000074791
- (void)headTrackerInputSource:(id)arg1 didUpdateAvailability:(_Bool)arg2 withDetail:(long long)arg3;	// IMP=0x001000000007470a
- (void)headTrackerInputSource:(id)arg1 didReceiveActionWithIdentifier:(long long)arg2 start:(_Bool)arg3 ignoreInputHold:(_Bool)arg4;	// IMP=0x001000000007469d
- (void)cameraInputSource:(id)arg1 didUpdateState:(CDStruct_c305b3b4)arg2;	// IMP=0x00100000000745b1
- (void)cameraInputSource:(id)arg1 didUpdateAvailability:(_Bool)arg2 withDetail:(unsigned long long)arg3;	// IMP=0x0010000000074532
- (void)cameraInputSource:(id)arg1 didReceiveActionWithIdentifier:(id)arg2 start:(_Bool)arg3;	// IMP=0x0010000000074517
- (void)handleInterDeviceBailOutForInputSource:(id)arg1;	// IMP=0x001000000007438e
- (void)inputSource:(id)arg1 forwardSwitchEvent:(id)arg2;	// IMP=0x0010000000074325
- (_Bool)shouldForwardSwitchEventsForInputSource:(id)arg1;	// IMP=0x001000000007430b
- (void)didEndLongPressForInputSource:(id)arg1;	// IMP=0x00100000000742bf
- (void)didBeginLongPressForInputSource:(id)arg1;	// IMP=0x0010000000074273
- (void)_updateIsInputCoalesceEnabled;	// IMP=0x0010000000074213
- (void)_updateIsInputRepeatEnabled;	// IMP=0x00100000000741b3
- (void)_updateIsInputHoldEnabled;	// IMP=0x0010000000074153
- (void)_updateTimeIntervalBetweenDidSendActions;	// IMP=0x00100000000740f6
- (void)_updateTimeIntervalBeforeSendRepeatAction;	// IMP=0x0010000000074099
- (void)_updateTimeIntervalBeforeSendAction;	// IMP=0x001000000007403c
- (void)_sendActionWithIdentifier:(id)arg1;	// IMP=0x0010000000073b30
- (void)_endAction;	// IMP=0x0010000000073ab8
- (void)_didReceiveActionWithIdentifier:(id)arg1 start:(_Bool)arg2 ignoreInputHold:(_Bool)arg3;	// IMP=0x00100000000738d2
- (_Bool)_handleHoldAtPointForActionIdentifier:(id)arg1 start:(_Bool)arg2;	// IMP=0x001000000007357e
- (_Bool)_hasExternalSwitchConfigured;	// IMP=0x00100000000734e7
- (void)_updateActionsForSource:(id)arg1;	// IMP=0x001000000007345d

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
// Preceding property had unknown attributes: ?
// Original attribute string: T@"NSString",?,R,C

@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

