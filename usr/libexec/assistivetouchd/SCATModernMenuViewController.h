//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <UIKitCore/UIViewController.h>

@class NSMutableArray, NSString, SBSSystemApertureLayoutMonitor, SCATMenu, SCATModernMenuView, SCATPointPicker;

@interface SCATModernMenuViewController : UIViewController
{
    SBSSystemApertureLayoutMonitor *_layoutMonitor;	// 8 = 0x8
    struct CGRect _foreheadRect;	// 16 = 0x10
    long long _tipObject;	// 48 = 0x30
    SCATMenu *_menu;	// 56 = 0x38
    SCATPointPicker *_pointPicker;	// 64 = 0x40
    NSMutableArray *_sheetViewControllerStack;	// 72 = 0x48
}

- (void).cxx_destruct;	// IMP=0x002000000007d325
@property(retain, nonatomic) NSMutableArray *sheetViewControllerStack; // @synthesize sheetViewControllerStack=_sheetViewControllerStack;
@property(nonatomic) __weak SCATPointPicker *pointPicker; // @synthesize pointPicker=_pointPicker;
@property(nonatomic) __weak SCATMenu *menu; // @synthesize menu=_menu;
@property(nonatomic) long long tipObject; // @synthesize tipObject=_tipObject;
- (void)systemApertureLayoutDidChange:(id)arg1;	// IMP=0x001000000007d0df
- (struct CGPoint)_positionForMenuDockPosition:(long long)arg1 size:(struct CGSize)arg2;	// IMP=0x001000000007cf18
- (struct CGPoint)_positionForMenuPopoverPosition:(long long)arg1 size:(struct CGSize)arg2;	// IMP=0x001000000007cc51
- (_Bool)_menuFrameIsValid:(struct CGRect)arg1;	// IMP=0x001000000007cb58
- (void)_determineMenuOrigin:(struct CGPoint *)arg1 anchorPosition:(double *)arg2 anchorDirection:(_Bool *)arg3 shouldUseTip:(_Bool *)arg4 sheet:(id)arg5;	// IMP=0x001000000007c035
- (struct CGRect)_rectToClearIfNeededForSheet:(id)arg1;	// IMP=0x001000000007bec9
- (void)_updateMenuLayoutForSheet:(id)arg1 sheetViewController:(id)arg2 animated:(_Bool)arg3;	// IMP=0x001000000007b675
- (void)_updateContentSizeForSheet:(id)arg1;	// IMP=0x001000000007b5c7
- (void)transitionToMenuSheet:(id)arg1 fromSheet:(id)arg2;	// IMP=0x001000000007b2fc
- (void)flashModernMenuItem:(id)arg1;	// IMP=0x001000000007b293
- (void)updateModernMenuItem:(id)arg1;	// IMP=0x001000000007b22a
- (_Bool)isElementTopLevelInMenu:(id)arg1;	// IMP=0x001000000007b1cc
- (void)reloadMenuVisuals;	// IMP=0x001000000007b145
- (void)didReloadSheet:(id)arg1;	// IMP=0x001000000007b008
- (_Bool)isVisible;	// IMP=0x001000000007af6f
- (void)updateViewControllerStackForSheet:(id)arg1 previousSheet:(id)arg2;	// IMP=0x001000000007abbf
- (id)currentSheetViewController;	// IMP=0x001000000007ab6f
- (void)_handleShowMoreItems:(id)arg1;	// IMP=0x001000000007a837
- (void)updateMenuSheetContentSize;	// IMP=0x001000000007a7eb
- (void)updateMenuSheetForOrientationChange;	// IMP=0x001000000007a764
- (void)updateMenuLayout;	// IMP=0x001000000007a6ed
- (struct CGRect)frame;	// IMP=0x001000000007a691
- (void)hide;	// IMP=0x001000000007a654
- (void)updateForGeometryChange;	// IMP=0x001000000007a626
- (id)elementProviderForSheet:(id)arg1;	// IMP=0x001000000007a611
- (id)extraProviderElements;	// IMP=0x001000000007a53f
- (id)exitActionElement;	// IMP=0x001000000007a416
- (void)willUnfocusFromContext:(id)arg1;	// IMP=0x001000000007a369
- (void)didFocusOnContext:(id)arg1 oldContext:(id)arg2;	// IMP=0x0010000000079ff4
- (void)willBePresentedWithElement:(id)arg1 pointPicker:(id)arg2 sheetToShow:(id)arg3;	// IMP=0x0010000000079f1b
- (id)contentViewContainer;	// IMP=0x0010000000079e7a
- (id)showMoreItemsPageControl;	// IMP=0x0010000000079dbd
- (void)setShowsFooter:(_Bool)arg1 numberOfPagesRequired:(unsigned long long)arg2;	// IMP=0x0010000000079b2d
- (_Bool)showsFooter;	// IMP=0x0010000000079a98
@property(readonly, nonatomic) SCATModernMenuView *menuView;
- (id)currentSheet;	// IMP=0x00100000000799e3
- (_Bool)_canShowWhileLocked;	// IMP=0x00100000000799db
- (void)loadView;	// IMP=0x001000000007996e
- (id)initWithMenu:(id)arg1;	// IMP=0x001000000007986c

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
// Preceding property had unknown attributes: ?
// Original attribute string: T@"NSString",?,R,C

@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

