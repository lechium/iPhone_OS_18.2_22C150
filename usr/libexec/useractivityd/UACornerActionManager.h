//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <objc/NSObject.h>

@class ActivityManagerDebuggingManager, FBSDisplayLayoutMonitor, NSArray, NSDate, NSMutableSet, NSNumber, NSSet, NSString, NSTimer, NSUUID, NSUserDefaults, PowerManagerIdleTracker, UABluetoothStatus, UADispatchScheduler, UAPingController, UASharedPasteboardClientController, UATimedPowerAssertions, UAUserActivityInfo;
@protocol OS_dispatch_group, OS_dispatch_queue, OS_dispatch_semaphore, OS_dispatch_source;

@interface UACornerActionManager : NSObject
{
    _Bool _suspended;	// 8 = 0x8
    NSMutableSet *_advertisers;	// 16 = 0x10
    NSMutableSet *_receivers;	// 24 = 0x18
    NSMutableSet *_clients;	// 32 = 0x20
    NSMutableSet *_notifiers;	// 40 = 0x28
    NSMutableSet *_handlers;	// 48 = 0x30
    NSDate *_creationTime;	// 56 = 0x38
    NSArray *_itemsBeingAdvertised;	// 64 = 0x40
    int _managedSettingsChangedNotificationToken;	// 72 = 0x48
    NSObject<OS_dispatch_group> *_helpersDispatchGroup;	// 80 = 0x50
    double _systemIdlePreviousTimeSinceLastUserActivity;	// 88 = 0x58
    _Bool _advertisingSuspended;	// 96 = 0x60
    int _lastNumAdvertiseableProcesses;	// 100 = 0x64
    UAUserActivityInfo *_debugCornerItem;	// 104 = 0x68
    NSNumber *_sharingPolicyWantsToBlockReceivingItems;	// 112 = 0x70
    _Bool _backlightOn;	// 120 = 0x78
    _Bool _systemHasSuspendedAdvertisements;	// 121 = 0x79
    _Bool _systemHasSuspendedScanning;	// 122 = 0x7a
    _Bool _userActive;	// 123 = 0x7b
    _Bool _batterySaverModeEnabled;	// 124 = 0x7c
    _Bool _receivingSuspended;	// 125 = 0x7d
    _Bool _deviceUILocked;	// 126 = 0x7e
    _Bool _screenDimmed;	// 127 = 0x7f
    _Bool _systemIsIdle;	// 128 = 0x80
    _Bool _isMirroringActive;	// 129 = 0x81
    _Bool _pingMode;	// 130 = 0x82
    int _backlightLevelToken;	// 132 = 0x84
    unsigned int _holdPowerAssertion;	// 136 = 0x88
    int _systemPreferenceChangedToken;	// 140 = 0x8c
    int _uiLockStatusToken;	// 144 = 0x90
    NSUUID *_uuid;	// 152 = 0x98
    NSSet *_activeDevicesIdentifiers;	// 160 = 0xa0
    NSUserDefaults *_userDefaults;	// 168 = 0xa8
    ActivityManagerDebuggingManager *_debugManager;	// 176 = 0xb0
    UAUserActivityInfo *_pinnedUserActivityInfoItem;	// 184 = 0xb8
    UASharedPasteboardClientController *_pasteboardController;	// 192 = 0xc0
    UAPingController *_pingController;	// 200 = 0xc8
    NSObject<OS_dispatch_queue> *_mainDispatchQ;	// 208 = 0xd0
    UADispatchScheduler *_nextUserIdleDeterminationScheduler;	// 216 = 0xd8
    UADispatchScheduler *_nextUpdateAdvertisedItemsScheduler;	// 224 = 0xe0
    UADispatchScheduler *_nextScheduleBestAppDeterminationScheduler;	// 232 = 0xe8
    UATimedPowerAssertions *_deviceUILockedPowerAssertion;	// 240 = 0xf0
    UATimedPowerAssertions *_screenDimmedPowerAssertion;	// 248 = 0xf8
    NSDate *_holdPowerAssertionUntil;	// 256 = 0x100
    NSObject<OS_dispatch_source> *_holdPowerAssertionSourceTimer;	// 264 = 0x108
    PowerManagerIdleTracker *_userIdleTracker;	// 272 = 0x110
    UATimedPowerAssertions *_userInactivePowerAssertion;	// 280 = 0x118
    NSDate *_lastTimePayloadWasRequestedForAdvertisedItem;	// 288 = 0x120
    FBSDisplayLayoutMonitor *_mirroringMonitor;	// 296 = 0x128
    double _avgPingTime;	// 304 = 0x130
    NSDate *_pingStart;	// 312 = 0x138
    NSObject<OS_dispatch_semaphore> *_pongSem;	// 320 = 0x140
    NSTimer *_pongTimer;	// 328 = 0x148
    UABluetoothStatus *_bluetoothStatus;	// 336 = 0x150
    NSObject *_bluetoothStatusCallbackIdentifier;	// 344 = 0x158
}

+ (id)sharedActivityManagerServer;	// IMP=0x002000000001d854
+ (id)cornerActionManager;	// IMP=0x001000000001d83b
- (void).cxx_destruct;	// IMP=0x002000000002b112
@property(retain) NSObject *bluetoothStatusCallbackIdentifier; // @synthesize bluetoothStatusCallbackIdentifier=_bluetoothStatusCallbackIdentifier;
@property(retain) UABluetoothStatus *bluetoothStatus; // @synthesize bluetoothStatus=_bluetoothStatus;
@property(retain) NSTimer *pongTimer; // @synthesize pongTimer=_pongTimer;
@property(retain) NSObject<OS_dispatch_semaphore> *pongSem; // @synthesize pongSem=_pongSem;
@property(retain) NSDate *pingStart; // @synthesize pingStart=_pingStart;
@property double avgPingTime; // @synthesize avgPingTime=_avgPingTime;
@property _Bool pingMode; // @synthesize pingMode=_pingMode;
@property _Bool isMirroringActive; // @synthesize isMirroringActive=_isMirroringActive;
@property(retain) FBSDisplayLayoutMonitor *mirroringMonitor; // @synthesize mirroringMonitor=_mirroringMonitor;
@property int uiLockStatusToken; // @synthesize uiLockStatusToken=_uiLockStatusToken;
@property int systemPreferenceChangedToken; // @synthesize systemPreferenceChangedToken=_systemPreferenceChangedToken;
@property(copy) NSDate *lastTimePayloadWasRequestedForAdvertisedItem; // @synthesize lastTimePayloadWasRequestedForAdvertisedItem=_lastTimePayloadWasRequestedForAdvertisedItem;
@property _Bool systemIsIdle; // @synthesize systemIsIdle=_systemIsIdle;
@property(retain) UATimedPowerAssertions *userInactivePowerAssertion; // @synthesize userInactivePowerAssertion=_userInactivePowerAssertion;
@property(retain) PowerManagerIdleTracker *userIdleTracker; // @synthesize userIdleTracker=_userIdleTracker;
@property unsigned int holdPowerAssertion; // @synthesize holdPowerAssertion=_holdPowerAssertion;
@property(retain) NSObject<OS_dispatch_source> *holdPowerAssertionSourceTimer; // @synthesize holdPowerAssertionSourceTimer=_holdPowerAssertionSourceTimer;
@property(retain) NSDate *holdPowerAssertionUntil; // @synthesize holdPowerAssertionUntil=_holdPowerAssertionUntil;
@property int backlightLevelToken; // @synthesize backlightLevelToken=_backlightLevelToken;
@property(retain) UATimedPowerAssertions *screenDimmedPowerAssertion; // @synthesize screenDimmedPowerAssertion=_screenDimmedPowerAssertion;
@property _Bool screenDimmed; // @synthesize screenDimmed=_screenDimmed;
@property(retain) UATimedPowerAssertions *deviceUILockedPowerAssertion; // @synthesize deviceUILockedPowerAssertion=_deviceUILockedPowerAssertion;
@property _Bool deviceUILocked; // @synthesize deviceUILocked=_deviceUILocked;
@property(readonly, retain) UADispatchScheduler *nextScheduleBestAppDeterminationScheduler; // @synthesize nextScheduleBestAppDeterminationScheduler=_nextScheduleBestAppDeterminationScheduler;
@property(readonly, retain) UADispatchScheduler *nextUpdateAdvertisedItemsScheduler; // @synthesize nextUpdateAdvertisedItemsScheduler=_nextUpdateAdvertisedItemsScheduler;
@property(readonly, retain) UADispatchScheduler *nextUserIdleDeterminationScheduler; // @synthesize nextUserIdleDeterminationScheduler=_nextUserIdleDeterminationScheduler;
@property(retain) NSObject<OS_dispatch_queue> *mainDispatchQ; // @synthesize mainDispatchQ=_mainDispatchQ;
@property(retain) UAPingController *pingController; // @synthesize pingController=_pingController;
@property(retain) UASharedPasteboardClientController *pasteboardController; // @synthesize pasteboardController=_pasteboardController;
@property _Bool receivingSuspended; // @synthesize receivingSuspended=_receivingSuspended;
@property(retain) UAUserActivityInfo *pinnedUserActivityInfoItem; // @synthesize pinnedUserActivityInfoItem=_pinnedUserActivityInfoItem;
@property(readonly, retain) ActivityManagerDebuggingManager *debugManager; // @synthesize debugManager=_debugManager;
@property(readonly, getter=isBatterySaverModeEnabled) _Bool batterySaverModeEnabled; // @synthesize batterySaverModeEnabled=_batterySaverModeEnabled;
@property(readonly, retain) NSUserDefaults *userDefaults; // @synthesize userDefaults=_userDefaults;
@property(readonly) NSSet *activeDevicesIdentifiers; // @synthesize activeDevicesIdentifiers=_activeDevicesIdentifiers;
@property(readonly, copy) NSUUID *uuid; // @synthesize uuid=_uuid;
@property(getter=isBacklightOn) _Bool backlightOn; // @synthesize backlightOn=_backlightOn;
@property(readonly, copy) NSSet *allHandlers;
- (void)removeHandler:(id)arg1;	// IMP=0x001000000002ab7f
- (void)addHandler:(id)arg1;	// IMP=0x001000000002aace
@property(readonly, copy) NSSet *handlers;
- (void)removeActivityNotifier:(id)arg1;	// IMP=0x001000000002a9ca
- (void)addActivityNotifier:(id)arg1;	// IMP=0x001000000002a909
@property(readonly, copy) NSSet *notifiers;
- (void)removeClient:(id)arg1;	// IMP=0x001000000002a7e9
- (void)addClient:(id)arg1;	// IMP=0x001000000002a710
@property(readonly, copy) NSSet *clients;
- (void)removeReceiver:(id)arg1;	// IMP=0x001000000002a61c
- (void)addReceiver:(id)arg1;	// IMP=0x001000000002a54a
@property(readonly, copy) NSSet *receivers;
- (void)removeAdvertiser:(id)arg1;	// IMP=0x001000000002a39b
- (void)addAdvertiser:(id)arg1;	// IMP=0x001000000002a21f
@property(readonly, copy) NSSet *advertisers;
- (id)statusString;	// IMP=0x001000000002784d
- (id)shortStatusString;	// IMP=0x0010000000026e6a
- (id)dynamicUserActivitiesString;	// IMP=0x0010000000026d97
- (id)debuggingInfo;	// IMP=0x0010000000026bdd
- (id)dictionaryForCornerActionItem:(id)arg1;	// IMP=0x0010000000026bd5
- (id)dictionaryForAdvertisableItem:(id)arg1;	// IMP=0x0010000000026bcd
- (void)updateUIDeviceLockedState:(_Bool)arg1;	// IMP=0x0010000000026644
- (void)updateScreenDimStateState:(_Bool)arg1;	// IMP=0x00100000000260a5
- (void)updateUserActiveState:(_Bool)arg1;	// IMP=0x0010000000025669
@property _Bool userActive; // @synthesize userActive=_userActive;
- (void)terminate;	// IMP=0x00100000000255f6
- (void)resume;	// IMP=0x00100000000242af
- (void)suspend;	// IMP=0x0010000000023ae6
@property _Bool suspended;
- (void)resumeListeningForBluetooth;	// IMP=0x001000000002381d
- (void)suspendListeningForBluetooth;	// IMP=0x0010000000023748
- (void)triggerAll;	// IMP=0x00100000000236f5
- (void)processWasRemoved;	// IMP=0x0010000000023590
- (_Bool)fetchMoreAppSuggestions;	// IMP=0x00100000000233c2
- (_Bool)haveBestAppChangeNotificationClients;	// IMP=0x0010000000023356
- (void)_checkIfBestApplicationChangedThread;	// IMP=0x0010000000022ff5
- (_Bool)scheduleBestAppDetermination:(double)arg1;	// IMP=0x0010000000022f8b
- (_Bool)scheduleBestAppDetermination;	// IMP=0x0010000000022f76
- (void)checkIfBestCornerItemChanged:(double)arg1;	// IMP=0x0010000000022ee7
@property(retain, nonatomic) UAUserActivityInfo *debugCornerItem;
- (id)bestCornerItem:(id)arg1;	// IMP=0x0010000000022e6c
- (id)bestCornerItem;	// IMP=0x0010000000022e08
- (id)cornerActionItemForUUID:(id)arg1;	// IMP=0x0010000000022bc8
- (id)cornerActionItems;	// IMP=0x00100000000227aa
@property _Bool systemHasSuspendedScanning; // @synthesize systemHasSuspendedScanning=_systemHasSuspendedScanning;
@property _Bool systemHasSuspendedAdvertisements; // @synthesize systemHasSuspendedAdvertisements=_systemHasSuspendedAdvertisements;
- (void)_determineWhenSystemGoesIdleThread;	// IMP=0x0010000000021219
@property _Bool advertisingSuspended;
- (void)triggerUserIdleDetermination:(double)arg1;	// IMP=0x0010000000020f9b
- (void)triggerUserIdleDetermination;	// IMP=0x0010000000020f86
@property(readonly) _Bool isSharingModeBlockingReceiving;
- (_Bool)isBluetoothEnabled;	// IMP=0x0010000000020f76
@property(readonly) _Bool activityReceivingAllowed;
@property(readonly) _Bool activityAdvertisingAllowed;
- (void)updateScreenSaverActive:(_Bool)arg1;	// IMP=0x0010000000020eb2
- (void)_determineItemToAdvertiseForHandoffThread;	// IMP=0x001000000001f407
@property(readonly, copy) NSArray *itemsBeingAdvertised; // @synthesize itemsBeingAdvertised=_itemsBeingAdvertised;
- (_Bool)weAreAdvertisingAtLeastOneItem;	// IMP=0x001000000001f1aa
- (void)userActivityItemsChanged;	// IMP=0x001000000001f0bf
- (id)uaAdvertisableItemsInOrder:(_Bool)arg1;	// IMP=0x001000000001ea9c
- (id)uaAdvertisableItemsInOrder;	// IMP=0x001000000001ea88
- (id)activeAdvertiseableItemsUUIDs;	// IMP=0x001000000001e854
- (void)scheduleUpdatingAdvertisableItems:(double)arg1;	// IMP=0x001000000001e7f1
- (void)scheduleUpdatingAdvertisableItems;	// IMP=0x001000000001e7d7
- (_Bool)shouldItemBeAdvertised:(id)arg1;	// IMP=0x001000000001e3dc
- (id)advertiseableItems;	// IMP=0x001000000001e182
- (_Bool)weAreAdvertisingAnItem;	// IMP=0x001000000001dfda
- (void)dealloc;	// IMP=0x001000000001dfab
- (id)init;	// IMP=0x001000000001d8a9

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
// Preceding property had unknown attributes: ?
// Original attribute string: T@"NSString",?,R,C

@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

