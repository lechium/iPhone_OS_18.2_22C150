//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <objc/NSObject.h>

@class CoreTelephonyClient, IDSBaseSocketPairConnection, IDSClientChannel, IDSConnectionContext, IDSDAccountController, IDSDGroupStatusNotificationController, IDSDSessionInvitationManager, IDSDSessionMessenger, IDSDSessionSharedState, IDSGFTMetricsCollector, IDSGroupEncryptionKeyManager, IDSGroupSessionDataCryptor, IDSGroupStatusNotificationParameters, IDSMultiplexerGroupSessionTransport, IDSQuickRelayAllocator, IDSUTunController, MISSING_TYPE, NSArray, NSData, NSDate, NSDictionary, NSMutableArray, NSMutableData, NSMutableDictionary, NSNumber, NSSet, NSString, NSUUID, _TtC17identityservicesd33IDSGroupEncryptionControllerGroup, _TtC17identityservicesd40IDSGroupEncryptionControllerGroupSession, _TtC17identityservicesd45IDSGroupDefaultRootMaterialExchangeController;
@protocol IDSDSessionAvailabilityCheck, IDSXPCGroupSessionKeyValueDelivery, OS_dispatch_queue, _TtP17identityservicesd35IDSDSessionKeyValueDeliveryProtocol_;

@interface IDSDSession : NSObject
{
    _Bool _assertedRealTimeMode;	// 8 = 0x8
    id <IDSDSessionAvailabilityCheck> _availabilityCheck;	// 16 = 0x10
    NSDate *_awdStartTimestamp;	// 24 = 0x18
    NSString *_awdUniqueId;	// 32 = 0x20
    IDSBaseSocketPairConnection *_baseSocketPairConnection;	// 40 = 0x28
    _Bool _bypassUTun;	// 48 = 0x30
    NSMutableArray *_cachedClientData;	// 56 = 0x38
    long long _cachedNumberOfActiveParticipants;	// 64 = 0x40
    IDSClientChannel *_clientChannel;	// 72 = 0x48
    NSUUID *_clientChannelUUID;	// 80 = 0x50
    struct os_unfair_lock_s _clientChannelLock;	// 88 = 0x58
    unsigned long long _connectionClaimed;	// 96 = 0x60
    IDSConnectionContext *_connectionContext;	// 104 = 0x68
    unsigned int _currentGenerationCounter;	// 112 = 0x70
    NSDate *_genCounterUpdatedByResponseTime;	// 120 = 0x78
    _Bool _disallowCellularInterface;	// 128 = 0x80
    _Bool _disallowWifiInterface;	// 129 = 0x81
    _Bool _disableP2PLinks;	// 130 = 0x82
    _Bool _sessionIsNonUserParticipantInitiated;	// 131 = 0x83
    NSDate *_endDate;	// 136 = 0x88
    NSMutableDictionary *_extraConnections;	// 144 = 0x90
    NSMutableDictionary *_participantIDToAVCBlob;	// 152 = 0x98
    NSMutableDictionary *_participantIDToTypeToEncryptedIDSContextBlobs;	// 160 = 0xa0
    unsigned long long _extraConnectionCount;	// 168 = 0xa8
    unsigned int _groupSessionState;	// 176 = 0xb0
    IDSGroupStatusNotificationParameters *_groupStatusNotificationParams;	// 184 = 0xb8
    int _idsDataChannelClientPID;	// 192 = 0xc0
    unsigned long long _initialLinkType;	// 200 = 0xc8
    NSString *_instanceID;	// 208 = 0xd0
    double _inviteRecvTime;	// 216 = 0xd8
    _Bool _joinGroupSessionPending;	// 224 = 0xe0
    CDUnknownBlockType _joinNotificationDeliveryTimeoutBlock;	// 232 = 0xe8
    unsigned char _keyMaterial[60];	// 240 = 0xf0
    long long _linkProtocol;	// 304 = 0x130
    double _membershipChangeEventTime;	// 312 = 0x138
    double _newKeyEventTime;	// 320 = 0x140
    double _idsContextTimeStamp;	// 328 = 0x148
    NSObject<OS_dispatch_queue> *_networkSlicingReportingQueue;	// 336 = 0x150
    unsigned char _cellularSlicingFlags;	// 344 = 0x158
    NSDictionary *_cellularNetworkInfoSessionEvent;	// 352 = 0x160
    NSNumber *_cellularNetworkInterfaceBringupTime;	// 360 = 0x168
    CoreTelephonyClient *_ctClient;	// 368 = 0x170
    double _summaryReportBaseTime;	// 376 = 0x178
    double _joinSendStartTime;	// 384 = 0x180
    double _joinSendEndTime;	// 392 = 0x188
    double _joinRecvTime;	// 400 = 0x190
    double _joinStartTime;	// 408 = 0x198
    double _clientChannelConnectTime;	// 416 = 0x1a0
    double _firstMKMReceivedTime;	// 424 = 0x1a8
    double _firstMKMSentTime;	// 432 = 0x1b0
    double _firstPacketReceivedTime;	// 440 = 0x1b8
    struct *_packetBufferArray[8];	// 448 = 0x1c0
    unsigned long long _preferredAddressFamily;	// 512 = 0x200
    _Bool _preferCellularForCallSetup;	// 520 = 0x208
    NSNumber *_qrError;	// 528 = 0x210
    NSMutableArray *_qrEventsForRTCReports;	// 536 = 0x218
    NSNumber *_qrReason;	// 544 = 0x220
    unsigned int _reason;	// 552 = 0x228
    unsigned short _relayPort;	// 556 = 0x22c
    _Bool _sessionStartedCalled;	// 558 = 0x22e
    NSMutableData *_sessionInfoMetaData;	// 560 = 0x230
    _Bool _shouldAssertRealTimeMode;	// 568 = 0x238
    _Bool _sharedSessionHasJoined;	// 569 = 0x239
    _Bool _shouldConnectToQRServer;	// 570 = 0x23a
    NSData *_skeData;	// 576 = 0x240
    int _socketDescriptor;	// 584 = 0x248
    int _sliceActiveNotificationToken;	// 588 = 0x24c
    NSDate *_startDate;	// 592 = 0x250
    _Bool _supressClientNotifications;	// 600 = 0x258
    _Bool _verboseFunctionalLogging;	// 601 = 0x259
    _Bool _verbosePerformanceLogging;	// 602 = 0x25a
    _Bool _multiplexerEnabled;	// 603 = 0x25b
    IDSMultiplexerGroupSessionTransport *_multiplexerTransport;	// 608 = 0x260
    double _channelDataCachedTime;	// 616 = 0x268
    _Bool _startedAsUPlusOneSession;	// 624 = 0x270
    _Bool _switchedToUPlusMany;	// 625 = 0x271
    _Bool _supportUnauthenticatedUser;	// 626 = 0x272
    _Bool _isAutoDisconnectSupportedForGFTService;	// 627 = 0x273
    unsigned int _currentSessionStateCounter;	// 628 = 0x274
    unsigned int _connectedLinkCount;	// 632 = 0x278
    _Bool _isLightweightParticipant;	// 636 = 0x27c
    _Bool _isShortMKIEnabled;	// 637 = 0x27d
    _Bool _isTLEEnabled;	// 638 = 0x27e
    _Bool _hasReportedReceivedMKM;	// 639 = 0x27f
    _Bool _forceTCPFallbackOnWiFi;	// 640 = 0x280
    _Bool _forceTCPFallbackOnCell;	// 641 = 0x281
    _Bool _forceIPv6;	// 642 = 0x282
    _Bool _handOffOverQREnabled;	// 643 = 0x283
    _Bool _reinitTestCompleted;	// 644 = 0x284
    IDSGroupEncryptionKeyManager *_dataBlobEncryptionManager;	// 648 = 0x288
    IDSGroupSessionDataCryptor *_cryptorForBlobs;	// 656 = 0x290
    NSString *_serviceIdentifier;	// 664 = 0x298
    NSNumber *_callType;	// 672 = 0x2a0
    NSMutableDictionary *_typeToKeyIDToEncryptedData;	// 680 = 0x2a8
    NSMutableDictionary *_typeToParticipantIDToDecryptedDataBlob;	// 688 = 0x2b0
    NSMutableDictionary *_keyIDToParticipantID;	// 696 = 0x2b8
    NSMutableDictionary *_linkIDToLocalRemoteEndpointPair;	// 704 = 0x2c0
    _Bool _isServerMaterialExchangeEnabled;	// 712 = 0x2c8
    NSSet *_serverDesiredKeyMaterialsFromGroupEncryptionController;	// 720 = 0x2d0
    CDUnknownBlockType _serverDesiredKeyMaterialsSigner;	// 728 = 0x2d8
    NSData *_encryptedDataBlob;	// 736 = 0x2e0
    NSData *_encryptedMirageHandshakeBlob;	// 744 = 0x2e8
    _Bool _reportedMKMOverQRArrivalTime;	// 752 = 0x2f0
    double _MKMOverQRQUICTime;	// 760 = 0x2f8
    double _MKMOverPushTime;	// 768 = 0x300
    double _MKMOverQRTime;	// 776 = 0x308
    NSMutableDictionary *_pendingMaterialInfoByFromID;	// 784 = 0x310
    NSMutableDictionary *_participantIDToPushToken;	// 792 = 0x318
    NSMutableDictionary *_participantIDToURI;	// 800 = 0x320
    double _timeBase;	// 808 = 0x328
    NSMutableDictionary *_participantIDToRemoteParticipantContext;	// 816 = 0x330
    struct os_unfair_lock_s _lock;	// 824 = 0x338
    CDUnknownBlockType _reliableUnicastRegistrationCompletionBlock;	// 832 = 0x340
    _TtC17identityservicesd33IDSGroupEncryptionControllerGroup *_group;	// 840 = 0x348
    _TtC17identityservicesd40IDSGroupEncryptionControllerGroupSession *_groupSession;	// 848 = 0x350
    _TtC17identityservicesd45IDSGroupDefaultRootMaterialExchangeController *_exchangeController;	// 856 = 0x358
    id <_TtP17identityservicesd35IDSDSessionKeyValueDeliveryProtocol_> _keyValueDelivery;	// 864 = 0x360
    NSString *_clientID;	// 872 = 0x368
    IDSDSessionInvitationManager *_invitationManager;	// 880 = 0x370
    IDSDSessionMessenger *_messenger;	// 888 = 0x378
    IDSGFTMetricsCollector *_metricsCollector;	// 896 = 0x380
    IDSDSessionSharedState *_sharedState;	// 904 = 0x388
    IDSDGroupStatusNotificationController *_groupStatusNotificationController;	// 912 = 0x390
    NSSet *_serverDesiredMaterials;	// 920 = 0x398
    IDSDAccountController *_accountController;	// 928 = 0x3a0
    IDSUTunController *_utunController;	// 936 = 0x3a8
    IDSQuickRelayAllocator *_qrAllocator;	// 944 = 0x3b0
}

- (void).cxx_destruct;	// IMP=0x00200000000ded78
@property(retain, nonatomic) IDSQuickRelayAllocator *qrAllocator; // @synthesize qrAllocator=_qrAllocator;
@property(retain, nonatomic) IDSUTunController *utunController; // @synthesize utunController=_utunController;
@property(retain, nonatomic) IDSDAccountController *accountController; // @synthesize accountController=_accountController;
@property(readonly) NSSet *serverDesiredMaterials; // @synthesize serverDesiredMaterials=_serverDesiredMaterials;
@property(retain, nonatomic) IDSDGroupStatusNotificationController *groupStatusNotificationController; // @synthesize groupStatusNotificationController=_groupStatusNotificationController;
- (void);	// IMP=0x00100000000deced
@property(retain, nonatomic) IDSDSessionSharedState *sharedState; // @synthesize sharedState=_sharedState;
@property(readonly, nonatomic) _Bool handOffOverQREnabled; // @synthesize handOffOverQREnabled=_handOffOverQREnabled;
@property(readonly, nonatomic) IDSGFTMetricsCollector *metricsCollector; // @synthesize metricsCollector=_metricsCollector;
@property(readonly, nonatomic) NSData *encryptedMirageHandshakeBlob; // @synthesize encryptedMirageHandshakeBlob=_encryptedMirageHandshakeBlob;
@property(readonly, nonatomic) NSData *encryptedDataBlob; // @synthesize encryptedDataBlob=_encryptedDataBlob;
@property(nonatomic) _Bool sharedSessionHasJoined; // @synthesize sharedSessionHasJoined=_sharedSessionHasJoined;
@property(nonatomic) _Bool shouldConnectToQRServer; // @synthesize shouldConnectToQRServer=_shouldConnectToQRServer;
@property(retain, nonatomic) NSNumber *qrReason; // @synthesize qrReason=_qrReason;
@property(retain, nonatomic) NSNumber *qrError; // @synthesize qrError=_qrError;
@property(retain, nonatomic) IDSDSessionMessenger *messenger; // @synthesize messenger=_messenger;
@property(retain, nonatomic) IDSDSessionInvitationManager *invitationManager; // @synthesize invitationManager=_invitationManager;
@property(readonly, nonatomic) NSString *instanceID; // @synthesize instanceID=_instanceID;
@property(readonly, nonatomic) unsigned int groupSessionState; // @synthesize groupSessionState=_groupSessionState;
@property(readonly, nonatomic) _Bool disallowWifiInterface; // @synthesize disallowWifiInterface=_disallowWifiInterface;
@property(readonly, nonatomic) _Bool disallowCellularInterface; // @synthesize disallowCellularInterface=_disallowCellularInterface;
@property(retain, nonatomic) NSString *serviceIdentifier; // @synthesize serviceIdentifier=_serviceIdentifier;
@property(retain, nonatomic) NSString *clientID; // @synthesize clientID=_clientID;
@property(readonly, nonatomic) NSArray *requiredLackOfCapabilities;
@property(readonly, nonatomic) NSArray *requiredCapabilities;
- (unsigned long long)connectionCountHint;	// IMP=0x00100000000deaa2
- (_Bool)_useBTDatagramPipe;	// IMP=0x00100000000dea5e
- (void)_setClientType:(long long)arg1;	// IMP=0x00100000000dea12
- (_Bool)isLightweightParticipant;	// IMP=0x00100000000dea06
- (_Bool)isScreenSharingSession;	// IMP=0x00100000000de9c2
- (unsigned int)state;	// IMP=0x00100000000de97e
- (id)clientChannelUUID;	// IMP=0x00100000000de970
- (id)fromURI;	// IMP=0x00100000000de920
- (id)groupID;	// IMP=0x00100000000de8d0
- (id)accountID;	// IMP=0x00100000000de880
- (id)participantID;	// IMP=0x00100000000de830
- (long long)clientType;	// IMP=0x00100000000de7ec
- (_Bool)enableQuickRelay;	// IMP=0x00100000000de7a8
- (_Bool)isInitiator;	// IMP=0x00100000000de764
- (id)uniqueID;	// IMP=0x00100000000de714
- (id)destinationsLightweightStatus;	// IMP=0x00100000000de6c4
@property(readonly, copy, nonatomic) NSSet *destinations;
- (void)setSeqRecvStart:(unsigned int)arg1;	// IMP=0x00100000000de5ed
- (void)setSSRCRecv:(unsigned int)arg1;	// IMP=0x00100000000de5a3
- (void)setRemoteUsePhoneContinuityLocalMessage:(id)arg1;	// IMP=0x00100000000de53a
- (void)setRemoteUseCloudPairedControlChannel:(id)arg1;	// IMP=0x00100000000de4d1
- (void)setQuickRelaySessionToken:(id)arg1;	// IMP=0x00100000000de468
- (void)setInviteTimeout:(long long)arg1;	// IMP=0x00100000000de414
- (void)setRemoteBlob:(id)arg1;	// IMP=0x00100000000de3ab
- (void)receivedEndMessage:(id)arg1 fromURI:(id)arg2;	// IMP=0x00100000000de320
- (void)receivedSessionMessage:(id)arg1 fromURI:(id)arg2;	// IMP=0x00100000000de295
- (void)receivedCancelMessage:(id)arg1 fromURI:(id)arg2;	// IMP=0x00100000000de20a
- (void)receivedDeclineMessage:(id)arg1 fromURI:(id)arg2;	// IMP=0x00100000000de17f
- (void)receivedAcceptMessage:(id)arg1 fromURI:(id)arg2;	// IMP=0x00100000000de0f4
- (void)sendSessionMessage:(id)arg1 toDestinations:(id)arg2;	// IMP=0x00100000000ddf68
- (void)declineInvitationWithData:(id)arg1 forceFromURI:(id)arg2 additionalMessageAttributes:(id)arg3;	// IMP=0x00100000000ddecb
- (void)declineInvitationWithData:(id)arg1;	// IMP=0x00100000000dde62
- (void)declineInvitation;	// IMP=0x00100000000dde25
- (void)acceptInvitationWithData:(id)arg1;	// IMP=0x00100000000dddbc
- (void)acceptInvitation;	// IMP=0x00100000000ddd7f
- (void)cancelInvitationWithRemoteEndedReasonOverride:(unsigned int)arg1;	// IMP=0x00100000000ddd35
- (void)cancelInvitationWithData:(id)arg1;	// IMP=0x00100000000ddccc
- (void)cancelInvitation;	// IMP=0x00100000000ddc8f
- (void)sendInvitationWithData:(id)arg1 declineOnError:(_Bool)arg2;	// IMP=0x00100000000ddc1a
- (void)sendInvitationWithOptions:(id)arg1 declineOnError:(_Bool)arg2;	// IMP=0x00100000000ddba5
- (void)sendCancelInvitationMessage;	// IMP=0x00100000000ddb61
- (void)invitationDeclined;	// IMP=0x00100000000ddb1a
- (_Bool)isWithDefaultPairedDevice;	// IMP=0x00100000000dda37
- (void)didSessionReinitiated;	// IMP=0x00100000000dda31
- (void)_receivedReinitiateBringupAckMessage:(id)arg1 fromURI:(id)arg2;	// IMP=0x00100000000dd144
- (void)_receivedReinitiateBringupMessage:(id)arg1 fromURI:(id)arg2;	// IMP=0x00100000000dc9b2
- (void)_receivedReinitiateTeardownAckMessage:(id)arg1 fromURI:(id)arg2;	// IMP=0x00100000000dbce0
- (void)_receivedReinitiateTeardownMessage:(id)arg1 fromURI:(id)arg2;	// IMP=0x00100000000db030
- (void)_receivedReinitiateRequestMessage:(id)arg1 fromURI:(id)arg2;	// IMP=0x00100000000da854
- (void)receivedReinitiateMessage:(id)arg1 fromURI:(id)arg2;	// IMP=0x00100000000da452
- (void)_startReinitiateAsInitiator;	// IMP=0x00100000000d9e34
- (void)reinitiate;	// IMP=0x00100000000d9187
- (void)registerMultiplexerTransport;	// IMP=0x00100000000d8d77
- (void)getActiveParticipants:(id)arg1 pushTokenForParticipants:(id)arg2 isLightweightParticipant:(_Bool)arg3;	// IMP=0x00100000000d8696
- (id)_createGroupSessionActiveParticipantsFromParticipants:(id)arg1 pushTokenForParticipants:(id)arg2;	// IMP=0x00100000000d8216
- (void)_updateActiveLightweightParticipants:(id)arg1;	// IMP=0x00100000000d7d30
- (void)_updateActiveParticipants:(id)arg1;	// IMP=0x00100000000d7437
- (void)processAllocationErrorStatus:(int)arg1 errorCode:(int)arg2;	// IMP=0x00100000000d71f0
- (void)qrAllocatorDidReceiveAllocateResponse:(id)arg1;	// IMP=0x00100000000d6ca9
- (void)onURI2ParticipantIDMappingChange:(id)arg1 allocateResponse:(id)arg2;	// IMP=0x00100000000d68c0
- (void)onParticipantID2PushTokenMappingChange:(id)arg1;	// IMP=0x00100000000d6223
- (unsigned long long)participantIDForAlias:(unsigned long long)arg1 salt:(id)arg2;	// IMP=0x00100000000d5ff9
- (void)getParticipantIDForAlias:(unsigned long long)arg1 salt:(id)arg2;	// IMP=0x00100000000d5cc3
- (void)createAliasForParticipantID:(unsigned long long)arg1 salt:(id)arg2;	// IMP=0x00100000000d598d
- (void)requestMaterialsForParticipantIDs:(id)arg1 materialType:(int)arg2;	// IMP=0x00100000000d5569
- (void)requestEncryptionKeyForParticipantIDs:(id)arg1;	// IMP=0x00100000000d5143
- (void)hasOutdatedSKI:(id)arg1;	// IMP=0x00100000000d4fe3
- (void)sendAllocationRequest:(id)arg1;	// IMP=0x00100000000d4a00
- (void)recvMembershipChangeEventWithReason:(unsigned char)arg1 completionHandler:(CDUnknownBlockType)arg2;	// IMP=0x00100000000d4850
- (void)InvalidateStableKeyMaterialInFrameworkCache:(id)arg1;	// IMP=0x00100000000d4641
- (void)recvStableKeyMaterialForFrameworkCache:(id)arg1;	// IMP=0x00100000000d3cd5
- (void)rejectedKeyRecoveryRequestFromURI:(id)arg1 reason:(unsigned int)arg2;	// IMP=0x00100000000d389a
- (_Bool)shouldReportToClient:(id)arg1 timeStamp:(double)arg2 type:(unsigned long long)arg3;	// IMP=0x00100000000d3556
- (void)_decryptReceivedDataBlobsUsingSKMs;	// IMP=0x00100000000d1ef1
- (void)receiveAndDecryptEncryptedDataBlobs:(id)arg1;	// IMP=0x00100000000d16fe
- (void)_sendRemoteParticipantInfoEventToClient:(id)arg1 forParticipant:(id)arg2;	// IMP=0x00100000000d14b0
- (void)_sendClientDecryptedDatabBlobs:(id)arg1 type:(int)arg2 forParticipant:(id)arg3;	// IMP=0x00100000000d0f44
- (void)invalidateKeyMaterialByKeyIndexes:(id)arg1;	// IMP=0x00100000000d0ec5
- (void)didSendKeyMaterial:(id)arg1 duration:(double)arg2;	// IMP=0x00100000000d0e41
- (void)recvKeyMaterial:(id)arg1;	// IMP=0x00100000000d0a35
- (void)didCreateMKM:(id)arg1;	// IMP=0x00100000000d09e2
- (void)updateServerDesiredKeyMaterials;	// IMP=0x00100000000d0734
- (id)serverDesiredKeyMaterials;	// IMP=0x00100000000d06ec
- (void)requestKeyValueDeliveryDataForKey:(unsigned int)arg1 participantID:(unsigned long long)arg2;	// IMP=0x00100000000d043e
- (void)updateServerDesiredKeyValueDeliveryMaterialsNeeded;	// IMP=0x00100000000d0280
- (id)getDesiredMaterialSetForEncryptedData;	// IMP=0x00100000000d01fc
- (void)setServerDesiredKeyMaterials:(id)arg1 signer:(CDUnknownBlockType)arg2;	// IMP=0x00100000000d001c
- (void)sendKeyMaterialMessageDataOverQR:(id)arg1 toDestination:(id)arg2 completionBlock:(CDUnknownBlockType)arg3;	// IMP=0x00100000000cfbed
- (void)sendKeyMaterialMessage:(id)arg1 toDestination:(id)arg2;	// IMP=0x00100000000cf100
- (void)leaveGroupSession:(id)arg1 options:(id)arg2;	// IMP=0x00100000000ce2cb
- (void)receiveJoinNotificationFromAParticipant;	// IMP=0x00100000000cde72
- (void)joinWithOptions:(id)arg1 messageContext:(id)arg2;	// IMP=0x00100000000cb553
- (void)joinWithOptions:(id)arg1;	// IMP=0x00100000000cb53f
- (double)getIDSContextTimeStamp;	// IMP=0x00100000000cb531
- (id)_generateEncryptedAndSignedIDSContextBlobWithClientContextBlob:(id)arg1 timeStamp:(double)arg2;	// IMP=0x00100000000cb068
- (id)_generateEncryptedAndSignedIDSContextBlobWithClientContextBlob:(id)arg1;	// IMP=0x00100000000cafc5
- (id)_checkIfPushMessageSizeGreaterThanMaxLimit:(id)arg1 maxLimit:(unsigned long long)arg2;	// IMP=0x00100000000cacb2
- (void)setGroupStreamInfo:(id)arg1 sessionInfo:(id)arg2;	// IMP=0x00100000000ca343
- (void)_sendConnectedLinkInfoToAVC;	// IMP=0x00100000000ca26a
- (void)updateParticipantType:(unsigned short)arg1 members:(id)arg2 triggeredLocally:(_Bool)arg3 withContext:(id)arg4 lightweightStatusDict:(id)arg5;	// IMP=0x00100000000c951d
- (void)updateParticipantInfo:(id)arg1;	// IMP=0x00100000000c92f8
- (void)updateParticipantData:(id)arg1 withContext:(id)arg2;	// IMP=0x00100000000c8f14
- (void)removeParticipantIDs:(id)arg1;	// IMP=0x00100000000c8be5
- (void)manageDesignatedMembers:(id)arg1 withType:(unsigned short)arg2;	// IMP=0x00100000000c8876
- (void)updateMembers:(id)arg1 withContext:(id)arg2 messagingCapabilities:(id)arg3 triggeredLocally:(_Bool)arg4 lightweightStatusDict:(id)arg5;	// IMP=0x00100000000c5a18
- (_Bool)destinationsContainFromURI:(id)arg1;	// IMP=0x00100000000c55e9
- (void)link:(id)arg1 didReceiveSessionStats:(id)arg2 relayGroupID:(id)arg3 relaySessionID:(id)arg4 success:(_Bool)arg5;	// IMP=0x00100000000c55e3
- (void)link:(id)arg1 didFinishConvergenceForRelaySessionID:(id)arg2;	// IMP=0x00100000000c53f1
- (void)link:(id)arg1 didReceiveSessionInfo:(id)arg2 relayGroupID:(id)arg3 relaySessionID:(id)arg4 status:(unsigned int)arg5;	// IMP=0x00100000000c53eb
- (void)_processParticipantInfo:(id)arg1 type:(unsigned long long)arg2;	// IMP=0x00100000000c4466
- (void)_sendSessionInfoResponseErrorToClient:(unsigned int)arg1;	// IMP=0x00100000000c43d9
- (void)terminateCallDueToIdleClientForLink:(id)arg1;	// IMP=0x00100000000c43d3
- (void)link:(id)arg1 didReceiveDebugDataForClient:(id)arg2 dataType:(unsigned char)arg3;	// IMP=0x00100000000c43cd
- (void)link:(id)arg1 didReceiveMembershipChangedInformation:(unsigned char)arg2;	// IMP=0x00100000000c43c7
- (void)link:(id)arg1 didReceiveEncryptionInformation:(id)arg2;	// IMP=0x00100000000c43c1
- (void)link:(id)arg1 didReceiveErrorIndicationWithCode:(unsigned int)arg2;	// IMP=0x00100000000c410f
- (void)link:(id)arg1 didReceiveEncryptedDataBlobs:(id)arg2;	// IMP=0x00100000000c3f7a
- (void)didReceiveBlockedIndicationForLink:(id)arg1 reason:(unsigned int)arg2;	// IMP=0x00100000000c3f74
- (void)link:(id)arg1 didReceiveMappedParticipantsDict:(id)arg2 forLinkID:(BOOL)arg3;	// IMP=0x00100000000c3bcc
- (void)_sendParticipantMappingUpdateToClient:(id)arg1 forLinkID:(BOOL)arg2 shouldReplace:(_Bool)arg3;	// IMP=0x00100000000c3abe
- (id)_breakDictionaryIntoMultipleChunks:(id)arg1 chunkSize:(int)arg2;	// IMP=0x00100000000c378d
- (id)_createOneWayParticipantDictionaryFromMappedParticipantsDict:(id)arg1;	// IMP=0x00100000000c363e
- (void)link:(id)arg1 didReceivePluginDisconnect:(id)arg2;	// IMP=0x00100000000c3538
- (void)link:(id)arg1 didReceiveRequestToPurgeRegistration:(id)arg2;	// IMP=0x00100000000c3382
- (void)link:(id)arg1 didReceivePluginUnregistration:(unsigned long long)arg2 pluginName:(id)arg3;	// IMP=0x00100000000c337c
- (void)link:(id)arg1 didReceivePluginRegistration:(unsigned long long)arg2 pluginName:(id)arg3;	// IMP=0x00100000000c3376
- (void)link:(id)arg1 didReceiveSessionStateCounter:(unsigned int)arg2;	// IMP=0x00100000000c3370
- (void)link:(id)arg1 didReceiveParticipantUpdate:(id)arg2 status:(unsigned short)arg3;	// IMP=0x00100000000c336a
- (void)link:(id)arg1 didAddQREvent:(id)arg2;	// IMP=0x00100000000c3364
- (void)link:(id)arg1 didDefaultUnderlyingLinkChangeSucceeded:(_Bool)arg2 currentDefaultLinkID:(BOOL)arg3;	// IMP=0x00100000000c335e
- (void)link:(id)arg1 didGetLinkProbingStatus:(id)arg2;	// IMP=0x00100000000c3358
- (void)link:(id)arg1 didSoMaskChange:(unsigned int)arg2;	// IMP=0x00100000000c3352
- (void)link:(id)arg1 didCellularMTUChange:(unsigned short)arg2;	// IMP=0x00100000000c334c
- (void)link:(id)arg1 didRATChange:(unsigned char)arg2;	// IMP=0x00100000000c3346
- (void)link:(id)arg1 didCellularNWPathFlagsChanged:(unsigned short)arg2;	// IMP=0x00100000000c3340
- (void)link:(id)arg1 didWiFiNWPathFlagsChanged:(unsigned short)arg2;	// IMP=0x00100000000c333a
- (void)link:(id)arg1 didReceiveChildConnections:(id)arg2 forLinkID:(BOOL)arg3;	// IMP=0x00100000000c2c11
- (id)getLinkIDToLocalRemoteEndpointPairDictionary;	// IMP=0x00100000000c2baf
- (void)link:(id)arg1 didReceiveReliableUnicastServerMaterial:(id)arg2;	// IMP=0x00100000000c29b7
- (void)link:(id)arg1 didDisconnectUnderlyingLinkID:(BOOL)arg2 linkUUID:(id)arg3 reason:(unsigned char)arg4;	// IMP=0x00100000000c279c
- (void)link:(id)arg1 didConnectUnderlyingLink:(BOOL)arg2 linkUUID:(id)arg3 localAttributes:(id)arg4 remoteAttributes:(id)arg5;	// IMP=0x00100000000c0ad3
- (_Bool)link:(id)arg1 didReceivePacket:(CDStruct_90727270 *)arg2 fromDeviceUniqueID:(id)arg3 cbuuid:(id)arg4;	// IMP=0x00100000000c0acb
- (MISSING_TYPE *)link:didReceiveReportEvent: /* Error: Ran out of types for this method. */;	// IMP=0x00100000000c0ac5
- (void)link:(id)arg1 didConnectForDeviceUniqueID:(id)arg2 cbuuid:(id)arg3;	// IMP=0x00100000000c0822
- (void)link:(id)arg1 didReceiveMaterialInfo:(id)arg2 material:(id)arg3;	// IMP=0x00100000000bba22
- (void)materialInfoError:(id)arg1;	// IMP=0x00100000000bb9ae
- (_Bool)shouldVerifySignatureForMaterialType:(int)arg1;	// IMP=0x00100000000bb99a
- (void)link:(id)arg1 didReceiveKeyMaterialMessageData:(id)arg2 fromParticipantIDs:(id)arg3 toParticipantID:(id)arg4;	// IMP=0x00100000000bb994
- (void)link:(id)arg1 didReceiveSKEData:(id)arg2;	// IMP=0x00100000000bb98e
- (void)link:(id)arg1 didDisconnectForDeviceUniqueID:(id)arg2 cbuuid:(id)arg3;	// IMP=0x00100000000bb824
- (void)_sendQREventToAVC:(id)arg1;	// IMP=0x00100000000bb475
- (void)addQREventForRTCReport:(id)arg1;	// IMP=0x00100000000bb15c
- (void)_setLinkProtocol:(id)arg1;	// IMP=0x00100000000bad3d
- (void)connection:(id)arg1 didReceiveData:(id)arg2;	// IMP=0x00100000000ba6b1
- (void)connection:(id)arg1 receivedData:(id)arg2;	// IMP=0x00100000000b9eb1
- (void)handleAVConferenceError:(id)arg1;	// IMP=0x00100000000b9b53
- (void)connectionDidStop:(id)arg1 error:(id)arg2;	// IMP=0x00100000000b98cc
- (void)connection:(id)arg1 didStart:(_Bool)arg2 error:(id)arg3;	// IMP=0x00100000000b944b
- (void)setForceTCPFallbackOnCellUsingReinitiate:(_Bool)arg1;	// IMP=0x00100000000b9389
- (void)setForceTCPFallbackOnWiFiUsingReinitiate:(_Bool)arg1;	// IMP=0x00100000000b92c7
- (void)enableP2Plinks;	// IMP=0x00100000000b9144
- (void)setQuickRelayUserTypeForSession:(unsigned short)arg1;	// IMP=0x00100000000b8ff2
- (void)setRequiredCapabilities:(id)arg1 requiredLackOfCapabilities:(id)arg2;	// IMP=0x00100000000b76eb
- (void)setPreferences:(id)arg1;	// IMP=0x00100000000b7359
- (void)setMuted:(_Bool)arg1;	// IMP=0x00100000000b6fe1
- (void)setAudioEnabled:(_Bool)arg1;	// IMP=0x00100000000b6c69
- (id)connectDuration;	// IMP=0x00100000000b6b2e
- (id)sessionDuration;	// IMP=0x00100000000b6a80
- (void)endSessionWithReason:(unsigned int)arg1;	// IMP=0x00100000000b6991
- (void)_notifyClientsSessionStopped;	// IMP=0x00100000000b61c7
- (void)_cleanupSocketPairConnection;	// IMP=0x00100000000b6195
- (void)_checkAndUnassertRealTimeMode;	// IMP=0x00100000000b6166
- (id)_acceptedDeviceToken;	// IMP=0x00100000000b5ea4
- (id)_acceptedDeviceUniqueID;	// IMP=0x00100000000b5a7c
- (id)_socketOptionsForDevice:(id)arg1 uniqueID:(id)arg2 pushToken:(id)arg3 connectionSuffix:(id)arg4;	// IMP=0x00100000000b4ef9
- (void)_closeSocketToDevice:(id)arg1;	// IMP=0x00100000000b476c
- (void)_resetPreferences:(id)arg1;	// IMP=0x00100000000b4460
- (void)_endSession;	// IMP=0x00100000000b2b55
- (void)endSessionWithData:(id)arg1;	// IMP=0x00100000000b2968
- (void)_sendSessionEndWithData:(id)arg1;	// IMP=0x00100000000b2448
- (void)endSession;	// IMP=0x00100000000b23e2
- (void)reconnectSession;	// IMP=0x00100000000b226a
- (void)_cleanupQuickRelaySession;	// IMP=0x00100000000b1fdd
- (void)cleanupSessionWithCleanStatus:(_Bool)arg1;	// IMP=0x00100000000b0bdc
- (void)startListeningOnClientSocket:(int)arg1 isRawSocket:(_Bool)arg2;	// IMP=0x00100000000b089e
- (void)runConnectivityCheckWithCompletionBlock:(CDUnknownBlockType)arg1;	// IMP=0x00100000000b077c
- (void)networkingIsAvailable:(CDUnknownBlockType)arg1;	// IMP=0x00100000000b0760
- (unsigned int)globalLinkErrorToSessionEndReason:(long long)arg1;	// IMP=0x00100000000b0745
- (_Bool)shouldReportUPlusOneKey;	// IMP=0x00100000000b0728
- (id)getAppID;	// IMP=0x00100000000b06d8
- (id)getFromService;	// IMP=0x00100000000b05f6
- (id)getCallerCert;	// IMP=0x00100000000b0530
- (void)setHasPendingAllocation:(_Bool)arg1 forIDSSession:(id)arg2;	// IMP=0x00100000000b03a8
- (void)setAcceptedRelaySession:(id)arg1;	// IMP=0x00100000000afe7f
- (void)_setInitialLinkType:(unsigned long long)arg1;	// IMP=0x00100000000afa2e
- (void)checkAndCallSessionStart;	// IMP=0x00100000000af94e
- (void)_sessionStartWithSocketDescriptor:(int)arg1;	// IMP=0x00100000000af3de
- (_Bool)_shouldUseIPsecLink;	// IMP=0x00100000000af37e
- (void)_broadcastSessionStartWithSocket:(int)arg1;	// IMP=0x00100000000af14a
- (void)startQRSession;	// IMP=0x00100000000af133
- (void)openSocketToDevice:(id)arg1;	// IMP=0x00100000000add65
- (_Bool)shouldAllocateForInvitee;	// IMP=0x00100000000adcae
- (double)_serverSpecifiedJoinNotificationDeliveryTimeout;	// IMP=0x00100000000adc01
- (void)_noteJoinNotificationDidDeliverWithSuccess:(_Bool)arg1;	// IMP=0x00100000000ad6b4
- (void)_noteJoinNotificationWillSend;	// IMP=0x00100000000acc30
- (void)connectQRServer:(id)arg1 withPreferredLocalInterface:(int)arg2;	// IMP=0x00100000000a7df2
- (id)formAndEncryptDataBlob:(id)arg1 type:(int)arg2;	// IMP=0x00100000000a7b27
- (id)getEncryptedMirageHandshakeBlob;	// IMP=0x00100000000a7aea
- (id)getEncryptedDataBlob;	// IMP=0x00100000000a7aad
- (void)updateRelevantEncryptedDataBlob;	// IMP=0x00100000000a7888
- (void)_sendLinkSelectionPreference:(id)arg1 linkScore:(id)arg2 ipPreference:(id)arg3 uplinkNackDisabled:(id)arg4;	// IMP=0x00100000000a7863
- (void)didReceiveCurrentCellularSignalRaw:(int)arg1 signalStrength:(int)arg2 signalGrade:(int)arg3;	// IMP=0x00100000000a785d
- (id)_getNewLinkOptionsForActiveParticipantInfoRequest;	// IMP=0x00100000000a70ae
- (void)_sendStreamSubscriptionRequest:(id)arg1;	// IMP=0x00100000000a6dee
- (id)_createStreamSubscriptionRequest:(id)arg1;	// IMP=0x00100000000a628e
- (void)_sendingOfflineActiveParticipantInfoRequest:(id)arg1;	// IMP=0x00100000000a5b21
- (void)unregisterPluginWithOptions:(id)arg1 messageContext:(id)arg2;	// IMP=0x00100000000a57ed
- (void)registerPluginWithOptions:(id)arg1 messageContext:(id)arg2;	// IMP=0x00100000000a54b9
- (void)requestURIsForParticipantIDs:(id)arg1 withRequestID:(id)arg2;	// IMP=0x00100000000a4fb9
- (void)requestSessionInfoWithOptions:(id)arg1;	// IMP=0x00100000000a3a3c
- (void)_connectQRDirectlyToClientChannel:(id)arg1;	// IMP=0x00100000000a274f
- (id)_extractFieldBytesFromMetadata:(const void *)arg1 ofSize:(unsigned int)arg2 packetBuffer:(CDStruct_90727270 *)arg3;	// IMP=0x001000000009821b
- (void)_connectSocketDescriptor:(int)arg1 toClientChannel:(id)arg2;	// IMP=0x0010000000096648
- (void)_checkAndRunClientChannelTests:(id)arg1;	// IMP=0x0010000000095da7
- (_Bool)_checkAndSendCachedDataForClient:(id)arg1;	// IMP=0x00100000000958c3
- (void)writeToClientChannel:(id)arg1 packetBuffer:(CDStruct_90727270 *)arg2 metaData:(const char *)arg3 metadataSize:(unsigned int)arg4;	// IMP=0x0010000000094536
- (void)_invalidateClientChannel:(id)arg1;	// IMP=0x0010000000094398
- (void)unregisterClientChannel;	// IMP=0x00100000000942cf
- (void)registerClientChannel;	// IMP=0x0010000000093741
- (void)setParticipantIDToURI:(id)arg1 participantID:(id)arg2;	// IMP=0x00100000000936a9
- (id)_getURIFromParticipantIDNumber:(id)arg1;	// IMP=0x00100000000934c7
- (id)_getPushTokenFromParticipantIDNumber:(id)arg1;	// IMP=0x00100000000932f9
- (id)_getPushTokenFromParticipantID:(unsigned long long)arg1;	// IMP=0x0010000000093293
- (id)_getPushTokensFromParticipantIDArray:(id)arg1 useNullPlaceholder:(_Bool)arg2;	// IMP=0x001000000009302f
- (id)getCellularNetworkInfo:(id)arg1;	// IMP=0x0010000000092c57
- (void)_buildCellularNetworkInfoSessionEvent:(CDStruct_1602fe53)arg1;	// IMP=0x0010000000092828
- (void)_lightweightParticipantSync:(unsigned char)arg1;	// IMP=0x0010000000092652
- (void)mapMKIFromMaterial:(id)arg1 token:(id)arg2;	// IMP=0x00100000000925bd
- (void)reportSendRatchetedMKMToAVCForParticipantID:(unsigned long long)arg1 mki:(id)arg2;	// IMP=0x00100000000924e7
- (void)reportMKMReceivedOverQRFromToken:(id)arg1 material:(id)arg2;	// IMP=0x00100000000923f9
- (void)reportMKMReceivedOverPushViaCacheForParticipantID:(unsigned long long)arg1 material:(id)arg2;	// IMP=0x00100000000922d4
- (void)reportMKMReceivedOverPushFromToken:(id)arg1 material:(id)arg2;	// IMP=0x00100000000921e6
- (void)reportPreKeyReceivedOverPushFromToken:(id)arg1;	// IMP=0x00100000000921a2
- (void)reportJoinReceivedOverPushFromToken:(id)arg1;	// IMP=0x0010000000092189
- (void)reportFirstMKMReceivedFromQR:(double)arg1;	// IMP=0x001000000009217b
- (void)reportFirstMKMReceivedFromPush:(double)arg1;	// IMP=0x0010000000091c9c
- (void)_cleanupSessionConnection;	// IMP=0x001000000009189d
- (void)_reportRTC;	// IMP=0x0010000000090dbf
- (id)buildRTCSummaryReport;	// IMP=0x0010000000090ab4
- (id)rtcNormalizeTime:(double)arg1;	// IMP=0x0010000000090a7b
- (_Bool)_shouldEnableCellularSlicingAfterDiceRoll;	// IMP=0x00100000000908e3
- (unsigned long long)_getExperimentGroupThresholdForCellularSlicing;	// IMP=0x0010000000090847
@property(readonly, nonatomic) _Bool sessionIsActive;
@property(readonly, copy) NSString *description;
@property(readonly) id <IDSXPCGroupSessionKeyValueDelivery> keyValueDelivery;
@property(readonly, nonatomic) char *keyMaterial;
- (void)dealloc;	// IMP=0x001000000008fd67
- (id)initWithAccount:(id)arg1 destinations:(id)arg2 options:(id)arg3 availabilityCheck:(id)arg4 accountController:(id)arg5 utunController:(id)arg6;	// IMP=0x001000000008a219
- (id)initWithAccount:(id)arg1 destinations:(id)arg2 options:(id)arg3 availabilityCheck:(id)arg4;	// IMP=0x001000000008a113
- (id)initWithAccount:(id)arg1 destinations:(id)arg2 options:(id)arg3;	// IMP=0x001000000008a074
- (void)_generateKeys:(id)arg1;	// IMP=0x00100000000897f1
- (long long)_loggingFlags;	// IMP=0x00100000000897a2
- (void)_selectDefaultMic;	// IMP=0x001000000008979c
- (void)submitAWDMetricsForIDSSessionWithEndReason:(unsigned int)arg1;	// IMP=0x00100000002ff400
- (void)submitAWDMetricsForIDSSessionCompleted;	// IMP=0x00100000002fefbd
- (void)submitAWDMetricsForIDSSessionReinitiateConnected;	// IMP=0x00100000002feed2
- (void)submitAWDMetricsForIDSSessionReinitiateStarted;	// IMP=0x00100000002fede7
- (void)submitAWDMetricsForIDSSessionReinitiateRequested;	// IMP=0x00100000002fecfc
- (void)submitAWDMetricsForIDSSessionConnected;	// IMP=0x00100000002fec11
- (void)submitAWDMetricsForIDSSessionAcceptReceived;	// IMP=0x00100000002feb26
- (void)submitAWDMetricsForIDSSessionAcceptSent;	// IMP=0x00100000002fea3b
- (void)submitAWDMetricsForIDSSessionDeclineReceived;	// IMP=0x00100000002fe950
- (void)submitAWDMetricsForIDSSessionDeclineSent;	// IMP=0x00100000002fe865
- (void)submitAWDMetricsForIDSSessionCancelReceived;	// IMP=0x00100000002fe77a
- (void)submitAWDMetricsForIDSSessionCancelSentWithRemoteEndReason:(unsigned int)arg1 numberOfRecipients:(id)arg2;	// IMP=0x00100000002fe664
- (void)submitAWDMetricsForIDSSessionInvitationReceived;	// IMP=0x00100000002fe579
- (void)submitAWDMetricsForIDSSessionInvitationSentWithNumberOfRecipients:(id)arg1;	// IMP=0x00100000002fe474
- (void)submitAWDMetricsForIDSSessionStarted;	// IMP=0x00100000002fe1c2
- (_Bool)_shouldSubmitMetricsBasedOnDate:(id)arg1 isInitiator:(_Bool)arg2;	// IMP=0x00100000002fe07c
- (_Bool)_shouldSubmitMetricsForThisSession;	// IMP=0x00100000002fdfd8

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
// Preceding property had unknown attributes: ?
// Original attribute string: T@"NSString",?,R,C

@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

