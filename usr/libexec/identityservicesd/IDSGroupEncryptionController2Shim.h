//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <objc/NSObject.h>

@class IDSDSessionController, IDSRealTimeEncryptionIdentity, IMDispatchTimer, MISSING_TYPE, NSMutableDictionary, NSString, _TtC17identityservicesd29IDSGroupEncryptionController2;
@protocol IDSGlobalLinkP2PKeyNegotiatorProvider, OS_dispatch_queue;

@interface IDSGroupEncryptionController2Shim : NSObject
{
    _TtC17identityservicesd29IDSGroupEncryptionController2 *_internal;	// 8 = 0x8
    id _sessionController;	// 16 = 0x10
    NSObject<OS_dispatch_queue> *_realtimeEncryptionQueue;	// 24 = 0x18
    _Bool _isInternal;	// 32 = 0x20
    struct os_unfair_lock_s _lock;	// 36 = 0x24
    _Bool _shouldSendMKMOverQR;	// 40 = 0x28
    NSMutableDictionary *_accountIDs;	// 48 = 0x30
    NSMutableDictionary *_fromURIs;	// 56 = 0x38
    NSMutableDictionary *_prekeyAckCountForGroup;	// 64 = 0x40
    NSMutableDictionary *_lastKnownGroupIDToPushTokens;	// 72 = 0x48
    NSMutableDictionary *_lastKnownAccountIDToPushTokens;	// 80 = 0x50
    IMDispatchTimer *_endpointUpdateTimer;	// 88 = 0x58
    id <IDSGlobalLinkP2PKeyNegotiatorProvider> _p2pNegotiatorProvider;	// 96 = 0x60
    _Bool _isTestRunning;	// 104 = 0x68
    _Bool _fakeMKMWrapping;	// 105 = 0x69
}

+ (id)sharedInstance;	// IMP=0x002000000048f327
- (void).cxx_destruct;	// IMP=0x00200000004987ca
@property(nonatomic) _Bool fakeMKMWrapping; // @synthesize fakeMKMWrapping=_fakeMKMWrapping;
@property(nonatomic) _Bool isTestRunning; // @synthesize isTestRunning=_isTestRunning;
@property(readonly, nonatomic) _TtC17identityservicesd29IDSGroupEncryptionController2 *internal; // @synthesize internal=_internal;
- (void)_sendingKeysToMembers:(id)arg1;	// IMP=0x0010000000498796
- (id)getLightweightStatusDictForGroup:(id)arg1;	// IMP=0x001000000049855d
- (id)getMembersForGroup:(id)arg1;	// IMP=0x00100000004984df
- (id)getParticipantsForGroup:(id)arg1;	// IMP=0x0010000000498461
- (id)getParticipantPushTokensForGroup:(id)arg1 ofType:(long long)arg2;	// IMP=0x00100000004983cf
- (id)getParticipantPushTokensForGroup:(id)arg1;	// IMP=0x0010000000498351
- (id)stablekeyMaterialCacheToGroup:(id)arg1;	// IMP=0x0010000000498349
- (id)keyMaterialCacheToGroup:(id)arg1;	// IMP=0x0010000000498341
- (id)p2pNegotiatorProvider;	// IMP=0x0010000000498333
- (void)cleanUpSessionForID:(id)arg1 groupID:(id)arg2;	// IMP=0x00100000004982ba
- (void)ensureSessionForID:(id)arg1 groupID:(id)arg2;	// IMP=0x0010000000498244
- (void)account:(id)arg1 didUpdateRegisteredDevices:(id)arg2;	// IMP=0x0010000000497b41
- (void)didUpdateParticipants:(id)arg1 ofType:(long long)arg2 forGroup:(id)arg3 sessionID:(id)arg4;	// IMP=0x0010000000497abf
- (_Bool)_isValidPushToken:(id)arg1;	// IMP=0x0010000000497a74
- (void)_updateRelevantEncryptedDataBlobForSession:(id)arg1;	// IMP=0x001000000049799e
- (void)didUpdateMembers:(id)arg1 forGroup:(id)arg2 sessionID:(id)arg3 lightweightStatusDict:(id)arg4 hasChangedStandardMembers:(_Bool)arg5 newlyAddedMembers:(id)arg6;	// IMP=0x001000000049776f
- (void)setMembers:(id)arg1 forGroup:(id)arg2 sessionID:(id)arg3 lightweightStatusDict:(id)arg4;	// IMP=0x0010000000496d2e
- (void)updateLightweightMemberTypes:(id)arg1 members:(id)arg2 triggeredLocally:(_Bool)arg3 forGroup:(id)arg4 sessionID:(id)arg5;	// IMP=0x0010000000496756
- (void)didReceiveEndpointsUpdate:(id)arg1 forGroup:(id)arg2 sessionID:(id)arg3;	// IMP=0x0010000000495fb9
- (void)rollNewKeysAfterResettingPrekeysForGroups:(id)arg1 withReason:(long long)arg2;	// IMP=0x00100000004957ef
- (void)updateServerDesiredKeyMaterialsForGroup:(id)arg1 sessionID:(id)arg2;	// IMP=0x00100000004957ae
- (id)_compactKeyMaterialMessage:(id)arg1 isOutgoing:(_Bool)arg2 groupID:(id)arg3;	// IMP=0x001000000049511a
- (id)_generateMKMBlobForQRFromMessage:(id)arg1 account:(id)arg2 destination:(id)arg3 fromURI:(id)arg4;	// IMP=0x0010000000494a13
- (void)processedQRMKMPayloadFromData:(id)arg1 forGroupID:(id)arg2 account:(id)arg3 remoteURI:(id)arg4 localURI:(id)arg5 tokens:(id)arg6 completionHandler:(CDUnknownBlockType)arg7;	// IMP=0x0010000000493f6d
- (void)sendPreKeyRequestMessage:(id)arg1 toDestination:(id)arg2 forGroup:(id)arg3 sessionID:(id)arg4;	// IMP=0x0010000000493db2
- (void)sendPreKeyMessage:(id)arg1 toDestination:(id)arg2 forGroup:(id)arg3 sessionID:(id)arg4;	// IMP=0x0010000000493bfd
- (void)sendPublicKeyToDestination:(id)arg1 group:(id)arg2 sessionID:(id)arg3;	// IMP=0x0010000000493be5
- (void)sendPublicKeyToGroup:(id)arg1 sessionID:(id)arg2;	// IMP=0x0010000000493bd3
- (void)_sendMessage:(id)arg1 toDestination:(id)arg2 forGroup:(id)arg3 sessionID:(id)arg4 command:(long long)arg5 timeout:(double)arg6 shouldExpire:(_Bool)arg7 useQR:(_Bool)arg8 completion:(CDUnknownBlockType)arg9 completionBlock:(CDUnknownBlockType)arg10;	// IMP=0x0010000000492ad8
- (void)sendKeyMaterialMessage:(id)arg1 toDestination:(id)arg2 forGroup:(id)arg3 sessionID:(id)arg4 completion:(CDUnknownBlockType)arg5;	// IMP=0x0010000000492981
- (id)stableKeyMaterialForGroup:(id)arg1 sessionID:(id)arg2;	// IMP=0x001000000049288e
- (unsigned long long)participantIDForPushToken:(id)arg1 inGroup:(id)arg2;	// IMP=0x00100000004927f2
- (struct __SecKey *)previousFullIdentityKey;	// IMP=0x00100000004927dc
- (struct __SecKey *)fullIdentityKey;	// IMP=0x00100000004927c6
- (MISSING_TYPE *)unsubscribeEndpointsForGroup: /* Error: Ran out of types for this method. */;	// IMP=0x0010000000492691
- (void)resetKeysForGroup:(id)arg1 shouldRemoveCurrentParticipants:(_Bool)arg2;	// IMP=0x001000000049250d
- (void)removeActiveParticipant:(id)arg1 forGroup:(id)arg2;	// IMP=0x001000000049245b
- (void)removeLocalActiveParticipantForGroup:(id)arg1;	// IMP=0x00100000004923f0
- (id)activeParticipantsForGroup:(id)arg1;	// IMP=0x001000000049232c
- (void)resetDevicePrekey;	// IMP=0x0010000000492264
- (_Bool)_shouldEnforceRemoteTimeout;	// IMP=0x0010000000492122
- (double)_multiwayFTMessageSendTimeout;	// IMP=0x0010000000491fd6
- (void)resetKeyMaterialLocalSentStatus:(id)arg1;	// IMP=0x0010000000491fc4
- (void)resetMKMLocalSentStatus:(id)arg1;	// IMP=0x0010000000491f83
- (id)stableKeyMaterialForGroup:(id)arg1;	// IMP=0x0010000000491f2f
- (id)masterKeyMaterialForGroup:(id)arg1;	// IMP=0x0010000000491f27
- (void)receivedGroupStableKeyMaterial:(id)arg1 fromPushToken:(id)arg2 sessionID:(id)arg3 groupID:(id)arg4;	// IMP=0x0010000000491f21
- (void)noteReceivedGroupMasterKeyMaterials:(id)arg1 URIs:(id)arg2 sessionID:(id)arg3;	// IMP=0x0010000000491f1b
- (id)receivedAndSetKeyMaterial:(id)arg1 stableKeyMaterial:(id)arg2 forDevice:(id)arg3 fromURI:(id)arg4 groupID:(id)arg5 sessionID:(id)arg6 fromSender:(_Bool)arg7 error:(id *)arg8 forMKM:(_Bool)arg9 forSKM:(_Bool)arg10;	// IMP=0x0010000000491d08
- (void)processIncomingKeyMaterialsRecoveryRequest:(id)arg1 fromDevice:(id)arg2 fromURI:(id)arg3 groupID:(id)arg4 sessionID:(id)arg5 serverDate:(id)arg6 requireMKM:(_Bool)arg7 requireSKM:(_Bool)arg8;	// IMP=0x0010000000491255
- (void)sendKeyMaterialRequestMessage:(id)arg1 toDestination:(id)arg2 forGroup:(id)arg3 sessionID:(id)arg4;	// IMP=0x0010000000491191
- (void)sendKeyMaterialsRecoveryRequestToParticipants:(id)arg1 groupID:(id)arg2 sessionID:(id)arg3 requireMKM:(_Bool)arg4 requireSKM:(_Bool)arg5;	// IMP=0x0010000000490ee5
- (void)sendKeyMaterialsRecoveryRequestToGroup:(id)arg1 requireMKM:(_Bool)arg2 requireSKM:(_Bool)arg3;	// IMP=0x0010000000490c32
- (unsigned long long)localParticipantIDForGroupID:(id)arg1;	// IMP=0x0010000000490bea
- (long long)setLocalParticipantID:(unsigned long long)arg1 forGroupID:(id)arg2 sessionID:(id)arg3;	// IMP=0x0010000000490b0a
- (id)publicKeys;	// IMP=0x0010000000490a4c
- (id)realTimeEncryptionPublicKeyForDevice:(id)arg1;	// IMP=0x0010000000490a36
- (_Bool)setRealTimeEncryptionPublicKey:(id)arg1 forDevice:(id)arg2 fromURI:(id)arg3 groupID:(id)arg4 sessionID:(id)arg5 serverDate:(id)arg6 wrapMode:(long long)arg7;	// IMP=0x0010000000490a04
- (unsigned long long)encryptionSequenceNumberForGroupID:(id)arg1;	// IMP=0x0010000000490901
- (void)storeEncryptionSequenceNumber:(unsigned long long)arg1 groupID:(id)arg2;	// IMP=0x0010000000490786
- (void)resetKeyMaterialCacheTimerIfNeeded:(id)arg1;	// IMP=0x0010000000490745
- (void)resetMKMCacheAfterTimeoutForGroup:(id)arg1 interval:(unsigned long long)arg2;	// IMP=0x0010000000490716
- (void)createStableKeyMaterialAndSendToFrameworkForGroup:(id)arg1 sessionID:(id)arg2;	// IMP=0x00100000004906fb
- (void)reportPrekeyAckStatus:(id)arg1;	// IMP=0x00100000004905f9
- (void)processIncomingPrekeyAckForGroup:(id)arg1;	// IMP=0x0010000000490495
@property(readonly, nonatomic) IDSRealTimeEncryptionIdentity *previousIdentityForDevice;
@property(readonly, nonatomic) IDSRealTimeEncryptionIdentity *identityForDevice;
- (id)realTimeEncryptionPublicKeyData;	// IMP=0x0010000000490453
- (long long)realTimeEncryptionPublicKeyWrappingMode;	// IMP=0x001000000049043d
- (id)createRealTimeEncryptionFullIdentityForDevice:(id)arg1 completionBlock:(CDUnknownBlockType)arg2;	// IMP=0x001000000049030e
- (void)requestPendingKeyMaterialsForGroup:(id)arg1 sessionID:(id)arg2;	// IMP=0x0010000000490308
- (void)reliablyRequestKeyMaterialForGroup:(id)arg1 sessionID:(id)arg2;	// IMP=0x00100000004902c7
- (void)requestKeyMaterialForGroup:(id)arg1 sessionID:(id)arg2;	// IMP=0x0010000000490286
- (void)requestKeyMaterialForGroup:(id)arg1 sessionID:(id)arg2 toSpecificMembers:(id)arg3 requireMKM:(_Bool)arg4 requireSKM:(_Bool)arg5;	// IMP=0x0010000000490245
- (void)removeAccountForGroup:(id)arg1;	// IMP=0x001000000048ff5c
- (void)setAccount:(id)arg1 fromURI:(id)arg2 forGroup:(id)arg3;	// IMP=0x001000000048fa0e
- (_Bool)_isUsingAccount:(id)arg1;	// IMP=0x001000000048f8c2
- (id)localPushToken;	// IMP=0x001000000048f8ac
- (id)remotePushTokensForGroup:(id)arg1;	// IMP=0x001000000048f82e
- (CDUnknownBlockType)addPreKeyChangeHandler:(CDUnknownBlockType)arg1;	// IMP=0x001000000048f81b
- (struct __SecKey *)publicKeyForPushToken:(id)arg1;	// IMP=0x001000000048f7d3
- (struct __SecKey *)previousLocalPrivatePreKey;	// IMP=0x001000000048f78f
- (struct __SecKey *)previousLocalPublicPreKey;	// IMP=0x001000000048f74b
- (struct __SecKey *)localPrivatePreKey;	// IMP=0x001000000048f707
- (struct __SecKey *)localPublicPreKey;	// IMP=0x001000000048f6c3
- (id)_localDevicePushToken;	// IMP=0x001000000048f638
@property(readonly, nonatomic) IDSDSessionController *sessionController; // @synthesize sessionController=_sessionController;
- (id)init;	// IMP=0x001000000048f37c

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
// Preceding property had unknown attributes: ?
// Original attribute string: T@"NSString",?,R,C

@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

