//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <objc/NSObject.h>

@class IDSPeerIDManager, IMTimer, NSMutableDictionary, NSMutableSet, NSRecursiveLock, NSString;
@protocol IDSIDStatusDependencyProvider, IMUserDefaults;

@interface IDSIDStatusQueryController : NSObject
{
    IMTimer *_purgeTimer;	// 8 = 0x8
    NSRecursiveLock *_lock;	// 16 = 0x10
    NSMutableDictionary *_standardIDStatusCache;	// 24 = 0x18
    NSMutableDictionary *_restrictedIDStatusCache;	// 32 = 0x20
    NSMutableDictionary *_completionBlocks;	// 40 = 0x28
    NSMutableDictionary *_startQueryDateByTopLevelService;	// 48 = 0x30
    CDUnknownBlockType _purgeCancelBlock;	// 56 = 0x38
    CDUnknownBlockType _purgeEnqueueBlock;	// 64 = 0x40
    _Bool _loaded;	// 72 = 0x48
    NSMutableDictionary *_numQueriesThisHourByTopLevelService;	// 80 = 0x50
    NSMutableSet *_reportedRateLimitedThisHour;	// 88 = 0x58
    _Bool _allowProxyQueries;	// 96 = 0x60
    IDSPeerIDManager *_peerIDManager;	// 104 = 0x68
    id <IMUserDefaults> _userDefaults;	// 112 = 0x70
    id <IDSIDStatusDependencyProvider> _dependencyProvider;	// 120 = 0x78
    NSString *_plistCachePath;	// 128 = 0x80
}

+ (id)sharedInstance;	// IMP=0x00400000002f0824
- (void).cxx_destruct;	// IMP=0x00200000002fdf29
@property(nonatomic) _Bool allowProxyQueries; // @synthesize allowProxyQueries=_allowProxyQueries;
@property(retain, nonatomic) NSString *plistCachePath; // @synthesize plistCachePath=_plistCachePath;
@property(retain, nonatomic) id <IDSIDStatusDependencyProvider> dependencyProvider; // @synthesize dependencyProvider=_dependencyProvider;
@property(retain, nonatomic) id <IMUserDefaults> userDefaults; // @synthesize userDefaults=_userDefaults;
@property(retain, nonatomic) IDSPeerIDManager *peerIDManager; // @synthesize peerIDManager=_peerIDManager;
- (id)idStatusCaches;	// IMP=0x00100000002fddff
- (void)clearIDStatusCacheIfNeeded;	// IMP=0x00100000002fdd9d
- (id)idStatusCacheForService:(id)arg1;	// IMP=0x00100000002fdd57
- (void)_saveCache;	// IMP=0x00100000002fdb2f
- (void)_wipeLegacyCache;	// IMP=0x00100000002fd955
- (id)_loadLegacyCache;	// IMP=0x00100000002fd820
- (void)_loadCache;	// IMP=0x00100000002fd341
- (id)_plistFilePath;	// IMP=0x00100000002fd201
- (void)_pruneExpiredStatusUnknownEntries;	// IMP=0x00100000002fc5c2
- (void)_loadIfNeeded;	// IMP=0x00100000002fc565
- (void)_setPurgeTimer;	// IMP=0x00100000002fc532
- (void)_flush;	// IMP=0x00100000002fc1ac
- (void)clearCache;	// IMP=0x00100000002fbc50
- (void)removeCompletionBlockForUniqueIdentifier:(id)arg1;	// IMP=0x00100000002fb9c3
- (void)addCompletionBlock:(CDUnknownBlockType)arg1 forUniqueIdentifier:(id)arg2;	// IMP=0x00100000002fb5a4
- (void)_sendIDStatusChanges:(id)arg1 forService:(id)arg2 URI:(id)arg3 success:(_Bool)arg4 error:(id)arg5;	// IMP=0x00100000002fb03d
- (void)infoForIDs:(id)arg1 fromIdentity:(id)arg2 fromURI:(id)arg3 fromService:(id)arg4 infoType:(unsigned long long)arg5 infoOptions:(id)arg6 lightQuery:(_Bool)arg7 allowQuery:(_Bool)arg8 reason:(id)arg9 completion:(CDUnknownBlockType)arg10;	// IMP=0x00100000002fa837
- (void)remoteDevicesForIDs:(id)arg1 fromIdentity:(id)arg2 fromURI:(id)arg3 fromService:(id)arg4 lightQuery:(_Bool)arg5 allowQuery:(_Bool)arg6 reason:(id)arg7 completionBlock:(CDUnknownBlockType)arg8;	// IMP=0x00100000002fa0ba
- (id)currentCacheForService:(id)arg1;	// IMP=0x00100000002f9d79
- (id)currentCache;	// IMP=0x00100000002f985f
- (unsigned int)cachedIDStatusForID:(id)arg1 fromURI:(id)arg2 fromService:(id)arg3 respectExpiry:(_Bool)arg4;	// IMP=0x00100000002f8fd5
- (unsigned int)cachedIDStatusForID:(id)arg1 fromURI:(id)arg2 fromService:(id)arg3;	// IMP=0x00100000002f8fc0
- (void)setCachedIDStatus:(unsigned int)arg1 ForID:(id)arg2 fromURI:(id)arg3 fromService:(id)arg4;	// IMP=0x00100000002f8a29
- (void)requestIDStatusForID:(id)arg1 fromIdentity:(id)arg2 fromURI:(id)arg3 fromService:(id)arg4 lightQuery:(_Bool)arg5 allowQuery:(_Bool)arg6 reason:(id)arg7 completionBlock:(CDUnknownBlockType)arg8;	// IMP=0x00100000002f8938
- (void)requestIDStatusForIDs:(id)arg1 fromIdentity:(id)arg2 fromURI:(id)arg3 fromService:(id)arg4 lightQuery:(_Bool)arg5 allowQuery:(_Bool)arg6 forceQuery:(_Bool)arg7 bypassLimit:(_Bool)arg8 reason:(id)arg9 completionBlock:(CDUnknownBlockType)arg10;	// IMP=0x00100000002f8350
- (void)_lookupIDStatusForURIs:(id)arg1 fromIdentity:(id)arg2 fromURI:(id)arg3 fromService:(id)arg4 lightQuery:(_Bool)arg5 allowQuery:(_Bool)arg6 forceQuery:(_Bool)arg7 bypassLimit:(_Bool)arg8 reason:(id)arg9 completionBlock:(CDUnknownBlockType)arg10;	// IMP=0x00100000002f467e
- (_Bool)hasValidStatusForURI:(id)arg1 fromURI:(id)arg2 fromService:(id)arg3;	// IMP=0x00100000002f436d
- (id)_negativeTTLForURI:(id)arg1 fromService:(id)arg2;	// IMP=0x00100000002f4222
- (id)_validExpiryForURI:(id)arg1 fromService:(id)arg2;	// IMP=0x00100000002f40d7
- (id)_lookupDateForURI:(id)arg1 fromService:(id)arg2;	// IMP=0x00100000002f3f8c
- (id)_cachedResultsForURIs:(id)arg1 fromURI:(id)arg2 fromService:(id)arg3;	// IMP=0x00100000002f3d16
- (void)noteIncomingID:(id)arg1 fromService:(id)arg2;	// IMP=0x00100000002f372f
- (void)removeCachedIDStatusForURI:(id)arg1 service:(id)arg2;	// IMP=0x00100000002f311f
- (void)removeCachedEntriesForService:(id)arg1;	// IMP=0x00100000002f2f60
- (unsigned int)_IDStatusForURI:(id)arg1 fromService:(id)arg2;	// IMP=0x00100000002f2676
- (void)_updateCacheWithStatusUpdates:(id)arg1 fromURI:(id)arg2 fromService:(id)arg3 success:(_Bool)arg4 hadError:(_Bool)arg5 negativeCacheHints:(id)arg6;	// IMP=0x00100000002f13c2
- (void)dealloc;	// IMP=0x00100000002f1359
- (id)init;	// IMP=0x00100000002f12b4
- (void)_purgeTimerFiredOnMain;	// IMP=0x00100000002f1235
- (id)initWithShouldAllowProxyQueries:(_Bool)arg1 peerIDManager:(id)arg2 userDefaults:(id)arg3 statusDepencencyProvider:(id)arg4;	// IMP=0x00100000002f0879

@end

