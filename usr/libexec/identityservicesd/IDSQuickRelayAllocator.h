//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <objc/NSObject.h>

@class IDSPushHandler, MISSING_TYPE, NSDate, NSMutableArray, NSMutableDictionary, NSMutableSet, NSString;
@protocol OS_dispatch_source;

@interface IDSQuickRelayAllocator : NSObject
{
    IDSPushHandler *_pushHandler;	// 8 = 0x8
    NSMutableDictionary *_requestIDToSession;	// 16 = 0x10
    NSMutableDictionary *_sessionToAllocations;	// 24 = 0x18
    NSMutableArray *_sessionInfoRequiredKeys;	// 32 = 0x20
    NSMutableSet *_pendingRecipientsAcceptedSessions;	// 40 = 0x28
    NSMutableDictionary *_initiatorsAcceptedSessionsWithToken;	// 48 = 0x30
    NSMutableDictionary *_sessionToRequestIDToAllocateTime;	// 56 = 0x38
    NSMutableDictionary *_allocateResponses;	// 64 = 0x40
    NSMutableDictionary *_requestIDToPreferredLocalInterface;	// 72 = 0x48
    NSObject<OS_dispatch_source> *_responseCleanupTimer;	// 80 = 0x50
    NSMutableDictionary *_sessionIDToURIToResponsePayload;	// 88 = 0x58
    NSMutableDictionary *_duplicateAllocateResponses;	// 96 = 0x60
    NSMutableDictionary *_groupIDToDuplicateResponseCleanupTimers;	// 104 = 0x68
    struct os_unfair_lock_s _lock;	// 112 = 0x70
    NSMutableDictionary *_sessionToLocalParticipantID;	// 120 = 0x78
    NSMutableDictionary *_pushTokenToURIForGroup;	// 128 = 0x80
    NSMutableDictionary *_idsSessionIDToqrSessionID;	// 136 = 0x88
    NSDate *_timeBase;	// 144 = 0x90
}

+ (id)sharedInstance;	// IMP=0x0020000000307e50
- (void).cxx_destruct;	// IMP=0x002000000032a3ff
- (void)setRequestIDToSession:(id)arg1 idsSessionID:(id)arg2;	// IMP=0x001000000032a346
- (unsigned long long)getCountOfSessionToAllocations;	// IMP=0x001000000032a330
- (unsigned long long)getCountOfPendingRecipientsAcceptedSessions;	// IMP=0x001000000032a31a
- (id)_getQuickRelayIPPreference:(unsigned long long)arg1;	// IMP=0x001000000032a2f0
- (void)_startCleanupTimer;	// IMP=0x001000000032a13f
- (void)_cleanupResponses;	// IMP=0x0010000000329a70
- (void)stopKeepAliveTimer:(id)arg1 relaySessionID:(id)arg2;	// IMP=0x0010000000329766
- (void)startKeepAliveTimer:(id)arg1 relaySessionID:(id)arg2;	// IMP=0x00100000003293fc
- (id)_getResponse:(id)arg1 relaySessionID:(id)arg2;	// IMP=0x0010000000328e1e
- (id)_uuidFromNSStringToNSData:(id)arg1;	// IMP=0x0010000000328cf0
- (id)_getGroupID:(id)arg1;	// IMP=0x0010000000328a96
- (void)handler:(id)arg1 receivedOfflineMessagePendingForTopic:(id)arg2 messageContext:(id)arg3;	// IMP=0x00100000003288f3
- (void)handler:(id)arg1 didReceiveMessage:(id)arg2 forTopic:(id)arg3 fromID:(id)arg4 messageContext:(id)arg5;	// IMP=0x001000000032866e
- (unsigned long long)getLocalParticipantIDForRelaySessionID:(id)arg1;	// IMP=0x0010000000328626
- (void)enablePushHandler:(_Bool)arg1;	// IMP=0x0010000000328270
- (id)_parseQuickRelayDefaults:(id)arg1 gropuID:(id)arg2;	// IMP=0x00100000003272b3
- (id)getSessionInfoFromDefaults:(id)arg1 groupID:(id)arg2;	// IMP=0x00100000003272a1
- (id)_findAllocationForSessionID:(id)arg1 requestIDStr:(id)arg2;	// IMP=0x0010000000326f44
- (id)_findAllocationListForSessionID:(id)arg1;	// IMP=0x0010000000326f15
- (id)_filterSelfAllocationsForSessionID:(id)arg1;	// IMP=0x0010000000326d6f
- (void)_removeAllAllocationsForSessionID:(id)arg1;	// IMP=0x00100000003266f7
- (void)_discardAllocation:(id)arg1;	// IMP=0x0010000000326312
- (void)_addAllocationForSession:(id)arg1 allocation:(id)arg2;	// IMP=0x0010000000325ff6
- (void)invalidateAllocation:(id)arg1;	// IMP=0x0010000000325ed2
- (void)_invalidateSession:(id)arg1 isExpiryPurging:(_Bool)arg2;	// IMP=0x0010000000325c31
- (void)invalidateSession:(id)arg1 isExpiryPurging:(_Bool)arg2;	// IMP=0x0010000000325b64
- (void)cleanUpCachedMappings:(id)arg1;	// IMP=0x0010000000325a1a
- (void)reportAWDAllocatorEvent:(unsigned int)arg1 relayProviderType:(long long)arg2 transport:(long long)arg3 localRAT:(unsigned int)arg4 duration:(unsigned long long)arg5 idsSessionID:(id)arg6 reportingDataBlob:(id)arg7 isInitiator:(_Bool)arg8;	// IMP=0x0010000000325001
- (long long)getServerProviderForIDSSessionID:(id)arg1;	// IMP=0x0010000000324e70
- (void)setInitiatorsAcceptedToken:(id)arg1 pushToken:(id)arg2;	// IMP=0x0010000000324c5c
- (void)requestAllocationForRecipient:(id)arg1;	// IMP=0x0010000000324183
- (id)getPushTokenForRelaySessionID:(id)arg1 relaySessionID:(id)arg2;	// IMP=0x0010000000323d6b
- (id)getRelaySessionIDForIDSSessionID:(id)arg1 pushToken:(id)arg2;	// IMP=0x001000000032391d
- (id)_uriToParticipantID:(id)arg1;	// IMP=0x0010000000323270
- (void)_storeMappingFromPushTokenToURIs:(id)arg1 fromID:(id)arg2 service:(id)arg3 cert:(id)arg4 forGroup:(id)arg5;	// IMP=0x0010000000322dcc
- (id)_findSessionWithID:(id)arg1;	// IMP=0x0010000000322d4e
- (void)_startQRConnectionForSession:(id)arg1 isInitiatorsAcceptedSession:(_Bool)arg2 withLocalInterfacePreference:(int)arg3;	// IMP=0x0010000000322098
- (id)_getStatusMessageFromStatusCode:(unsigned long long)arg1;	// IMP=0x0010000000321ff4
- (void)_sendAWDMetricsForAllocation:(id)arg1 status:(long long)arg2 hasRecipientAccepted:(_Bool)arg3;	// IMP=0x0010000000321994
- (void)_processAllocationStatusResult:(id)arg1;	// IMP=0x0010000000320da0
- (unsigned int)_getErrorCodeFromAllocationStatus:(int)arg1;	// IMP=0x0010000000320cfa
- (void)_triggerSymptomsWithType:(id)arg1 subType:(id)arg2 subTypeContext:(id)arg3;	// IMP=0x0010000000320cf4
- (_Bool)_hasSessionInfoRequiredKeys:(id)arg1;	// IMP=0x00100000003209f3
- (void)_setSessionInfoRequiredKeys;	// IMP=0x00100000003208ac
- (id)_createSessionInfoFromResponsePayload:(id)arg1;	// IMP=0x001000000031e318
- (id)_getCombinedSoftwareID:(id)arg1;	// IMP=0x001000000031e11e
- (void)_processSelfAllocations:(id)arg1 allocation:(id)arg2;	// IMP=0x001000000031d98d
- (_Bool)_isDuplicateResponse:(id)arg1 newResponse:(id)arg2;	// IMP=0x001000000031d633
- (id)_translateParticipantIDtoUINT64ForResponse:(id)arg1;	// IMP=0x001000000031d1ae
- (void)_handleIncomingAllocateResponse:(id)arg1 isFromCache:(_Bool)arg2 requestOptions:(id)arg3;	// IMP=0x00100000003186e2
- (id)getAdditionalAllocationForAddress:(id)arg1 selfAddress:(unsigned int)arg2 relaySessionID:(id)arg3 allocateType:(long long)arg4 qrReason:(unsigned short)arg5 previousTime:(unsigned long long)arg6 previousError:(unsigned short)arg7 previousRelayIP:(unsigned int)arg8 previousAccessToken:(id)arg9 requestSelfAllocation:(_Bool)arg10 isSessionIDRemoteDeviceID:(_Bool)arg11 withPreferredRemoteInterface:(int)arg12 withPreferredLocalInterface:(int)arg13;	// IMP=0x0010000000317134
- (_Bool)isURIAvailabeInAllocateResponse:(id)arg1 uri:(id)arg2;	// IMP=0x0010000000316cf5
- (id)getURIFromParticipantID:(id)arg1 participantID:(id)arg2;	// IMP=0x001000000031658b
- (id)getPushTokenFromParticipantID:(id)arg1 participantID:(id)arg2;	// IMP=0x0010000000316037
- (id)getPushTokensFromParticipantIDs:(id)arg1 participantIDs:(id)arg2;	// IMP=0x001000000031591d
- (id)_getPushTokenFromParticipantID:(id)arg1 participantID:(id)arg2;	// IMP=0x001000000031558e
- (_Bool)_startQRConnectionWithDefaults:(id)arg1;	// IMP=0x0010000000315290
- (id)setupNewAllocation:(id)arg1 sessionID:(id)arg2 fromIdentity:(id)arg3 fromURI:(id)arg4 fromService:(id)arg5 options:(id)arg6 connectReadyHandler:(CDUnknownBlockType)arg7;	// IMP=0x0010000000315249
- (id)_tokenURIForToken:(id)arg1 uri:(id)arg2;	// IMP=0x001000000031515e
- (id)_setupNewAllocation:(id)arg1 sessionID:(id)arg2 isSessionIDRemoteDeviceID:(_Bool)arg3 fromIdentity:(id)arg4 fromURI:(id)arg5 fromService:(id)arg6 options:(id)arg7 connectReadyHandler:(CDUnknownBlockType)arg8 withPreferredLocalInterface:(int)arg9 forAdditionalAllocation:(_Bool)arg10;	// IMP=0x00100000003125d6
- (void)_sendIDQueryRequest:(id)arg1 fromIdentity:(id)arg2 fromURI:(id)arg3 fromService:(id)arg4 completionBlock:(CDUnknownBlockType)arg5;	// IMP=0x001000000031238a
- (id)_getSelfAllocationFromCache:(id)arg1;	// IMP=0x0010000000311fe2
- (MISSING_TYPE *)_dispatchIncomingAllocateResponse:isFromCache:connectReadyHandler:requestOptions: /* Error: Ran out of types for this method. */;	// IMP=0x0010000000311e2d
- (_Bool)invalidateLatestResponse:(id)arg1 qrReason:(unsigned short)arg2 previousError:(unsigned short)arg3;	// IMP=0x0010000000311a9f
- (_Bool)_addConnectStatus:(id)arg1 relaySessionID:(id)arg2 previousTime:(unsigned long long)arg3 qrReason:(unsigned short)arg4 previousError:(unsigned short)arg5 previousRelayIP:(unsigned int)arg6 previousAccessToken:(id)arg7;	// IMP=0x0010000000311328
- (id)_getURIForRecipientFromResponse:(id)arg1;	// IMP=0x00100000003110eb
- (_Bool)_addResponseToCache:(id)arg1 sessionInfo:(id)arg2 modifiedMessage:(id *)arg3;	// IMP=0x001000000030f827
- (void)_notifyURIToParticipantIDMappingChange:(id)arg1;	// IMP=0x001000000030f4b3
- (void)_notifyParticipantID2PushTokenMappingChange:(id)arg1;	// IMP=0x001000000030f18f
- (id)_mergeParticipantID2PushTokenMapping:(id)arg1 sourceResponse:(id)arg2 mappingChange:(_Bool *)arg3;	// IMP=0x001000000030e805
- (_Bool)hasParticipantID:(id)arg1 participantID:(id)arg2;	// IMP=0x001000000030e5ef
- (id)_getResponseForQRSessionID:(id)arg1 sessionID:(id)arg2 index:(long long *)arg3;	// IMP=0x001000000030e3b7
- (_Bool)_shouldUseCurrentResponse:(id)arg1 cachedMessage:(id)arg2;	// IMP=0x001000000030d4b9
- (id)getAllocateResponse:(id)arg1 groupID:(id)arg2;	// IMP=0x001000000030d248
- (id)findAllocateResponseForSessionID:(id)arg1 FromURI:(id)arg2;	// IMP=0x001000000030cab6
- (void)_setResponseForQRGroupID:(id)arg1 groupID:(id)arg2;	// IMP=0x001000000030c8fc
- (void)clearResponseFromQRGroupID:(id)arg1;	// IMP=0x001000000030c7ae
- (id)_getResponseFromQRGroupID:(id)arg1;	// IMP=0x001000000030c634
- (id)setupNewAllocationToDevice:(id)arg1 options:(id)arg2 connectReadyHandler:(CDUnknownBlockType)arg3;	// IMP=0x001000000030bbb1
- (id)_setupAllocation:(id)arg1 fromURI:(id)arg2 sessionID:(id)arg3 isSessionIDRemoteDeviceID:(_Bool)arg4 options:(id)arg5 prevConnectStatus:(CDStruct_b3ab6eb3 *)arg6 requestUUID:(id)arg7 connectReadyHandler:(CDUnknownBlockType)arg8 withPreferredLocalInterface:(int)arg9;	// IMP=0x001000000030917b
- (void)_sendAllocateRequest:(id)arg1;	// IMP=0x0010000000308cf7
- (_Bool)_sendKeepAliveRequest:(id)arg1;	// IMP=0x0010000000308288
- (id)_queryPolicy;	// IMP=0x001000000030821e
- (id)_peerIDManager;	// IMP=0x0010000000308205
- (id)_getIDSAWDLoggingInstance;	// IMP=0x00100000003081ec
- (void)dealloc;	// IMP=0x0010000000308009
- (id)init;	// IMP=0x0010000000307ea5

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
// Preceding property had unknown attributes: ?
// Original attribute string: T@"NSString",?,R,C

@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

