//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <objc/NSObject.h>

@class IDSKeyTransparencyVerifier, IDSPersistentMap, NSMutableDictionary, NSMutableSet, NSString;
@protocol IDSPeerIDPushHandler, IDSPeerIDQueryHandler, IMUserDefaults;

@interface IDSPeerIDManager_OLD : NSObject
{
    NSMutableDictionary *_clientDataUpdateBlocks;	// 8 = 0x8
    NSMutableDictionary *_purgeClientDataBlocks;	// 16 = 0x10
    NSMutableDictionary *_endpointQueryListeners;	// 24 = 0x18
    id <IDSPeerIDPushHandler> _pushHandler;	// 32 = 0x20
    IDSKeyTransparencyVerifier *_keyTransparencyVerifier;	// 40 = 0x28
    IDSPersistentMap *_standardPersistentMap;	// 48 = 0x30
    IDSPersistentMap *_restrictedServicePersistentMap;	// 56 = 0x38
    NSMutableDictionary *_disasterModeTokens;	// 64 = 0x40
    id <IDSPeerIDQueryHandler> _queryHandler;	// 72 = 0x48
    id <IMUserDefaults> _userDefaults;	// 80 = 0x50
    NSMutableSet *_reportedExcessiveQueryCacheEntries;	// 88 = 0x58
}

+ (_Bool)_datePassed:(id)arg1;	// IMP=0x00200000003855ea
+ (_Bool)shouldUseSelfTokens;	// IMP=0x001000000037ab57
- (void).cxx_destruct;	// IMP=0x002000000038dcb5
@property(retain, nonatomic) NSMutableSet *reportedExcessiveQueryCacheEntries; // @synthesize reportedExcessiveQueryCacheEntries=_reportedExcessiveQueryCacheEntries;
@property(retain, nonatomic) id <IMUserDefaults> userDefaults; // @synthesize userDefaults=_userDefaults;
@property(retain, nonatomic) id <IDSPeerIDQueryHandler> queryHandler; // @synthesize queryHandler=_queryHandler;
@property(retain, nonatomic) NSMutableDictionary *disasterModeTokens; // @synthesize disasterModeTokens=_disasterModeTokens;
@property(retain, nonatomic) IDSPersistentMap *restrictedServicePersistentMap; // @synthesize restrictedServicePersistentMap=_restrictedServicePersistentMap;
@property(retain, nonatomic) IDSPersistentMap *standardPersistentMap; // @synthesize standardPersistentMap=_standardPersistentMap;
@property(retain, nonatomic) IDSKeyTransparencyVerifier *keyTransparencyVerifier; // @synthesize keyTransparencyVerifier=_keyTransparencyVerifier;
@property(retain, nonatomic) id <IDSPeerIDPushHandler> pushHandler; // @synthesize pushHandler=_pushHandler;
@property(retain, nonatomic) NSMutableDictionary *endpointQueryListeners; // @synthesize endpointQueryListeners=_endpointQueryListeners;
@property(retain, nonatomic) NSMutableDictionary *purgeClientDataBlocks; // @synthesize purgeClientDataBlocks=_purgeClientDataBlocks;
@property(retain, nonatomic) NSMutableDictionary *clientDataUpdateBlocks; // @synthesize clientDataUpdateBlocks=_clientDataUpdateBlocks;
- (void)didFirstLoadPersistentMap:(id)arg1;	// IMP=0x001000000038db7a
- (unsigned long long)excessiveQueryCacheEntriesRemovalWindow;	// IMP=0x001000000038dae3
- (unsigned long long)excessiveQueryCacheEntriesThreshold;	// IMP=0x001000000038da14
- (void)removeExcessiveQueryEntriesIfNeeded;	// IMP=0x001000000038cf73
- (void)cleanupExpiredEntriesIfNeeded;	// IMP=0x001000000038ca35
- (void)_asyncRemoveExcessiveQueryEntriesIfNeeded;	// IMP=0x001000000038c9d0
- (void)_asyncCleanupExpiredEntriesIfNeeded;	// IMP=0x001000000038c96b
- (void)performCleanupTasks;	// IMP=0x001000000038c8d5
- (void)endpointsForURIs:(id)arg1 serviceIdentifier:(id)arg2 localURI:(id)arg3 completion:(CDUnknownBlockType)arg4 queue:(id)arg5;	// IMP=0x001000000038c436
- (void)removeEndpointQueryCompletionBlockForToken:(id)arg1;	// IMP=0x001000000038c24c
- (void)addEndpointQueryCompletionBlock:(CDUnknownBlockType)arg1 forToken:(id)arg2 queue:(id)arg3;	// IMP=0x001000000038bf5b
- (void)removePurgeClientDataBlockForToken:(id)arg1;	// IMP=0x001000000038be3b
- (void)addPurgeClientDataBlock:(CDUnknownBlockType)arg1 forToken:(id)arg2;	// IMP=0x001000000038bbcc
- (void)removeClientDataUpdateBlockForToken:(id)arg1;	// IMP=0x001000000038baac
- (void)addClientDataUpdateBlock:(CDUnknownBlockType)arg1 forToken:(id)arg2;	// IMP=0x001000000038b83d
- (void)removeCompletionBlockForToken:(id)arg1;	// IMP=0x001000000038b7d4
- (void)addCompletionBlock:(CDUnknownBlockType)arg1 forToken:(id)arg2;	// IMP=0x001000000038b39c
- (id)urisMatchingPushToken:(id)arg1 service:(id)arg2;	// IMP=0x001000000038af29
- (id)uriForShortHandle:(id)arg1;	// IMP=0x001000000038ab5e
- (id)activeURIsFromURI:(id)arg1 service:(id)arg2;	// IMP=0x001000000038a431
- (_Bool)hasPeerTokensForURIs:(id)arg1 fromURI:(id)arg2 service:(id)arg3;	// IMP=0x001000000038a295
- (_Bool)hasPeerTokensForURI:(id)arg1 fromURI:(id)arg2 service:(id)arg3;	// IMP=0x0010000000389f30
- (void)forgetPeerTokensForService:(id)arg1;	// IMP=0x00100000003897ab
- (void)forgetPeerTokensForURI:(id)arg1 service:(id)arg2;	// IMP=0x0010000000389130
- (void)forgetPeerTokensForURI:(id)arg1 fromURI:(id)arg2 service:(id)arg3;	// IMP=0x0010000000388acd
- (void)forgetPeerTokensForURI:(id)arg1 fromURI:(id)arg2 services:(id)arg3;	// IMP=0x0010000000388963
- (void)forgetPeerTokensForURIs:(id)arg1 services:(id)arg2;	// IMP=0x001000000038895d
- (void)forgetSessionTokensForURI:(id)arg1 fromURI:(id)arg2 service:(id)arg3;	// IMP=0x00100000003885d1
- (id)pleaseDontCopyCacheDictionaryRepresentation;	// IMP=0x00100000003883ae
- (void)clearCacheAndPersistImmediately:(_Bool)arg1;	// IMP=0x0010000000388182
- (void)notePeerToken:(id)arg1 forURI:(id)arg2 fromURI:(id)arg3 service:(id)arg4;	// IMP=0x0010000000387a67
- (_Bool)startQueryForURIs:(id)arg1 fromIdentity:(id)arg2 fromURI:(id)arg3 fromService:(id)arg4 context:(id)arg5 reason:(id)arg6 completionBlock:(CDUnknownBlockType)arg7;	// IMP=0x001000000038705c
- (_Bool)startQueryForURIs:(id)arg1 fromIdentity:(id)arg2 fromURI:(id)arg3 fromService:(id)arg4 forSending:(_Bool)arg5 forRefresh:(_Bool)arg6 isForced:(_Bool)arg7 reason:(id)arg8 completionBlock:(CDUnknownBlockType)arg9;	// IMP=0x0010000000386f35
- (void)updateCachedVerifierResultsWithResults:(id)arg1;	// IMP=0x00100000003864b5
- (id)keyTransparencyContextForService:(id)arg1 fromURI:(id)arg2 toURI:(id)arg3;	// IMP=0x00100000003863db
- (id)_keyTransparencyVerifierResultForService:(id)arg1 fromURI:(id)arg2 toURI:(id)arg3;	// IMP=0x001000000038638b
- (id)verifierResultsForURIs:(id)arg1 service:(id)arg2 fromURI:(id)arg3;	// IMP=0x0010000000385d2f
- (id)_peerIDKeysForService:(id)arg1;	// IMP=0x0010000000385bed
- (id)_peerIDKeysForService:(id)arg1 andFromURI:(id)arg2;	// IMP=0x0010000000385a1d
- (id)_endpointsForService:(id)arg1 fromURI:(id)arg2 toURI:(id)arg3 ignoreExpiration:(_Bool)arg4;	// IMP=0x001000000038560b
- (id)lightDescriptionForVerifierResult:(id)arg1;	// IMP=0x001000000038545a
- (id)idInfoResultForURIs:(id)arg1 service:(id)arg2 fromURI:(id)arg3 infoType:(unsigned long long)arg4 infoOptions:(id)arg5 idStatusUpdates:(id)arg6;	// IMP=0x0010000000384a37
- (id)endpointsForURIs:(id)arg1 service:(id)arg2 fromURI:(id)arg3 withCapabilities:(id)arg4;	// IMP=0x0010000000384550
- (id)endpointsForURIs:(id)arg1 service:(id)arg2 fromURI:(id)arg3 ignoringTTL:(_Bool)arg4;	// IMP=0x001000000038434d
- (id)endpointForPushToken:(id)arg1 URI:(id)arg2 service:(id)arg3 fromURI:(id)arg4;	// IMP=0x0010000000383fd4
- (id)endpointsForURIs:(id)arg1 service:(id)arg2 fromURI:(id)arg3;	// IMP=0x0010000000383e0a
- (_Bool)shouldShowPeerErrorsFor:(id)arg1 pushToken:(id)arg2 fromURI:(id)arg3 service:(id)arg4;	// IMP=0x0010000000383dd5
- (_Bool)hasProperty:(id)arg1 forURI:(id)arg2 pushToken:(id)arg3 fromURI:(id)arg4 service:(id)arg5;	// IMP=0x0010000000383dac
- (long long)_valueOfProperty:(id)arg1 forURI:(id)arg2 pushToken:(id)arg3 fromURI:(id)arg4 service:(id)arg5;	// IMP=0x00100000003838a4
- (double)timeToCacheURI:(id)arg1 fromURI:(id)arg2 service:(id)arg3 forStatus:(unsigned int)arg4;	// IMP=0x00100000003835cb
- (id)sessionTokenForURI:(id)arg1 pushToken:(id)arg2 fromURI:(id)arg3 service:(id)arg4 expirationDate:(id *)arg5 refreshDate:(id *)arg6 fromIdentity:(id)arg7 includeSelfDevice:(_Bool)arg8;	// IMP=0x0010000000383218
- (id)shortHandleForURI:(id)arg1 fromURI:(id)arg2;	// IMP=0x001000000038312a
- (id)senderCorrelationIdentifierForURI:(id)arg1 pushToken:(id)arg2 fromURI:(id)arg3 service:(id)arg4;	// IMP=0x0010000000382fa6
- (id)senderCorrelationIdentifierForURI:(id)arg1 fromURI:(id)arg2 service:(id)arg3;	// IMP=0x0010000000382f1d
- (id)publicDeviceIdentityContainerForPushToken:(id)arg1;	// IMP=0x0010000000382b31
- (id)publicKeyForURI:(id)arg1 pushToken:(id)arg2 fromURI:(id)arg3 service:(id)arg4;	// IMP=0x00100000003829ad
- (_Bool)hasPublicKeyForURI:(id)arg1 pushToken:(id)arg2 fromURI:(id)arg3 service:(id)arg4;	// IMP=0x001000000038297a
- (id)endpointsForURIs:(id)arg1 fromURI:(id)arg2 service:(id)arg3 fromIdentity:(id)arg4 filterBehavior:(unsigned long long)arg5 allowRefresh:(_Bool)arg6;	// IMP=0x0010000000382154
- (id)sessionTokensForURIs:(id)arg1 fromURI:(id)arg2 service:(id)arg3 fromIdentity:(id)arg4 includeSelfDevice:(_Bool)arg5 fullyRemoveSelfDevice:(_Bool)arg6 allowRefresh:(_Bool)arg7;	// IMP=0x00100000003814b1
- (id)sessionTokensForURIs:(id)arg1 fromURI:(id)arg2 service:(id)arg3 fromIdentity:(id)arg4 includeSelfDevice:(_Bool)arg5 fullyRemoveSelfDevice:(_Bool)arg6;	// IMP=0x0010000000381486
- (id)finishedQueryWithInfo:(id)arg1 forURIs:(id)arg2 fromURI:(id)arg3 service:(id)arg4;	// IMP=0x001000000037d373
- (id)persistentMaps;	// IMP=0x001000000037d2e6
- (id)persistentMapForService:(id)arg1;	// IMP=0x001000000037d288
- (void)_setDisasterModeToken:(id)arg1 forURI:(id)arg2;	// IMP=0x001000000037d036
- (id)_disasterModeTokenForURI:(id)arg1;	// IMP=0x001000000037ce86
- (void)dealloc;	// IMP=0x001000000037ce0c
- (id)initWithPushHandler:(id)arg1 queryHandler:(id)arg2 standardPersistentMap:(id)arg3 restrictedServicePersistentMap:(id)arg4 keyTransparencyVerifier:(id)arg5 userDefaults:(id)arg6;	// IMP=0x001000000037bb6c
- (id)initWithPushHandler:(id)arg1 queryHandler:(id)arg2 keyTransparencyVerifier:(id)arg3 userDefaults:(id)arg4;	// IMP=0x001000000037b3e9
- (id)init;	// IMP=0x001000000037abfc

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
// Preceding property had unknown attributes: ?
// Original attribute string: T@"NSString",?,R,C

@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

