//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <objc/NSObject.h>

@class IDSCloudKitKeyTransparencyStore, IDSCurrentServerTime, IDSDAccountController, IDSDServiceController, IDSKeyTransparencyPolicy, IDSPeerIDManager, IDSPushHandler, IDSRateLimiter, IDSRegistrationKeyManager, IDSRegistrationReasonTracker, KTVerifier, NSDate, NSDictionary, NSMutableDictionary;
@protocol CUTMetricLogger, IDSKeyTransparencyRegistrationDataSource;

@interface IDSKeyTransparencyVerifier : NSObject
{
    IDSCloudKitKeyTransparencyStore *_keyTransparencyStore;	// 8 = 0x8
    IDSKeyTransparencyPolicy *_policy;	// 16 = 0x10
    id <IDSKeyTransparencyRegistrationDataSource> _registrationDataSource;	// 24 = 0x18
    long long _mostRecentKTCDPAccountStatus;	// 32 = 0x20
    KTVerifier *_KTVerifier;	// 40 = 0x28
    NSDictionary *_serviceToVerifier;	// 48 = 0x30
    NSDictionary *_optInEligibleKTApplicationToIDSServiceIdentifier;	// 56 = 0x38
    NSDictionary *_serviceToOptInManager;	// 64 = 0x40
    IDSRegistrationKeyManager *_keyManager;	// 72 = 0x48
    id <CUTMetricLogger> _internalMetricLogger;	// 80 = 0x50
    id <CUTMetricLogger> _productionMetricLogger;	// 88 = 0x58
    IDSRateLimiter *_selfHealRateLimiter;	// 96 = 0x60
    IDSRateLimiter *_registerUpdateRateLimiter;	// 104 = 0x68
    NSMutableDictionary *_cacheClearRateLimiterByService;	// 112 = 0x70
    NSDate *_kickPeerVerificationDate;	// 120 = 0x78
}

+ (id)strippedURIFromKeyTransparencyURI:(id)arg1;	// IMP=0x00400000004c3734
+ (id)keyTransparencyURIPrefixForServiceIdentifier:(id)arg1;	// IMP=0x00100000004c3599
+ (id)keyTransparencyApplicationForServiceIdentifier:(id)arg1;	// IMP=0x00100000004c34ee
+ (id)keyTransparencyServiceIdentifierForTransparencyApplication:(id)arg1;	// IMP=0x00100000004c3443
+ (id)keyTransparencyVersionNumberForServiceType:(id)arg1;	// IMP=0x00100000004b036a
+ (_Bool)isKeyTransparencyEnabled;	// IMP=0x00100000004b0330
+ (id)sharedInstance;	// IMP=0x00100000004af3aa
- (void).cxx_destruct;	// IMP=0x00200000004c4311
@property(retain, nonatomic) NSDate *kickPeerVerificationDate; // @synthesize kickPeerVerificationDate=_kickPeerVerificationDate;
@property(retain, nonatomic) NSMutableDictionary *cacheClearRateLimiterByService; // @synthesize cacheClearRateLimiterByService=_cacheClearRateLimiterByService;
@property(retain, nonatomic) IDSRateLimiter *registerUpdateRateLimiter; // @synthesize registerUpdateRateLimiter=_registerUpdateRateLimiter;
@property(retain, nonatomic) IDSRateLimiter *selfHealRateLimiter; // @synthesize selfHealRateLimiter=_selfHealRateLimiter;
@property(readonly, nonatomic) id <CUTMetricLogger> productionMetricLogger; // @synthesize productionMetricLogger=_productionMetricLogger;
@property(readonly, nonatomic) id <CUTMetricLogger> internalMetricLogger; // @synthesize internalMetricLogger=_internalMetricLogger;
@property(readonly, nonatomic) IDSRegistrationKeyManager *keyManager; // @synthesize keyManager=_keyManager;
@property(readonly, nonatomic) NSDictionary *serviceToOptInManager; // @synthesize serviceToOptInManager=_serviceToOptInManager;
@property(readonly, nonatomic) NSDictionary *optInEligibleKTApplicationToIDSServiceIdentifier; // @synthesize optInEligibleKTApplicationToIDSServiceIdentifier=_optInEligibleKTApplicationToIDSServiceIdentifier;
@property(readonly, nonatomic) NSDictionary *serviceToVerifier; // @synthesize serviceToVerifier=_serviceToVerifier;
@property(readonly, nonatomic) KTVerifier *KTVerifier; // @synthesize KTVerifier=_KTVerifier;
@property(nonatomic) long long mostRecentKTCDPAccountStatus; // @synthesize mostRecentKTCDPAccountStatus=_mostRecentKTCDPAccountStatus;
@property(readonly, nonatomic) id <IDSKeyTransparencyRegistrationDataSource> registrationDataSource; // @synthesize registrationDataSource=_registrationDataSource;
@property(readonly, nonatomic) IDSKeyTransparencyPolicy *policy; // @synthesize policy=_policy;
@property(readonly, nonatomic) IDSCloudKitKeyTransparencyStore *keyTransparencyStore; // @synthesize keyTransparencyStore=_keyTransparencyStore;
- (void)getCurrentRegistrationStateWithCompletion:(CDUnknownBlockType)arg1;	// IMP=0x00100000004c3e84
- (_Bool)ktShouldClearCacheOnOptInOut;	// IMP=0x00100000004c3ddd
- (double)ktRegisterUpdateLimitTime;	// IMP=0x00100000004c3d2e
- (unsigned long long)ktRegisterUpdateRequestLimit;	// IMP=0x00100000004c3c92
- (double)ktCacheClearRequestLimitTime;	// IMP=0x00100000004c3be3
- (unsigned long long)ktCacheClearRequestLimit;	// IMP=0x00100000004c3b47
- (double)keyTransparencyPeerUpdateLastResortFetchInterval;	// IMP=0x00100000004c3a9b
- (double)keyTransparencyCKContainerExpiryTime;	// IMP=0x00100000004c3a41
- (id)_clientErrorWithCode:(long long)arg1 debugDescription:(id)arg2 underlyingError:(id)arg3;	// IMP=0x00100000004c3959
- (void)_presentInternalVerificationAlertWithText:(id)arg1;	// IMP=0x00100000004c3838
- (id)SHA256HashForKeyTransparencyTrustedService:(id)arg1;	// IMP=0x00100000004c3181
- (id)SHA256HashForKeyTransparencyTrustedServices:(id)arg1;	// IMP=0x00100000004c2cb8
- (id)SHA256HashForKeyTransparencyTrustedDevice:(id)arg1;	// IMP=0x00100000004c2a88
- (id)_keyTransparencyVerifierForServiceIdentifier:(id)arg1;	// IMP=0x00100000004c29c7
- (long long)_IDSEndpointTransparencyVerificationStateForKTResult:(unsigned long long)arg1;	// IMP=0x00100000004c29a9
- (id)_IDSEndpointTransparencyStatesForKTLoggableDatas:(id)arg1 index:(id)arg2;	// IMP=0x00100000004c2762
- (id)_KTDatasForIDSProtoKeyTransparencyTrustedDevices:(id)arg1 serviceIdentifier:(id)arg2;	// IMP=0x00100000004c221c
- (id)_IDSProtoKeyTransparencyTrustedDeviceForKeyTransparencyIndex:(id)arg1 entry:(id)arg2;	// IMP=0x00100000004c1f8f
- (id)_KTDatasForIDSKeyTransparencyEntries:(id)arg1;	// IMP=0x00100000004c1dd1
- (id)_KTDataForIDSKeyTransparencyEntry:(id)arg1;	// IMP=0x00100000004c1c27
- (id)_mergeCloudKitTrustedDevices:(id)arg1 accountKeyTrustedDevices:(id)arg2;	// IMP=0x00100000004c1b74
- (_Bool)_isTrustedCandidate:(id)arg1 index:(id)arg2 givenTrustedDevices:(id)arg3;	// IMP=0x00100000004c16a1
- (unsigned long long)_numberOfMatchesForCandidates:(id)arg1 index:(id)arg2 trustedDevices:(id)arg3;	// IMP=0x00100000004c1592
- (void)_submitMetricsForTrustedDeviceVerificationWithCloudKitResult:(id)arg1 cloudKitOperationTimeInterval:(double)arg2 accountKeyResult:(id)arg3 accountKeyOperationTimeInterval:(double)arg4 index:(id)arg5 entries:(id)arg6;	// IMP=0x00100000004c0b92
- (void)_submitMetricsForTrustedDeviceEnrollmentWithCloudKitResult:(id)arg1 cloudKitOperationTimeInterval:(double)arg2 accountKeyResult:(id)arg3 accountKeyOperationTimeInterval:(double)arg4;	// IMP=0x00100000004c045b
- (void)_submitMetricForTrustedDeviceEnrollmentWithKVSResult:(id)arg1 kvsSyncTimeInterval:(double)arg2;	// IMP=0x00100000004c00a1
- (void)reportAccountKeyFetchMetricForService:(id)arg1 withSuccess:(_Bool)arg2 isAccountMismatch:(_Bool)arg3 withError:(id)arg4;	// IMP=0x00100000004bfaed
- (_Bool)isKeyInKVS:(id)arg1;	// IMP=0x00100000004bf9b6
- (void)updateCurrentDeviceInKVS:(CDUnknownBlockType)arg1;	// IMP=0x00100000004bf4da
- (void)repairKVSDeviceEntryIfNeeded;	// IMP=0x00100000004bf29f
- (void)fetchCurrentDeviceKVSKey:(CDUnknownBlockType)arg1;	// IMP=0x00100000004befd0
- (void)removeAllKVSEntries;	// IMP=0x00100000004bef93
- (id)forceSyncKVS;	// IMP=0x00100000004bea3e
- (id)_fetchExpiredEntriesFromKVS;	// IMP=0x00100000004be29f
- (id)fetchTrustedDevicesFromKVS;	// IMP=0x00100000004bded7
- (void)_removeObjectsForKeysFromKVS:(id)arg1;	// IMP=0x00100000004bdcd0
- (void)_insertTrustedDeviceToKVS:(id)arg1 withMetadata:(id)arg2;	// IMP=0x00100000004bdab6
- (id)_fetchCurrentKVS;	// IMP=0x00100000004bda66
- (void)updateKVSWithTrustedDevices:(id)arg1 withCompletion:(CDUnknownBlockType)arg2;	// IMP=0x00100000004bd232
- (void)cacheClearRequest:(id)arg1;	// IMP=0x00100000004bcab3
- (void)_notifyClientOfKTVerifierResults:(id)arg1 forService:(id)arg2;	// IMP=0x00100000004bc618
- (void)peerVerificationFinishedWithResults:(id)arg1;	// IMP=0x00100000004bbe04
- (void)_handleKTCDPStatusUpdate:(id)arg1;	// IMP=0x00100000004bb7e6
- (void)fetchKTCDPStatus:(CDUnknownBlockType)arg1;	// IMP=0x00100000004bb27c
- (long long)_IDSKTAccountStatusForKTAccountStatus:(unsigned long long)arg1;	// IMP=0x00100000004bb268
- (void)registrationDataNeedsUpdate;	// IMP=0x00100000004bb0d7
- (void)fetchKTRegistrationStatusWithCompletion:(CDUnknownBlockType)arg1;	// IMP=0x00100000004bafc7
- (void)healSelfForApplication:(id)arg1 withHealableErrors:(id)arg2 withCompletion:(CDUnknownBlockType)arg3;	// IMP=0x00100000004baf30
- (void)fetchSelfVerificationInfoForApplication:(id)arg1 withCompletion:(CDUnknownBlockType)arg2;	// IMP=0x00100000004b97f8
- (void)_fetchVerificationInfoForService:(id)arg1 forURIs:(id)arg2 localURI:(id)arg3 withCompletion:(CDUnknownBlockType)arg4;	// IMP=0x00100000004b8c24
- (void)fetchPeerVerificationInfoForApplication:(id)arg1 forURIs:(id)arg2 withCompletion:(CDUnknownBlockType)arg3;	// IMP=0x00100000004b89e3
- (void)clearTransparencyCacheForService:(id)arg1 peerURI:(id)arg2;	// IMP=0x00100000004b86a5
- (void)clearCacheAndUpdatePeersForService:(id)arg1;	// IMP=0x00100000004b7dea
- (void)getOptInStatesForKTApplications:(id)arg1 withCompletion:(CDUnknownBlockType)arg2;	// IMP=0x00100000004b7752
- (_Bool)isOptedInForServiceIdentifier:(id)arg1;	// IMP=0x00100000004b7507
- (void)sendOptInUpdateRequest:(id)arg1 withCompletion:(CDUnknownBlockType)arg2;	// IMP=0x00100000004b65c3
- (void)sendOptInUpdateForApplications:(id)arg1 withCompletion:(CDUnknownBlockType)arg2;	// IMP=0x00100000004b5d73
- (void)checkOptInEligibilityForApplication:(id)arg1 andFetchSelfVerificationRequestIDWithCompletion:(CDUnknownBlockType)arg2;	// IMP=0x00100000004b54cc
- (id)_clientErrorForKTResult:(unsigned long long)arg1 underlyingError:(id)arg2;	// IMP=0x00100000004b5404
- (void)_mutateSuccessfulSyncIndicatorOnKTLoggableDatas:(id)arg1 forIndex:(id)arg2;	// IMP=0x00100000004b4df1
- (void)_fulfillOrFailPromiseSeal:(id)arg1 basedOnIndex:(id)arg2 KTResult:(unsigned long long)arg3 ktLoggableDatas:(id)arg4 optedIn:(_Bool)arg5 error:(id)arg6;	// IMP=0x00100000004b4cb7
- (id)_currentVerificationResultsForRegisteredIndex:(id)arg1 ticket:(id)arg2;	// IMP=0x00100000004b4767
- (id)_verifyKeyTransparencyOfRegisteredIndex:(id)arg1 verificationState:(id)arg2 entry:(id)arg3;	// IMP=0x00100000004b4266
- (void)_forceVerificationWithIndex:(id)arg1 ticket:(id)arg2 completion:(CDUnknownBlockType)arg3;	// IMP=0x00100000004b3d24
- (id)_currentPeerVerificationResultsForQueriedIndex:(id)arg1 ticket:(id)arg2;	// IMP=0x00100000004b3687
- (id)_transparencyTicketForQueryResultsWithIndex:(id)arg1 verificationState:(id)arg2 entries:(id)arg3;	// IMP=0x00100000004b317c
- (void)currentPeerVerificationResultsForURIVerificationMap:(id)arg1 forService:(id)arg2 withCompletion:(CDUnknownBlockType)arg3;	// IMP=0x00100000004b2864
- (void)nukeKeyTransparencyStateWithCompletion:(CDUnknownBlockType)arg1;	// IMP=0x00100000004b24e1
- (void)forceVerificationWithIndex:(id)arg1 ticket:(id)arg2 completion:(CDUnknownBlockType)arg3;	// IMP=0x00100000004b2328
- (id)currentVerificationResultsForRegisteredIndex:(id)arg1 ticket:(id)arg2;	// IMP=0x00100000004b20da
- (id)currentPeerVerificationResultsForQueriedIndex:(id)arg1 ticket:(id)arg2;	// IMP=0x00100000004b1e8c
- (id)_pruneTrustedDevice:(id)arg1 givenEligibleServiceIdentifiers:(id)arg2;	// IMP=0x00100000004b1c8a
- (id)transparencyTicketForRegistrationWithIndex:(id)arg1 verificationState:(id)arg2 entry:(id)arg3;	// IMP=0x00100000004b19c3
- (void)initiateKTQueryForUris:(id)arg1 service:(id)arg2 withCompletion:(CDUnknownBlockType)arg3;	// IMP=0x00100000004b1593
- (void)_kickPeerVerificationForURIs:(id)arg1 localURI:(id)arg2 service:(id)arg3 fetchNow:(_Bool)arg4 withCompletion:(CDUnknownBlockType)arg5;	// IMP=0x00100000004b11c1
- (void)kickPeerVerificationForURIs:(id)arg1 service:(id)arg2 localURI:(id)arg3 fetchNow:(_Bool)arg4 withCompletion:(CDUnknownBlockType)arg5;	// IMP=0x00100000004b0da7
- (id)transparencyTicketForQueryResultsWithIndex:(id)arg1 verificationState:(id)arg2 entries:(id)arg3 localURI:(id)arg4;	// IMP=0x00100000004b08c4
- (id)fetchKTEligibleServices;	// IMP=0x00100000004b0874
- (void)fetchLocalDeviceTrustCircleEligibleServiceIdentifiersWithCompletion:(CDUnknownBlockType)arg1;	// IMP=0x00100000004b0634
- (void)fetchLocalDeviceTrustCircleEligibilityWithCompletion:(CDUnknownBlockType)arg1;	// IMP=0x00100000004b046f
- (_Bool)isDeviceAccountStateKeyTransparencyEligible;	// IMP=0x00100000004b03e6
@property(readonly, nonatomic) IDSRegistrationReasonTracker *registrationReasonTracker;
@property(readonly, nonatomic) IDSPushHandler *pushHandler;
@property(readonly, nonatomic) IDSCurrentServerTime *serverTime;
@property(readonly, nonatomic) IDSDServiceController *serviceController;
@property(readonly, nonatomic) IDSDAccountController *accountController;
@property(readonly, nonatomic) IDSPeerIDManager *peerIDManager;
- (id)initWithPolicy:(id)arg1 serviceToVerifier:(id)arg2 keyManager:(id)arg3 store:(id)arg4 registrationDataSource:(id)arg5 internalMetricLogger:(id)arg6 productionMetricLogger:(id)arg7 serviceToKTOptInManager:(id)arg8;	// IMP=0x00100000004af8a2
- (id)init;	// IMP=0x00100000004af3ff

@end

