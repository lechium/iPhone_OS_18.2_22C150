//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <objc/NSObject.h>

@class DRDataTransferSession, DRDispatchTimer, DRDragContinuationSession, DRTouchTrackingWindow, DRVirtualHIDService, NSMapTable, NSMutableArray, NSMutableSet, NSSet, NSString, NSXPCConnection, NSXPCListenerEndpoint, PBItemCollection, RBSAssertion, UIDraggingSystemTouchRoutingPolicy, _DUIPotentialDrop;
@protocol DRDragSessionDelegate, OS_dispatch_queue, _DUIClientSessionAccessibility, _DUIClientSessionCommon, _DUIClientSessionSource;

@interface DRDragSession : NSObject
{
    NSObject<OS_dispatch_queue> *_xpcQueue;	// 8 = 0x8
    NSMutableSet *_touchIDs;	// 16 = 0x10
    NSMutableSet *_endedTouchIDs;	// 24 = 0x18
    UIDraggingSystemTouchRoutingPolicy *_routingPolicy;	// 32 = 0x20
    UIDraggingSystemTouchRoutingPolicy *_systemRoutingPolicy;	// 40 = 0x28
    DRDispatchTimer *_touchWatchdogTimer;	// 48 = 0x30
    unsigned long long _pendingTouchUpObservationCount;	// 56 = 0x38
    _Bool _pendingDisplayTransitionLift;	// 64 = 0x40
    NSMutableArray *_dragItems;	// 72 = 0x48
    RBSAssertion *_sourceKeepAliveAssertion;	// 80 = 0x50
    _Bool _receivedOutsideAppSourceOperationMask;	// 88 = 0x58
    unsigned int _dragSourceContextId;	// 92 = 0x5c
    _Bool _sourceReceivesPresentationUpdates;	// 96 = 0x60
    NSMapTable *_connectionToDestinationMap;	// 104 = 0x68
    RBSAssertion *_destinationKeepAliveAssertion;	// 112 = 0x70
    NSMutableArray *_pendingMaskBlocks;	// 120 = 0x78
    _DUIPotentialDrop *_lastPotentialDrop;	// 128 = 0x80
    id <_DUIClientSessionCommon> _lastPotentialDropDestinationClient;	// 136 = 0x88
    int _lastPotentialDropProcessIdentifier;	// 144 = 0x90
    _Bool _lastPotentialDropWasFromSourceApp;	// 148 = 0x94
    _Bool _isSystemCommandeered;	// 149 = 0x95
    unsigned int _mainWindowContextId;	// 152 = 0x98
    DRDragContinuationSession *_continuationSession;	// 160 = 0xa0
    PBItemCollection *_itemCollection;	// 168 = 0xa8
    NSXPCListenerEndpoint *_dataProviderEndpoint;	// 176 = 0xb0
    DRDataTransferSession *_pendingDataTransferSession;	// 184 = 0xb8
    NSXPCConnection *_axConnection;	// 192 = 0xc0
    _Bool _isAnyProcessBeingDebugged;	// 200 = 0xc8
    _Bool _lastTouchEnded;	// 201 = 0xc9
    _Bool _observedLastTouchUp;	// 202 = 0xca
    int _lastTouchUpPID;	// 204 = 0xcc
    _Bool _receivedEndFromDestination;	// 208 = 0xd0
    NSMutableArray *_blocksWaitingForLastTouchAndDestinationToEnd;	// 216 = 0xd8
    DRDispatchTimer *_waitingForDestinationAndTouchObserverTimer;	// 224 = 0xe0
    DRDispatchTimer *_performDropTimeoutTimer;	// 232 = 0xe8
    NSObject<OS_dispatch_queue> *_loaderQueue;	// 240 = 0xf0
    _Bool _supportsSystemDrag;	// 248 = 0xf8
    _Bool _avoidsKeyboardSuppression;	// 249 = 0xf9
    _Bool _rotatable;	// 250 = 0xfa
    _Bool _resizable;	// 251 = 0xfb
    _Bool _wantsElasticEffects;	// 252 = 0xfc
    _Bool _sourceExpectsStagedLegacySelectors;	// 253 = 0xfd
    _Bool _sourceRestrictsDragToSelf;	// 254 = 0xfe
    _Bool _sourceRestrictsDragToLocalDevice;	// 255 = 0xff
    _Bool _originatedFromContinuityDisplay;	// 256 = 0x100
    _Bool _continuityDisplayWantsDragsHidden;	// 257 = 0x101
    _Bool _originatedFromAccessibility;	// 258 = 0x102
    _Bool _originatedFromPointer;	// 259 = 0x103
    unsigned int _identifier;	// 260 = 0x104
    NSXPCConnection *_sourceConnection;	// 264 = 0x108
    id <_DUIClientSessionSource> _clientSource;	// 272 = 0x110
    id <DRDragSessionDelegate> _delegate;	// 280 = 0x118
    long long _state;	// 288 = 0x120
    long long _sourceDataOwner;	// 296 = 0x128
    double _originalRotation;	// 304 = 0x130
    NSString *_persistentSceneIdentifier;	// 312 = 0x138
    DRTouchTrackingWindow *_sourceInteractionWindow;	// 320 = 0x140
    DRTouchTrackingWindow *_interactionWindow;	// 328 = 0x148
    NSString *_displayIdentifierForSynthesizedTouch;	// 336 = 0x150
    unsigned long long _outsideAppSourceOperationMask;	// 344 = 0x158
    id <_DUIClientSessionAccessibility> _accessibilityProxy;	// 352 = 0x160
    DRVirtualHIDService *_virtualHIDService;	// 360 = 0x168
    struct CGSize _minimumResizableSize;	// 368 = 0x170
    struct CGSize _maximumResizableSize;	// 384 = 0x180
    struct CGSize _originalScale;	// 400 = 0x190
}

- (void).cxx_destruct;	// IMP=0x0020000000025166
@property(retain, nonatomic) DRVirtualHIDService *virtualHIDService; // @synthesize virtualHIDService=_virtualHIDService;
@property(readonly, nonatomic) id <_DUIClientSessionAccessibility> accessibilityProxy; // @synthesize accessibilityProxy=_accessibilityProxy;
@property(readonly, nonatomic) _Bool originatedFromPointer; // @synthesize originatedFromPointer=_originatedFromPointer;
@property(readonly, nonatomic) NSXPCConnection *axConnection; // @synthesize axConnection=_axConnection;
@property(readonly, nonatomic) _Bool originatedFromAccessibility; // @synthesize originatedFromAccessibility=_originatedFromAccessibility;
@property(readonly, nonatomic) unsigned long long outsideAppSourceOperationMask; // @synthesize outsideAppSourceOperationMask=_outsideAppSourceOperationMask;
@property(copy, nonatomic) NSString *displayIdentifierForSynthesizedTouch; // @synthesize displayIdentifierForSynthesizedTouch=_displayIdentifierForSynthesizedTouch;
@property(nonatomic) _Bool continuityDisplayWantsDragsHidden; // @synthesize continuityDisplayWantsDragsHidden=_continuityDisplayWantsDragsHidden;
@property(readonly, nonatomic) _Bool originatedFromContinuityDisplay; // @synthesize originatedFromContinuityDisplay=_originatedFromContinuityDisplay;
@property(readonly, nonatomic) _Bool sourceRestrictsDragToLocalDevice; // @synthesize sourceRestrictsDragToLocalDevice=_sourceRestrictsDragToLocalDevice;
@property(readonly, nonatomic) _Bool sourceRestrictsDragToSelf; // @synthesize sourceRestrictsDragToSelf=_sourceRestrictsDragToSelf;
@property(readonly, nonatomic) _Bool sourceExpectsStagedLegacySelectors; // @synthesize sourceExpectsStagedLegacySelectors=_sourceExpectsStagedLegacySelectors;
@property(nonatomic) __weak DRTouchTrackingWindow *interactionWindow; // @synthesize interactionWindow=_interactionWindow;
@property(readonly, nonatomic) __weak DRTouchTrackingWindow *sourceInteractionWindow; // @synthesize sourceInteractionWindow=_sourceInteractionWindow;
@property(readonly, nonatomic) unsigned int mainWindowContextId; // @synthesize mainWindowContextId=_mainWindowContextId;
@property(readonly, nonatomic) NSString *persistentSceneIdentifier; // @synthesize persistentSceneIdentifier=_persistentSceneIdentifier;
@property(readonly, nonatomic) _Bool wantsElasticEffects; // @synthesize wantsElasticEffects=_wantsElasticEffects;
@property(readonly, nonatomic) struct CGSize originalScale; // @synthesize originalScale=_originalScale;
@property(readonly, nonatomic) double originalRotation; // @synthesize originalRotation=_originalRotation;
@property(readonly, nonatomic) struct CGSize maximumResizableSize; // @synthesize maximumResizableSize=_maximumResizableSize;
@property(readonly, nonatomic) struct CGSize minimumResizableSize; // @synthesize minimumResizableSize=_minimumResizableSize;
@property(readonly, nonatomic) _Bool resizable; // @synthesize resizable=_resizable;
@property(readonly, nonatomic) _Bool rotatable; // @synthesize rotatable=_rotatable;
@property(readonly, nonatomic) _Bool avoidsKeyboardSuppression; // @synthesize avoidsKeyboardSuppression=_avoidsKeyboardSuppression;
@property(readonly, nonatomic) _Bool supportsSystemDrag; // @synthesize supportsSystemDrag=_supportsSystemDrag;
@property(readonly, nonatomic) long long sourceDataOwner; // @synthesize sourceDataOwner=_sourceDataOwner;
@property(nonatomic) long long state; // @synthesize state=_state;
@property(readonly, nonatomic) __weak id <DRDragSessionDelegate> delegate; // @synthesize delegate=_delegate;
@property(readonly, nonatomic) id <_DUIClientSessionSource> clientSource; // @synthesize clientSource=_clientSource;
@property(readonly, nonatomic) NSXPCConnection *sourceConnection; // @synthesize sourceConnection=_sourceConnection;
@property(readonly, nonatomic) unsigned int identifier; // @synthesize identifier=_identifier;
- (void)_updatePotentialDrop:(id)arg1 forDestinationClient:(id)arg2;	// IMP=0x0010000000024d4b
- (void)_updatePotentialDropPreferringFullSizePreview:(_Bool)arg1;	// IMP=0x0010000000024cc6
- (void)_updateAccessibilityDragStatus;	// IMP=0x0010000000024ba8
- (void)_runBlocksWaitingForLastTouchAndDestinationToEnd;	// IMP=0x00100000000249f2
- (_Bool)_runBlocksWaitingForLastTouchAndDestinationToEndIfPossible;	// IMP=0x001000000002497f
- (_Bool)_canRunBlocksWaitingForLastTouchAndDestinationToEnd;	// IMP=0x0010000000024932
- (void)_performAfterLastTouchAndDestinationBothEnd:(CDUnknownBlockType)arg1;	// IMP=0x00100000000247c3
- (void)_receivedEndFromDestinationOnConnection:(id)arg1;	// IMP=0x0010000000024701
- (void)_lastTouchEndedNormally:(_Bool)arg1;	// IMP=0x0010000000024451
- (void)_notifyDestinationsWithAddedItemsStartingAtIndex:(unsigned long long)arg1;	// IMP=0x0010000000024235
- (void)notifyDragMonitorsWithUpdatedPresentation:(id)arg1;	// IMP=0x001000000002422f
- (void)_acceptDragPreviews:(id)arg1 fence:(id)arg2 fromClient:(id)arg3;	// IMP=0x000000000002416a
- (void)_handleDirtyItems:(id)arg1 fromClient:(id)arg2;	// IMP=0x0010000000023f72
- (void)sendDragEndedWithOperation:(unsigned long long)arg1;	// IMP=0x0010000000023c01
- (void)dataTransferSessionFinished:(id)arg1;	// IMP=0x0010000000023ac4
- (void)_liftVirtualHIDServiceIfNecessary;	// IMP=0x0010000000023a71
- (void)_endDragWithOperation:(unsigned long long)arg1 dataTransferSession:(id)arg2;	// IMP=0x0010000000023853
- (void)_endDragWithOperation:(unsigned long long)arg1 destination:(id)arg2;	// IMP=0x00100000000237c2
- (void)_logStatisticsForDragEnd:(unsigned long long)arg1 destination:(id)arg2;	// IMP=0x00100000000235d6
- (void)_endDragByCancelling;	// IMP=0x00100000000230b6
- (void)transitionFromState:(long long)arg1 toTerminalState:(long long)arg2;	// IMP=0x0010000000022e20
- (id)takeProcessAssertionOnPID:(int)arg1;	// IMP=0x00100000000228fe
- (oneway void)requestDragContinuationEndpointWithReply:(CDUnknownBlockType)arg1;	// IMP=0x001000000002285f
- (oneway void)loadUserActivityDataForItemAtIndex:(unsigned long long)arg1 reply:(CDUnknownBlockType)arg2;	// IMP=0x00100000000223e1
- (oneway void)loadURLForItemAtIndex:(unsigned long long)arg1 reply:(CDUnknownBlockType)arg2;	// IMP=0x0010000000021e57
- (oneway void)surrenderDragSession;	// IMP=0x0010000000021d61
- (oneway void)commandeerDragSession;	// IMP=0x0010000000021c9d
- (void)updateRoutingPolicy:(id)arg1;	// IMP=0x0010000000021bec
- (void)_applyMainWindowExclusionToRoutingPolicy:(id)arg1;	// IMP=0x00100000000219d5
- (void)cancelPointerDrag;	// IMP=0x00100000000218ca
- (void)endPointerDrag;	// IMP=0x00100000000217a7
- (void)movePointerDragToPoint:(struct CAPoint3D)arg1 hidService:(id)arg2;	// IMP=0x001000000002119f
- (void)beganPointerDrag;	// IMP=0x00100000000210b3
- (void)beginPointerDragAtLocationIfNeeded:(struct CAPoint3D)arg1 hidService:(id)arg2;	// IMP=0x0010000000020ed7
- (oneway void)accessibilityCancel;	// IMP=0x0010000000020df1
- (oneway void)accessibilityDrop;	// IMP=0x0010000000020ce4
- (oneway void)accessibilityMoveToPoint:(struct CGPoint)arg1;	// IMP=0x0010000000020b28
- (void)beginAccessibilityDragAtLocationIfNeeded:(struct CAPoint3D)arg1 hidService:(id)arg2;	// IMP=0x00100000000208d9
- (oneway void)requestVisibleItemsWithReply:(CDUnknownBlockType)arg1;	// IMP=0x001000000002053e
- (oneway void)enableKeyboardIfNeeded;	// IMP=0x0010000000020493
- (oneway void)sawDragEndEvent;	// IMP=0x001000000002021c
- (void)_performDropOperation:(unsigned long long)arg1 layerContext:(id)arg2 forConnection:(id)arg3;	// IMP=0x001000000001f153
- (void)_animateOutVisibleItemsAndEndDragWithOperation:(unsigned long long)arg1 destination:(id)arg2;	// IMP=0x001000000001f0c5
- (_Bool)_isPolicyControlled;	// IMP=0x001000000001f0b9
- (void)didFinishRequestingDataForDragContinuation:(id)arg1;	// IMP=0x001000000001efb0
- (oneway void)requestDropWithOperation:(unsigned long long)arg1 layerContext:(id)arg2;	// IMP=0x001000000001ecbf
- (oneway void)requestDropWithOperation:(unsigned long long)arg1 contextID:(unsigned int)arg2 layerRenderID:(unsigned long long)arg3;	// IMP=0x001000000001ec43
- (oneway void)takePotentialDrop:(id)arg1;	// IMP=0x001000000001e9e0
- (oneway void)dirtyDestinationItems:(id)arg1;	// IMP=0x001000000001e866
- (_Bool)shouldIgnoreRequest:(SEL)arg1 fromDestination:(id)arg2;	// IMP=0x001000000001e5cb
- (oneway void)cancelDrag;	// IMP=0x001000000001e5a3
- (oneway void)addItemCollection:(id)arg1 dataProviderEndpoint:(id)arg2;	// IMP=0x001000000001dfbd
- (oneway void)dragDidExitSourceApp;	// IMP=0x001000000001de9d
- (oneway void)dirtySourceItems:(id)arg1;	// IMP=0x001000000001dd9b
- (oneway void)takeOutsideAppSourceOperationMask:(unsigned long long)arg1 prefersFullSizePreview:(_Bool)arg2;	// IMP=0x001000000001db85
- (id)currentDestination;	// IMP=0x001000000001db15
- (id)dataTransferSessionForDestination:(id)arg1;	// IMP=0x001000000001d964
- (id)itemCollectionForDestination:(id)arg1;	// IMP=0x001000000001d8e1
- (void)performAfterReceivingOutsideAppSourceOperationMask:(CDUnknownBlockType)arg1;	// IMP=0x001000000001d84a
- (void)destinationConnectionWasInvalidated:(id)arg1;	// IMP=0x001000000001d7fe
- (_Bool)addDestination:(id)arg1 onConnection:(id)arg2 systemPolicy:(_Bool)arg3 destinationExpectsStagedSelectors:(_Bool)arg4;	// IMP=0x001000000001d4e3
- (id)newDataTransferSessionWithDestinationAuditToken:(CDStruct_4c969caf)arg1 filter:(CDUnknownBlockType)arg2;	// IMP=0x001000000001d403
- (void)requestImagesForClient:(id)arg1 itemIndexes:(id)arg2;	// IMP=0x001000000001d1b3
- (void)sourceConnectionWasInvalidated;	// IMP=0x001000000001d16e
- (void)fail;	// IMP=0x001000000001d120
- (void)beginDrag;	// IMP=0x001000000001cfaa
- (void)touchUpOccuredForIdentifier:(unsigned int)arg1 detached:(_Bool)arg2 context:(unsigned int)arg3 pid:(int)arg4;	// IMP=0x001000000001cd7a
- (void)_cancelDrag;	// IMP=0x001000000001cb86
- (void)_touchWatchdogFired;	// IMP=0x001000000001cb16
- (void)_cancelTouchWatchdog;	// IMP=0x001000000001cacf
- (void)_resetTouchWatchdogWithTimeout:(double)arg1;	// IMP=0x001000000001ca88
- (_Bool)_areAllTouchesEndedOrCancelled;	// IMP=0x001000000001ca5b
- (void)_touchEndedNormally:(_Bool)arg1 withID:(id)arg2;	// IMP=0x001000000001c9a9
- (void)touchCancelledWithID:(id)arg1;	// IMP=0x001000000001c95c
- (void)touchEndedWithID:(id)arg1 contextID:(id)arg2 pid:(id)arg3 likelyMovingOffscreen:(_Bool)arg4;	// IMP=0x001000000001c8fa
- (void)touchMovedWithID:(id)arg1;	// IMP=0x001000000001c8af
- (void)touchBeganWithID:(id)arg1;	// IMP=0x001000000001c864
@property(readonly, nonatomic) UIDraggingSystemTouchRoutingPolicy *routingPolicy;
@property(readonly, nonatomic) NSSet *touchIDs;
- (void)addTouchID:(id)arg1;	// IMP=0x001000000001c6cb
@property(readonly, nonatomic) _Bool synthesizesTouch;
@property(readonly, copy) NSString *description;
- (void)dealloc;	// IMP=0x001000000001c525
- (void)_updateIsAnyProcessBeingDebuggedWithConnection:(id)arg1;	// IMP=0x001000000001c4bd
- (id)initWithIdentifier:(unsigned int)arg1 configuration:(id)arg2 mainWindow:(id)arg3 sourceConnection:(id)arg4 accessibilityConnection:(id)arg5 clientSource:(id)arg6 delegate:(id)arg7;	// IMP=0x001000000001b7d4

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
// Preceding property had unknown attributes: ?
// Original attribute string: T@"NSString",?,R,C

@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

