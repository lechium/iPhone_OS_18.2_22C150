//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <objc/NSObject.h>

@class MRDDeviceInfoDataSource, MRDElectedPlayerController, MRDLockScreenController, MRDNowPlayingClient, MRDNowPlayingLauncher, MRDNowPlayingOriginClient, MRDNowPlayingPlaybackQueueServer, MRDNowPlayingPlayerClient, MRPlayerPath, MSVTimer, NSArray, NSHashTable, NSMutableArray, NSMutableDictionary, NSSet, NSString;
@protocol MRDLockScreenRoutingControllerProtocol, OS_dispatch_queue;

@interface MRDNowPlayingServer : NSObject
{
    NSObject<OS_dispatch_queue> *_serialQueue;	// 8 = 0x8
    NSMutableArray *_originClients;	// 16 = 0x10
    NSMutableDictionary *_nowPlayingApplicationIsPlayingStates;	// 24 = 0x18
    MRDNowPlayingPlaybackQueueServer *_playbackQueueServer;	// 32 = 0x20
    NSHashTable *_originForwarders;	// 40 = 0x28
    MRDDeviceInfoDataSource *_deviceInfoDataSource;	// 48 = 0x30
    MSVTimer *_wakeDeviceTimer;	// 56 = 0x38
    id _nowPlayingInfoObserverHandle;	// 64 = 0x40
    NSObject<OS_dispatch_queue> *_nowPlayingInfoObserverQueue;	// 72 = 0x48
    MRDNowPlayingOriginClient *_activeOriginClient;	// 80 = 0x50
    MRDNowPlayingOriginClient *_localOriginClient;	// 88 = 0x58
    MRDElectedPlayerController *_electedPlayerController;	// 96 = 0x60
    MRDLockScreenController *_lockScreenController;	// 104 = 0x68
    id <MRDLockScreenRoutingControllerProtocol> _lockScreenRoutingController;	// 112 = 0x70
    MRDNowPlayingLauncher *_nowPlayingCapLauncher;	// 120 = 0x78
}

- (void).cxx_destruct;	// IMP=0x0020000000115750
@property(retain, nonatomic) MRDNowPlayingLauncher *nowPlayingCapLauncher; // @synthesize nowPlayingCapLauncher=_nowPlayingCapLauncher;
@property(readonly, nonatomic) id <MRDLockScreenRoutingControllerProtocol> lockScreenRoutingController; // @synthesize lockScreenRoutingController=_lockScreenRoutingController;
@property(readonly, nonatomic) MRDLockScreenController *lockScreenController; // @synthesize lockScreenController=_lockScreenController;
@property(readonly, nonatomic) MRDElectedPlayerController *electedPlayerController; // @synthesize electedPlayerController=_electedPlayerController;
@property(retain, nonatomic) MRDNowPlayingOriginClient *localOriginClient; // @synthesize localOriginClient=_localOriginClient;
@property(retain, nonatomic) MRDNowPlayingOriginClient *activeOriginClient; // @synthesize activeOriginClient=_activeOriginClient;
- (id)_onQueue_originClientForGroupLeaderOfDeviceUID:(id)arg1;	// IMP=0x0010000000115351
- (id)_onQueue_originClientForDeviceUID:(id)arg1;	// IMP=0x0010000000115068
- (id)_onQueue_originClientForOrigin:(id)arg1;	// IMP=0x0010000000114e61
- (id)_onQueue_restoredActiveOrigin;	// IMP=0x0010000000114dbc
- (void)_onQueue_savePersistentActiveOrigin:(id)arg1;	// IMP=0x0010000000114c80
- (void)_onQueue_setActiveOrigin:(id)arg1 saveState:(_Bool)arg2;	// IMP=0x0010000000114ac9
- (void)setActiveOrigin:(id)arg1;	// IMP=0x0010000000114a19
- (id)overrideClient;	// IMP=0x00100000001149c9
- (void)setOverrideClient:(id)arg1;	// IMP=0x0010000000114960
- (void)_removeNowPlayingClient:(id)arg1 forOrigin:(id)arg2;	// IMP=0x00100000001148e8
- (void)_removeOrigin:(id)arg1;	// IMP=0x00100000001144db
- (void)_addOrigin:(id)arg1 withDeviceInfo:(id)arg2 emitNotification:(_Bool)arg3;	// IMP=0x001000000011402e
- (_Bool)_hasForwarderForOrigin:(id)arg1;	// IMP=0x0010000000113e88
- (void)unregisterOriginForwarder:(id)arg1;	// IMP=0x0010000000113ddc
- (void)registerOriginForwarder:(id)arg1;	// IMP=0x0010000000113ceb
- (id)augmentedUserInfoForPlayerPath:(id)arg1;	// IMP=0x0010000000113ab2
- (void)maybePostDistributedNotifications;	// IMP=0x0010000000113313
- (void)postLockScreenControlsDidChangeDistributedNotification;	// IMP=0x0010000000113261
- (void)postLockScreenPlayerPathDidChange:(id)arg1 handler:(CDUnknownBlockType)arg2;	// IMP=0x0010000000112e3d
- (void)postLockScreenActiveDidChange:(_Bool)arg1 handler:(CDUnknownBlockType)arg2;	// IMP=0x0010000000112d6d
- (void)postLockScreenVisibleDidChange:(_Bool)arg1 handler:(CDUnknownBlockType)arg2;	// IMP=0x0010000000112c9d
- (void)postElectedPlayerDidChange:(id)arg1 change:(long long)arg2 event:(long long)arg3 reason:(id)arg4 handler:(CDUnknownBlockType)arg5;	// IMP=0x0010000000112aeb
- (void)postPlayerDidUnregisterWithPlaybackState:(unsigned int)arg1 canBeNowPlaying:(_Bool)arg2 forPlayerPath:(id)arg3 handler:(CDUnknownBlockType)arg4;	// IMP=0x001000000011299b
- (void)postPlayerDidRegisterForPlayerPath:(id)arg1 handler:(CDUnknownBlockType)arg2;	// IMP=0x00100000001128f5
- (void)postPlaybackQueueParticipantsDidChange:(id)arg1 forPlayerPath:(id)arg2 handler:(CDUnknownBlockType)arg3;	// IMP=0x0010000000112814
- (void)postPlaybackQueueCapabilitiesDidChange:(unsigned long long)arg1 forPlayerPath:(id)arg2 handler:(CDUnknownBlockType)arg3;	// IMP=0x001000000011271e
- (void)postPlaybackQueueContentItemsArtworkDidChange:(id)arg1 forPlayerPath:(id)arg2 handler:(CDUnknownBlockType)arg3;	// IMP=0x001000000011236a
- (void)postPlaybackQueueContentItemsDidChange:(id)arg1 forPlayerPath:(id)arg2 handler:(CDUnknownBlockType)arg3;	// IMP=0x0010000000111f38
- (void)postPlaybackQueueDidChange:(id)arg1 nowPlayingItemDidChange:(_Bool)arg2 forPlayerPath:(id)arg3 handler:(CDUnknownBlockType)arg4;	// IMP=0x0010000000111a5c
- (void)postSupportedCommandsDidChange:(id)arg1 forPlayerPath:(id)arg2 handler:(CDUnknownBlockType)arg3;	// IMP=0x00100000001118e7
- (void)postNowPlayingPlayerStateDidChange:(id)arg1 forPlayerPath:(id)arg2 handler:(CDUnknownBlockType)arg3;	// IMP=0x0010000000111841
- (void)postPlaybackStateDidChange:(unsigned int)arg1 forPlayerPath:(id)arg2 handler:(CDUnknownBlockType)arg3;	// IMP=0x001000000011171d
- (void)postAudioFormatContentInfoDidChangeForOrigin:(id)arg1 handler:(CDUnknownBlockType)arg2;	// IMP=0x0010000000111630
- (void)postActivePlayerPathsDidChangeForOrigin:(id)arg1 handler:(CDUnknownBlockType)arg2;	// IMP=0x0010000000111543
- (void)postPictureInPictureDidChange:(_Bool)arg1 forPlayerPath:(id)arg2 handler:(CDUnknownBlockType)arg3;	// IMP=0x001000000011144f
- (void)postIsPlayingDidChange:(_Bool)arg1 lastPlayingTimestamp:(double)arg2 forPlayerPath:(id)arg3 handler:(CDUnknownBlockType)arg4;	// IMP=0x0010000000111315
- (void)postActivePlayerDidChangeForPlayerPath:(id)arg1 withPlaybackState:(unsigned int)arg2 handler:(CDUnknownBlockType)arg3;	// IMP=0x0010000000111221
- (void)postNowPlayingClientStateDidChange:(id)arg1 forPlayerPath:(id)arg2 handler:(CDUnknownBlockType)arg3;	// IMP=0x001000000011117b
- (void)postClientDidUnregisterForPlayerPath:(id)arg1 hasDefaultSupportedCommands:(_Bool)arg2 canBeNowPlaying:(_Bool)arg3 handler:(CDUnknownBlockType)arg4;	// IMP=0x0010000000111053
- (void)postClientDidRegisterForPlayerPath:(id)arg1 handler:(CDUnknownBlockType)arg2;	// IMP=0x0010000000110fad
- (void)postPlayerDidUnregisterCanBeNowPlayingForPlayerPath:(id)arg1 handler:(CDUnknownBlockType)arg2;	// IMP=0x0010000000110f07
- (void)postPlayerDidRegisterCanBeNowPlayingForPlayerPath:(id)arg1 handler:(CDUnknownBlockType)arg2;	// IMP=0x0010000000110e61
- (void)postClientDidUnregisterCanBeNowPlayingForPlayerPath:(id)arg1 handler:(CDUnknownBlockType)arg2;	// IMP=0x0010000000110dbb
- (void)postClientDidRegisterCanBeNowPlayingForPlayerPath:(id)arg1 handler:(CDUnknownBlockType)arg2;	// IMP=0x0010000000110ce5
- (void)postNowPlayingApplicationDidChangeForPlayerPath:(id)arg1 withPlaybackState:(unsigned int)arg2 handler:(CDUnknownBlockType)arg3;	// IMP=0x0010000000110b6f
- (void)postIsMutedDidChange:(id)arg1 isMuted:(_Bool)arg2 handler:(CDUnknownBlockType)arg3;	// IMP=0x0010000000110a5a
- (void)postVolumeCapabilitiesDidChange:(id)arg1 capabilities:(unsigned int)arg2 handler:(CDUnknownBlockType)arg3;	// IMP=0x00100000001108ff
- (void)postVolumeDidChange:(id)arg1 volume:(float)arg2 handler:(CDUnknownBlockType)arg3;	// IMP=0x00100000001107e3
- (void)postDeviceInfoDidChange:(id)arg1 previousDeviceInfo:(id)arg2 forOrigin:(id)arg3 handler:(CDUnknownBlockType)arg4;	// IMP=0x001000000011066b
- (void)postOriginDidUnRegister:(id)arg1 deviceInfo:(id)arg2 handler:(CDUnknownBlockType)arg3;	// IMP=0x0010000000110565
- (void)postOriginDidRegister:(id)arg1 handler:(CDUnknownBlockType)arg2;	// IMP=0x001000000011047c
- (void)postActiveOriginDidChange:(id)arg1 withPlaybackState:(unsigned int)arg2 handler:(CDUnknownBlockType)arg3;	// IMP=0x0010000000110388
- (void)postClientNowPlayingNotificationNamed:(id)arg1 userInfo:(id)arg2 predicate:(CDUnknownBlockType)arg3;	// IMP=0x00100000001101a8
- (void)postClientNowPlayingNotificationNamed:(id)arg1 userInfo:(id)arg2;	// IMP=0x0010000000110193
- (void)collectDiagnostic:(id)arg1;	// IMP=0x001000000010fcef
@property(readonly, nonatomic) _Bool hasElectedPlayer;
@property(readonly, nonatomic) _Bool lockScreenRecommendationActive;
@property(readonly, nonatomic) _Bool lockScreenPlatterActive;
- (void)lockScreenController:(id)arg1 playerPathDidChange:(id)arg2;	// IMP=0x001000000010fbed
- (void)lockScreenController:(id)arg1 lockScreenWidgetVisibleDidChange:(_Bool)arg2;	// IMP=0x001000000010fbd7
- (void)lockScreenController:(id)arg1 lockScreenWidgetActiveDidChange:(_Bool)arg2;	// IMP=0x001000000010fbc1
- (void)electedPlayerController:(id)arg1 electedPlayerDidChange:(id)arg2 change:(long long)arg3 event:(long long)arg4 reason:(id)arg5;	// IMP=0x001000000010fb8e
- (_Bool)nowPlayingLauncher:(id)arg1 shouldRelaunch:(id)arg2;	// IMP=0x001000000010fb12
- (void)nowPlayingServer:(id)arg1 activeOriginDidChangeFromOriginClient:(id)arg2 toOriginClient:(id)arg3;	// IMP=0x001000000010fa42
- (void)nowPlayingOriginClientDidChangeAudioFormatContentInfo:(id)arg1;	// IMP=0x001000000010f9f1
- (void)nowPlayingOriginClientPlaybackDidTimeout:(id)arg1;	// IMP=0x001000000010f8f3
- (void)nowPlayingOriginClient:(id)arg1 activePlayerClientsDidChange:(id)arg2;	// IMP=0x001000000010f8a2
- (void)nowPlayingOriginClient:(id)arg1 currentRouteIsMutedDidChange:(_Bool)arg2;	// IMP=0x001000000010f84d
- (void)nowPlayingOriginClient:(id)arg1 currentRouteVolumeDidChange:(float)arg2;	// IMP=0x001000000010f7f2
- (void)nowPlayingOriginClient:(id)arg1 currentRouteVolumeControlCapabilitiesDidChange:(unsigned int)arg2;	// IMP=0x001000000010f79d
- (void)nowPlayingOriginClient:(id)arg1 clientDidUnregister:(id)arg2;	// IMP=0x001000000010f600
- (void)nowPlayingOriginClient:(id)arg1 clientDidRegister:(id)arg2;	// IMP=0x001000000010f5af
- (void)nowPlayingOriginClient:(id)arg1 deviceInfoDidChange:(id)arg2 previousDeviceInfo:(id)arg3;	// IMP=0x001000000010f59d
- (void)handleNowPlayingOriginClient:(id)arg1 deviceInfoDidChange:(id)arg2 previousDeviceInfo:(id)arg3;	// IMP=0x001000000010f470
- (void)nowPlayingOriginClient:(id)arg1 applicationActivityStatusDidChange:(id)arg2;	// IMP=0x001000000010f3a4
- (void)nowPlayingOriginClient:(id)arg1 applicationActivityDidEnd:(id)arg2;	// IMP=0x001000000010f2d8
- (void)nowPlayingOriginClient:(id)arg1 applicationActivityDidBegin:(id)arg2;	// IMP=0x001000000010f20c
- (void)nowPlayingOriginClient:(id)arg1 activePlayerPathDidChange:(id)arg2 withPlaybackState:(unsigned int)arg3;	// IMP=0x001000000010f1d5
- (void)nowPlayingClient:(id)arg1 applicationDidForeground:(_Bool)arg2;	// IMP=0x001000000010f08b
- (void)nowPlayingPlayerClient:(id)arg1 clientCanBeNowPlayingDidChange:(_Bool)arg2;	// IMP=0x001000000010f029
- (void)nowPlayingClient:(id)arg1 playerDidUnregister:(id)arg2;	// IMP=0x001000000010ee2c
- (void)nowPlayingClient:(id)arg1 playerDidRegister:(id)arg2;	// IMP=0x001000000010eddb
- (void)nowPlayingClient:(id)arg1 clientStateDidChange:(id)arg2;	// IMP=0x001000000010ed60
- (void)nowPlayingClient:(id)arg1 activePlayerDidChangeFromPlayerClient:(id)arg2 toPlayerClient:(id)arg3;	// IMP=0x001000000010ec9a
- (void)wakeDeviceIfNecessaryForNowPlayingPlayerClient:(id)arg1;	// IMP=0x001000000010eacd
- (void)stopObservingNowPlayingInfo;	// IMP=0x001000000010ea60
- (void)startObservingNowPlayingInfoForNowPlayingPlayerClient:(id)arg1;	// IMP=0x001000000010e3c7
- (void)nowPlayingPlayerClient:(id)arg1 playbackQueueParticipantsDidChange:(id)arg2;	// IMP=0x000000000010e34c
- (void)nowPlayingPlayerClient:(id)arg1 playerCanBeNowPlayingDidChange:(_Bool)arg2;	// IMP=0x001000000010e2ea
- (void)nowPlayingPlayerClient:(id)arg1 pictureInPictureEnabledDidChange:(_Bool)arg2;	// IMP=0x001000000010e286
- (void)nowPlayingPlayerClient:(id)arg1 playbackQueueArtworkContentItemsDidChange:(id)arg2;	// IMP=0x001000000010e20b
- (void)nowPlayingPlayerClient:(id)arg1 playbackQueueContentItemsDidChange:(id)arg2;	// IMP=0x001000000010e190
- (void)nowPlayingPlayerClient:(id)arg1 playbackQueueCapabilitiesDidChange:(unsigned long long)arg2;	// IMP=0x001000000010e139
- (void)nowPlayingPlayerClient:(id)arg1 playbackQueueDidChange:(id)arg2 nowPlayingItemDidChange:(_Bool)arg3;	// IMP=0x001000000010e0bd
- (void)nowPlayingPlayerClient:(id)arg1 supportedCommandsDidChange:(id)arg2;	// IMP=0x001000000010e042
- (void)nowPlayingPlayerClient:(id)arg1 playbackStateDidChange:(unsigned int)arg2;	// IMP=0x001000000010dfed
- (void)nowPlayingPlayerClient:(id)arg1 isPlayingDidChange:(_Bool)arg2;	// IMP=0x001000000010de1c
- (void)nowPlayingPlayerClient:(id)arg1 playerStateDidChange:(id)arg2;	// IMP=0x001000000010dda1
- (void)_handleSendMusicHandoffEventMessage:(id)arg1 fromClient:(id)arg2;	// IMP=0x001000000010db3f
- (void)_handleBeginMusicHandoffSessionMessage:(id)arg1 fromClient:(id)arg2;	// IMP=0x001000000010d711
- (void)_handleFetchPlaybackQueueParticipantsMessage:(id)arg1 fromClient:(id)arg2;	// IMP=0x001000000010d538
- (void)_handleGetImageDimensionsForArtworkDataMessage:(id)arg1 fromClient:(id)arg2;	// IMP=0x001000000010d43a
- (void)_handleGetAudioFormatContentInfoForOriginMessage:(id)arg1 fromClient:(id)arg2;	// IMP=0x001000000010d267
- (void)_handleRegisterForWakingNowPlayingNotifications:(id)arg1 fromClient:(id)arg2;	// IMP=0x001000000010d127
- (void)_handleSetOriginClientPropertiesMessage:(id)arg1 fromClient:(id)arg2;	// IMP=0x001000000010cf80
- (void)_handleSetPlayerClientPropertiesMessage:(id)arg1 fromClient:(id)arg2;	// IMP=0x001000000010cdd8
- (void)_handleGetLastPlayingDateMessage:(id)arg1 fromClient:(id)arg2;	// IMP=0x001000000010caf8
- (void)_handleSetDefaultSupportedCommandsMessage:(id)arg1 fromClient:(id)arg2;	// IMP=0x001000000010c6da
- (void)_handleSetSupportedCommandsMessage:(id)arg1 fromClient:(id)arg2;	// IMP=0x001000000010c535
- (void)_handleGetSupportedCommandsMessage:(id)arg1 fromClient:(id)arg2;	// IMP=0x001000000010b77b
- (void)_handlePlaybackSessionRequest:(id)arg1 fromClient:(id)arg2;	// IMP=0x001000000010b5f8
- (void)_handleGetElectedPlayerPathMessage:(id)arg1 fromClient:(id)arg2;	// IMP=0x001000000010b54b
- (void)_handleGetDeviceInfo:(id)arg1 fromClient:(id)arg2;	// IMP=0x001000000010b3bf
- (void)_handleContentItemArtworkChangedMessage:(id)arg1 fromClient:(id)arg2;	// IMP=0x001000000010b2d2
- (void)_handleContentItemChangedMessage:(id)arg1 fromClient:(id)arg2;	// IMP=0x001000000010b1a8
- (void)_handleSetPlayerPictureInPictureEnabledMessage:(id)arg1 fromClient:(id)arg2;	// IMP=0x001000000010b0e5
- (void)_handleGetPlayerPictureInPictureEnabledMessage:(id)arg1 fromClient:(id)arg2;	// IMP=0x001000000010af98
- (void)_handleGetActivePlayerPathsForLocalOriginMessage:(id)arg1 fromClient:(id)arg2;	// IMP=0x001000000010ae56
- (void)_handleRemoveNowPlayingPlayerMessage:(id)arg1 fromClient:(id)arg2;	// IMP=0x001000000010ad61
- (void)_handleGetNowPlayingPlayerMessage:(id)arg1 fromClient:(id)arg2;	// IMP=0x001000000010ac28
- (void)_handleSetNowPlayingPlayerMessage:(id)arg1 fromClient:(id)arg2;	// IMP=0x001000000010aa74
- (void)_handleGetNowPlayingPlayersMessage:(id)arg1 fromClient:(id)arg2;	// IMP=0x001000000010a748
- (void)_handleRemoveNowPlayingClientMessage:(id)arg1 fromClient:(id)arg2;	// IMP=0x001000000010a656
- (void)_handleGetNowPlayingClientMessage:(id)arg1 fromClient:(id)arg2;	// IMP=0x001000000010a51d
- (void)_handleSetNowPlayingClientMessage:(id)arg1 fromClient:(id)arg2;	// IMP=0x001000000010a19c
- (void)_handleGetNowPlayingClientsMessage:(id)arg1 fromClient:(id)arg2;	// IMP=0x0010000000109c50
- (void)_handleResolvePlayerPath:(id)arg1 fromClient:(id)arg2;	// IMP=0x0010000000109a41
- (void)_handleSendLyricsEvent:(id)arg1 fromClient:(id)arg2;	// IMP=0x001000000010979f
- (void)_handleRequestAudioAmplitudeSamplesMessage:(id)arg1 fromClient:(id)arg2;	// IMP=0x00100000001094fa
- (void)_handleRequestVideoThumbnailsMessage:(id)arg1 fromClient:(id)arg2;	// IMP=0x0010000000109255
- (void)_handleGetAnyAppIsPlayingMessage:(id)arg1 fromClient:(id)arg2;	// IMP=0x00100000001091a1
- (void)_handleSetPlaybackStateMessage:(id)arg1 fromClient:(id)arg2;	// IMP=0x0010000000108fa3
- (void)_handleGetPlaybackStateMessage:(id)arg1 fromClient:(id)arg2;	// IMP=0x0010000000108e4c
- (void)_handleUpdatePlayerPropertiesMessage:(id)arg1 fromClient:(id)arg2;	// IMP=0x0010000000108ca0
- (void)_handleSetPlayerPropertiesMessage:(id)arg1 fromClient:(id)arg2;	// IMP=0x0010000000108b13
- (void)_handleGetPlayerPropertiesMessage:(id)arg1 fromClient:(id)arg2;	// IMP=0x00100000001089b3
- (void)_handleUpdateClientPropertiesMessage:(id)arg1 fromClient:(id)arg2;	// IMP=0x00100000001087dd
- (void)_handleSetClientPropertiesMessage:(id)arg1 fromClient:(id)arg2;	// IMP=0x001000000010862e
- (void)_handleGetClientPropertiesMessage:(id)arg1 fromClient:(id)arg2;	// IMP=0x00100000001084ce
- (void)_handleResetPlaybackQueueRequests:(id)arg1 fromClient:(id)arg2;	// IMP=0x00100000001083a4
- (void)_handleSetHardwareRemoteBehaviorMessage:(id)arg1 fromClient:(id)arg2;	// IMP=0x0010000000108291
- (void)_handleSetPlaybackQueueCapabilities:(id)arg1 fromClient:(id)arg2;	// IMP=0x00100000001081d6
- (void)_handleRequestPlaybackQueueCapabilities:(id)arg1 fromClient:(id)arg2;	// IMP=0x001000000010808a
- (void)_handleSetPlaybackQueue:(id)arg1 fromClient:(id)arg2;	// IMP=0x0010000000107e10
- (void)_handleEndApplicationActivityMessage:(id)arg1 fromClient:(id)arg2;	// IMP=0x0010000000107d8b
- (void)_handleGetApplicationActivityMessage:(id)arg1 fromClient:(id)arg2;	// IMP=0x0010000000107ca5
- (void)_handleBeginApplicationActivityMessage:(id)arg1 fromClient:(id)arg2;	// IMP=0x0010000000107b9f
- (void)_handleSetCanBeNowPlayingPlayerMessage:(id)arg1 fromClient:(id)arg2;	// IMP=0x001000000010799f
- (void)_handleSetCanBeNowPlayingAppMessage:(id)arg1 fromClient:(id)arg2;	// IMP=0x00100000001077dd
- (void)_handleSetOverriddenNowPlayingAppMessage:(id)arg1 fromClient:(id)arg2;	// IMP=0x00100000001073c5
- (void)_handleSetNowPlayingAppOverrideMessage:(id)arg1 fromClient:(id)arg2;	// IMP=0x0010000000107061
- (void)updateDeviceInfo:(id)arg1 origin:(id)arg2;	// IMP=0x0010000000106fe9
- (void)unregisterOrigin:(id)arg1;	// IMP=0x0010000000106fd7
- (void)reregisterOrigin:(id)arg1 deviceInfo:(id)arg2;	// IMP=0x0010000000106be3
- (void)registerOrigin:(id)arg1 deviceInfo:(id)arg2;	// IMP=0x0010000000106bcb
- (void)_handleGetActiveOriginMessage:(id)arg1 fromClient:(id)arg2;	// IMP=0x0010000000106ae5
- (void)_handleSetActiveOriginMessage:(id)arg1 fromClient:(id)arg2;	// IMP=0x00100000001069f9
- (void)_handleGetAvailableOriginsMessage:(id)arg1 fromClient:(id)arg2;	// IMP=0x0010000000106792
- (void)beginMusicHandoffSessionWithSource:(id)arg1 destination:(id)arg2 completion:(CDUnknownBlockType)arg3;	// IMP=0x001000000010611b
- (void)restoreClientState:(id)arg1 handler:(CDUnknownBlockType)arg2;	// IMP=0x001000000010459a
- (void)restoreDeviceInfoToClient:(id)arg1 handler:(CDUnknownBlockType)arg2;	// IMP=0x001000000010437f
- (void)clearNowPlayingClientForXPCClient:(id)arg1;	// IMP=0x0010000000103f5b
- (id)originClientForGroupLeaderOfDeviceUID:(id)arg1;	// IMP=0x0010000000103e1b
- (id)originClientForDeviceUID:(id)arg1;	// IMP=0x0010000000103cdb
- (id)originClientForOrigin:(id)arg1;	// IMP=0x0010000000103b87
- (id)localPlayersForXpcClient:(id)arg1;	// IMP=0x0010000000103aa5
- (id)xpcClientForPlayerPath:(id)arg1;	// IMP=0x001000000010385f
- (id)_onQueue_queryExistingPlayerPath:(id)arg1;	// IMP=0x0010000000103448
- (id)queryExistingPlayerPath:(id)arg1;	// IMP=0x00100000001032f4
- (id)onQueue_resolveExistingPlayerPath:(id)arg1;	// IMP=0x0010000000102f73
- (id)resolveExistingPlayerPath:(id)arg1;	// IMP=0x0010000000102da8
- (id)resolvePlayerPath:(id)arg1 fromClient:(id)arg2 useDefaultPlayerIfNoneSpecified:(_Bool)arg3;	// IMP=0x0010000000102687
- (id)resolvePlayerPath:(id)arg1 fromClient:(id)arg2;	// IMP=0x001000000010266f
- (id)queryExistingPlayerPathForXPCMessage:(id)arg1 forClient:(id)arg2;	// IMP=0x00100000001022e9
- (id)queryPlayerPath:(id)arg1 forClient:(id)arg2;	// IMP=0x001000000010228a
- (id)queryPlayerPathForXPCMessage:(id)arg1 fromClient:(id)arg2;	// IMP=0x0010000000102216
@property(readonly, nonatomic) NSArray *originClients;
- (id)_onQueue_allNowPlayingInfoClientsForOrigin:(id)arg1;	// IMP=0x0010000000101f42
@property(readonly, nonatomic) NSSet *allLocalNowPlayingInfoClients;
- (id)_onQueue_allNowPlayingInfoClients;	// IMP=0x0010000000101b8c
@property(readonly, nonatomic) NSSet *allNowPlayingInfoClients;
@property(readonly, nonatomic) MRPlayerPath *localActivePlayerPath;
@property(readonly, nonatomic) MRPlayerPath *activePlayerPath;
- (id)_onQueue_companionOriginClient;	// IMP=0x0010000000101829
- (id)_onQueue_activeOriginClient;	// IMP=0x00100000001017f0
@property(readonly, nonatomic) MRDNowPlayingOriginClient *companionOriginClient;
@property(readonly, nonatomic) MRDNowPlayingClient *localActiveNowPlayingClient;
@property(readonly, nonatomic) MRDNowPlayingClient *activeNowPlayingClient;
@property(readonly, nonatomic) MRDNowPlayingPlayerClient *localActivePlayerClient;
@property(readonly, nonatomic) MRDNowPlayingPlayerClient *activePlayerClient;
@property(readonly, nonatomic) unsigned int localActivePlayerPlaybackState;
@property(readonly, nonatomic) unsigned int activePlayerPlaybackState;
@property(readonly, nonatomic) _Bool localActivePlayerIsPlaying;
@property(readonly, nonatomic) _Bool activePlayerIsPlaying;
@property(readonly, nonatomic) NSString *localActiveClientBundleIdentifier;
@property(readonly, nonatomic) NSString *activeClientBundleIdentifier;
@property(readonly, nonatomic) int localActiveClientPID;
@property(readonly, nonatomic) int activeClientPID;
- (void)handleXPCMessage:(id)arg1 fromClient:(id)arg2;	// IMP=0x001000000010093e
- (id)_createLockScreenRoutingController;	// IMP=0x00100000001008d2
- (void)dealloc;	// IMP=0x001000000010085d
- (id)init;	// IMP=0x0010000000100578

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
// Preceding property had unknown attributes: ?
// Original attribute string: T@"NSString",?,R,C

@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

