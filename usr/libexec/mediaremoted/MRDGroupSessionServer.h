//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <objc/NSObject.h>

@class MRDGroupSessionAssertionManager, MRDGroupSessionEligibilityMonitor, MRDGroupSessionManager, MRDNetworkMonitor, MRDNowPlayingServer, MRDRemoteControlGroupSessionCoordinator, MRUserIdentity, MSVTimer, NSError, NSMapTable, NSMutableSet, NSString, NSXPCListener, SBSRemoteAlertHandle;
@protocol OS_dispatch_queue;

@interface MRDGroupSessionServer : NSObject
{
    _Bool _running;	// 8 = 0x8
    struct os_unfair_lock_s _lock;	// 12 = 0xc
    NSError *_lastConnectionError;	// 16 = 0x10
    NSXPCListener *_listener;	// 24 = 0x18
    NSObject<OS_dispatch_queue> *_messageQueue;	// 32 = 0x20
    MRDGroupSessionAssertionManager *_assertionManager;	// 40 = 0x28
    MRDRemoteControlGroupSessionCoordinator *_coordinator;	// 48 = 0x30
    MRDGroupSessionManager *_sessionManager;	// 56 = 0x38
    MRDGroupSessionEligibilityMonitor *_eligibilityMonitor;	// 64 = 0x40
    NSObject<OS_dispatch_queue> *_notificationQueue;	// 72 = 0x48
    MRDNowPlayingServer *_nowPlayingServer;	// 80 = 0x50
    MRDNetworkMonitor *_networkMonitor;	// 88 = 0x58
    NSMutableSet *_clients;	// 96 = 0x60
    NSMapTable *_assertionsByClient;	// 104 = 0x68
    MRUserIdentity *_localMusicIdentity;	// 112 = 0x70
    MSVTimer *_stopTimer;	// 120 = 0x78
    MSVTimer *_requestAssertionTimer;	// 128 = 0x80
    NSMutableSet *_requestGroupSessionCompletions;	// 136 = 0x88
    SBSRemoteAlertHandle *_remoteAlertHandle;	// 144 = 0x90
}

- (void).cxx_destruct;	// IMP=0x0020000000011da6
@property(retain, nonatomic) SBSRemoteAlertHandle *remoteAlertHandle; // @synthesize remoteAlertHandle=_remoteAlertHandle;
@property(retain, nonatomic) NSMutableSet *requestGroupSessionCompletions; // @synthesize requestGroupSessionCompletions=_requestGroupSessionCompletions;
@property(readonly, nonatomic) MSVTimer *requestAssertionTimer; // @synthesize requestAssertionTimer=_requestAssertionTimer;
@property(readonly, nonatomic) MSVTimer *stopTimer; // @synthesize stopTimer=_stopTimer;
@property(readonly, nonatomic) _Bool running; // @synthesize running=_running;
@property(readonly, nonatomic) struct os_unfair_lock_s lock; // @synthesize lock=_lock;
@property(retain, nonatomic) MRUserIdentity *localMusicIdentity; // @synthesize localMusicIdentity=_localMusicIdentity;
@property(retain, nonatomic) NSMapTable *assertionsByClient; // @synthesize assertionsByClient=_assertionsByClient;
@property(readonly, nonatomic) NSMutableSet *clients; // @synthesize clients=_clients;
@property(readonly, nonatomic) MRDNetworkMonitor *networkMonitor; // @synthesize networkMonitor=_networkMonitor;
@property(readonly, nonatomic) MRDNowPlayingServer *nowPlayingServer; // @synthesize nowPlayingServer=_nowPlayingServer;
@property(readonly, nonatomic) NSObject<OS_dispatch_queue> *notificationQueue; // @synthesize notificationQueue=_notificationQueue;
@property(retain, nonatomic) MRDGroupSessionEligibilityMonitor *eligibilityMonitor; // @synthesize eligibilityMonitor=_eligibilityMonitor;
@property(retain, nonatomic) MRDGroupSessionManager *sessionManager; // @synthesize sessionManager=_sessionManager;
@property(retain, nonatomic) MRDRemoteControlGroupSessionCoordinator *coordinator; // @synthesize coordinator=_coordinator;
@property(readonly, nonatomic) MRDGroupSessionAssertionManager *assertionManager; // @synthesize assertionManager=_assertionManager;
@property(readonly, nonatomic) NSObject<OS_dispatch_queue> *messageQueue; // @synthesize messageQueue=_messageQueue;
- (void)collectDiagnostic:(id)arg1;	// IMP=0x0010000000011c19
@property(retain, nonatomic) NSError *lastConnectionError; // @synthesize lastConnectionError=_lastConnectionError;
- (void)reevaluateAssertionState;	// IMP=0x0010000000011859
- (void)groupSessionAssertionManagerDidUnassert:(id)arg1;	// IMP=0x0010000000011847
- (void)groupSessionAssertionManagerDidAssert:(id)arg1;	// IMP=0x0010000000011835
- (void)remoteAlertHandle:(id)arg1 didInvalidateWithError:(id)arg2;	// IMP=0x0010000000011769
- (void)remoteAlertHandleDidDeactivate:(id)arg1;	// IMP=0x00100000000116de
- (void)remoteAlertHandleDidActivate:(id)arg1;	// IMP=0x0010000000011677
- (_Bool)listener:(id)arg1 shouldAcceptNewConnection:(id)arg2;	// IMP=0x00100000000110d9
@property(readonly, nonatomic) NSXPCListener *listener; // @synthesize listener=_listener;
- (id)clientForConnection:(id)arg1;	// IMP=0x0010000000010e5e
- (void)removeClient:(id)arg1;	// IMP=0x0010000000010d4c
- (void)addClient:(id)arg1;	// IMP=0x0010000000010c3a
- (void)notifyEligibilityChanged:(id)arg1;	// IMP=0x0010000000010a7f
- (void)eligibilityMonitor:(id)arg1 eligibilityStatusDidChange:(id)arg2;	// IMP=0x0010000000010a6a
- (void)_completeGroupSessionRequestsWithIdentifier:(id)arg1;	// IMP=0x00100000000108fc
- (void)notifyActiveSessionStateChanged;	// IMP=0x00100000000106e2
- (void)manager:(id)arg1 discoveredSessionsDidChange:(id)arg2;	// IMP=0x0010000000010235
- (void)manager:(id)arg1 didLeaveRemoteGroupSession:(id)arg2;	// IMP=0x00100000000100eb
- (void)manager:(id)arg1 activeSessionDidChange:(id)arg2;	// IMP=0x001000000000fee6
- (void)manager:(id)arg1 didJoinRemoteGroupSession:(id)arg2;	// IMP=0x001000000000fed4
- (void)manager:(id)arg1 didEndHostedGroupSession:(id)arg2;	// IMP=0x001000000000fec2
- (void)manager:(id)arg1 didStartHostedGroupSession:(id)arg2;	// IMP=0x001000000000fe64
- (void)handleUserStateChange:(id)arg1;	// IMP=0x001000000000fc26
- (void)restoreClientState:(id)arg1 handler:(CDUnknownBlockType)arg2;	// IMP=0x001000000000fa08
- (void)handleClientInvalidate:(id)arg1;	// IMP=0x001000000000f851
- (void)handleClientConnect:(id)arg1;	// IMP=0x001000000000f473
- (void)dismissProximityCard;	// IMP=0x001000000000f3c2
- (void)presentProximityCardWithDeviceName:(id)arg1 modelIdentifier:(id)arg2 color:(id)arg3 url:(id)arg4 error:(id *)arg5;	// IMP=0x001000000000ef78
- (_Bool)isPresentingProximityCard;	// IMP=0x001000000000ef67
- (void)requestGroupSessionWithCompletion:(CDUnknownBlockType)arg1;	// IMP=0x001000000000ec2e
- (void)_handleRequestGroupSessionMessage:(id)arg1 fromClient:(id)arg2;	// IMP=0x001000000000eac0
- (void)_handlePresentProximityCardMessage:(id)arg1 fromClient:(id)arg2;	// IMP=0x001000000000e94e
- (void)_handleGetUserIdentityForDSIDMessage:(id)arg1 fromClient:(id)arg2;	// IMP=0x001000000000e72c
- (void)_handleCreateGroupSessionTokenMessage:(id)arg1 fromClient:(id)arg2;	// IMP=0x001000000000e509
- (void)_handleGroupSessionEventMessage:(id)arg1 fromClient:(id)arg2;	// IMP=0x001000000000dec2
- (void)_handleGetUserIdentityMessage:(id)arg1 fromClient:(id)arg2;	// IMP=0x001000000000dd56
- (void)handleLeaveGroupSessionMessage:(id)arg1 fromClient:(id)arg2;	// IMP=0x001000000000d89a
- (void)joinGroupSessionViaEquivalentWHAEndpoint:(id)arg1 completion:(CDUnknownBlockType)arg2;	// IMP=0x001000000000c8ac
- (void)handleJoinGroupSessionMessage:(id)arg1 fromClient:(id)arg2;	// IMP=0x001000000000c193
- (void)handleGetGroupSessionServerEndpointMessage:(id)arg1 fromClient:(id)arg2;	// IMP=0x001000000000c09b
- (void)handleXPCMessage:(id)arg1 fromClient:(id)arg2;	// IMP=0x001000000000c015
- (void)stop;	// IMP=0x001000000000bdff
- (void)start;	// IMP=0x001000000000bc0e
- (void)requestEligibilityMonitoring;	// IMP=0x001000000000bae0
- (id)initWithNowPlayingServer:(id)arg1;	// IMP=0x001000000000b772

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
// Preceding property had unknown attributes: ?
// Original attribute string: T@"NSString",?,R,C

@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

