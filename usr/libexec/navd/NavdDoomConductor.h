//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <objc/NSObject.h>

@class NSHashTable, NSString, NavdDoomStorage;
@protocol NavdDoomAlerter, NavdDoomDestinationsUpdater, NavdDoomExitTimeUpdater, NavdDoomGuard, NavdDoomRoutesUpdater, NavdDoomScheduler, OS_dispatch_queue;

@interface NavdDoomConductor : NSObject
{
    NSObject<OS_dispatch_queue> *_queue;	// 8 = 0x8
    NSHashTable *_observers;	// 16 = 0x10
    _Bool _inTripMode;	// 24 = 0x18
    NavdDoomStorage *_internalStorage;	// 32 = 0x20
    id <NavdDoomGuard> _guard;	// 40 = 0x28
    id <NavdDoomExitTimeUpdater> _exitTimeUpdater;	// 48 = 0x30
    id <NavdDoomDestinationsUpdater> _destinationsUpdater;	// 56 = 0x38
    id <NavdDoomRoutesUpdater> _routesUpdater;	// 64 = 0x40
    id <NavdDoomAlerter> _alerter;	// 72 = 0x48
    id <NavdDoomScheduler> _scheduler;	// 80 = 0x50
}

- (void).cxx_destruct;	// IMP=0x002000000001df85
@property(nonatomic) __weak id <NavdDoomScheduler> scheduler; // @synthesize scheduler=_scheduler;
@property(nonatomic) __weak id <NavdDoomAlerter> alerter; // @synthesize alerter=_alerter;
@property(nonatomic) __weak id <NavdDoomRoutesUpdater> routesUpdater; // @synthesize routesUpdater=_routesUpdater;
@property(nonatomic) __weak id <NavdDoomDestinationsUpdater> destinationsUpdater; // @synthesize destinationsUpdater=_destinationsUpdater;
@property(nonatomic) __weak id <NavdDoomExitTimeUpdater> exitTimeUpdater; // @synthesize exitTimeUpdater=_exitTimeUpdater;
@property(nonatomic) __weak id <NavdDoomGuard> guard; // @synthesize guard=_guard;
@property(copy) NavdDoomStorage *internalStorage; // @synthesize internalStorage=_internalStorage;
@property(readonly, nonatomic, getter=isInTripMode) _Bool inTripMode; // @synthesize inTripMode=_inTripMode;
- (double)defaultTimeToRunDestinationsUpdater;	// IMP=0x001000000001de58
- (double)defaultWakeupWithoutWindow;	// IMP=0x001000000001de41
- (double)defaultWakeupTimeWithinWindow;	// IMP=0x001000000001de2a
- (double)defaultWakeupTimeBeforeWindow;	// IMP=0x001000000001de13
- (double)defaultDoomWindowMaxSecondsAfterExitTime;	// IMP=0x001000000001ddfc
- (double)defaultDoomWindowMaxSecondsBeforeExitTime;	// IMP=0x001000000001dde5
- (void)routesUpdater:(id)arg1 didRequestRouteWithError:(id)arg2;	// IMP=0x000000000001dddf
- (void)_setWindowFromExitTime:(id)arg1;	// IMP=0x001000000001d984
- (id)_wakeupTimeForWindow:(id)arg1;	// IMP=0x001000000001d865
- (void)_didEndUpdate;	// IMP=0x001000000001d644
- (void)_didScheduleWakeup:(id)arg1;	// IMP=0x001000000001d488
- (void)_didFireAlert:(id)arg1;	// IMP=0x001000000001d2cc
- (void)_willFireAlert;	// IMP=0x001000000001d122
- (void)_didUpdateRoutes:(id)arg1 incidents:(id)arg2;	// IMP=0x001000000001cf16
- (void)_willUpdateRoutes;	// IMP=0x001000000001cd46
- (void)_didUpdateDestinations:(id)arg1;	// IMP=0x001000000001c8e8
- (void)_willUpdateDestinations;	// IMP=0x001000000001c718
- (void)_didUpdateWindowForDoom:(id)arg1;	// IMP=0x001000000001c540
- (void)_didInvalidateWindowForReason:(unsigned long long)arg1;	// IMP=0x001000000001c373
- (void)_didUpdateExitTime:(id)arg1;	// IMP=0x001000000001bfcc
- (void)_willUpdateExitTime;	// IMP=0x001000000001bdfc
- (void)_willStartUpdate;	// IMP=0x001000000001bc0a
- (void)unregisterObserver:(id)arg1;	// IMP=0x001000000001ba8e
- (void)registerObserver:(id)arg1;	// IMP=0x001000000001b912
- (_Bool)hasDestinations;	// IMP=0x001000000001b8a0
- (_Bool)hasCurrentDoomWindow;	// IMP=0x001000000001b6de
- (_Bool)hasDoomWindow;	// IMP=0x001000000001b56f
- (void)_scheduleRunAt:(id)arg1;	// IMP=0x001000000001b386
- (_Bool)updateRoutesForDestinations:(id)arg1;	// IMP=0x00100000000198a6
- (_Bool)updateDestinationsForWindow:(id)arg1;	// IMP=0x001000000001906b
- (_Bool)_updateExitTime;	// IMP=0x0010000000018150
- (_Bool)update;	// IMP=0x0010000000017f08
- (id)initWithStorage:(id)arg1 exitTimeUpdater:(id)arg2 destinationsUpdater:(id)arg3 routesUpdater:(id)arg4 guard:(id)arg5 alerter:(id)arg6 scheduler:(id)arg7;	// IMP=0x0010000000017d30
@property(readonly, nonatomic) NSString *uniqueName;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
// Preceding property had unknown attributes: ?
// Original attribute string: T@"NSString",?,R,C

@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

