//
//     Generated by classdump-c 4.2.0 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <PassKitCore/PDXPCService.h>

@class NSMutableArray, NSString, PDAccountManager, PDAppletSubcredentialManager, PDAssertionManager, PDAuxiliaryCapabilityManager, PDCarKeyRequirementsChecker, PDCardFileManager, PDDatabaseManager, PDDefaultPassManager, PDDeviceRegistrationServiceCoordinator, PDExpressPassManager, PDExpressTransitUpgradeController, PDISO18013Manager, PDIssuerBindingManager, PDPassDynamicStateManager, PDPassLiveRenderManager, PDPaymentWebServiceCoordinator, PDProvisioningRequirementsChecker, PDPushProvisioningManager, PDRelevantPassProvider, PDRemoteInterfacePresenter, PDServer, PDSpotlightIndexer, PDUserNotificationManager, PDWebServicesCoordinator, PKEntitlementWhitelist, PKIDSManager, PKSecureElement, PKUsageNotificationServer;
@protocol PDPassLibraryDelegate;

@interface PDPassLibrary : PDXPCService
{
    PKEntitlementWhitelist *_whitelist;	// 8 = 0x8
    PDServer *_server;	// 16 = 0x10
    PDRemoteInterfacePresenter *_remoteInterfacePresenter;	// 24 = 0x18
    PDAssertionManager *_assertionManager;	// 32 = 0x20
    struct os_unfair_lock_s _lock;	// 40 = 0x28
    NSMutableArray *_userNotifications;	// 48 = 0x30
    PKSecureElement *_secureElement;	// 56 = 0x38
    PDPaymentWebServiceCoordinator *_paymentWebServicesCoordinator;	// 64 = 0x40
    PDWebServicesCoordinator *_webServicesCoordinator;	// 72 = 0x48
    PDCardFileManager *_cardFileManager;	// 80 = 0x50
    PDDatabaseManager *_databaseManager;	// 88 = 0x58
    PDExpressPassManager *_expressPassManager;	// 96 = 0x60
    PDUserNotificationManager *_userNotificationManager;	// 104 = 0x68
    PDRelevantPassProvider *_relevantPassProvider;	// 112 = 0x70
    PKUsageNotificationServer *_usageNotificationServer;	// 120 = 0x78
    PKIDSManager *_idsManager;	// 128 = 0x80
    PDSpotlightIndexer *_spotlightIndexer;	// 136 = 0x88
    PDExpressTransitUpgradeController *_expressUpgradeController;	// 144 = 0x90
    PDAccountManager *_accountManager;	// 152 = 0x98
    PDAppletSubcredentialManager *_subcredentialManager;	// 160 = 0xa0
    PDCarKeyRequirementsChecker *_carKeyRequirementsChecker;	// 168 = 0xa8
    PDPushProvisioningManager *_pushProvisioningManager;	// 176 = 0xb0
    PDDefaultPassManager *_defaultPassManager;	// 184 = 0xb8
    PDPassDynamicStateManager *_dynamicStateManager;	// 192 = 0xc0
    PDPassLiveRenderManager *_passLiveRenderManager;	// 200 = 0xc8
    PDISO18013Manager *_isoManager;	// 208 = 0xd0
    PDIssuerBindingManager *_issuerBindingManager;	// 216 = 0xd8
    PDAuxiliaryCapabilityManager *_auxiliaryCapabilityManager;	// 224 = 0xe0
    PDDeviceRegistrationServiceCoordinator *_deviceRegistrationServiceCoordinator;	// 232 = 0xe8
    PDProvisioningRequirementsChecker *_provisioningRequirementsChecker;	// 240 = 0xf0
    id <PDPassLibraryDelegate> _delegate;	// 248 = 0xf8
}

- (void).cxx_destruct;	// IMP=0x0020000000078341
@property(nonatomic) __weak id <PDPassLibraryDelegate> delegate; // @synthesize delegate=_delegate;
@property(retain, nonatomic) PDProvisioningRequirementsChecker *provisioningRequirementsChecker; // @synthesize provisioningRequirementsChecker=_provisioningRequirementsChecker;
@property(retain, nonatomic) PDDeviceRegistrationServiceCoordinator *deviceRegistrationServiceCoordinator; // @synthesize deviceRegistrationServiceCoordinator=_deviceRegistrationServiceCoordinator;
@property(retain, nonatomic) PDAuxiliaryCapabilityManager *auxiliaryCapabilityManager; // @synthesize auxiliaryCapabilityManager=_auxiliaryCapabilityManager;
@property(retain, nonatomic) PDIssuerBindingManager *issuerBindingManager; // @synthesize issuerBindingManager=_issuerBindingManager;
@property(retain, nonatomic) PDISO18013Manager *isoManager; // @synthesize isoManager=_isoManager;
@property(retain, nonatomic) PDPassLiveRenderManager *passLiveRenderManager; // @synthesize passLiveRenderManager=_passLiveRenderManager;
@property(retain, nonatomic) PDPassDynamicStateManager *dynamicStateManager; // @synthesize dynamicStateManager=_dynamicStateManager;
@property(retain, nonatomic) PDDefaultPassManager *defaultPassManager; // @synthesize defaultPassManager=_defaultPassManager;
@property(retain, nonatomic) PDPushProvisioningManager *pushProvisioningManager; // @synthesize pushProvisioningManager=_pushProvisioningManager;
@property(retain, nonatomic) PDCarKeyRequirementsChecker *carKeyRequirementsChecker; // @synthesize carKeyRequirementsChecker=_carKeyRequirementsChecker;
@property(retain, nonatomic) PDAppletSubcredentialManager *subcredentialManager; // @synthesize subcredentialManager=_subcredentialManager;
@property(retain, nonatomic) PDAccountManager *accountManager; // @synthesize accountManager=_accountManager;
@property(retain, nonatomic) PDExpressTransitUpgradeController *expressUpgradeController; // @synthesize expressUpgradeController=_expressUpgradeController;
@property(retain, nonatomic) PDSpotlightIndexer *spotlightIndexer; // @synthesize spotlightIndexer=_spotlightIndexer;
@property(retain, nonatomic) PKIDSManager *idsManager; // @synthesize idsManager=_idsManager;
@property(retain, nonatomic) PKUsageNotificationServer *usageNotificationServer; // @synthesize usageNotificationServer=_usageNotificationServer;
@property(retain, nonatomic) PDRelevantPassProvider *relevantPassProvider; // @synthesize relevantPassProvider=_relevantPassProvider;
@property(retain, nonatomic) PDUserNotificationManager *userNotificationManager; // @synthesize userNotificationManager=_userNotificationManager;
@property(retain, nonatomic) PDExpressPassManager *expressPassManager; // @synthesize expressPassManager=_expressPassManager;
@property(retain, nonatomic) PDDatabaseManager *databaseManager; // @synthesize databaseManager=_databaseManager;
@property(retain, nonatomic) PDCardFileManager *cardFileManager; // @synthesize cardFileManager=_cardFileManager;
@property(retain, nonatomic) PDWebServicesCoordinator *webServicesCoordinator; // @synthesize webServicesCoordinator=_webServicesCoordinator;
@property(retain, nonatomic) PDPaymentWebServiceCoordinator *paymentWebServicesCoordinator; // @synthesize paymentWebServicesCoordinator=_paymentWebServicesCoordinator;
@property(retain, nonatomic) PKSecureElement *secureElement; // @synthesize secureElement=_secureElement;
- (void)spotlightStatusWithCompletion:(CDUnknownBlockType)arg1;	// IMP=0x0010000000077e2d
- (void)spotlightResetWithCompletion:(CDUnknownBlockType)arg1;	// IMP=0x0010000000077c08
- (void)spotlightReindexContentWithIdentifiers:(id)arg1 acknowledgement:(CDUnknownBlockType)arg2;	// IMP=0x0010000000077a96
- (void)spotlightReindexAllContentWithAcknowledgement:(CDUnknownBlockType)arg1;	// IMP=0x001000000007794c
- (void)forceImmediateRevocationCheck;	// IMP=0x0010000000077879
- (void)removeAllScheduledActivities;	// IMP=0x0010000000077660
- (void)updateDate:(id)arg1 forPendingNotificationWithIdentifier:(id)arg2;	// IMP=0x001000000007753e
- (void)pendingUserNotificationsWithIdentifier:(id)arg1 completion:(CDUnknownBlockType)arg2;	// IMP=0x00100000000773f7
- (void)issueWalletUserNotificationWithTitle:(id)arg1 message:(id)arg2 forPassUniqueIdentifier:(id)arg3 customActionRoute:(id)arg4;	// IMP=0x0010000000077239
- (void)shuffleGroups:(int)arg1;	// IMP=0x0010000000077153
- (void)noteACAccountChanged:(id)arg1 handler:(CDUnknownBlockType)arg2;	// IMP=0x0010000000076f5e
- (void)noteAppleAccountChanged:(id)arg1 handler:(CDUnknownBlockType)arg2;	// IMP=0x0010000000076a0e
- (void)updateIngestedDate:(id)arg1 forPassWithUniqueID:(id)arg2;	// IMP=0x001000000007688d
- (void)introduceDatabaseIntegrityProblem;	// IMP=0x00100000000767c2
- (void)getDiffForPassUpdateUserNotificationWithIdentifier:(id)arg1 handler:(CDUnknownBlockType)arg2;	// IMP=0x001000000007666d
- (_Bool)_writePass:(id)arg1 withSettings:(unsigned long long)arg2 error:(id *)arg3;	// IMP=0x00100000000765c9
- (_Bool)_writePass:(id)arg1 error:(id *)arg2;	// IMP=0x00100000000763c1
- (unsigned long long)_addPassesWithEnumerator:(CDUnknownBlockType)arg1;	// IMP=0x0010000000075f0b
- (void)_addPasses:(id)arg1 withCompletion:(CDUnknownBlockType)arg2;	// IMP=0x0010000000075db8
- (void)_getPassWithUniqueID:(id)arg1 handler:(CDUnknownBlockType)arg2;	// IMP=0x0010000000075ccb
- (_Bool)_entitledForPassType:(unsigned long long)arg1 uniqueIdentifier:(id)arg2 actions:(unsigned long long)arg3;	// IMP=0x0010000000075b5f
- (_Bool)_entitledForUniqueID:(id)arg1 forActions:(unsigned long long)arg2;	// IMP=0x0010000000075b40
- (_Bool)_entitledForObject:(id)arg1 forActions:(unsigned long long)arg2;	// IMP=0x00100000000759c4
- (id)_entitlementFilteredPasses:(id)arg1;	// IMP=0x00100000000758ad
- (void)_sanitizePasses:(id)arg1;	// IMP=0x001000000007577b
- (id)_sanitizePassIfNeeded:(id)arg1;	// IMP=0x0010000000075707
- (void)issuerBindingFlowAuthenticationPerformed;	// IMP=0x00100000000756a3
- (void)sessionDidReceiveData:(id)arg1;	// IMP=0x001000000007560e
- (void)sessionDidChangeConnectionStatus:(long long)arg1;	// IMP=0x0010000000075580
- (void)contactlessInterfaceDidDismissFromSource:(long long)arg1;	// IMP=0x00100000000754f2
- (void)contactlessInterfaceDidPresentFromSource:(long long)arg1;	// IMP=0x0010000000075464
- (void)supportsSearchForPassUniqueID:(id)arg1 completion:(CDUnknownBlockType)arg2;	// IMP=0x00100000000750ee
- (void)presentIssuerBindingFlowForIssuerData:(id)arg1 signature:(id)arg2 orientation:(id)arg3;	// IMP=0x00100000000750c2
- (void)usingSynchronousProxy:(_Bool)arg1 requestIssuerBoundPassesWithBindingWithData:(id)arg2 automaticallyProvision:(_Bool)arg3 withCompletion:(CDUnknownBlockType)arg4;	// IMP=0x0010000000074eda
- (void)invalidateVehicleConnectionSessionIdentifier:(id)arg1;	// IMP=0x0010000000074de9
- (void)sendRKEPassThroughMessage:(id)arg1 forSessionIdentifier:(id)arg2 withCompletion:(CDUnknownBlockType)arg3;	// IMP=0x0010000000074c1b
- (void)startVehicleConnectionSessionWithPassUniqueIdentifier:(id)arg1 completion:(CDUnknownBlockType)arg2;	// IMP=0x0010000000074afc
- (void)usingSynchronousProxy:(_Bool)arg1 configurePushProvisioningConfigurationV2:(id)arg2 completion:(CDUnknownBlockType)arg3;	// IMP=0x00100000000748ed
- (void)usingSynchronousProxy:(_Bool)arg1 configurePushProvisioningConfiguration:(id)arg2 completion:(CDUnknownBlockType)arg3;	// IMP=0x00100000000747e6
- (void)pushProvisioningNoncesWithCredentialCount:(unsigned long long)arg1 completion:(CDUnknownBlockType)arg2;	// IMP=0x00100000000744da
- (void)usingSynchronousProxy:(_Bool)arg1 fetchAppletSubCredentialForPassTypeIdentifier:(id)arg2 serialNumber:(id)arg3 completionHandler:(CDUnknownBlockType)arg4;	// IMP=0x0010000000073b63
- (void)usingSynchronousProxy:(_Bool)arg1 configureHomeAuxiliaryCapabilitiesForSerialNumber:(id)arg2 homeIdentifier:(id)arg3 fromUnifiedAccessDescriptor:(id)arg4 andAliroDescriptor:(id)arg5 completion:(CDUnknownBlockType)arg6;	// IMP=0x0010000000072c62
- (void)usingSynchronousProxy:(_Bool)arg1 generateTransactionKeyWithReaderIdentifier:(id)arg2 readerPublicKey:(id)arg3 completion:(CDUnknownBlockType)arg4;	// IMP=0x001000000007276c
- (void)usingSynchronousProxy:(_Bool)arg1 meetsProvisioningRequirements:(id)arg2 completion:(CDUnknownBlockType)arg3;	// IMP=0x001000000007253e
- (void)canAddHomeKeyWithConfiguration:(id)arg1 completion:(CDUnknownBlockType)arg2;	// IMP=0x00100000000719e2
- (void)canAddCarKeyPassWithConfiguration:(id)arg1 completion:(CDUnknownBlockType)arg2;	// IMP=0x00100000000717bd
- (void)canAddClassicApplePayCredentialWithConfiguration:(id)arg1 completion:(CDUnknownBlockType)arg2;	// IMP=0x0010000000071591
- (void)canAddPushablePassWithConfiguration:(id)arg1 completion:(CDUnknownBlockType)arg2;	// IMP=0x001000000007144b
- (void)usingSynchronousProxy:(_Bool)arg1 canAddCarKeyPassWithConfiguration:(id)arg2 completion:(CDUnknownBlockType)arg3;	// IMP=0x00100000000712e5
- (void)usingSynchronousProxy:(_Bool)arg1 canAddSecureElementPassWithConfiguration:(id)arg2 completion:(CDUnknownBlockType)arg3;	// IMP=0x0010000000070c70
- (void)_setBackupPassbookDeletedState:(id)arg1;	// IMP=0x0010000000070b4b
- (void)_setBackupDefaultPaymentPassState:(id)arg1;	// IMP=0x0010000000070a36
- (void)prepareForBackupRestoreWithRequiredFileURLs:(id)arg1 destinationFileHandles:(id)arg2 handler:(CDUnknownBlockType)arg3;	// IMP=0x0010000000070926
- (void)prepareForBackupRestoreWithExistingPreferencesData:(id)arg1 handler:(CDUnknownBlockType)arg2;	// IMP=0x001000000007087b
- (void)setBackupMetadata:(id)arg1 handler:(CDUnknownBlockType)arg2;	// IMP=0x001000000007049f
- (void)backupMetadataWithHandler:(CDUnknownBlockType)arg1;	// IMP=0x001000000007001e
- (_Bool)_isWatchIssuerAppProvisioningSupported;	// IMP=0x0010000000070016
- (void)isWatchIssuerAppProvisioningSupportedWithHandler:(CDUnknownBlockType)arg1;	// IMP=0x001000000006ffbe
- (void)signData:(id)arg1 signatureEntanglementMode:(unsigned long long)arg2 withCompletionHandler:(CDUnknownBlockType)arg3;	// IMP=0x001000000006fd87
- (void)usingSynchronousProxy:(_Bool)arg1 generateAuxiliaryCapabilitiesForRequirements:(id)arg2 completion:(CDUnknownBlockType)arg3;	// IMP=0x001000000006f9d8
- (void)usingSynchronousProxy:(_Bool)arg1 longTermPrivacyKeyForCredentialGroupIdentifier:(id)arg2 reuseExisting:(_Bool)arg3 completion:(CDUnknownBlockType)arg4;	// IMP=0x001000000006f807
- (void)usingSynchronousProxy:(_Bool)arg1 addISO18013Blobs:(id)arg2 cardType:(long long)arg3 completion:(CDUnknownBlockType)arg4;	// IMP=0x001000000006f62f
- (void)deleteKeyMaterialForSubCredentialId:(id)arg1;	// IMP=0x000000000006f408
- (void)usingSynchronousProxy:(_Bool)arg1 generateISOEncryptionCertificateForSubCredentialId:(id)arg2 completion:(CDUnknownBlockType)arg3;	// IMP=0x001000000006f23a
- (void)usingSynchronousProxy:(_Bool)arg1 generateSEEncryptionCertificateForSubCredentialId:(id)arg2 completion:(CDUnknownBlockType)arg3;	// IMP=0x001000000006f06e
- (void)usingSynchronousProxy:(_Bool)arg1 signWithFidoKeyForRelyingParty:(id)arg2 relyingPartyAccountHash:(id)arg3 fidoKeyHash:(id)arg4 challenge:(id)arg5 publicKeyIdentifier:(id)arg6 externalizedAuth:(id)arg7 completion:(CDUnknownBlockType)arg8;	// IMP=0x001000000006ed2f
- (void)usingSynchronousProxy:(_Bool)arg1 checkFidoKeyPresenceForRelyingParty:(id)arg2 relyingPartyAccountHash:(id)arg3 fidoKeyHash:(id)arg4 completion:(CDUnknownBlockType)arg5;	// IMP=0x001000000006eb37
- (void)usingSynchronousProxy:(_Bool)arg1 createFidoKeyForRelyingParty:(id)arg2 relyingPartyAccountHash:(id)arg3 challenge:(id)arg4 externalizedAuth:(id)arg5 completion:(CDUnknownBlockType)arg6;	// IMP=0x001000000006e8b7
- (void)signData:(id)arg1 forPassUniqueID:(id)arg2 completion:(CDUnknownBlockType)arg3;	// IMP=0x001000000006e0af
- (void)migrateDataWithHandler:(CDUnknownBlockType)arg1 didRestoreFromBackup:(_Bool)arg2;	// IMP=0x001000000006df87
- (void)fetchCurrentRelevantPassInfo:(CDUnknownBlockType)arg1;	// IMP=0x001000000006de40
- (void)fetchHasCandidatePasses:(CDUnknownBlockType)arg1;	// IMP=0x001000000006dcf0
- (void)recomputeRelevantPassesWithSearchMode:(long long)arg1;	// IMP=0x001000000006dc34
- (void)personalizePassWithUniqueIdentifier:(id)arg1 contact:(id)arg2 personalizationToken:(id)arg3 requiredPersonalizationFields:(unsigned long long)arg4 personalizationSource:(unsigned long long)arg5 handler:(CDUnknownBlockType)arg6;	// IMP=0x001000000006da6c
- (void)updateObjectWithUniqueIdentifier:(id)arg1 handler:(CDUnknownBlockType)arg2;	// IMP=0x001000000006d928
- (void)resetApplePayWithDiagnosticReason:(id)arg1 handler:(CDUnknownBlockType)arg2;	// IMP=0x001000000006d7d3
- (void)removePassesOfType:(unsigned long long)arg1 withDiagnosticReason:(id)arg2 handler:(CDUnknownBlockType)arg3;	// IMP=0x001000000006d683
- (void)recoverPassWithUniqueID:(id)arg1 handler:(CDUnknownBlockType)arg2;	// IMP=0x001000000006d54a
- (void)removePassesWithUniqueIDs:(id)arg1 diagnosticReason:(id)arg2 handler:(CDUnknownBlockType)arg3;	// IMP=0x001000000006d1e6
- (void)removePassWithUniqueID:(id)arg1 diagnosticReason:(id)arg2 handler:(CDUnknownBlockType)arg3;	// IMP=0x001000000006d008
- (void)usingSynchronousProxy:(_Bool)arg1 enableExpressForPassWithPassTypeIdentifier:(id)arg2 serialNumber:(id)arg3 completionHandler:(CDUnknownBlockType)arg4;	// IMP=0x001000000006cb3b
- (void)usingSynchronousProxy:(_Bool)arg1 containsPassWithPassTypeIdentifier:(id)arg2 serialNumber:(id)arg3 completionHandler:(CDUnknownBlockType)arg4;	// IMP=0x001000000006c967
- (void)usingSynchronousProxy:(_Bool)arg1 replaceUnsignedPassWithDataFileDescriptor:(id)arg2 completionHandler:(CDUnknownBlockType)arg3;	// IMP=0x001000000006c5d7
- (void)usingSynchronousProxy:(_Bool)arg1 availableHomeKeyPassesWithCompletionHandler:(CDUnknownBlockType)arg2;	// IMP=0x001000000006bdc6
- (void)usingSynchronousProxy:(_Bool)arg1 provisionHomeKeyPassForSerialNumbers:(id)arg2 completionHandler:(CDUnknownBlockType)arg3;	// IMP=0x001000000006a7b9
- (void)usingSynchronousProxy:(_Bool)arg1 addUnsignedPassesWithDataFileDescriptors:(id)arg2 completionHandler:(CDUnknownBlockType)arg3;	// IMP=0x0010000000069dd5
- (void)_usingSynchronousProxy:(_Bool)arg1 addPassesWithEnumerator:(CDUnknownBlockType)arg2 estimatedNumberOfPasses:(unsigned long long)arg3 osTransaction:(id)arg4 completionHandler:(CDUnknownBlockType)arg5;	// IMP=0x001000000006976d
- (void)usingSynchronousProxy:(_Bool)arg1 addPassIngestionPayloads:(id)arg2 withCompletionHandler:(CDUnknownBlockType)arg3;	// IMP=0x0010000000069403
- (void)usingSynchronousProxy:(_Bool)arg1 addPassesContainer:(id)arg2 withCompletionHandler:(CDUnknownBlockType)arg3;	// IMP=0x0010000000069106
- (void)addPassesWithData:(id)arg1 handler:(CDUnknownBlockType)arg2;	// IMP=0x0010000000068c88
- (void)noteObjectSharedWithUniqueID:(id)arg1;	// IMP=0x0010000000068b43
- (void)rescheduleCommutePlanRenewalReminderForPassWithUniqueID:(id)arg1;	// IMP=0x00100000000689ee
- (void)usingSynchronousProxy:(_Bool)arg1 dynamicStateForPassUniqueID:(id)arg2 handler:(CDUnknownBlockType)arg3;	// IMP=0x00100000000688dd
- (void)usingSynchronousProxy:(_Bool)arg1 setLiveRenderingEnabled:(_Bool)arg2 forPassUniqueID:(id)arg3 handler:(CDUnknownBlockType)arg4;	// IMP=0x00100000000687d6
- (void)setSortingState:(long long)arg1 forObjectWithUniqueID:(id)arg2 withCompletion:(CDUnknownBlockType)arg3;	// IMP=0x0010000000068644
- (void)updateSettings:(unsigned long long)arg1 forObjectWithUniqueID:(id)arg2;	// IMP=0x0010000000068517
- (void)usingSynchronousProxy:(_Bool)arg1 getImageSetContainerForUniqueID:(id)arg2 type:(long long)arg3 withDisplayProfile:(id)arg4 suffix:(id)arg5 handler:(CDUnknownBlockType)arg6;	// IMP=0x0010000000068318
- (void)getImageSetForUniqueID:(id)arg1 ofType:(long long)arg2 displayProfile:(id)arg3 suffix:(id)arg4 handler:(CDUnknownBlockType)arg5;	// IMP=0x00100000000681f9
- (void)usingSynchronousProxy:(_Bool)arg1 getCachedImageSetContainerForUniqueID:(id)arg2 type:(long long)arg3 withDisplayProfile:(id)arg4 displayTraits:(id)arg5 handler:(CDUnknownBlockType)arg6;	// IMP=0x0010000000067ff2
- (void)usingSynchronousProxy:(_Bool)arg1 getContentForUniqueID:(id)arg2 withHandler:(CDUnknownBlockType)arg3;	// IMP=0x0010000000067e7f
- (void)getContentForUniqueID:(id)arg1 handler:(CDUnknownBlockType)arg2;	// IMP=0x0010000000067e65
- (void)_queue_replacePass:(id)arg1 handler:(CDUnknownBlockType)arg2;	// IMP=0x0010000000067d00
- (void)replacePassWithPassData:(id)arg1 handler:(CDUnknownBlockType)arg2;	// IMP=0x0010000000067bd6
- (void)getManifestHashAndSettingsForPassTypeID:(id)arg1 serialNumber:(id)arg2 handler:(CDUnknownBlockType)arg3;	// IMP=0x00100000000678e6
- (void)getPassWithPassTypeID:(id)arg1 serialNumber:(id)arg2 handler:(CDUnknownBlockType)arg3;	// IMP=0x001000000006781a
- (void)usingSynchronousProxy:(_Bool)arg1 passLocalizedStringForKey:(id)arg2 uniqueID:(id)arg3 completion:(CDUnknownBlockType)arg4;	// IMP=0x00100000000676ce
- (void)getDataForBundleResources:(id)arg1 objectUniqueIdentifier:(id)arg2 handler:(CDUnknownBlockType)arg3;	// IMP=0x001000000006759e
- (void)getDataForBundleResourceNamed:(id)arg1 withExtension:(id)arg2 objectUniqueIdentifier:(id)arg3 handler:(CDUnknownBlockType)arg4;	// IMP=0x001000000006745a
- (void)getArchivedObjectWithUniqueID:(id)arg1 handler:(CDUnknownBlockType)arg2;	// IMP=0x001000000006734b
- (void)iPadSupportsPasses:(CDUnknownBlockType)arg1;	// IMP=0x00100000000672a3
- (void)passbookHasBeenDeletedWithHandler:(CDUnknownBlockType)arg1;	// IMP=0x0010000000067263
- (void)isPassbookVisibleWithHandler:(CDUnknownBlockType)arg1;	// IMP=0x0010000000067207
- (void)hasSecureElementPassesOfType:(long long)arg1 handler:(CDUnknownBlockType)arg2;	// IMP=0x001000000006718f
- (void)isRemovingPassesOfType:(unsigned long long)arg1 handler:(CDUnknownBlockType)arg2;	// IMP=0x0010000000067114
- (void)passWithDPANIdentifier:(id)arg1 handler:(CDUnknownBlockType)arg2;	// IMP=0x0010000000067003
- (void)passWithFPANIdentifier:(id)arg1 handler:(CDUnknownBlockType)arg2;	// IMP=0x0010000000066f24
- (void)usingSynchronousProxy:(_Bool)arg1 postUpgradesAvailableNotificationForMarket:(id)arg2 passUniqueID:(id)arg3;	// IMP=0x0010000000066c12
- (void)postUpgradedPassNotificationForMarket:(id)arg1 passUniqueID:(id)arg2;	// IMP=0x0010000000066959
- (void)checkForTransitNotification;	// IMP=0x001000000006686a
- (void)_getServiceProviderDataForPass:(id)arg1 completion:(CDUnknownBlockType)arg2;	// IMP=0x0010000000066701
- (void)_getEncryptedServiceProviderDataForSecureElementPass:(id)arg1 publicKey:(id)arg2 scheme:(id)arg3 completion:(CDUnknownBlockType)arg4;	// IMP=0x0010000000066572
- (void)usingSynchronousProxy:(_Bool)arg1 getServiceProviderDataForUniqueID:(id)arg2 completion:(CDUnknownBlockType)arg3;	// IMP=0x0010000000066201
- (void)usingSynchronousProxy:(_Bool)arg1 getEncryptedServiceProviderDataForUniqueID:(id)arg2 completion:(CDUnknownBlockType)arg3;	// IMP=0x0010000000064cba
- (void)sortedTransitPassesForAppletDataFormat:(id)arg1 handler:(CDUnknownBlockType)arg2;	// IMP=0x001000000006432c
- (void)sortedTransitPassesForTransitNetworkIdentifiers:(CDUnknownBlockType)arg1;	// IMP=0x0010000000063511
- (void)expressTransitPassWithHandler:(CDUnknownBlockType)arg1;	// IMP=0x00100000000632ad
- (void)peerPaymentPassUniqueIDWithHandler:(CDUnknownBlockType)arg1;	// IMP=0x00100000000631c1
- (void)defaultPaymentPassWithHandler:(CDUnknownBlockType)arg1;	// IMP=0x0010000000062ffb
- (void)countPassesOfType:(unsigned long long)arg1 handler:(CDUnknownBlockType)arg2;	// IMP=0x0010000000062eab
- (void)canAddPassesOfType:(unsigned long long)arg1 handler:(CDUnknownBlockType)arg2;	// IMP=0x0010000000062c33
- (void)hasPassesInExpiredSectionWithHandler:(CDUnknownBlockType)arg1;	// IMP=0x0010000000062bca
- (void)hasPassesOfType:(unsigned long long)arg1 handler:(CDUnknownBlockType)arg2;	// IMP=0x0010000000062b65
- (id)_filteredPasses:(id)arg1 forApplicationIdentifier:(id)arg2;	// IMP=0x0010000000062a04
- (id)_filteredPasses:(id)arg1 forWebDomain:(id)arg2;	// IMP=0x00100000000628a3
- (void)enabledValueAddedServicePassesWithHandler:(CDUnknownBlockType)arg1;	// IMP=0x0010000000062709
- (void)usingSynchronousProxy:(_Bool)arg1 getManifestHashForPassWithUniqueID:(id)arg2 handler:(CDUnknownBlockType)arg3;	// IMP=0x001000000006243a
- (void)getMetadataForFieldWithProperties:(id)arg1 handler:(CDUnknownBlockType)arg2;	// IMP=0x0010000000062276
- (void)getPassUniqueIDsForAssociatedApplicationIdentifier:(id)arg1 handler:(CDUnknownBlockType)arg2;	// IMP=0x0010000000061b66
- (void)getPassesWithSearchableTransactions:(CDUnknownBlockType)arg1;	// IMP=0x0010000000061736
- (void)unexpiredPassesOrderedByGroup:(CDUnknownBlockType)arg1;	// IMP=0x00100000000616c8
- (void)getPassesWithUniqueIdentifiers:(id)arg1 handler:(CDUnknownBlockType)arg2;	// IMP=0x001000000006145a
- (void)hasInAppPrivateLabelPaymentPassesForWebDomain:(id)arg1 issuerCountryCodes:(id)arg2 isMultiTokensRequest:(_Bool)arg3 withHandler:(CDUnknownBlockType)arg4;	// IMP=0x0010000000061291
- (void)hasInAppPrivateLabelPaymentPassesForApplicationIdentifier:(id)arg1 issuerCountryCodes:(id)arg2 isMultiTokensRequest:(_Bool)arg3 withHandler:(CDUnknownBlockType)arg4;	// IMP=0x00100000000610c8
- (void)inAppPrivateLabelPaymentPassesForWebDomain:(id)arg1 issuerCountryCodes:(id)arg2 isMultiTokensRequest:(_Bool)arg3 withHandler:(CDUnknownBlockType)arg4;	// IMP=0x0010000000060f1d
- (void)inAppPrivateLabelPaymentPassesForApplicationIdentifier:(id)arg1 issuerCountryCodes:(id)arg2 isMultiTokensRequest:(_Bool)arg3 withHandler:(CDUnknownBlockType)arg4;	// IMP=0x0010000000060d72
- (id)_inAppPrivateLabelPaymentPassesForWebDomain:(id)arg1 issuerCountryCodes:(id)arg2 paymentApplicationStates:(id)arg3 isMultiTokensRequest:(_Bool)arg4;	// IMP=0x0010000000060ba4
- (id)_inAppPrivateLabelPaymentPassesForApplicationIdentifier:(id)arg1 issuerCountryCodes:(id)arg2 paymentApplicationStates:(id)arg3 isMultiTokensRequest:(_Bool)arg4;	// IMP=0x00100000000608d1
- (void)_paymentPassesForNetworks:(id)arg1 capabilities:(unsigned long long)arg2 issuerCountryCodes:(id)arg3 webPayment:(_Bool)arg4 paymentApplicationStates:(id)arg5 paymentRequestType:(id)arg6 isMultiTokensRequest:(_Bool)arg7 withHandler:(CDUnknownBlockType)arg8;	// IMP=0x00100000000602ea
- (void)_passesWithSupportedNetworks:(id)arg1 merchantCapabilities:(unsigned long long)arg2 webDomain:(id)arg3 issuerCountryCodes:(id)arg4 paymentApplicationStates:(id)arg5 paymentRequestType:(id)arg6 isMultiTokensRequest:(_Bool)arg7 handler:(CDUnknownBlockType)arg8;	// IMP=0x0010000000060051
- (_Bool)_hasPaymentPassesForNetworks:(id)arg1 capabilities:(unsigned long long)arg2 paymentApplicationStates:(id)arg3;	// IMP=0x001000000005ff57
- (void)_hasPassesWithSupportedNetworks:(id)arg1 merchantCapabilities:(unsigned long long)arg2 webDomain:(id)arg3 issuerCountryCodes:(id)arg4 paymentApplicationStates:(id)arg5 paymentRequestType:(id)arg6 isMultiTokensRequest:(_Bool)arg7 handler:(CDUnknownBlockType)arg8;	// IMP=0x001000000005fc3d
- (void)hasPassesWithSupportedNetworks:(id)arg1 merchantCapabilities:(unsigned long long)arg2 webDomain:(id)arg3 issuerCountryCodes:(id)arg4 paymentRequestType:(id)arg5 isMultiTokensRequest:(_Bool)arg6 completion:(CDUnknownBlockType)arg7;	// IMP=0x001000000005fc0d
- (void)hasInAppPaymentPassesForNetworks:(id)arg1 capabilities:(unsigned long long)arg2 issuerCountryCodes:(id)arg3 paymentRequestType:(id)arg4 isMultiTokensRequest:(_Bool)arg5 withHandler:(CDUnknownBlockType)arg6;	// IMP=0x001000000005f8e4
- (void)inAppPaymentPassesForNetworks:(id)arg1 capabilities:(unsigned long long)arg2 issuerCountryCodes:(id)arg3 paymentRequestType:(id)arg4 isMultiTokensRequest:(_Bool)arg5 withHandler:(CDUnknownBlockType)arg6;	// IMP=0x001000000005f60a
- (void)hasRemoteLibraryWithHandler:(CDUnknownBlockType)arg1;	// IMP=0x001000000005f5b0
- (void)getPassesWithReaderIdentifier:(id)arg1 handler:(CDUnknownBlockType)arg2;	// IMP=0x001000000005f415
- (void)getPassWithUniqueID:(id)arg1 handler:(CDUnknownBlockType)arg2;	// IMP=0x001000000005f31f
- (void)notifyPassUsedWithIdentifier:(id)arg1 fromSource:(long long)arg2;	// IMP=0x001000000005f29d
- (void)sendUserEditedCatalog:(id)arg1;	// IMP=0x001000000005f170
- (void)usingSynchronousProxy:(_Bool)arg1 getPaymentPassesPendingActivationWithHandler:(CDUnknownBlockType)arg2;	// IMP=0x001000000005ef1a
- (void)usingSynchronousProxy:(_Bool)arg1 getGroupsControllerSnapshotWithOptions:(id)arg2 handler:(CDUnknownBlockType)arg3;	// IMP=0x001000000005eb42
- (void)getGroupsControllerSnapshotWithOptions:(id)arg1 handler:(CDUnknownBlockType)arg2;	// IMP=0x001000000005eb28
- (void)usingSynchronousProxy:(_Bool)arg1 getPassesAndCatalogOfPassTypes:(unsigned long long)arg2 limitResults:(_Bool)arg3 withHandler:(CDUnknownBlockType)arg4;	// IMP=0x001000000005e870
- (void)getPassesAndCatalogOfPassTypes:(unsigned long long)arg1 limitResults:(_Bool)arg2 withHandler:(CDUnknownBlockType)arg3;	// IMP=0x001000000005e853
- (void)isPaymentPassActivationAvailableWithHandler:(CDUnknownBlockType)arg1;	// IMP=0x001000000005e813
- (void)canPresentPaymentRequest:(id)arg1 completion:(CDUnknownBlockType)arg2;	// IMP=0x001000000005dae5
- (void)presentContactlessInterfaceForPassWithUniqueIdentifier:(id)arg1 fromSource:(long long)arg2 handler:(CDUnknownBlockType)arg3;	// IMP=0x001000000005d915
- (void)presentContactlessInterfaceForDefaultPassFromSource:(long long)arg1 handler:(CDUnknownBlockType)arg2;	// IMP=0x001000000005d8b3
- (void)paymentPassWithAssociatedAccountIdentifier:(id)arg1 completion:(CDUnknownBlockType)arg2;	// IMP=0x001000000005d612
- (void)presentPaymentSetupRequest:(id)arg1 orientation:(id)arg2 completion:(CDUnknownBlockType)arg3;	// IMP=0x001000000005d3bd
- (void)paymentSetupFeaturesForConfiguration:(id)arg1 completion:(CDUnknownBlockType)arg2;	// IMP=0x001000000005ccda
- (_Bool)_isConfigurationValid:(id)arg1;	// IMP=0x001000000005cb6c
- (void)openPaymentUIWithCompletion:(CDUnknownBlockType)arg1;	// IMP=0x001000000005c787
- (void)badgeCountItemsWithCompletion:(CDUnknownBlockType)arg1;	// IMP=0x001000000005c61f
- (void)openWalletUIWithRelevantPass:(id)arg1;	// IMP=0x001000000005c44b
- (void)submitVerificationCode:(id)arg1 verificationData:(id)arg2 forPassWithUniqueID:(id)arg3 handler:(CDUnknownBlockType)arg4;	// IMP=0x001000000005c360
- (void)canAddFelicaPassWithHandler:(CDUnknownBlockType)arg1;	// IMP=0x001000000005c31d
- (void)usingSynchronousProxy:(_Bool)arg1 getPassForProvisioningCredentialHash:(id)arg2 handler:(CDUnknownBlockType)arg3;	// IMP=0x001000000005c0eb
- (void)usingSynchronousProxy:(_Bool)arg1 getPassesOfStyles:(unsigned long long)arg2 handler:(CDUnknownBlockType)arg3;	// IMP=0x001000000005beec
- (void)getPassesOfType:(unsigned long long)arg1 handler:(CDUnknownBlockType)arg2;	// IMP=0x001000000005be24
- (void)getPassesWithHandler:(CDUnknownBlockType)arg1;	// IMP=0x001000000005bd62
- (void)sendCatalogChanged:(id)arg1;	// IMP=0x001000000005bcdd
- (void)sendPassRecovered:(id)arg1 state:(id)arg2 catalog:(id)arg3;	// IMP=0x001000000005bad0
- (void)sendPassRemoved:(id)arg1 catalog:(id)arg2;	// IMP=0x001000000005b9cf
- (void)sendDynamicStatesUpdated:(id)arg1 catalog:(id)arg2;	// IMP=0x001000000005b92f
- (void)sendPassUpdated:(id)arg1 state:(id)arg2 catalog:(id)arg3;	// IMP=0x001000000005b722
- (void)sendPassAdded:(id)arg1 state:(id)arg2 catalog:(id)arg3;	// IMP=0x001000000005b515
- (id)remoteObjectProxyWithErrorHandler:(CDUnknownBlockType)arg1;	// IMP=0x001000000005b4d7
- (id)remoteObjectProxy;	// IMP=0x001000000005b499
- (void)clearConnectionReference;	// IMP=0x001000000005b2de
@property(readonly, nonatomic) _Bool willSanitizePasses;
- (void)activated;	// IMP=0x001000000005b14c
- (void)dealloc;	// IMP=0x001000000005b11d
- (id)initWithConnection:(id)arg1 server:(id)arg2;	// IMP=0x001000000005af76
- (id)initWithConnection:(id)arg1;	// IMP=0x001000000005af68

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
// Preceding property had unknown attributes: ?
// Original attribute string: T@"NSString",?,R,C

@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
// Error: Property attributes should begin with the type ('T') attribute, property name: superclass
// Property attributes: (null)


@end

