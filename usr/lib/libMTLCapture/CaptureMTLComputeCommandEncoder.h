//
//     Generated by classdump-c 4.2.0 (64 bit) (iOS port by DreamDevLost, Updated by Kevin Bradley.)(Debug version compiled Dec 27 2024 14:18:54).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <objc/NSObject.h>

@class CaptureMTLCommandBuffer, CaptureMTLDevice, NSMutableSet, NSString;
@protocol MTLComputeCommandEncoder, MTLComputeCommandEncoderSPI, MTLDevice;

@interface CaptureMTLComputeCommandEncoder : NSObject
{
    id <MTLComputeCommandEncoderSPI> _baseObject;	// 8 = 0x8
    CaptureMTLDevice *_captureDevice;	// 16 = 0x10
    struct GTTraceContext *_traceContext;	// 24 = 0x18
    struct GTTraceStream *_traceStream;	// 32 = 0x20
    NSMutableSet *_retainedObjects;	// 40 = 0x28
    CaptureMTLCommandBuffer *_captureCommandBuffer;	// 48 = 0x30
    struct apr_pool_t *_pool;	// 56 = 0x38
    struct apr_hash_t *_snapshotMap;	// 64 = 0x40
}

- (void).cxx_destruct;	// IMP=0x000000000008ace7
- (void)waitForFence:(id)arg1;	// IMP=0x000000000008ab65
- (void)useResources:(const id *)arg1 count:(unsigned long long)arg2 usage:(unsigned long long)arg3;	// IMP=0x000000000008a97b
- (void)useResourceGroup:(id)arg1 usage:(unsigned long long)arg2;	// IMP=0x000000000008a8bd
- (void)useResource:(id)arg1 usage:(unsigned long long)arg2;	// IMP=0x000000000008a720
- (void)useResidencySets:(const id *)arg1 count:(unsigned long long)arg2;	// IMP=0x000000000008a638
- (void)useResidencySet:(id)arg1;	// IMP=0x000000000008a589
- (void)useHeaps:(const id *)arg1 count:(unsigned long long)arg2;	// IMP=0x000000000008a3a3
- (void)useHeap:(id)arg1;	// IMP=0x000000000008a221
- (void)updateFence:(id)arg1;	// IMP=0x000000000008a09f
- (void)setVisibleFunctionTables:(const id *)arg1 withBufferRange:(struct _NSRange)arg2;	// IMP=0x0000000000089eb2
- (void)setVisibleFunctionTable:(id)arg1 atBufferIndex:(unsigned long long)arg2;	// IMP=0x0000000000089d15
- (void)setThreadgroupPackingDisabled:(_Bool)arg1;	// IMP=0x0000000000089c14
- (void)setThreadgroupMemoryLength:(unsigned long long)arg1 atIndex:(unsigned long long)arg2;	// IMP=0x0000000000089b02
- (void)setThreadgroupDistributionModeWithClusterGroupIndex:(unsigned int)arg1;	// IMP=0x0000000000089a04
- (void)setThreadgroupDistributionMode:(long long)arg1;	// IMP=0x000000000008990c
- (void)setTextures:(const id *)arg1 withRange:(struct _NSRange)arg2;	// IMP=0x000000000008971f
- (void)setTexture:(id)arg1 atIndex:(unsigned long long)arg2;	// IMP=0x0000000000089582
- (void)setStageInRegionWithIndirectBuffer:(id)arg1 indirectBufferOffset:(unsigned long long)arg2;	// IMP=0x00000000000893e5
- (void)setStageInRegion:(CDStruct_4c83c94d)arg1;	// IMP=0x00000000000892b6
- (void)setSamplerStates:(const id *)arg1 withRange:(struct _NSRange)arg2;	// IMP=0x00000000000890c9
- (void)setSamplerStates:(const id *)arg1 lodMinClamps:(const float *)arg2 lodMaxClamps:(const float *)arg3 withRange:(struct _NSRange)arg4;	// IMP=0x0000000000088e66
- (void)setSamplerState:(id)arg1 lodMinClamp:(float)arg2 lodMaxClamp:(float)arg3 atIndex:(unsigned long long)arg4;	// IMP=0x0000000000088ca2
- (void)setSamplerState:(id)arg1 atIndex:(unsigned long long)arg2;	// IMP=0x0000000000088b05
- (void)setIntersectionFunctionTables:(const id *)arg1 withBufferRange:(struct _NSRange)arg2;	// IMP=0x0000000000088918
- (void)setIntersectionFunctionTable:(id)arg1 atBufferIndex:(unsigned long long)arg2;	// IMP=0x000000000008877b
- (void)setImageblockWidth:(unsigned long long)arg1 height:(unsigned long long)arg2;	// IMP=0x0000000000088669
- (void)setComputePipelineState:(id)arg1;	// IMP=0x00000000000884e7
- (void)setBytes:(const void *)arg1 length:(unsigned long long)arg2 attributeStride:(unsigned long long)arg3 atIndex:(unsigned long long)arg4;	// IMP=0x0000000000088378
- (void)setBytes:(const void *)arg1 length:(unsigned long long)arg2 atIndex:(unsigned long long)arg3;	// IMP=0x0000000000088230
- (void)setBuffers:(const id *)arg1 offsets:(const unsigned long long *)arg2 withRange:(struct _NSRange)arg3;	// IMP=0x0000000000088012
- (void)setBuffers:(const id *)arg1 offsets:(const unsigned long long *)arg2 attributeStrides:(const unsigned long long *)arg3 withRange:(struct _NSRange)arg4;	// IMP=0x0000000000087d97
- (void)setBufferOffset:(unsigned long long)arg1 attributeStride:(unsigned long long)arg2 atIndex:(unsigned long long)arg3;	// IMP=0x0000000000087c7b
- (void)setBufferOffset:(unsigned long long)arg1 atIndex:(unsigned long long)arg2;	// IMP=0x0000000000087b69
- (void)setBuffer:(id)arg1 offset:(unsigned long long)arg2 attributeStride:(unsigned long long)arg3 atIndex:(unsigned long long)arg4;	// IMP=0x00000000000879b2
- (void)setBuffer:(id)arg1 offset:(unsigned long long)arg2 atIndex:(unsigned long long)arg3;	// IMP=0x000000000008780c
- (void)sampleCountersInBuffer:(id)arg1 atSampleIndex:(unsigned long long)arg2 withBarrier:(_Bool)arg3;	// IMP=0x000000000008765c
- (void)pushDebugGroup:(id)arg1;	// IMP=0x00000000000874d7
- (void)popDebugGroup;	// IMP=0x00000000000873ed
- (id)newKernelDebugInfo;	// IMP=0x00000000000873d7
- (void)memoryBarrierWithScope:(unsigned long long)arg1;	// IMP=0x00000000000872d3
- (void)memoryBarrierWithResources:(const id *)arg1 count:(unsigned long long)arg2;	// IMP=0x00000000000870ce
- (void)insertDebugSignpost:(id)arg1;	// IMP=0x0000000000086f49
- (void)endEncoding;	// IMP=0x0000000000086e5f
- (void)encodeStartWhile:(id)arg1 offset:(unsigned long long)arg2 comparison:(unsigned long long)arg3 referenceValue:(unsigned int)arg4;	// IMP=0x0000000000086d8e
- (void)encodeStartIf:(id)arg1 offset:(unsigned long long)arg2 comparison:(unsigned long long)arg3 referenceValue:(unsigned int)arg4;	// IMP=0x0000000000086cbd
- (void)encodeStartElse;	// IMP=0x0000000000086c86
- (void)encodeStartDoWhile;	// IMP=0x0000000000086c4f
- (_Bool)encodeEndWhile;	// IMP=0x0000000000086c18
- (_Bool)encodeEndIf;	// IMP=0x0000000000086be1
- (_Bool)encodeEndDoWhile:(id)arg1 offset:(unsigned long long)arg2 comparison:(unsigned long long)arg3 referenceValue:(unsigned int)arg4;	// IMP=0x0000000000086b0b
- (void)dispatchThreadsWithIndirectBuffer:(id)arg1 indirectBufferOffset:(unsigned long long)arg2;	// IMP=0x000000000008696e
- (void)dispatchThreads:(CDStruct_14f26992)arg1 threadsPerThreadgroup:(CDStruct_14f26992)arg2;	// IMP=0x000000000008682e
- (void)dispatchThreadgroupsWithIndirectBuffer:(id)arg1 indirectBufferOffset:(unsigned long long)arg2 threadsPerThreadgroup:(CDStruct_14f26992)arg3;	// IMP=0x0000000000086667
- (void)dispatchThreadgroups:(CDStruct_14f26992)arg1 threadsPerThreadgroup:(CDStruct_14f26992)arg2;	// IMP=0x0000000000086527
@property(copy) NSString *label;
@property(readonly) unsigned long long dispatchType;
@property(readonly) id <MTLDevice> device;
- (_Bool)conformsToProtocol:(id)arg1;	// IMP=0x0000000000086311
- (_Bool)respondsToSelector:(SEL)arg1;	// IMP=0x0000000000086300
@property(readonly, copy) NSString *description;
- (id)forwardingTargetForSelector:(SEL)arg1;	// IMP=0x000000000008623f
@property(readonly) unsigned long long streamReference;
@property(readonly) struct GTTraceStream *traceStream;
@property(readonly) struct GTTraceContext *traceContext;
- (void)touch;	// IMP=0x00000000000861df
- (id)originalObject;	// IMP=0x00000000000861d1
- (void)setAccelerationStructure:(id)arg1 atBufferIndex:(unsigned long long)arg2;	// IMP=0x0000000000085f90
- (void)enableNullBufferBinds:(_Bool)arg1;	// IMP=0x0000000000085e8f
- (void)executeCommandsInBuffer:(id)arg1 withRange:(struct _NSRange)arg2;	// IMP=0x0000000000085a50
- (void)executeCommandsInBuffer:(id)arg1 indirectBuffer:(id)arg2 indirectBufferOffset:(unsigned long long)arg3;	// IMP=0x00000000000852c6
@property(readonly) id <MTLComputeCommandEncoder> baseObject;
- (void)dealloc;	// IMP=0x00000000000851ab
- (id)initWithBaseObject:(id)arg1 captureCommandBuffer:(id)arg2;	// IMP=0x0000000000085024

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
// Preceding property had unknown attributes: ?
// Original attribute string: T@"NSString",?,R,C

@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

