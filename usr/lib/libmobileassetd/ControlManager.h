//
//     Generated by classdump-c 4.2.0 (64 bit) (iOS port by DreamDevLost, Updated by Kevin Bradley.)(Debug version compiled Dec 27 2024 14:18:54).
//
//  Copyright (C) 1997-2019 Steve Nygard. Updated in 2022 by Kevin Bradley.
//

#import <objc/NSObject.h>

@class DownloadManager, MADAnalyticsManager, MADCacheDeleteManager, NSDictionary, NSMutableDictionary, NSString;
@protocol OS_dispatch_queue;

__attribute__((visibility("hidden")))
@interface ControlManager : NSObject
{
    _Bool _allowSTExtractorPluginLoadFromDownloadedMABrain;	// 8 = 0x8
    _Bool _reclaimSpace;	// 9 = 0x9
    int _reclaimUrgency;	// 12 = 0xc
    DownloadManager *_downloadManager;	// 16 = 0x10
    MADAnalyticsManager *_analytics;	// 24 = 0x18
    NSMutableDictionary *_assetTypeDescriptors;	// 32 = 0x20
    MADCacheDeleteManager *_cacheDeleteManager;	// 40 = 0x28
    NSObject<OS_dispatch_queue> *_metaDataQueue;	// 48 = 0x30
    NSObject<OS_dispatch_queue> *_assetQueue;	// 56 = 0x38
    NSObject<OS_dispatch_queue> *_cachedeleteQueue;	// 64 = 0x40
    NSObject<OS_dispatch_queue> *_analyticsQueue;	// 72 = 0x48
    long long _targetingPurgeAmount;	// 80 = 0x50
    NSString *_targetingAmountString;	// 88 = 0x58
    NSString *_reclaimUrgencyName;	// 96 = 0x60
    NSString *_reclaimVolume;	// 104 = 0x68
    NSString *_cacheDeleteOperationName;	// 112 = 0x70
    double _currentTimeInSeconds;	// 120 = 0x78
    double _preciousNumberOfSeconds;	// 128 = 0x80
    double _defaultNumberOfSeconds;	// 136 = 0x88
    double _deltaToCurrentTimeSeconds;	// 144 = 0x90
    NSString *_garbageCollectionAlterAssetType;	// 152 = 0x98
    NSString *_garbageCollectionAlterBehavior;	// 160 = 0xa0
    NSDictionary *_unlockedUnreferencedDescriptors;	// 168 = 0xa8
    NSDictionary *_unlockedReferencedDescriptors;	// 176 = 0xb0
    NSDictionary *_lockedOverridableAutoAssetDescriptors;	// 184 = 0xb8
    NSDictionary *_lockedNeverRemoveAutoAssetDescriptors;	// 192 = 0xc0
    NSDictionary *_stagedAutoAssetDescriptors;	// 200 = 0xc8
}

+ (id)getStringFromXpcMessage:(id)arg1 forKey:(const char *)arg2;	// IMP=0x00600000002694c1
- (void).cxx_destruct;	// IMP=0x0000000000269826
@property(retain, nonatomic) NSDictionary *stagedAutoAssetDescriptors; // @synthesize stagedAutoAssetDescriptors=_stagedAutoAssetDescriptors;
@property(retain, nonatomic) NSDictionary *lockedNeverRemoveAutoAssetDescriptors; // @synthesize lockedNeverRemoveAutoAssetDescriptors=_lockedNeverRemoveAutoAssetDescriptors;
@property(retain, nonatomic) NSDictionary *lockedOverridableAutoAssetDescriptors; // @synthesize lockedOverridableAutoAssetDescriptors=_lockedOverridableAutoAssetDescriptors;
@property(retain, nonatomic) NSDictionary *unlockedReferencedDescriptors; // @synthesize unlockedReferencedDescriptors=_unlockedReferencedDescriptors;
@property(retain, nonatomic) NSDictionary *unlockedUnreferencedDescriptors; // @synthesize unlockedUnreferencedDescriptors=_unlockedUnreferencedDescriptors;
@property(retain, nonatomic) NSString *garbageCollectionAlterBehavior; // @synthesize garbageCollectionAlterBehavior=_garbageCollectionAlterBehavior;
@property(retain, nonatomic) NSString *garbageCollectionAlterAssetType; // @synthesize garbageCollectionAlterAssetType=_garbageCollectionAlterAssetType;
@property(nonatomic) double deltaToCurrentTimeSeconds; // @synthesize deltaToCurrentTimeSeconds=_deltaToCurrentTimeSeconds;
@property(nonatomic) double defaultNumberOfSeconds; // @synthesize defaultNumberOfSeconds=_defaultNumberOfSeconds;
@property(nonatomic) double preciousNumberOfSeconds; // @synthesize preciousNumberOfSeconds=_preciousNumberOfSeconds;
@property(nonatomic) double currentTimeInSeconds; // @synthesize currentTimeInSeconds=_currentTimeInSeconds;
@property(retain, nonatomic) NSString *cacheDeleteOperationName; // @synthesize cacheDeleteOperationName=_cacheDeleteOperationName;
@property(retain, nonatomic) NSString *reclaimVolume; // @synthesize reclaimVolume=_reclaimVolume;
@property(retain, nonatomic) NSString *reclaimUrgencyName; // @synthesize reclaimUrgencyName=_reclaimUrgencyName;
@property(nonatomic) int reclaimUrgency; // @synthesize reclaimUrgency=_reclaimUrgency;
@property(retain, nonatomic) NSString *targetingAmountString; // @synthesize targetingAmountString=_targetingAmountString;
@property(nonatomic) long long targetingPurgeAmount; // @synthesize targetingPurgeAmount=_targetingPurgeAmount;
@property(nonatomic) _Bool reclaimSpace; // @synthesize reclaimSpace=_reclaimSpace;
@property(nonatomic) _Bool allowSTExtractorPluginLoadFromDownloadedMABrain; // @synthesize allowSTExtractorPluginLoadFromDownloadedMABrain=_allowSTExtractorPluginLoadFromDownloadedMABrain;
@property(readonly, nonatomic) NSObject<OS_dispatch_queue> *analyticsQueue; // @synthesize analyticsQueue=_analyticsQueue;
@property(readonly, nonatomic) NSObject<OS_dispatch_queue> *cachedeleteQueue; // @synthesize cachedeleteQueue=_cachedeleteQueue;
@property(readonly, nonatomic) NSObject<OS_dispatch_queue> *assetQueue; // @synthesize assetQueue=_assetQueue;
@property(readonly, nonatomic) NSObject<OS_dispatch_queue> *metaDataQueue; // @synthesize metaDataQueue=_metaDataQueue;
@property(readonly, nonatomic) MADCacheDeleteManager *cacheDeleteManager; // @synthesize cacheDeleteManager=_cacheDeleteManager;
@property(readonly, nonatomic) NSMutableDictionary *assetTypeDescriptors; // @synthesize assetTypeDescriptors=_assetTypeDescriptors;
@property(readonly, nonatomic) MADAnalyticsManager *analytics; // @synthesize analytics=_analytics;
@property(readonly, nonatomic) DownloadManager *downloadManager; // @synthesize downloadManager=_downloadManager;
- (void)activityNotification:(id)arg1 ofStatusChange:(unsigned long long)arg2 withReason:(id)arg3;	// IMP=0x0000000000269501
- (void)handleSecureMABundleCommand:(id)arg1 message:(id)arg2 clientName:(id)arg3;	// IMP=0x00000000002694ac
- (long long)handleInstallAsset:(id)arg1 forType:(id)arg2;	// IMP=0x0000000000268a0a
- (void)handleUpdateMABrain:(id)arg1 message:(id)arg2 clientName:(id)arg3;	// IMP=0x00000000002689f5
- (void)handleGetMABrainInfo:(id)arg1 message:(id)arg2 clientName:(id)arg3;	// IMP=0x00000000002689e0
- (void)moveAssetIntoRepo:(id)arg1 forType:(id)arg2 forAsset:(id)arg3 cleanUp:(id)arg4 with:(id)arg5;	// IMP=0x00000000002683aa
- (void)writeJsonDictionaryToFile:(id)arg1 to:(id)arg2 with:(id)arg3;	// IMP=0x0000000000267bab
- (void)writeDictionaryToFile:(id)arg1 to:(id)arg2 with:(id)arg3;	// IMP=0x0000000000267695
- (long long)updateLastFetchedDate:(id)arg1 assetType:(id)arg2 withPurpose:(id)arg3 with:(id)arg4;	// IMP=0x0000000000267407
- (void)setServerConnectionHandler:(id)arg1 with:(id)arg2 and:(id)arg3;	// IMP=0x000000000026721d
- (id)associateOptionalFields:(long long)arg1 fromRequest:(id)arg2 toCommandRequest:(id)arg3 forCommandTracker:(id)arg4;	// IMP=0x0000000000266c38
- (id)associateRequiredFields:(long long)arg1 fromRequest:(id)arg2 toCommandRequest:(id)arg3 forCommandTracker:(id)arg4;	// IMP=0x000000000026524b
- (_Bool)associateFieldsFromRequest:(id)arg1 withCommandTracker:(id)arg2;	// IMP=0x0000000000264f5d
- (void)handleClientConnection:(id)arg1 on:(id)arg2;	// IMP=0x0000000000262d26
- (void)handleClientConnection:(id)arg1 usingDispatchQueue:(id)arg2;	// IMP=0x0000000000262af0
- (void)handleClientCommand:(id)arg1;	// IMP=0x0000000000262854
- (void)handleCommandGarbageCollect:(id)arg1;	// IMP=0x000000000026284e
- (void)handleCommandDumpClidentUsage:(id)arg1;	// IMP=0x0000000000262848
- (void)handleCommandNSURLStateDump:(id)arg1;	// IMP=0x0000000000262842
- (void)handleCommandRepairState:(id)arg1;	// IMP=0x000000000026283c
- (void)handleCommandOverrideGC:(id)arg1;	// IMP=0x0000000000262836
- (void)handleCommandUpdateClientUsage:(id)arg1;	// IMP=0x0000000000262830
- (void)handleCommandConfigDownload:(id)arg1;	// IMP=0x000000000026282a
- (void)handleCommandSpaceCheck:(id)arg1;	// IMP=0x0000000000262824
- (void)handleCommandRefreshAssetState:(id)arg1;	// IMP=0x000000000026281e
- (void)handleCommandGetSandboxExtension:(id)arg1;	// IMP=0x0000000000262818
- (void)handleCommandPurgeAsset:(id)arg1;	// IMP=0x0000000000262812
- (void)handleCommandDownloadAsset:(id)arg1;	// IMP=0x000000000026280c
- (void)handleCommandDownloadMetadata:(id)arg1;	// IMP=0x0000000000262806
- (void)handleCommandLoadAssetByID:(id)arg1;	// IMP=0x0000000000262800
- (void)handleCommandCancelCatalogDownload:(id)arg1;	// IMP=0x00000000002627fa
- (void)handleCommandCancelDownload:(id)arg1;	// IMP=0x00000000002627f4
- (void)handleCommandQuerInstalledIDs:(id)arg1;	// IMP=0x00000000002627ee
- (void)handleCommandQueryAssetType:(id)arg1;	// IMP=0x00000000002627e8
- (void)handleCommandSetPreferences:(id)arg1;	// IMP=0x00000000002627e2
- (void)handleCommandPurgeCatalogs:(id)arg1;	// IMP=0x00000000002627dc
- (void)handleCommandPurgeAll:(id)arg1;	// IMP=0x00000000002627d6
- (void)handleCommandCleanV1Assets:(id)arg1;	// IMP=0x00000000002627d0
- (void)handleCommandMigrateAssets:(id)arg1;	// IMP=0x00000000002627ca
- (void)handleCommandServerURLOverride:(id)arg1;	// IMP=0x00000000002627c4
- (void)handleCommandDownloadPMV:(id)arg1;	// IMP=0x00000000002627be
- (void)handleCommandQueryPMV:(id)arg1;	// IMP=0x00000000002627b8
- (void)handleCommandCancelPMVDownload:(id)arg1;	// IMP=0x00000000002627b2
- (void)handleCommandGetPallasURL:(id)arg1;	// IMP=0x00000000002627ac
- (void)handleCommandSetPallasURL:(id)arg1;	// IMP=0x00000000002627a6
- (void)handleCommandSetPallasEnabled:(id)arg1;	// IMP=0x00000000002627a0
- (void)handleCommandSetPallasAudience:(id)arg1;	// IMP=0x000000000026279a
- (void)handleCommandGetPallasEnabled:(id)arg1;	// IMP=0x0000000000262794
- (void)handleCommandGetPallasAudience:(id)arg1;	// IMP=0x000000000026278e
- (void)handleReportingRequest:(id)arg1 message:(id)arg2 clientName:(id)arg3;	// IMP=0x0000000000262434
- (void)handleMigrateAssetsRequest:(id)arg1 using:(id)arg2 and:(id)arg3;	// IMP=0x0000000000261bb3
- (void)handleUpdateClientUsage:(id)arg1 using:(id)arg2 and:(id)arg3 clientName:(id)arg4;	// IMP=0x000000000026151c
- (void)dumpClientUsage:(id)arg1 using:(id)arg2 and:(id)arg3 clientName:(id)arg4;	// IMP=0x00000000002611cd
- (void)overrideGCValue:(id)arg1 using:(id)arg2 and:(id)arg3 clientName:(id)arg4;	// IMP=0x0000000000260e2e
- (void)handleGarbageCollect:(id)arg1 and:(id)arg2;	// IMP=0x0000000000260d3c
- (void)purgeAll:(id)arg1 and:(id)arg2 assetTypesList:(id)arg3 clientName:(id)arg4;	// IMP=0x000000000026005c
- (id)dictionaryWithArrayOfStringValues:(id)arg1 forXpcKey:(const char *)arg2 andLengthKey:(const char *)arg3 failureReason:(id *)arg4;	// IMP=0x000000000025fb81
- (id)dictionaryWithArrayOfStringValues:(id)arg1 forXpcKey:(const char *)arg2 andLengthKey:(const char *)arg3 clientName:(id)arg4;	// IMP=0x000000000025f6d6
- (void)purgeCatalogs:(id)arg1 and:(id)arg2 assetTypesList:(id)arg3 clientName:(id)arg4;	// IMP=0x000000000025f101
- (void)getProductMarketingVersions:(id)arg1 and:(id)arg2 clientName:(id)arg3 assetType:(id)arg4;	// IMP=0x000000000025f034
- (_Bool)purgeCatalogOfType:(id)arg1 clientName:(id)arg2 withPurpose:(id)arg3;	// IMP=0x000000000025ed72
- (_Bool)purgeAllAssetsOfType:(id)arg1 forPurpose:(id)arg2 clientName:(id)arg3 exceptForAssetIds:(id)arg4;	// IMP=0x000000000025e5d4
- (_Bool)purgeAllAssetsInDirectory:(id)arg1 clientName:(id)arg2 exceptForAssetIds:(id)arg3;	// IMP=0x000000000025e14b
- (void)respondToCacheDelete:(_Bool)arg1 targetingPurgeAmount:(long long)arg2 cacheDeleteResults:(id)arg3 withUrgency:(int)arg4 forVolume:(id)arg5 then:(CDUnknownBlockType)arg6;	// IMP=0x000000000025bf5b
- (_Bool)freedUpEnoughSpace:(long long)arg1;	// IMP=0x000000000025bf1e
- (long long)performCacheDeleteForGroup:(id)arg1 forAssetTypeDir:(id)arg2 timeTaken:(double *)arg3 cacheDeleteResults:(id)arg4;	// IMP=0x000000000025b6e9
- (long long)performCacheDeleteCollection:(id)arg1 forCollectionType:(long long)arg2 withGarbageCollectionTypes:(id)arg3 cacheDeleteResults:(id)arg4;	// IMP=0x000000000025b460
- (long long)performGarbageCollectionOfType:(long long)arg1 forAssetTypeDir:(id)arg2 fromDescriptors:(id)arg3 cacheDeleteResults:(id)arg4;	// IMP=0x000000000025aaa0
- (double)alterSecondsBeforeCollection:(double)arg1 forAssetTypeDir:(id)arg2 determinedDescriptorType:(long long)arg3 fromDescriptors:(id)arg4 isAutoAsset:(_Bool *)arg5 autoAssetDescriptor:(id *)arg6 assetFilesystemSize:(long long *)arg7 retentionPolicy:(long long)arg8;	// IMP=0x000000000025a7ed
- (id)alterGarbageColletionLevel:(id)arg1 basedOnAssetDirectory:(id)arg2;	// IMP=0x000000000025a63a
- (void)maintainReclaimCountsByCollectionType:(long long)arg1 reclaimAssetSpace:(long long)arg2 cacheDeleteResults:(id)arg3;	// IMP=0x000000000025a592
- (id)locateDescriptorForAssetDirectory:(id)arg1 fromDescriptors:(id)arg2;	// IMP=0x000000000025a257
- (id)chooseDescriptorsOfType:(long long)arg1;	// IMP=0x000000000025a21c
- (long long)garbageCollectionDescriptorType:(id)arg1;	// IMP=0x0000000000259585
- (id)getAssetAttributes:(id)arg1;	// IMP=0x0000000000259474
- (id)getAssetAttributes:(id)arg1 purpose:(id)arg2 assetID:(id)arg3;	// IMP=0x0000000000259349
- (void)handleServerUrlOverride:(id)arg1 message:(id)arg2 client:(id)arg3 clientName:(id)arg4;	// IMP=0x00000000002590a1
- (void)handleGetServerUrl:(id)arg1 message:(id)arg2 client:(id)arg3 clientName:(id)arg4;	// IMP=0x0000000000258ead
- (void)handleGetAllowNonUserInitiated:(id)arg1 message:(id)arg2 clientName:(id)arg3;	// IMP=0x0000000000258ddf
- (void)handleDataMigrator:(id)arg1 message:(id)arg2 clientName:(id)arg3;	// IMP=0x0000000000258d6c
- (void)handleEnsureDataVault:(id)arg1 message:(id)arg2 client:(id)arg3 clientName:(id)arg4;	// IMP=0x0000000000258bed
- (void)setPreferences:(id)arg1 replyUsing:(id)arg2 and:(id)arg3;	// IMP=0x0000000000258b77
- (void)setPreferenceKeyAsync:(id)arg1 andValue:(id)arg2 allowNilToClear:(_Bool)arg3 replyUsing:(id)arg4 and:(id)arg5;	// IMP=0x0000000000258ae0
- (void)setPreferenceKeySync:(id)arg1 andValue:(id)arg2 allowNilToClear:(_Bool)arg3;	// IMP=0x0000000000258a8c
- (void)removeAssetDir:(id)arg1 assetType:(id)arg2 clientName:(id)arg3 using:(id)arg4;	// IMP=0x0000000000258052
- (long long)removeDirectoryAtPath:(id)arg1 firstRenamingWithExtension:(id)arg2;	// IMP=0x0000000000257ff2
- (void)cancelDownload:(id)arg1 using:(id)arg2 for:(id)arg3 assetType:(id)arg4 purpose:(id)arg5 withExtension:(id)arg6;	// IMP=0x0000000000257a96
- (id)newExtractor:(id)arg1 downloadOptions:(id)arg2 sessionID:(id)arg3 error:(id *)arg4;	// IMP=0x0000000000256dd5
- (id)hashToString:(id)arg1;	// IMP=0x0000000000256d1c
- (void)checkAndInitiateDownloadForAssetType:(id)arg1 message:(id)arg2 forClientName:(id)arg3 usingConnection:(id)arg4 requiringClientExtractor:(_Bool)arg5;	// IMP=0x00000000002563c8
- (_Bool)isAssetInCatalog:(id)arg1 assetId:(id)arg2;	// IMP=0x00000000002563b3
- (_Bool)isAssetInCatalog:(id)arg1 assetId:(id)arg2 withPurpose:(id)arg3;	// IMP=0x00000000002562f8
- (void)getStateOfAsset:(id)arg1 incoming:(id)arg2 assetType:(id)arg3;	// IMP=0x0000000000255e89
- (long long)getStateOfAssetInCatalog:(id)arg1 assetId:(id)arg2 withPurpose:(id)arg3;	// IMP=0x0000000000255d33
- (void)sendStateOfAssetReply:(id)arg1 incoming:(id)arg2 with:(long long)arg3;	// IMP=0x0000000000255cba
- (void)ensureProperDirectoryState;	// IMP=0x0000000000255ae5
- (void)removeDownloadsNotRecentlyInFlight:(id)arg1;	// IMP=0x0000000000255843
- (void)cleanObsoleteSURepo;	// IMP=0x0000000000254b08
- (void)ensureSUDownloadTempDir;	// IMP=0x0000000000254915
- (id)checkEntitlement:(id)arg1 forAssetTypes:(id)arg2;	// IMP=0x000000000025462c
- (id)checkEntitlement:(id)arg1 forAssetType:(id)arg2;	// IMP=0x0000000000254543
- (_Bool)checkEntitlementAndRespondIfErrorForConnection:(id)arg1 usingMessage:(id)arg2 forAssetTypes:(id)arg3 withCommand:(long long)arg4;	// IMP=0x0000000000254249
- (_Bool)checkEntitlementAndRespondIfErrorForConnection:(id)arg1 usingMessage:(id)arg2 forAssetType:(id)arg3 withCommand:(long long)arg4;	// IMP=0x0000000000254168
- (_Bool)isEntitledForCommand:(long long)arg1 forConnection:(id)arg2 forAssetType:(id)arg3;	// IMP=0x0000000000253e78
- (_Bool)isAllowlistedForCommand:(long long)arg1;	// IMP=0x0000000000253d86
- (_Bool)isCommandAllowedForAllClientsWithoutAssetType:(long long)arg1;	// IMP=0x0000000000253d1a
- (_Bool)isAssetTypeOptionalForCommand:(long long)arg1;	// IMP=0x0000000000253ccf
- (_Bool)isAssetTypeRequiredForCommand:(long long)arg1;	// IMP=0x0000000000253c8e
- (int)getNotEntitledResultForCommand:(unsigned long long)arg1;	// IMP=0x0000000000253c45
- (_Bool)commandRequiresForcedSoftwareUpdateType:(id)arg1;	// IMP=0x0000000000253bc7
- (_Bool)isCommandRequiringForcedSoftwareUpdateType:(long long)arg1;	// IMP=0x0000000000253b81
- (void)handleLoadRequest:(id)arg1 clientName:(id)arg2 connection:(id)arg3 message:(id)arg4;	// IMP=0x00000000002535ec
- (id)decodeXpcObject:(id)arg1 ofClass:(Class)arg2 dataKey:(id)arg3 lengthKey:(id)arg4 decodeClasses:(id)arg5 error:(id *)arg6;	// IMP=0x00000000002531b1
- (void)handleQueryRequest:(id)arg1 clientName:(id)arg2 connection:(id)arg3 message:(id)arg4;	// IMP=0x0000000000252a82
- (void)handlePmvRequest:(id)arg1 clientName:(id)arg2 connection:(id)arg3 message:(id)arg4;	// IMP=0x00000000002526b5
- (void)determineAssets:(id)arg1 clientName:(id)arg2 connection:(id)arg3 downloadingTasks:(id)arg4 message:(id)arg5 resultTypes:(long long)arg6 queryArray:(id)arg7 isForSpecificAsset:(_Bool)arg8 specificAssetId:(id)arg9 specificAllowedDifferences:(id)arg10;	// IMP=0x0000000000251807
- (void)determineOneAsset:(id)arg1 clientName:(id)arg2 connection:(id)arg3 message:(id)arg4 specificAssetId:(id)arg5 specificAllowedDifferences:(id)arg6;	// IMP=0x00000000002517c2
- (void)determineAssets:(id)arg1 clientName:(id)arg2 connection:(id)arg3 downloadingTasks:(id)arg4 message:(id)arg5 resultTypes:(long long)arg6 queryArray:(id)arg7;	// IMP=0x0000000000251786
- (void)determinePmv:(id)arg1 clientName:(id)arg2 connection:(id)arg3 message:(id)arg4 queryDict:(id)arg5;	// IMP=0x0000000000250a7e
- (_Bool)categorizeAssetResults:(id)arg1 fromCatalogIds:(id)arg2 repositoryIds:(id)arg3 andPreinstalledIds:(id)arg4 intoServerOnlyIds:(id *)arg5 installedCatalogIds:(id *)arg6 andObsoleteIds:(id *)arg7;	// IMP=0x0000000000250948
- (_Bool)loadCatalog:(id)arg1 catalogAssets:(id *)arg2 assetIds:(id *)arg3 postedDate:(id *)arg4 lastFetchDate:(id *)arg5 catalogInfo:(id *)arg6;	// IMP=0x000000000025091c
- (_Bool)loadCatalog:(id)arg1 catalogAssets:(id *)arg2 assetIds:(id *)arg3 postedDate:(id *)arg4 lastFetchDate:(id *)arg5 catalogInfo:(id *)arg6 withPurpose:(id)arg7;	// IMP=0x00000000002506cb
- (_Bool)loadRepository:(id)arg1 localIds:(id *)arg2;	// IMP=0x00000000002506b6
- (_Bool)loadRepository:(id)arg1 localIds:(id *)arg2 withPurpose:(id)arg3;	// IMP=0x000000000025058c
- (_Bool)returnTypeIncludesServerOnly:(long long)arg1;	// IMP=0x0000000000250572
- (_Bool)returnTypeIncludesInstalledInCatalog:(long long)arg1;	// IMP=0x0000000000250558
- (_Bool)returnTypeIncludesObsolete:(long long)arg1 andHasCatalog:(_Bool)arg2;	// IMP=0x000000000025053c
- (id)applyPmvQuery:(id)arg1 queryDict:(id)arg2 explanation:(id *)arg3;	// IMP=0x00000000002501f9
- (id)determineBestMatchFor:(id)arg1 absoluteId:(id)arg2 allowedDifferences:(id)arg3 fromResults:(id)arg4 isExact:(_Bool *)arg5 candidates:(unsigned long long *)arg6 bestMatch:(id *)arg7 differencesFound:(id *)arg8 missedTypeAndAssetIdMatch:(id *)arg9;	// IMP=0x000000000024f635
- (_Bool)hasOnlyAllowedDifferencesFrom:(id)arg1 inAttributes:(id)arg2 assetId:(id)arg3 assetType:(id)arg4 allowed:(id)arg5 foundAbsoluteId:(id *)arg6 foundDiff:(id *)arg7;	// IMP=0x000000000024f4ba
- (_Bool)returnTypeIncludesPreinstalled:(long long)arg1;	// IMP=0x000000000024f4ad
- (id)getCatalogLastModifiedDate:(id)arg1 ifFromXmlUrl:(id)arg2 withPurpose:(id)arg3;	// IMP=0x000000000024ed9a
- (id)getMetadataFromCatalog:(id)arg1 key:(id)arg2 withPurpose:(id)arg3;	// IMP=0x000000000024ecb2
- (id)newCatalogLoad:(id)arg1;	// IMP=0x000000000024ec9e
- (id)newCatalogLoad:(id)arg1 withPurpose:(id)arg2;	// IMP=0x000000000024ea7d
- (void)sendQueryResults:(id)arg1 assetType:(id)arg2 purpose:(id)arg3 catalogInfo:(id)arg4 returnTypes:(long long)arg5 postedDate:(id)arg6 lastFetchedDate:(id)arg7 result:(long long)arg8 isFiltered:(_Bool)arg9 requireSpecificAsset:(_Bool)arg10 connection:(id)arg11 message:(id)arg12 clientName:(id)arg13;	// IMP=0x000000000024e4f0
- (void)sendPmvResults:(id)arg1 pmvInfo:(id)arg2 postedDate:(id)arg3 lastFetchedDate:(id)arg4 result:(long long)arg5 connection:(id)arg6 message:(id)arg7;	// IMP=0x000000000024e2dc
- (_Bool)beforeFirstUnlock;	// IMP=0x000000000024e2c3
- (void)registerForCacheDeleteMigration;	// IMP=0x000000000024e29d
- (id)init;	// IMP=0x000000000024dfc8
- (void)updateSpaceAttributionForBundleID:(id)arg1 assetPath:(id)arg2 doRegistration:(_Bool)arg3;	// IMP=0x000000000024dfc2
- (void)registerAssetsWithSpaceAttributes;	// IMP=0x000000000024dfbc
- (id)getSAFRegistrationBundleID:(id)arg1;	// IMP=0x000000000024dfb4
- (void)loadAssetTypeDescriptors;	// IMP=0x000000000024dbfc
- (void)applyDataVaults;	// IMP=0x000000000024d8cf
- (void)removeAllObsoletedV1Assets;	// IMP=0x000000000024d62d
- (id)convertToArchiveable:(id)arg1 incoming:(id)arg2 overrideState:(long long)arg3 filterToIds:(id)arg4 withPurpose:(id)arg5;	// IMP=0x000000000024d25e

@end

